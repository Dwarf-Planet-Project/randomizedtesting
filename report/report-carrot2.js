junit4 = {
  "random": "DECCF8F6DA530769"
};

suites = [

{
  "slave": 0,
  "startTimestamp": 1325497526782,
  "executionTime": 689,
  "description": {
    "displayName": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
    "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testSorting(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testSorting",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOneUrlWithTwoSuburls(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testOneUrlWithTwoSuburls",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testUrlParsing(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testUrlParsing",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testRepeatedClusteringWithCache(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testRepeatedClusteringWithCache",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoDocuments(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testNoDocuments",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMetadataAvailable(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStopPartsStripping(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testStopPartsStripping",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOneUrl(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testOneUrl",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStress(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testStress",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testClusteringDataMining(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testClusteringDataMining",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmptyDocuments(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testEmptyDocuments",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testEmptyDocuments(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testEmptyDocuments",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527462,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testClusteringDataMining(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testClusteringDataMining",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527433,
      "executionTime": 20,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStress(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testStress",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527431,
      "executionTime": 2,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOneUrl(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testOneUrl",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527423,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStopPartsStripping(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testStopPartsStripping",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527415,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMetadataAvailable(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527402,
      "executionTime": 9,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoDocuments(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testNoDocuments",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527396,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRepeatedClusteringWithCache(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testRepeatedClusteringWithCache",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526966,
      "executionTime": 429,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUrlParsing(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testUrlParsing",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526959,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOneUrlWithTwoSuburls(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testOneUrlWithTwoSuburls",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526952,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSorting(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
        "methodName": "testSorting",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526816,
      "executionTime": 135,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testSorting(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSorting(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOneUrlWithTwoSuburls(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOneUrlWithTwoSuburls(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testUrlParsing(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUrlParsing(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testRepeatedClusteringWithCache(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRepeatedClusteringWithCache(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoDocuments(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoDocuments(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStopPartsStripping(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStopPartsStripping(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOneUrl(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOneUrl(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStress(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStress(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testClusteringDataMining(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testClusteringDataMining(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyDocuments(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyDocuments(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497526784,
  "executionTime": 431,
  "description": {
    "displayName": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
    "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testDescriptionWithNumericEntities(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testDescriptionWithNumericEntities",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testAdvancedLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testAdvancedLevel",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTitleWithDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testTitleWithDescription",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDescriptionWithLinks(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testDescriptionWithLinks",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testBasicLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testBasicLevel",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTitleWithExtraPeriods(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testTitleWithExtraPeriods",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNamedAttributeTitleOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testNamedAttributeTitleOverride",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMultiWordGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testMultiWordGroup",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNamedAttributeTitleDescriptionOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testNamedAttributeTitleDescriptionOverride",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLabelDefined(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testLabelDefined",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMultiWordLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testMultiWordLabel",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTitleWithLink(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testTitleWithLink",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTitleWithPeriod(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testTitleWithPeriod",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTitleWithExclamationMark(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testTitleWithExclamationMark",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMultiSentenceLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testMultiSentenceLabel",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmptyJavadoc(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testEmptyJavadoc",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOneWordGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testOneWordGroup",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSingleWordLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testSingleWordLabel",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTitleWithExtraSpace(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testTitleWithExtraSpace",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTitleWithLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testTitleWithLabel",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNamedAttributeNoJavadoc(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testNamedAttributeNoJavadoc",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoDescriptionNoTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testNoDescriptionNoTitle",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMediumLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testMediumLevel",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testNoDescription",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testBindableMetadata(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testBindableMetadata",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testNoLevel",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNamedAttributeNoDotInKey(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testNamedAttributeNoDotInKey",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTitleAtTheBottomNotSupported(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testTitleAtTheBottomNotSupported",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testNoTitle",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testNoGroup",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTitleWithoutPeriod(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testTitleWithoutPeriod",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNamedAttributeLabelOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testNamedAttributeLabelOverride",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testUnknownLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testUnknownLevel",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTwoSentenceDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testTwoSentenceDescription",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLabelWithComment(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testLabelWithComment",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLabelNotDefined(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testLabelNotDefined",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSingleSentenceDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testSingleSentenceDescription",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDescriptionWithExtraSpace(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testDescriptionWithExtraSpace",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmptyTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testEmptyTitle",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testEmptyTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testEmptyTitle",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527205,
      "executionTime": 9,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDescriptionWithExtraSpace(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testDescriptionWithExtraSpace",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527198,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSingleSentenceDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testSingleSentenceDescription",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527183,
      "executionTime": 15,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLabelNotDefined(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testLabelNotDefined",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527176,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLabelWithComment(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testLabelWithComment",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527164,
      "executionTime": 6,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTwoSentenceDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testTwoSentenceDescription",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527158,
      "executionTime": 6,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUnknownLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testUnknownLevel",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527153,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNamedAttributeLabelOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testNamedAttributeLabelOverride",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527146,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTitleWithoutPeriod(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testTitleWithoutPeriod",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527140,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testNoGroup",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527134,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testNoTitle",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527128,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTitleAtTheBottomNotSupported(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testTitleAtTheBottomNotSupported",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527121,
      "executionTime": 6,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNamedAttributeNoDotInKey(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testNamedAttributeNoDotInKey",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527114,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testNoLevel",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527108,
      "executionTime": 6,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testBindableMetadata(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testBindableMetadata",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527099,
      "executionTime": 8,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testNoDescription",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527092,
      "executionTime": 6,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMediumLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testMediumLevel",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527084,
      "executionTime": 8,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoDescriptionNoTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testNoDescriptionNoTitle",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527074,
      "executionTime": 10,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNamedAttributeNoJavadoc(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testNamedAttributeNoJavadoc",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527064,
      "executionTime": 9,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTitleWithLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testTitleWithLabel",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527055,
      "executionTime": 8,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTitleWithExtraSpace(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testTitleWithExtraSpace",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527046,
      "executionTime": 9,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSingleWordLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testSingleWordLabel",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527038,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOneWordGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testOneWordGroup",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527032,
      "executionTime": 6,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyJavadoc(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testEmptyJavadoc",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527025,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMultiSentenceLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testMultiSentenceLabel",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527018,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTitleWithExclamationMark(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testTitleWithExclamationMark",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527005,
      "executionTime": 13,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTitleWithPeriod(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testTitleWithPeriod",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526994,
      "executionTime": 10,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTitleWithLink(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testTitleWithLink",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526983,
      "executionTime": 11,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMultiWordLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testMultiWordLabel",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526972,
      "executionTime": 11,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLabelDefined(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testLabelDefined",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526963,
      "executionTime": 8,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNamedAttributeTitleDescriptionOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testNamedAttributeTitleDescriptionOverride",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526955,
      "executionTime": 8,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMultiWordGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testMultiWordGroup",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526945,
      "executionTime": 10,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNamedAttributeTitleOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testNamedAttributeTitleOverride",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526930,
      "executionTime": 15,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTitleWithExtraPeriods(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testTitleWithExtraPeriods",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526917,
      "executionTime": 13,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testBasicLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testBasicLevel",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526909,
      "executionTime": 8,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDescriptionWithLinks(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testDescriptionWithLinks",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526899,
      "executionTime": 10,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTitleWithDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testTitleWithDescription",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526890,
      "executionTime": 9,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAdvancedLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testAdvancedLevel",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526880,
      "executionTime": 10,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDescriptionWithNumericEntities(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
        "methodName": "testDescriptionWithNumericEntities",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526813,
      "executionTime": 67,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testDescriptionWithNumericEntities(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDescriptionWithNumericEntities(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAdvancedLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAdvancedLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTitleWithDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTitleWithDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDescriptionWithLinks(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDescriptionWithLinks(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testBasicLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testBasicLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTitleWithExtraPeriods(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTitleWithExtraPeriods(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNamedAttributeTitleOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNamedAttributeTitleOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMultiWordGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMultiWordGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNamedAttributeTitleDescriptionOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNamedAttributeTitleDescriptionOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLabelDefined(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLabelDefined(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMultiWordLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMultiWordLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTitleWithLink(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTitleWithLink(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTitleWithPeriod(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTitleWithPeriod(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTitleWithExclamationMark(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTitleWithExclamationMark(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMultiSentenceLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMultiSentenceLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyJavadoc(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyJavadoc(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOneWordGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOneWordGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSingleWordLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSingleWordLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTitleWithExtraSpace(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTitleWithExtraSpace(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTitleWithLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTitleWithLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNamedAttributeNoJavadoc(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNamedAttributeNoJavadoc(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoDescriptionNoTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoDescriptionNoTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMediumLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMediumLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testBindableMetadata(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testBindableMetadata(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNamedAttributeNoDotInKey(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNamedAttributeNoDotInKey(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTitleAtTheBottomNotSupported(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTitleAtTheBottomNotSupported(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTitleWithoutPeriod(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTitleWithoutPeriod(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNamedAttributeLabelOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNamedAttributeLabelOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testUnknownLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUnknownLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTwoSentenceDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTwoSentenceDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLabelWithComment(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLabelWithComment(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLabelNotDefined(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLabelNotDefined(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSingleSentenceDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSingleSentenceDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDescriptionWithExtraSpace(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDescriptionWithExtraSpace(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497527488,
  "executionTime": 232,
  "description": {
    "displayName": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
    "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testMatrixSizeLimit(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
        "methodName": "testMatrixSizeLimit",
        "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSinglePhrase(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
        "methodName": "testSinglePhrase",
        "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSinglePhraseWithSingleWords(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
        "methodName": "testSinglePhraseWithSingleWords",
        "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmpty(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSinglePhraseWithStopWord(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
        "methodName": "testSinglePhraseWithStopWord",
        "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSingleWords(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
        "methodName": "testSingleWords",
        "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTitleWordBoost(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
        "methodName": "testTitleWordBoost",
        "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testTitleWordBoost(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
        "methodName": "testTitleWordBoost",
        "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527707,
      "executionTime": 12,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSingleWords(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
        "methodName": "testSingleWords",
        "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527700,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSinglePhraseWithStopWord(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
        "methodName": "testSinglePhraseWithStopWord",
        "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527693,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527688,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSinglePhraseWithSingleWords(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
        "methodName": "testSinglePhraseWithSingleWords",
        "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527680,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSinglePhrase(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
        "methodName": "testSinglePhrase",
        "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527662,
      "executionTime": 18,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMatrixSizeLimit(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
        "methodName": "testMatrixSizeLimit",
        "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527490,
      "executionTime": 171,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testMatrixSizeLimit(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMatrixSizeLimit(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSinglePhrase(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSinglePhrase(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSinglePhraseWithSingleWords(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSinglePhraseWithSingleWords(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmpty(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSinglePhraseWithStopWord(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSinglePhraseWithStopWord(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSingleWords(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSingleWords(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTitleWordBoost(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTitleWordBoost(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497527223,
  "executionTime": 152,
  "description": {
    "displayName": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
    "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testDoesNotHaveToExistNotMetExistingDirectory(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
        "methodName": "testDoesNotHaveToExistNotMetExistingDirectory",
        "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMustExistNotMetNonExisting(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
        "methodName": "testMustExistNotMetNonExisting",
        "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNull(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
        "methodName": "testNull",
        "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDoesNotHaveToExistMetNonExisting(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
        "methodName": "testDoesNotHaveToExistMetNonExisting",
        "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDoesNotHaveToExistMet(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
        "methodName": "testDoesNotHaveToExistMet",
        "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMustExistMet(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
        "methodName": "testMustExistMet",
        "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
        "methodName": "testInvalidType",
        "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMustExistNotMetExistingDirectory(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
        "methodName": "testMustExistNotMetExistingDirectory",
        "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testMustExistNotMetExistingDirectory(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
        "methodName": "testMustExistNotMetExistingDirectory",
        "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527368,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
        "methodName": "testInvalidType",
        "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527362,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMustExistMet(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
        "methodName": "testMustExistMet",
        "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527356,
      "executionTime": 6,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDoesNotHaveToExistMet(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
        "methodName": "testDoesNotHaveToExistMet",
        "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527350,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDoesNotHaveToExistMetNonExisting(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
        "methodName": "testDoesNotHaveToExistMetNonExisting",
        "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527343,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNull(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
        "methodName": "testNull",
        "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527331,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMustExistNotMetNonExisting(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
        "methodName": "testMustExistNotMetNonExisting",
        "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527324,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDoesNotHaveToExistNotMetExistingDirectory(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
        "methodName": "testDoesNotHaveToExistNotMetExistingDirectory",
        "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527224,
      "executionTime": 99,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testDoesNotHaveToExistNotMetExistingDirectory(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDoesNotHaveToExistNotMetExistingDirectory(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMustExistNotMetNonExisting(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMustExistNotMetNonExisting(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNull(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNull(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDoesNotHaveToExistMetNonExisting(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDoesNotHaveToExistMetNonExisting(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDoesNotHaveToExistMet(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDoesNotHaveToExistMet(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMustExistMet(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMustExistMet(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInvalidType(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInvalidType(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMustExistNotMetExistingDirectory(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMustExistNotMetExistingDirectory(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497527733,
  "executionTime": 36,
  "description": {
    "displayName": "org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest",
    "className": "org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testNoGenitiveEndingPhrases(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
        "methodName": "testNoGenitiveEndingPhrases",
        "className": "org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testGenitiveWords(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
        "methodName": "testGenitiveWords",
        "className": "org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testGenitiveEndingPhrases(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
        "methodName": "testGenitiveEndingPhrases",
        "className": "org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoGenitiveWords(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
        "methodName": "testNoGenitiveWords",
        "className": "org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testNoGenitiveWords(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
        "methodName": "testNoGenitiveWords",
        "className": "org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527763,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testGenitiveEndingPhrases(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
        "methodName": "testGenitiveEndingPhrases",
        "className": "org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527758,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527752,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testGenitiveWords(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
        "methodName": "testGenitiveWords",
        "className": "org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527743,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoGenitiveEndingPhrases(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
        "methodName": "testNoGenitiveEndingPhrases",
        "className": "org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527734,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testNoGenitiveEndingPhrases(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoGenitiveEndingPhrases(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testGenitiveWords(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testGenitiveWords(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testGenitiveEndingPhrases(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testGenitiveEndingPhrases(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoGenitiveWords(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoGenitiveWords(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497527380,
  "executionTime": 13,
  "description": {
    "displayName": "org.carrot2.text.util.MutableCharArrayUtilsTest",
    "className": "org.carrot2.text.util.MutableCharArrayUtilsTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "toLowerCaseNoReallocation(org.carrot2.text.util.MutableCharArrayUtilsTest)",
        "methodName": "toLowerCaseNoReallocation",
        "className": "org.carrot2.text.util.MutableCharArrayUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "toLowerCaseNoWithReallocation(org.carrot2.text.util.MutableCharArrayUtilsTest)",
        "methodName": "toLowerCaseNoWithReallocation",
        "className": "org.carrot2.text.util.MutableCharArrayUtilsTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "toLowerCaseNoWithReallocation(org.carrot2.text.util.MutableCharArrayUtilsTest)",
        "methodName": "toLowerCaseNoWithReallocation",
        "className": "org.carrot2.text.util.MutableCharArrayUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527390,
      "executionTime": 3,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "toLowerCaseNoReallocation(org.carrot2.text.util.MutableCharArrayUtilsTest)",
        "methodName": "toLowerCaseNoReallocation",
        "className": "org.carrot2.text.util.MutableCharArrayUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527381,
      "executionTime": 9,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "toLowerCaseNoReallocation(org.carrot2.text.util.MutableCharArrayUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "toLowerCaseNoReallocation(org.carrot2.text.util.MutableCharArrayUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "toLowerCaseNoWithReallocation(org.carrot2.text.util.MutableCharArrayUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "toLowerCaseNoWithReallocation(org.carrot2.text.util.MutableCharArrayUtilsTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497527776,
  "executionTime": 110,
  "description": {
    "displayName": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest",
    "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)",
        "methodName": "testNonStopWords",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)",
        "methodName": "testStopWords",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStopWordsInPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)",
        "methodName": "testStopWordsInPhrases",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testStopWordsInPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)",
        "methodName": "testStopWordsInPhrases",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527875,
      "executionTime": 11,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)",
        "methodName": "testStopWords",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527868,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)",
        "methodName": "testNonStopWords",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527862,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527777,
      "executionTime": 84,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStopWordsInPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStopWordsInPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497527402,
  "executionTime": 392,
  "description": {
    "displayName": "org.carrot2.text.preprocessing.SuffixSorterTest",
    "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testEmptySnippet(org.carrot2.text.preprocessing.SuffixSorterTest)",
        "methodName": "testEmptySnippet",
        "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMoreTokens(org.carrot2.text.preprocessing.SuffixSorterTest)",
        "methodName": "testMoreTokens",
        "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmptyTitle(org.carrot2.text.preprocessing.SuffixSorterTest)",
        "methodName": "testEmptyTitle",
        "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmptyBody(org.carrot2.text.preprocessing.SuffixSorterTest)",
        "methodName": "testEmptyBody",
        "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.SuffixSorterTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOnePhrase(org.carrot2.text.preprocessing.SuffixSorterTest)",
        "methodName": "testOnePhrase",
        "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPunctuation(org.carrot2.text.preprocessing.SuffixSorterTest)",
        "methodName": "testPunctuation",
        "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testPunctuation(org.carrot2.text.preprocessing.SuffixSorterTest)",
        "methodName": "testPunctuation",
        "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527789,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOnePhrase(org.carrot2.text.preprocessing.SuffixSorterTest)",
        "methodName": "testOnePhrase",
        "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527784,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.SuffixSorterTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527779,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyBody(org.carrot2.text.preprocessing.SuffixSorterTest)",
        "methodName": "testEmptyBody",
        "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527773,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyTitle(org.carrot2.text.preprocessing.SuffixSorterTest)",
        "methodName": "testEmptyTitle",
        "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527767,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMoreTokens(org.carrot2.text.preprocessing.SuffixSorterTest)",
        "methodName": "testMoreTokens",
        "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527758,
      "executionTime": 9,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptySnippet(org.carrot2.text.preprocessing.SuffixSorterTest)",
        "methodName": "testEmptySnippet",
        "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527402,
      "executionTime": 355,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testEmptySnippet(org.carrot2.text.preprocessing.SuffixSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptySnippet(org.carrot2.text.preprocessing.SuffixSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMoreTokens(org.carrot2.text.preprocessing.SuffixSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMoreTokens(org.carrot2.text.preprocessing.SuffixSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyTitle(org.carrot2.text.preprocessing.SuffixSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyTitle(org.carrot2.text.preprocessing.SuffixSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyBody(org.carrot2.text.preprocessing.SuffixSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyBody(org.carrot2.text.preprocessing.SuffixSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.SuffixSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.SuffixSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOnePhrase(org.carrot2.text.preprocessing.SuffixSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOnePhrase(org.carrot2.text.preprocessing.SuffixSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPunctuation(org.carrot2.text.preprocessing.SuffixSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPunctuation(org.carrot2.text.preprocessing.SuffixSorterTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497527903,
  "executionTime": 27,
  "description": {
    "displayName": "org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest",
    "className": "org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNonStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)",
        "methodName": "testNonStopLabels",
        "className": "org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSingleWordStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)",
        "methodName": "testSingleWordStopLabels",
        "className": "org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPhraseStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)",
        "methodName": "testPhraseStopLabels",
        "className": "org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testPhraseStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)",
        "methodName": "testPhraseStopLabels",
        "className": "org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527924,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSingleWordStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)",
        "methodName": "testSingleWordStopLabels",
        "className": "org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527918,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNonStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)",
        "methodName": "testNonStopLabels",
        "className": "org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527913,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527906,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNonStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNonStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSingleWordStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSingleWordStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPhraseStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPhraseStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497527799,
  "executionTime": 66,
  "description": {
    "displayName": "org.carrot2.util.StringUtilsTest",
    "className": "org.carrot2.util.StringUtilsTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testRemoveHtmlNoTags(org.carrot2.util.StringUtilsTest)",
        "methodName": "testRemoveHtmlNoTags",
        "className": "org.carrot2.util.StringUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSplitCamelCaseWithCapitals(org.carrot2.util.StringUtilsTest)",
        "methodName": "testSplitCamelCaseWithCapitals",
        "className": "org.carrot2.util.StringUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testRemoveHtmlSimpleTag(org.carrot2.util.StringUtilsTest)",
        "methodName": "testRemoveHtmlSimpleTag",
        "className": "org.carrot2.util.StringUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testRemoveHtmlNestedTags(org.carrot2.util.StringUtilsTest)",
        "methodName": "testRemoveHtmlNestedTags",
        "className": "org.carrot2.util.StringUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testRemoveHtmlTagWithAttributes(org.carrot2.util.StringUtilsTest)",
        "methodName": "testRemoveHtmlTagWithAttributes",
        "className": "org.carrot2.util.StringUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSplitCamelCaseWithDigits(org.carrot2.util.StringUtilsTest)",
        "methodName": "testSplitCamelCaseWithDigits",
        "className": "org.carrot2.util.StringUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSplitCamelCase(org.carrot2.util.StringUtilsTest)",
        "methodName": "testSplitCamelCase",
        "className": "org.carrot2.util.StringUtilsTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testSplitCamelCase(org.carrot2.util.StringUtilsTest)",
        "methodName": "testSplitCamelCase",
        "className": "org.carrot2.util.StringUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527860,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSplitCamelCaseWithDigits(org.carrot2.util.StringUtilsTest)",
        "methodName": "testSplitCamelCaseWithDigits",
        "className": "org.carrot2.util.StringUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527856,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRemoveHtmlTagWithAttributes(org.carrot2.util.StringUtilsTest)",
        "methodName": "testRemoveHtmlTagWithAttributes",
        "className": "org.carrot2.util.StringUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527850,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRemoveHtmlNestedTags(org.carrot2.util.StringUtilsTest)",
        "methodName": "testRemoveHtmlNestedTags",
        "className": "org.carrot2.util.StringUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527846,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRemoveHtmlSimpleTag(org.carrot2.util.StringUtilsTest)",
        "methodName": "testRemoveHtmlSimpleTag",
        "className": "org.carrot2.util.StringUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527841,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSplitCamelCaseWithCapitals(org.carrot2.util.StringUtilsTest)",
        "methodName": "testSplitCamelCaseWithCapitals",
        "className": "org.carrot2.util.StringUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527837,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRemoveHtmlNoTags(org.carrot2.util.StringUtilsTest)",
        "methodName": "testRemoveHtmlNoTags",
        "className": "org.carrot2.util.StringUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527803,
      "executionTime": 33,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testRemoveHtmlNoTags(org.carrot2.util.StringUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRemoveHtmlNoTags(org.carrot2.util.StringUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSplitCamelCaseWithCapitals(org.carrot2.util.StringUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSplitCamelCaseWithCapitals(org.carrot2.util.StringUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testRemoveHtmlSimpleTag(org.carrot2.util.StringUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRemoveHtmlSimpleTag(org.carrot2.util.StringUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testRemoveHtmlNestedTags(org.carrot2.util.StringUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRemoveHtmlNestedTags(org.carrot2.util.StringUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testRemoveHtmlTagWithAttributes(org.carrot2.util.StringUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRemoveHtmlTagWithAttributes(org.carrot2.util.StringUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSplitCamelCaseWithDigits(org.carrot2.util.StringUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSplitCamelCaseWithDigits(org.carrot2.util.StringUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSplitCamelCase(org.carrot2.util.StringUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSplitCamelCase(org.carrot2.util.StringUtilsTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497527936,
  "executionTime": 82,
  "description": {
    "displayName": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
    "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testClusteringDataMining(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
        "methodName": "testClusteringDataMining",
        "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoDocuments(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
        "methodName": "testNoDocuments",
        "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testRepeatedClusteringWithCache(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
        "methodName": "testRepeatedClusteringWithCache",
        "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testCollectionField(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
        "methodName": "testCollectionField",
        "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testScalarField(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
        "methodName": "testScalarField",
        "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmptyDocuments(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
        "methodName": "testEmptyDocuments",
        "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStress(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
        "methodName": "testStress",
        "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMetadataAvailable(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testMetadataAvailable(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528013,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStress(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
        "methodName": "testStress",
        "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528013,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyDocuments(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
        "methodName": "testEmptyDocuments",
        "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528006,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testScalarField(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
        "methodName": "testScalarField",
        "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527999,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCollectionField(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
        "methodName": "testCollectionField",
        "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527991,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRepeatedClusteringWithCache(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
        "methodName": "testRepeatedClusteringWithCache",
        "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527966,
      "executionTime": 25,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoDocuments(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
        "methodName": "testNoDocuments",
        "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527954,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testClusteringDataMining(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
        "methodName": "testClusteringDataMining",
        "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527937,
      "executionTime": 16,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testClusteringDataMining(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testClusteringDataMining(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoDocuments(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoDocuments(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testRepeatedClusteringWithCache(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRepeatedClusteringWithCache(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCollectionField(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCollectionField(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testScalarField(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testScalarField(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyDocuments(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyDocuments(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStress(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStress(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497527870,
  "executionTime": 648,
  "description": {
    "displayName": "org.carrot2.util.pool.FixedSizePoolTest",
    "className": "org.carrot2.util.pool.FixedSizePoolTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testBorrowBorrowYieldsDifferentObjects(org.carrot2.util.pool.FixedSizePoolTest)",
        "methodName": "testBorrowBorrowYieldsDifferentObjects",
        "className": "org.carrot2.util.pool.FixedSizePoolTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testParametersAndFlow(org.carrot2.util.pool.FixedSizePoolTest)",
        "methodName": "testParametersAndFlow",
        "className": "org.carrot2.util.pool.FixedSizePoolTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testBorrowReturnYieldsSameObject(org.carrot2.util.pool.FixedSizePoolTest)",
        "methodName": "testBorrowReturnYieldsSameObject",
        "className": "org.carrot2.util.pool.FixedSizePoolTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testExhaustAndReleaseOnDispose(org.carrot2.util.pool.FixedSizePoolTest)",
        "methodName": "testExhaustAndReleaseOnDispose",
        "className": "org.carrot2.util.pool.FixedSizePoolTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testIllegalStateOnBorrowAfterDispose(org.carrot2.util.pool.FixedSizePoolTest)",
        "methodName": "testIllegalStateOnBorrowAfterDispose",
        "className": "org.carrot2.util.pool.FixedSizePoolTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testReturnAlreadyReturnedObject(org.carrot2.util.pool.FixedSizePoolTest)",
        "methodName": "testReturnAlreadyReturnedObject",
        "className": "org.carrot2.util.pool.FixedSizePoolTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStress(org.carrot2.util.pool.FixedSizePoolTest)",
        "methodName": "testStress",
        "className": "org.carrot2.util.pool.FixedSizePoolTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testStress(org.carrot2.util.pool.FixedSizePoolTest)",
        "methodName": "testStress",
        "className": "org.carrot2.util.pool.FixedSizePoolTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527997,
      "executionTime": 521,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testReturnAlreadyReturnedObject(org.carrot2.util.pool.FixedSizePoolTest)",
        "methodName": "testReturnAlreadyReturnedObject",
        "className": "org.carrot2.util.pool.FixedSizePoolTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527992,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testIllegalStateOnBorrowAfterDispose(org.carrot2.util.pool.FixedSizePoolTest)",
        "methodName": "testIllegalStateOnBorrowAfterDispose",
        "className": "org.carrot2.util.pool.FixedSizePoolTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527987,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExhaustAndReleaseOnDispose(org.carrot2.util.pool.FixedSizePoolTest)",
        "methodName": "testExhaustAndReleaseOnDispose",
        "className": "org.carrot2.util.pool.FixedSizePoolTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527960,
      "executionTime": 15,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testBorrowReturnYieldsSameObject(org.carrot2.util.pool.FixedSizePoolTest)",
        "methodName": "testBorrowReturnYieldsSameObject",
        "className": "org.carrot2.util.pool.FixedSizePoolTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527949,
      "executionTime": 8,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testParametersAndFlow(org.carrot2.util.pool.FixedSizePoolTest)",
        "methodName": "testParametersAndFlow",
        "className": "org.carrot2.util.pool.FixedSizePoolTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527902,
      "executionTime": 47,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testBorrowBorrowYieldsDifferentObjects(org.carrot2.util.pool.FixedSizePoolTest)",
        "methodName": "testBorrowBorrowYieldsDifferentObjects",
        "className": "org.carrot2.util.pool.FixedSizePoolTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527874,
      "executionTime": 17,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testBorrowBorrowYieldsDifferentObjects(org.carrot2.util.pool.FixedSizePoolTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testBorrowBorrowYieldsDifferentObjects(org.carrot2.util.pool.FixedSizePoolTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testParametersAndFlow(org.carrot2.util.pool.FixedSizePoolTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testParametersAndFlow(org.carrot2.util.pool.FixedSizePoolTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testBorrowReturnYieldsSameObject(org.carrot2.util.pool.FixedSizePoolTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testBorrowReturnYieldsSameObject(org.carrot2.util.pool.FixedSizePoolTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExhaustAndReleaseOnDispose(org.carrot2.util.pool.FixedSizePoolTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExhaustAndReleaseOnDispose(org.carrot2.util.pool.FixedSizePoolTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testIllegalStateOnBorrowAfterDispose(org.carrot2.util.pool.FixedSizePoolTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIllegalStateOnBorrowAfterDispose(org.carrot2.util.pool.FixedSizePoolTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testReturnAlreadyReturnedObject(org.carrot2.util.pool.FixedSizePoolTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testReturnAlreadyReturnedObject(org.carrot2.util.pool.FixedSizePoolTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStress(org.carrot2.util.pool.FixedSizePoolTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStress(org.carrot2.util.pool.FixedSizePoolTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497528026,
  "executionTime": 812,
  "description": {
    "displayName": "org.carrot2.source.xml.XmlDocumentSourceTest",
    "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testNoIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testNoIdsInSourceXml",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOverridingInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testOverridingInitializationTimeXslt",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testXsltNoParameters(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testXsltNoParameters",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testRemoteUrl(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testRemoteUrl",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMetadataAvailable(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLegacyXml(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testLegacyXml",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testGappedIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testGappedIdsInSourceXml",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDuplicatedIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testDuplicatedIdsInSourceXml",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDisablingInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testDisablingInitializationTimeXslt",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testInitializationTimeXslt",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testResultsTruncation(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testResultsTruncation",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testXsltWithParameters(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testXsltWithParameters",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testXsltWithParameters(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testXsltWithParameters",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528814,
      "executionTime": 24,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testResultsTruncation(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testResultsTruncation",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528710,
      "executionTime": 103,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testInitializationTimeXslt",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528686,
      "executionTime": 24,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDisablingInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testDisablingInitializationTimeXslt",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528649,
      "executionTime": 36,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDuplicatedIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testDuplicatedIdsInSourceXml",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528611,
      "executionTime": 16,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testGappedIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testGappedIdsInSourceXml",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528585,
      "executionTime": 26,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLegacyXml(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testLegacyXml",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528490,
      "executionTime": 95,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMetadataAvailable(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528483,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRemoteUrl(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testRemoteUrl",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528472,
      "executionTime": 11,
      "slave": 0,
      "status": "IGNORED_ASSUMPTION",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": true,
      "failures": [
        {
          "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
          "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: failed assumption: carrot2.xml.feed.url.base property undefined.",
          "stackTrace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: failed assumption: carrot2.xml.feed.url.base property undefined.\r\n\tat __randomizedtesting.SeedInfo.seed([DECCF8F6DA530769:66CD9725B91925E7]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:602)\r\n\tat org.carrot2.source.xml.XmlDocumentSourceTest.__CLR2_6_39sudoi2ca(XmlDocumentSourceTest.java:255)\r\n\tat org.carrot2.source.xml.XmlDocumentSourceTest.testRemoteUrl(XmlDocumentSourceTest.java:253)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat java.lang.reflect.Method.invoke(Method.java:597)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\r\n\tat java.lang.Thread.run(Thread.java:662)\r\n",
          "assertionViolation": false,
          "assumptionViolation": true,
          "errorViolation": false
        }
      ]
    },
    {
      "description": {
        "displayName": "testXsltNoParameters(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testXsltNoParameters",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528443,
      "executionTime": 28,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOverridingInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testOverridingInitializationTimeXslt",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528184,
      "executionTime": 258,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)",
        "methodName": "testNoIdsInSourceXml",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528028,
      "executionTime": 156,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testNoIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOverridingInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOverridingInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testXsltNoParameters(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testXsltNoParameters(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testRemoteUrl(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRemoteUrl(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLegacyXml(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLegacyXml(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testGappedIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testGappedIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDuplicatedIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDuplicatedIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDisablingInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDisablingInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testResultsTruncation(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testResultsTruncation(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testXsltWithParameters(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testXsltWithParameters(org.carrot2.source.xml.XmlDocumentSourceTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497528542,
  "executionTime": 157,
  "description": {
    "displayName": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
    "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testFuzzyOverrideApplied(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
        "methodName": "testFuzzyOverrideApplied",
        "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOnePhrase(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
        "methodName": "testOnePhrase",
        "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testFuzzyOverrideNotApplied(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
        "methodName": "testFuzzyOverrideNotApplied",
        "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNestedPhrases(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
        "methodName": "testNestedPhrases",
        "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOverridingByFilteredOutPhrase(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
        "methodName": "testOverridingByFilteredOutPhrase",
        "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSubphrases(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
        "methodName": "testSubphrases",
        "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testSubphrases(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
        "methodName": "testSubphrases",
        "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528695,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOverridingByFilteredOutPhrase(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
        "methodName": "testOverridingByFilteredOutPhrase",
        "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528689,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNestedPhrases(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
        "methodName": "testNestedPhrases",
        "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528685,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528681,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFuzzyOverrideNotApplied(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
        "methodName": "testFuzzyOverrideNotApplied",
        "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528677,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOnePhrase(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
        "methodName": "testOnePhrase",
        "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528671,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFuzzyOverrideApplied(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
        "methodName": "testFuzzyOverrideApplied",
        "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528550,
      "executionTime": 121,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testFuzzyOverrideApplied(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFuzzyOverrideApplied(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOnePhrase(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOnePhrase(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testFuzzyOverrideNotApplied(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFuzzyOverrideNotApplied(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNestedPhrases(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNestedPhrases(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOverridingByFilteredOutPhrase(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOverridingByFilteredOutPhrase(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSubphrases(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSubphrases(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497528702,
  "executionTime": 12,
  "description": {
    "displayName": "org.carrot2.core.DocumentTest",
    "className": "org.carrot2.core.DocumentTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testSomeIdentifiers(org.carrot2.core.DocumentTest)",
        "methodName": "testSomeIdentifiers",
        "className": "org.carrot2.core.DocumentTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoIdentifiers(org.carrot2.core.DocumentTest)",
        "methodName": "testNoIdentifiers",
        "className": "org.carrot2.core.DocumentTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNonUniqueIdentifiers(org.carrot2.core.DocumentTest)",
        "methodName": "testNonUniqueIdentifiers",
        "className": "org.carrot2.core.DocumentTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testNonUniqueIdentifiers(org.carrot2.core.DocumentTest)",
        "methodName": "testNonUniqueIdentifiers",
        "className": "org.carrot2.core.DocumentTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528710,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoIdentifiers(org.carrot2.core.DocumentTest)",
        "methodName": "testNoIdentifiers",
        "className": "org.carrot2.core.DocumentTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528707,
      "executionTime": 3,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSomeIdentifiers(org.carrot2.core.DocumentTest)",
        "methodName": "testSomeIdentifiers",
        "className": "org.carrot2.core.DocumentTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528702,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testSomeIdentifiers(org.carrot2.core.DocumentTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSomeIdentifiers(org.carrot2.core.DocumentTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoIdentifiers(org.carrot2.core.DocumentTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoIdentifiers(org.carrot2.core.DocumentTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNonUniqueIdentifiers(org.carrot2.core.DocumentTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNonUniqueIdentifiers(org.carrot2.core.DocumentTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497528716,
  "executionTime": 143,
  "description": {
    "displayName": "org.carrot2.text.preprocessing.WordMarkerTest",
    "className": "org.carrot2.text.preprocessing.WordMarkerTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testNonStopWords(org.carrot2.text.preprocessing.WordMarkerTest)",
        "methodName": "testNonStopWords",
        "className": "org.carrot2.text.preprocessing.WordMarkerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStopWords(org.carrot2.text.preprocessing.WordMarkerTest)",
        "methodName": "testStopWords",
        "className": "org.carrot2.text.preprocessing.WordMarkerTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testStopWords(org.carrot2.text.preprocessing.WordMarkerTest)",
        "methodName": "testStopWords",
        "className": "org.carrot2.text.preprocessing.WordMarkerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528854,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNonStopWords(org.carrot2.text.preprocessing.WordMarkerTest)",
        "methodName": "testNonStopWords",
        "className": "org.carrot2.text.preprocessing.WordMarkerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528716,
      "executionTime": 137,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testNonStopWords(org.carrot2.text.preprocessing.WordMarkerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNonStopWords(org.carrot2.text.preprocessing.WordMarkerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStopWords(org.carrot2.text.preprocessing.WordMarkerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStopWords(org.carrot2.text.preprocessing.WordMarkerTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497526790,
  "executionTime": 327,
  "description": {
    "displayName": "org.carrot2.util.attribute.AttributeValueSetsTest",
    "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testRemovingAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testRemovingAttributeValueSet",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSerializationDeserializationOfIllegalDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testSerializationDeserializationOfIllegalDefaultAttributeValueSetId",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testGetDefaultWithNoDefaultProvided(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testGetDefaultWithNoDefaultProvided",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testAttributeValueSetsBasedOn(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testAttributeValueSetsBasedOn",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSerializationDeserializationOfDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testSerializationDeserializationOfDefaultAttributeValueSetId",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSerializationDeserializationOfEmpty(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testSerializationDeserializationOfEmpty",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testAddingWithExistingId(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testAddingWithExistingId",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSerializationDeserializationOfNullValue(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testSerializationDeserializationOfNullValue",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSerializationDeserializationEnumValues(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testSerializationDeserializationEnumValues",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSerializationDeserializationWithNoValues(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testSerializationDeserializationWithNoValues",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSerializationDeserializationOfPrimitiveValues(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testSerializationDeserializationOfPrimitiveValues",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testGetDefaultWithDefaultProvided(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testGetDefaultWithDefaultProvided",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSerializationDeserializationOfCustomClass(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testSerializationDeserializationOfCustomClass",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testGetDefaultWithEmptyAttributeValueSets(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testGetDefaultWithEmptyAttributeValueSets",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testIllegalSetDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testIllegalSetDefaultAttributeValueSetId",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSerializationDeserializationOfBaseReferences(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testSerializationDeserializationOfBaseReferences",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testSerializationDeserializationOfBaseReferences(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testSerializationDeserializationOfBaseReferences",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527104,
      "executionTime": 13,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testIllegalSetDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testIllegalSetDefaultAttributeValueSetId",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527100,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testGetDefaultWithEmptyAttributeValueSets(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testGetDefaultWithEmptyAttributeValueSets",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527095,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSerializationDeserializationOfCustomClass(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testSerializationDeserializationOfCustomClass",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527077,
      "executionTime": 18,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testGetDefaultWithDefaultProvided(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testGetDefaultWithDefaultProvided",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527072,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSerializationDeserializationOfPrimitiveValues(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testSerializationDeserializationOfPrimitiveValues",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527058,
      "executionTime": 13,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSerializationDeserializationWithNoValues(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testSerializationDeserializationWithNoValues",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527044,
      "executionTime": 14,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSerializationDeserializationEnumValues(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testSerializationDeserializationEnumValues",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527022,
      "executionTime": 22,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSerializationDeserializationOfNullValue(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testSerializationDeserializationOfNullValue",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527000,
      "executionTime": 22,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAddingWithExistingId(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testAddingWithExistingId",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526994,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSerializationDeserializationOfEmpty(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testSerializationDeserializationOfEmpty",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526983,
      "executionTime": 10,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSerializationDeserializationOfDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testSerializationDeserializationOfDefaultAttributeValueSetId",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526965,
      "executionTime": 18,
      "slave": 3,
      "status": "FAILURE",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAttributeValueSetsBasedOn(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testAttributeValueSetsBasedOn",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526955,
      "executionTime": 10,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testGetDefaultWithNoDefaultProvided(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testGetDefaultWithNoDefaultProvided",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526949,
      "executionTime": 6,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSerializationDeserializationOfIllegalDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testSerializationDeserializationOfIllegalDefaultAttributeValueSetId",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526833,
      "executionTime": 116,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRemovingAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetsTest)",
        "methodName": "testRemovingAttributeValueSet",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526814,
      "executionTime": 18,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testRemovingAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRemovingAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSerializationDeserializationOfIllegalDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSerializationDeserializationOfIllegalDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testGetDefaultWithNoDefaultProvided(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testGetDefaultWithNoDefaultProvided(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAttributeValueSetsBasedOn(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAttributeValueSetsBasedOn(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSerializationDeserializationOfDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSerializationDeserializationOfDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSerializationDeserializationOfEmpty(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSerializationDeserializationOfEmpty(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAddingWithExistingId(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAddingWithExistingId(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSerializationDeserializationOfNullValue(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSerializationDeserializationOfNullValue(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSerializationDeserializationEnumValues(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSerializationDeserializationEnumValues(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSerializationDeserializationWithNoValues(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSerializationDeserializationWithNoValues(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSerializationDeserializationOfPrimitiveValues(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSerializationDeserializationOfPrimitiveValues(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testGetDefaultWithDefaultProvided(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testGetDefaultWithDefaultProvided(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSerializationDeserializationOfCustomClass(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSerializationDeserializationOfCustomClass(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testGetDefaultWithEmptyAttributeValueSets(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testGetDefaultWithEmptyAttributeValueSets(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testIllegalSetDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIllegalSetDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSerializationDeserializationOfBaseReferences(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSerializationDeserializationOfBaseReferences(org.carrot2.util.attribute.AttributeValueSetsTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497527126,
  "executionTime": 1157,
  "description": {
    "displayName": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
    "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testCircularReference(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
        "methodName": "testCircularReference",
        "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNotBindable(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
        "methodName": "testNotBindable",
        "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSimpleComponent(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
        "methodName": "testSimpleComponent",
        "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testBindableReferenceWithBoundValue(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
        "methodName": "testBindableReferenceWithBoundValue",
        "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testBindableReferenceWithDefaultValue(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
        "methodName": "testBindableReferenceWithDefaultValue",
        "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testConcurrentSerialization(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
        "methodName": "testConcurrentSerialization",
        "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSubClass(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
        "methodName": "testSubClass",
        "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNonprimitiveAttribute(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
        "methodName": "testNonprimitiveAttribute",
        "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testNonprimitiveAttribute(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
        "methodName": "testNonprimitiveAttribute",
        "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528279,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSubClass(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
        "methodName": "testSubClass",
        "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528270,
      "executionTime": 7,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testConcurrentSerialization(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
        "methodName": "testConcurrentSerialization",
        "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527238,
      "executionTime": 1032,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testBindableReferenceWithDefaultValue(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
        "methodName": "testBindableReferenceWithDefaultValue",
        "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527230,
      "executionTime": 7,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testBindableReferenceWithBoundValue(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
        "methodName": "testBindableReferenceWithBoundValue",
        "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527199,
      "executionTime": 31,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSimpleComponent(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
        "methodName": "testSimpleComponent",
        "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527171,
      "executionTime": 27,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNotBindable(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
        "methodName": "testNotBindable",
        "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527166,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCircularReference(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
        "methodName": "testCircularReference",
        "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527127,
      "executionTime": 38,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testCircularReference(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCircularReference(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNotBindable(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNotBindable(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSimpleComponent(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSimpleComponent(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testBindableReferenceWithBoundValue(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testBindableReferenceWithBoundValue(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testBindableReferenceWithDefaultValue(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testBindableReferenceWithDefaultValue(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testConcurrentSerialization(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testConcurrentSerialization(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSubClass(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSubClass(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNonprimitiveAttribute(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNonprimitiveAttribute(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497528288,
  "executionTime": 340,
  "description": {
    "displayName": "org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest",
    "className": "org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLongerWords(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)",
        "methodName": "testLongerWords",
        "className": "org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTooShortWords(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)",
        "methodName": "testTooShortWords",
        "className": "org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testShortPhrases(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)",
        "methodName": "testShortPhrases",
        "className": "org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testShortPhrases(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)",
        "methodName": "testShortPhrases",
        "className": "org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528573,
      "executionTime": 55,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTooShortWords(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)",
        "methodName": "testTooShortWords",
        "className": "org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528566,
      "executionTime": 7,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLongerWords(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)",
        "methodName": "testLongerWords",
        "className": "org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528539,
      "executionTime": 19,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528289,
      "executionTime": 250,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLongerWords(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLongerWords(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTooShortWords(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTooShortWords(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testShortPhrases(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testShortPhrases(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497528636,
  "executionTime": 264,
  "description": {
    "displayName": "org.carrot2.text.preprocessing.CaseNormalizerTest",
    "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testMoreSingleDifferentTokens(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testMoreSingleDifferentTokens",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTokenTypes(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testTokenTypes",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOneToken(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testOneToken",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOneTokenVariantEqualFrequencies(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testOneTokenVariantEqualFrequencies",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTokenFiltering(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testTokenFiltering",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMoreRepeatedDifferentTokens(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testMoreRepeatedDifferentTokens",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPunctuation(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testPunctuation",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDfThresholding(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testDfThresholding",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPunctuationTokenFirst(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testPunctuationTokenFirst",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDemos(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testDemos",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMoreDocuments(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testMoreDocuments",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOneTokenVariantNonequalFrequencies(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testOneTokenVariantNonequalFrequencies",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMoreTokenVariants(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testMoreTokenVariants",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testMoreTokenVariants(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testMoreTokenVariants",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528895,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOneTokenVariantNonequalFrequencies(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testOneTokenVariantNonequalFrequencies",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528889,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMoreDocuments(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testMoreDocuments",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528884,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDemos(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testDemos",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528878,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPunctuationTokenFirst(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testPunctuationTokenFirst",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528872,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDfThresholding(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testDfThresholding",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528864,
      "executionTime": 7,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPunctuation(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testPunctuation",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528859,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMoreRepeatedDifferentTokens(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testMoreRepeatedDifferentTokens",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528854,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTokenFiltering(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testTokenFiltering",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528847,
      "executionTime": 6,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528840,
      "executionTime": 7,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOneTokenVariantEqualFrequencies(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testOneTokenVariantEqualFrequencies",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528834,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOneToken(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testOneToken",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528829,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTokenTypes(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testTokenTypes",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528812,
      "executionTime": 17,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMoreSingleDifferentTokens(org.carrot2.text.preprocessing.CaseNormalizerTest)",
        "methodName": "testMoreSingleDifferentTokens",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528640,
      "executionTime": 170,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testMoreSingleDifferentTokens(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMoreSingleDifferentTokens(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTokenTypes(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTokenTypes(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOneToken(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOneToken(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOneTokenVariantEqualFrequencies(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOneTokenVariantEqualFrequencies(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTokenFiltering(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTokenFiltering(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMoreRepeatedDifferentTokens(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMoreRepeatedDifferentTokens(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPunctuation(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPunctuation(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDfThresholding(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDfThresholding(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPunctuationTokenFirst(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPunctuationTokenFirst(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDemos(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDemos(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMoreDocuments(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMoreDocuments(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOneTokenVariantNonequalFrequencies(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOneTokenVariantNonequalFrequencies(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMoreTokenVariants(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMoreTokenVariants(org.carrot2.text.preprocessing.CaseNormalizerTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497528905,
  "executionTime": 45,
  "description": {
    "displayName": "org.carrot2.util.GraphUtilsTest",
    "className": "org.carrot2.util.GraphUtilsTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testTrivialArcs(org.carrot2.util.GraphUtilsTest)",
        "methodName": "testTrivialArcs",
        "className": "org.carrot2.util.GraphUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOneSubgraph(org.carrot2.util.GraphUtilsTest)",
        "methodName": "testOneSubgraph",
        "className": "org.carrot2.util.GraphUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmpty(org.carrot2.util.GraphUtilsTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.util.GraphUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOneBigSubgraph(org.carrot2.util.GraphUtilsTest)",
        "methodName": "testOneBigSubgraph",
        "className": "org.carrot2.util.GraphUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTwoSubgraphs(org.carrot2.util.GraphUtilsTest)",
        "methodName": "testTwoSubgraphs",
        "className": "org.carrot2.util.GraphUtilsTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testTwoSubgraphs(org.carrot2.util.GraphUtilsTest)",
        "methodName": "testTwoSubgraphs",
        "className": "org.carrot2.util.GraphUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528946,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOneBigSubgraph(org.carrot2.util.GraphUtilsTest)",
        "methodName": "testOneBigSubgraph",
        "className": "org.carrot2.util.GraphUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528940,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.util.GraphUtilsTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.util.GraphUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528934,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOneSubgraph(org.carrot2.util.GraphUtilsTest)",
        "methodName": "testOneSubgraph",
        "className": "org.carrot2.util.GraphUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528929,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTrivialArcs(org.carrot2.util.GraphUtilsTest)",
        "methodName": "testTrivialArcs",
        "className": "org.carrot2.util.GraphUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528916,
      "executionTime": 12,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testTrivialArcs(org.carrot2.util.GraphUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTrivialArcs(org.carrot2.util.GraphUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOneSubgraph(org.carrot2.util.GraphUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOneSubgraph(org.carrot2.util.GraphUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmpty(org.carrot2.util.GraphUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.util.GraphUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOneBigSubgraph(org.carrot2.util.GraphUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOneBigSubgraph(org.carrot2.util.GraphUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTwoSubgraphs(org.carrot2.util.GraphUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTwoSubgraphs(org.carrot2.util.GraphUtilsTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497528954,
  "executionTime": 34,
  "description": {
    "displayName": "org.carrot2.util.resource.ServletContextLocatorTest",
    "className": "org.carrot2.util.resource.ServletContextLocatorTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testHashCodeEqualsServletContextLocator(org.carrot2.util.resource.ServletContextLocatorTest)",
        "methodName": "testHashCodeEqualsServletContextLocator",
        "className": "org.carrot2.util.resource.ServletContextLocatorTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testHashCodeEqualsServletContextLocator(org.carrot2.util.resource.ServletContextLocatorTest)",
        "methodName": "testHashCodeEqualsServletContextLocator",
        "className": "org.carrot2.util.resource.ServletContextLocatorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528956,
      "executionTime": 32,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testHashCodeEqualsServletContextLocator(org.carrot2.util.resource.ServletContextLocatorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHashCodeEqualsServletContextLocator(org.carrot2.util.resource.ServletContextLocatorTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497528993,
  "executionTime": 53,
  "description": {
    "displayName": "org.carrot2.text.preprocessing.SubstringComparatorTest",
    "className": "org.carrot2.text.preprocessing.SubstringComparatorTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testCarrot778(org.carrot2.text.preprocessing.SubstringComparatorTest)",
        "methodName": "testCarrot778",
        "className": "org.carrot2.text.preprocessing.SubstringComparatorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testComparatorContract(org.carrot2.text.preprocessing.SubstringComparatorTest)",
        "methodName": "testComparatorContract",
        "className": "org.carrot2.text.preprocessing.SubstringComparatorTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testComparatorContract(org.carrot2.text.preprocessing.SubstringComparatorTest)",
        "methodName": "testComparatorContract",
        "className": "org.carrot2.text.preprocessing.SubstringComparatorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529040,
      "executionTime": 6,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCarrot778(org.carrot2.text.preprocessing.SubstringComparatorTest)",
        "methodName": "testCarrot778",
        "className": "org.carrot2.text.preprocessing.SubstringComparatorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528996,
      "executionTime": 43,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testCarrot778(org.carrot2.text.preprocessing.SubstringComparatorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCarrot778(org.carrot2.text.preprocessing.SubstringComparatorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComparatorContract(org.carrot2.text.preprocessing.SubstringComparatorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComparatorContract(org.carrot2.text.preprocessing.SubstringComparatorTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497529060,
  "executionTime": 597,
  "description": {
    "displayName": "org.carrot2.core.ProcessingResultTest",
    "className": "org.carrot2.core.ProcessingResultTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testJsonSerializationAttributesOnly(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testJsonSerializationAttributesOnly",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSerializationDeserializationDocumentsOnly(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testSerializationDeserializationDocumentsOnly",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoFalseJunkGroupAttribute(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testNoFalseJunkGroupAttribute",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testJsonSerializationDocumentsOnly(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testJsonSerializationDocumentsOnly",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDocumentDeserializationLanguageByEnumCode(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testDocumentDeserializationLanguageByEnumCode",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSerializationDeserializationClustersOnly(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testSerializationDeserializationClustersOnly",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testJsonSerializationAll(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testJsonSerializationAll",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSerializationDeserializationAttributesOnly(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testSerializationDeserializationAttributesOnly",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDocumentDeserializationFromLegacyXml(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testDocumentDeserializationFromLegacyXml",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSerializationDeserializationAll(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testSerializationDeserializationAll",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testClusterDeserializationFromLegacyXml(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testClusterDeserializationFromLegacyXml",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDocumentDeserializationLanguageByIsoCode(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testDocumentDeserializationLanguageByIsoCode",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testJsonSerializationWithCallback(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testJsonSerializationWithCallback",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testJsonSerializationClustersOnly(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testJsonSerializationClustersOnly",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testJsonSerializationClustersOnly(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testJsonSerializationClustersOnly",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529644,
      "executionTime": 12,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testJsonSerializationWithCallback(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testJsonSerializationWithCallback",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529631,
      "executionTime": 12,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDocumentDeserializationLanguageByIsoCode(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testDocumentDeserializationLanguageByIsoCode",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529622,
      "executionTime": 8,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testClusterDeserializationFromLegacyXml(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testClusterDeserializationFromLegacyXml",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529608,
      "executionTime": 13,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSerializationDeserializationAll(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testSerializationDeserializationAll",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529562,
      "executionTime": 45,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDocumentDeserializationFromLegacyXml(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testDocumentDeserializationFromLegacyXml",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529549,
      "executionTime": 12,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSerializationDeserializationAttributesOnly(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testSerializationDeserializationAttributesOnly",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529527,
      "executionTime": 21,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testJsonSerializationAll(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testJsonSerializationAll",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529509,
      "executionTime": 17,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSerializationDeserializationClustersOnly(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testSerializationDeserializationClustersOnly",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529473,
      "executionTime": 35,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDocumentDeserializationLanguageByEnumCode(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testDocumentDeserializationLanguageByEnumCode",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529463,
      "executionTime": 9,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testJsonSerializationDocumentsOnly(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testJsonSerializationDocumentsOnly",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529433,
      "executionTime": 29,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoFalseJunkGroupAttribute(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testNoFalseJunkGroupAttribute",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529416,
      "executionTime": 16,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSerializationDeserializationDocumentsOnly(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testSerializationDeserializationDocumentsOnly",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529357,
      "executionTime": 58,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testJsonSerializationAttributesOnly(org.carrot2.core.ProcessingResultTest)",
        "methodName": "testJsonSerializationAttributesOnly",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529073,
      "executionTime": 283,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testJsonSerializationAttributesOnly(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testJsonSerializationAttributesOnly(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSerializationDeserializationDocumentsOnly(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSerializationDeserializationDocumentsOnly(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoFalseJunkGroupAttribute(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoFalseJunkGroupAttribute(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testJsonSerializationDocumentsOnly(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testJsonSerializationDocumentsOnly(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDocumentDeserializationLanguageByEnumCode(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDocumentDeserializationLanguageByEnumCode(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSerializationDeserializationClustersOnly(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSerializationDeserializationClustersOnly(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testJsonSerializationAll(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testJsonSerializationAll(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSerializationDeserializationAttributesOnly(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSerializationDeserializationAttributesOnly(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDocumentDeserializationFromLegacyXml(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDocumentDeserializationFromLegacyXml(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSerializationDeserializationAll(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSerializationDeserializationAll(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testClusterDeserializationFromLegacyXml(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testClusterDeserializationFromLegacyXml(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDocumentDeserializationLanguageByIsoCode(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDocumentDeserializationLanguageByIsoCode(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testJsonSerializationWithCallback(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testJsonSerializationWithCallback(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testJsonSerializationClustersOnly(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testJsonSerializationClustersOnly(org.carrot2.core.ProcessingResultTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497529660,
  "executionTime": 56,
  "description": {
    "displayName": "org.carrot2.text.preprocessing.DocumentAssignerTest",
    "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testPhraseLabelsExactMatch(org.carrot2.text.preprocessing.DocumentAssignerTest)",
        "methodName": "testPhraseLabelsExactMatch",
        "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSingleWordLabels(org.carrot2.text.preprocessing.DocumentAssignerTest)",
        "methodName": "testSingleWordLabels",
        "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStemmedPhraseLabelConflation(org.carrot2.text.preprocessing.DocumentAssignerTest)",
        "methodName": "testStemmedPhraseLabelConflation",
        "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.DocumentAssignerTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMinClusterSize(org.carrot2.text.preprocessing.DocumentAssignerTest)",
        "methodName": "testMinClusterSize",
        "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPhraseLabelsNonExactMatchOtherLabels(org.carrot2.text.preprocessing.DocumentAssignerTest)",
        "methodName": "testPhraseLabelsNonExactMatchOtherLabels",
        "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStemmedSingleWordLabelConflation(org.carrot2.text.preprocessing.DocumentAssignerTest)",
        "methodName": "testStemmedSingleWordLabelConflation",
        "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPhraseLabelsNonExactMatch(org.carrot2.text.preprocessing.DocumentAssignerTest)",
        "methodName": "testPhraseLabelsNonExactMatch",
        "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testPhraseLabelsNonExactMatch(org.carrot2.text.preprocessing.DocumentAssignerTest)",
        "methodName": "testPhraseLabelsNonExactMatch",
        "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529711,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStemmedSingleWordLabelConflation(org.carrot2.text.preprocessing.DocumentAssignerTest)",
        "methodName": "testStemmedSingleWordLabelConflation",
        "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529705,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPhraseLabelsNonExactMatchOtherLabels(org.carrot2.text.preprocessing.DocumentAssignerTest)",
        "methodName": "testPhraseLabelsNonExactMatchOtherLabels",
        "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529698,
      "executionTime": 7,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMinClusterSize(org.carrot2.text.preprocessing.DocumentAssignerTest)",
        "methodName": "testMinClusterSize",
        "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529692,
      "executionTime": 6,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.DocumentAssignerTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529688,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStemmedPhraseLabelConflation(org.carrot2.text.preprocessing.DocumentAssignerTest)",
        "methodName": "testStemmedPhraseLabelConflation",
        "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529680,
      "executionTime": 6,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSingleWordLabels(org.carrot2.text.preprocessing.DocumentAssignerTest)",
        "methodName": "testSingleWordLabels",
        "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529674,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPhraseLabelsExactMatch(org.carrot2.text.preprocessing.DocumentAssignerTest)",
        "methodName": "testPhraseLabelsExactMatch",
        "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529661,
      "executionTime": 12,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testPhraseLabelsExactMatch(org.carrot2.text.preprocessing.DocumentAssignerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPhraseLabelsExactMatch(org.carrot2.text.preprocessing.DocumentAssignerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSingleWordLabels(org.carrot2.text.preprocessing.DocumentAssignerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSingleWordLabels(org.carrot2.text.preprocessing.DocumentAssignerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStemmedPhraseLabelConflation(org.carrot2.text.preprocessing.DocumentAssignerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStemmedPhraseLabelConflation(org.carrot2.text.preprocessing.DocumentAssignerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.DocumentAssignerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.DocumentAssignerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMinClusterSize(org.carrot2.text.preprocessing.DocumentAssignerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMinClusterSize(org.carrot2.text.preprocessing.DocumentAssignerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPhraseLabelsNonExactMatchOtherLabels(org.carrot2.text.preprocessing.DocumentAssignerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPhraseLabelsNonExactMatchOtherLabels(org.carrot2.text.preprocessing.DocumentAssignerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStemmedSingleWordLabelConflation(org.carrot2.text.preprocessing.DocumentAssignerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStemmedSingleWordLabelConflation(org.carrot2.text.preprocessing.DocumentAssignerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPhraseLabelsNonExactMatch(org.carrot2.text.preprocessing.DocumentAssignerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPhraseLabelsNonExactMatch(org.carrot2.text.preprocessing.DocumentAssignerTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497526777,
  "executionTime": 113,
  "description": {
    "displayName": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
    "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testCompositeInjectionReceiver(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
        "methodName": "testCompositeInjectionReceiver",
        "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoFieldsToReceiveInjection(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
        "methodName": "testNoFieldsToReceiveInjection",
        "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInjectionOfNonNullValues(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
        "methodName": "testInjectionOfNonNullValues",
        "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "staticFieldsInInjectionReceiverNotBound(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
        "methodName": "staticFieldsInInjectionReceiverNotBound",
        "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInjectionOfNullValues(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
        "methodName": "testInjectionOfNullValues",
        "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoValuesToInject(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
        "methodName": "testNoValuesToInject",
        "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNullInjectionReceiver(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
        "methodName": "testNullInjectionReceiver",
        "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testNullInjectionReceiver(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
        "methodName": "testNullInjectionReceiver",
        "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526885,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoValuesToInject(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
        "methodName": "testNoValuesToInject",
        "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526881,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInjectionOfNullValues(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
        "methodName": "testInjectionOfNullValues",
        "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526877,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "staticFieldsInInjectionReceiverNotBound(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
        "methodName": "staticFieldsInInjectionReceiverNotBound",
        "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526872,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInjectionOfNonNullValues(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
        "methodName": "testInjectionOfNonNullValues",
        "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526869,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoFieldsToReceiveInjection(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
        "methodName": "testNoFieldsToReceiveInjection",
        "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526864,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCompositeInjectionReceiver(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
        "methodName": "testCompositeInjectionReceiver",
        "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526812,
      "executionTime": 51,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testCompositeInjectionReceiver(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCompositeInjectionReceiver(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoFieldsToReceiveInjection(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoFieldsToReceiveInjection(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInjectionOfNonNullValues(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInjectionOfNonNullValues(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "staticFieldsInInjectionReceiverNotBound(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "staticFieldsInInjectionReceiverNotBound(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInjectionOfNullValues(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInjectionOfNullValues(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoValuesToInject(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoValuesToInject(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNullInjectionReceiver(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNullInjectionReceiver(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497526896,
  "executionTime": 13,
  "description": {
    "displayName": "org.carrot2.util.attribute.BindableDescriptorUtilsTest",
    "className": "org.carrot2.util.attribute.BindableDescriptorUtilsTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testGetDescriptorClassName(org.carrot2.util.attribute.BindableDescriptorUtilsTest)",
        "methodName": "testGetDescriptorClassName",
        "className": "org.carrot2.util.attribute.BindableDescriptorUtilsTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testGetDescriptorClassName(org.carrot2.util.attribute.BindableDescriptorUtilsTest)",
        "methodName": "testGetDescriptorClassName",
        "className": "org.carrot2.util.attribute.BindableDescriptorUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526896,
      "executionTime": 13,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testGetDescriptorClassName(org.carrot2.util.attribute.BindableDescriptorUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testGetDescriptorClassName(org.carrot2.util.attribute.BindableDescriptorUtilsTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497526916,
  "executionTime": 14,
  "description": {
    "displayName": "org.carrot2.text.util.CharArrayComparatorsTest",
    "className": "org.carrot2.text.util.CharArrayComparatorsTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testNullsAreEqual(org.carrot2.text.util.CharArrayComparatorsTest)",
        "methodName": "testNullsAreEqual",
        "className": "org.carrot2.text.util.CharArrayComparatorsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNormalizingComparatorPL(org.carrot2.text.util.CharArrayComparatorsTest)",
        "methodName": "testNormalizingComparatorPL",
        "className": "org.carrot2.text.util.CharArrayComparatorsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNormalizingComparator(org.carrot2.text.util.CharArrayComparatorsTest)",
        "methodName": "testNormalizingComparator",
        "className": "org.carrot2.text.util.CharArrayComparatorsTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testNormalizingComparator(org.carrot2.text.util.CharArrayComparatorsTest)",
        "methodName": "testNormalizingComparator",
        "className": "org.carrot2.text.util.CharArrayComparatorsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526927,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalizingComparatorPL(org.carrot2.text.util.CharArrayComparatorsTest)",
        "methodName": "testNormalizingComparatorPL",
        "className": "org.carrot2.text.util.CharArrayComparatorsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526923,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNullsAreEqual(org.carrot2.text.util.CharArrayComparatorsTest)",
        "methodName": "testNullsAreEqual",
        "className": "org.carrot2.text.util.CharArrayComparatorsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526917,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testNullsAreEqual(org.carrot2.text.util.CharArrayComparatorsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNullsAreEqual(org.carrot2.text.util.CharArrayComparatorsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalizingComparatorPL(org.carrot2.text.util.CharArrayComparatorsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalizingComparatorPL(org.carrot2.text.util.CharArrayComparatorsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalizingComparator(org.carrot2.text.util.CharArrayComparatorsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalizingComparator(org.carrot2.text.util.CharArrayComparatorsTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497526936,
  "executionTime": 466,
  "description": {
    "displayName": "org.carrot2.text.linguistic.PolishTest",
    "className": "org.carrot2.text.linguistic.PolishTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testCommonWords(org.carrot2.text.linguistic.PolishTest)",
        "methodName": "testCommonWords",
        "className": "org.carrot2.text.linguistic.PolishTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLanguageCode(org.carrot2.text.linguistic.PolishTest)",
        "methodName": "testLanguageCode",
        "className": "org.carrot2.text.linguistic.PolishTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStemming(org.carrot2.text.linguistic.PolishTest)",
        "methodName": "testStemming",
        "className": "org.carrot2.text.linguistic.PolishTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStemmerAvailable(org.carrot2.text.linguistic.PolishTest)",
        "methodName": "testStemmerAvailable",
        "className": "org.carrot2.text.linguistic.PolishTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testStemmerAvailable(org.carrot2.text.linguistic.PolishTest)",
        "methodName": "testStemmerAvailable",
        "className": "org.carrot2.text.linguistic.PolishTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527396,
      "executionTime": 6,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStemming(org.carrot2.text.linguistic.PolishTest)",
        "methodName": "testStemming",
        "className": "org.carrot2.text.linguistic.PolishTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527350,
      "executionTime": 44,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLanguageCode(org.carrot2.text.linguistic.PolishTest)",
        "methodName": "testLanguageCode",
        "className": "org.carrot2.text.linguistic.PolishTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527346,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCommonWords(org.carrot2.text.linguistic.PolishTest)",
        "methodName": "testCommonWords",
        "className": "org.carrot2.text.linguistic.PolishTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497526937,
      "executionTime": 408,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testCommonWords(org.carrot2.text.linguistic.PolishTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCommonWords(org.carrot2.text.linguistic.PolishTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLanguageCode(org.carrot2.text.linguistic.PolishTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLanguageCode(org.carrot2.text.linguistic.PolishTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStemming(org.carrot2.text.linguistic.PolishTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStemming(org.carrot2.text.linguistic.PolishTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStemmerAvailable(org.carrot2.text.linguistic.PolishTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStemmerAvailable(org.carrot2.text.linguistic.PolishTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497527410,
  "executionTime": 109,
  "description": {
    "displayName": "org.carrot2.text.util.MutableCharArrayTest",
    "className": "org.carrot2.text.util.MutableCharArrayTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testCharAtOutOfBounds(org.carrot2.text.util.MutableCharArrayTest)",
        "methodName": "testCharAtOutOfBounds",
        "className": "org.carrot2.text.util.MutableCharArrayTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLength(org.carrot2.text.util.MutableCharArrayTest)",
        "methodName": "testLength",
        "className": "org.carrot2.text.util.MutableCharArrayTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testReset(org.carrot2.text.util.MutableCharArrayTest)",
        "methodName": "testReset",
        "className": "org.carrot2.text.util.MutableCharArrayTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testCharArrayCharArrayIntInt(org.carrot2.text.util.MutableCharArrayTest)",
        "methodName": "testCharArrayCharArrayIntInt",
        "className": "org.carrot2.text.util.MutableCharArrayTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testCharArrayCharSequence(org.carrot2.text.util.MutableCharArrayTest)",
        "methodName": "testCharArrayCharSequence",
        "className": "org.carrot2.text.util.MutableCharArrayTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testCharAt(org.carrot2.text.util.MutableCharArrayTest)",
        "methodName": "testCharAt",
        "className": "org.carrot2.text.util.MutableCharArrayTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSubSequence(org.carrot2.text.util.MutableCharArrayTest)",
        "methodName": "testSubSequence",
        "className": "org.carrot2.text.util.MutableCharArrayTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEquals(org.carrot2.text.util.MutableCharArrayTest)",
        "methodName": "testEquals",
        "className": "org.carrot2.text.util.MutableCharArrayTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testEquals(org.carrot2.text.util.MutableCharArrayTest)",
        "methodName": "testEquals",
        "className": "org.carrot2.text.util.MutableCharArrayTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527511,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSubSequence(org.carrot2.text.util.MutableCharArrayTest)",
        "methodName": "testSubSequence",
        "className": "org.carrot2.text.util.MutableCharArrayTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527500,
      "executionTime": 11,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCharAt(org.carrot2.text.util.MutableCharArrayTest)",
        "methodName": "testCharAt",
        "className": "org.carrot2.text.util.MutableCharArrayTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527444,
      "executionTime": 17,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCharArrayCharSequence(org.carrot2.text.util.MutableCharArrayTest)",
        "methodName": "testCharArrayCharSequence",
        "className": "org.carrot2.text.util.MutableCharArrayTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527441,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCharArrayCharArrayIntInt(org.carrot2.text.util.MutableCharArrayTest)",
        "methodName": "testCharArrayCharArrayIntInt",
        "className": "org.carrot2.text.util.MutableCharArrayTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527436,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testReset(org.carrot2.text.util.MutableCharArrayTest)",
        "methodName": "testReset",
        "className": "org.carrot2.text.util.MutableCharArrayTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527431,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLength(org.carrot2.text.util.MutableCharArrayTest)",
        "methodName": "testLength",
        "className": "org.carrot2.text.util.MutableCharArrayTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527424,
      "executionTime": 7,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCharAtOutOfBounds(org.carrot2.text.util.MutableCharArrayTest)",
        "methodName": "testCharAtOutOfBounds",
        "className": "org.carrot2.text.util.MutableCharArrayTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527414,
      "executionTime": 6,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testCharAtOutOfBounds(org.carrot2.text.util.MutableCharArrayTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCharAtOutOfBounds(org.carrot2.text.util.MutableCharArrayTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLength(org.carrot2.text.util.MutableCharArrayTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLength(org.carrot2.text.util.MutableCharArrayTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testReset(org.carrot2.text.util.MutableCharArrayTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testReset(org.carrot2.text.util.MutableCharArrayTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCharArrayCharArrayIntInt(org.carrot2.text.util.MutableCharArrayTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCharArrayCharArrayIntInt(org.carrot2.text.util.MutableCharArrayTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCharArrayCharSequence(org.carrot2.text.util.MutableCharArrayTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCharArrayCharSequence(org.carrot2.text.util.MutableCharArrayTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCharAt(org.carrot2.text.util.MutableCharArrayTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCharAt(org.carrot2.text.util.MutableCharArrayTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSubSequence(org.carrot2.text.util.MutableCharArrayTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSubSequence(org.carrot2.text.util.MutableCharArrayTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEquals(org.carrot2.text.util.MutableCharArrayTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEquals(org.carrot2.text.util.MutableCharArrayTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497527544,
  "executionTime": 458,
  "description": {
    "displayName": "org.carrot2.util.pool.SoftUnboundedPoolTest",
    "className": "org.carrot2.util.pool.SoftUnboundedPoolTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testBorrowReturnYieldsSameObject(org.carrot2.util.pool.SoftUnboundedPoolTest)",
        "methodName": "testBorrowReturnYieldsSameObject",
        "className": "org.carrot2.util.pool.SoftUnboundedPoolTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testIllegalStateOnBorrowAfterDispose(org.carrot2.util.pool.SoftUnboundedPoolTest)",
        "methodName": "testIllegalStateOnBorrowAfterDispose",
        "className": "org.carrot2.util.pool.SoftUnboundedPoolTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStress(org.carrot2.util.pool.SoftUnboundedPoolTest)",
        "methodName": "testStress",
        "className": "org.carrot2.util.pool.SoftUnboundedPoolTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testParametersAndFlow(org.carrot2.util.pool.SoftUnboundedPoolTest)",
        "methodName": "testParametersAndFlow",
        "className": "org.carrot2.util.pool.SoftUnboundedPoolTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testBorrowBorrowYieldsDifferentObjects(org.carrot2.util.pool.SoftUnboundedPoolTest)",
        "methodName": "testBorrowBorrowYieldsDifferentObjects",
        "className": "org.carrot2.util.pool.SoftUnboundedPoolTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testReturnAlreadyReturnedObject(org.carrot2.util.pool.SoftUnboundedPoolTest)",
        "methodName": "testReturnAlreadyReturnedObject",
        "className": "org.carrot2.util.pool.SoftUnboundedPoolTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testReturnAlreadyReturnedObject(org.carrot2.util.pool.SoftUnboundedPoolTest)",
        "methodName": "testReturnAlreadyReturnedObject",
        "className": "org.carrot2.util.pool.SoftUnboundedPoolTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527997,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testBorrowBorrowYieldsDifferentObjects(org.carrot2.util.pool.SoftUnboundedPoolTest)",
        "methodName": "testBorrowBorrowYieldsDifferentObjects",
        "className": "org.carrot2.util.pool.SoftUnboundedPoolTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527992,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testParametersAndFlow(org.carrot2.util.pool.SoftUnboundedPoolTest)",
        "methodName": "testParametersAndFlow",
        "className": "org.carrot2.util.pool.SoftUnboundedPoolTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527954,
      "executionTime": 38,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStress(org.carrot2.util.pool.SoftUnboundedPoolTest)",
        "methodName": "testStress",
        "className": "org.carrot2.util.pool.SoftUnboundedPoolTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527591,
      "executionTime": 357,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testIllegalStateOnBorrowAfterDispose(org.carrot2.util.pool.SoftUnboundedPoolTest)",
        "methodName": "testIllegalStateOnBorrowAfterDispose",
        "className": "org.carrot2.util.pool.SoftUnboundedPoolTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527579,
      "executionTime": 12,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testBorrowReturnYieldsSameObject(org.carrot2.util.pool.SoftUnboundedPoolTest)",
        "methodName": "testBorrowReturnYieldsSameObject",
        "className": "org.carrot2.util.pool.SoftUnboundedPoolTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497527567,
      "executionTime": 9,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testBorrowReturnYieldsSameObject(org.carrot2.util.pool.SoftUnboundedPoolTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testBorrowReturnYieldsSameObject(org.carrot2.util.pool.SoftUnboundedPoolTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testIllegalStateOnBorrowAfterDispose(org.carrot2.util.pool.SoftUnboundedPoolTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIllegalStateOnBorrowAfterDispose(org.carrot2.util.pool.SoftUnboundedPoolTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStress(org.carrot2.util.pool.SoftUnboundedPoolTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStress(org.carrot2.util.pool.SoftUnboundedPoolTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testParametersAndFlow(org.carrot2.util.pool.SoftUnboundedPoolTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testParametersAndFlow(org.carrot2.util.pool.SoftUnboundedPoolTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testBorrowBorrowYieldsDifferentObjects(org.carrot2.util.pool.SoftUnboundedPoolTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testBorrowBorrowYieldsDifferentObjects(org.carrot2.util.pool.SoftUnboundedPoolTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testReturnAlreadyReturnedObject(org.carrot2.util.pool.SoftUnboundedPoolTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testReturnAlreadyReturnedObject(org.carrot2.util.pool.SoftUnboundedPoolTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497528008,
  "executionTime": 112,
  "description": {
    "displayName": "org.carrot2.text.preprocessing.filter.NumericLabelFilterTest",
    "className": "org.carrot2.text.preprocessing.filter.NumericLabelFilterTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testPhraseStartingWithNonNumbers(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
        "methodName": "testPhraseStartingWithNonNumbers",
        "className": "org.carrot2.text.preprocessing.filter.NumericLabelFilterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNumericWords(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
        "methodName": "testNumericWords",
        "className": "org.carrot2.text.preprocessing.filter.NumericLabelFilterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.filter.NumericLabelFilterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNonNumericWords(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
        "methodName": "testNonNumericWords",
        "className": "org.carrot2.text.preprocessing.filter.NumericLabelFilterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPhraseStartingWithNumbers(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
        "methodName": "testPhraseStartingWithNumbers",
        "className": "org.carrot2.text.preprocessing.filter.NumericLabelFilterTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testPhraseStartingWithNumbers(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
        "methodName": "testPhraseStartingWithNumbers",
        "className": "org.carrot2.text.preprocessing.filter.NumericLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528116,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNonNumericWords(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
        "methodName": "testNonNumericWords",
        "className": "org.carrot2.text.preprocessing.filter.NumericLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528110,
      "executionTime": 6,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.filter.NumericLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528103,
      "executionTime": 7,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNumericWords(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
        "methodName": "testNumericWords",
        "className": "org.carrot2.text.preprocessing.filter.NumericLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528097,
      "executionTime": 6,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPhraseStartingWithNonNumbers(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
        "methodName": "testPhraseStartingWithNonNumbers",
        "className": "org.carrot2.text.preprocessing.filter.NumericLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528010,
      "executionTime": 87,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testPhraseStartingWithNonNumbers(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPhraseStartingWithNonNumbers(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNumericWords(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNumericWords(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNonNumericWords(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNonNumericWords(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPhraseStartingWithNumbers(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPhraseStartingWithNumbers(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497528129,
  "executionTime": 27,
  "description": {
    "displayName": "org.carrot2.clustering.stc.GeneralizedSuffixTreeTest",
    "className": "org.carrot2.clustering.stc.GeneralizedSuffixTreeTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testSinglephraseGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)",
        "methodName": "testSinglephraseGST",
        "className": "org.carrot2.clustering.stc.GeneralizedSuffixTreeTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmptyGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)",
        "methodName": "testEmptyGST",
        "className": "org.carrot2.clustering.stc.GeneralizedSuffixTreeTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMultiphraseGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)",
        "methodName": "testMultiphraseGST",
        "className": "org.carrot2.clustering.stc.GeneralizedSuffixTreeTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testMultiphraseGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)",
        "methodName": "testMultiphraseGST",
        "className": "org.carrot2.clustering.stc.GeneralizedSuffixTreeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528153,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)",
        "methodName": "testEmptyGST",
        "className": "org.carrot2.clustering.stc.GeneralizedSuffixTreeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528149,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSinglephraseGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)",
        "methodName": "testSinglephraseGST",
        "className": "org.carrot2.clustering.stc.GeneralizedSuffixTreeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528130,
      "executionTime": 19,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testSinglephraseGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSinglephraseGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMultiphraseGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMultiphraseGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497528161,
  "executionTime": 1818,
  "description": {
    "displayName": "org.carrot2.text.preprocessing.PhraseExtractorTest",
    "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "minMaxPhraseLength(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "minMaxPhraseLength",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testGeneralizedPhrasesWithSingleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testGeneralizedPhrasesWithSingleOriginals",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTermFrequencyAcrossDocuments(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testTermFrequencyAcrossDocuments",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoFrequentPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testNoFrequentPhrases",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "minMaxPhraseLengthReverseOrder(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "minMaxPhraseLengthReverseOrder",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNullTitleSnippet(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testNullTitleSnippet",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNestedPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testNestedPhrases",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTwoPhrasesOneDocument(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testTwoPhrasesOneDocument",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testGeneralizedPhraseWithSingleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testGeneralizedPhraseWithSingleOriginals",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testComposition(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testComposition",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSubphrasesAcrossFields(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testSubphrasesAcrossFields",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSinglePhrase(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testSinglePhrase",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDfThreshold(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testDfThreshold",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSubphrasesOneField(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testSubphrasesOneField",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testGeneralizedPhraseWithMultipleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testGeneralizedPhraseWithMultipleOriginals",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTwoExtendedPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testTwoExtendedPhrases",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMaxPhraseLength(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testMaxPhraseLength",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "tfByDocumentAndTfSanity(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "tfByDocumentAndTfSanity",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testGeneralizedPhraseFrequencyAggregation(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testGeneralizedPhraseFrequencyAggregation",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOverlappingGeneralizedPhrase(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testOverlappingGeneralizedPhrase",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testOverlappingGeneralizedPhrase(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testOverlappingGeneralizedPhrase",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529972,
      "executionTime": 7,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testGeneralizedPhraseFrequencyAggregation(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testGeneralizedPhraseFrequencyAggregation",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529962,
      "executionTime": 10,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "tfByDocumentAndTfSanity(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "tfByDocumentAndTfSanity",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528340,
      "executionTime": 1622,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMaxPhraseLength(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testMaxPhraseLength",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528331,
      "executionTime": 9,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTwoExtendedPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testTwoExtendedPhrases",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528325,
      "executionTime": 6,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testGeneralizedPhraseWithMultipleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testGeneralizedPhraseWithMultipleOriginals",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528317,
      "executionTime": 8,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSubphrasesOneField(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testSubphrasesOneField",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528312,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528304,
      "executionTime": 7,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDfThreshold(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testDfThreshold",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528299,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSinglePhrase(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testSinglePhrase",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528292,
      "executionTime": 6,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSubphrasesAcrossFields(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testSubphrasesAcrossFields",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528286,
      "executionTime": 6,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComposition(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testComposition",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528281,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testGeneralizedPhraseWithSingleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testGeneralizedPhraseWithSingleOriginals",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528275,
      "executionTime": 6,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTwoPhrasesOneDocument(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testTwoPhrasesOneDocument",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528270,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNestedPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testNestedPhrases",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528264,
      "executionTime": 6,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNullTitleSnippet(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testNullTitleSnippet",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528259,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "minMaxPhraseLengthReverseOrder(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "minMaxPhraseLengthReverseOrder",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528250,
      "executionTime": 9,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoFrequentPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testNoFrequentPhrases",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528244,
      "executionTime": 6,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTermFrequencyAcrossDocuments(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testTermFrequencyAcrossDocuments",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528237,
      "executionTime": 7,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testGeneralizedPhrasesWithSingleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "testGeneralizedPhrasesWithSingleOriginals",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528224,
      "executionTime": 13,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "minMaxPhraseLength(org.carrot2.text.preprocessing.PhraseExtractorTest)",
        "methodName": "minMaxPhraseLength",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528162,
      "executionTime": 61,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "minMaxPhraseLength(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "minMaxPhraseLength(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testGeneralizedPhrasesWithSingleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testGeneralizedPhrasesWithSingleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTermFrequencyAcrossDocuments(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTermFrequencyAcrossDocuments(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoFrequentPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoFrequentPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "minMaxPhraseLengthReverseOrder(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "minMaxPhraseLengthReverseOrder(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNullTitleSnippet(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNullTitleSnippet(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNestedPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNestedPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTwoPhrasesOneDocument(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTwoPhrasesOneDocument(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testGeneralizedPhraseWithSingleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testGeneralizedPhraseWithSingleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComposition(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComposition(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSubphrasesAcrossFields(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSubphrasesAcrossFields(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSinglePhrase(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSinglePhrase(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDfThreshold(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDfThreshold(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSubphrasesOneField(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSubphrasesOneField(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testGeneralizedPhraseWithMultipleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testGeneralizedPhraseWithMultipleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTwoExtendedPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTwoExtendedPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMaxPhraseLength(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMaxPhraseLength(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "tfByDocumentAndTfSanity(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "tfByDocumentAndTfSanity(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testGeneralizedPhraseFrequencyAggregation(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testGeneralizedPhraseFrequencyAggregation(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOverlappingGeneralizedPhrase(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOverlappingGeneralizedPhrase(org.carrot2.text.preprocessing.PhraseExtractorTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497529982,
  "executionTime": 109,
  "description": {
    "displayName": "org.carrot2.matrix.MatrixUtilsTest",
    "className": "org.carrot2.matrix.MatrixUtilsTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testMaxSparseness(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testMaxSparseness",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNormalizeColumnsL2(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testNormalizeColumnsL2",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMaxInColumns(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testMaxInColumns",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "sortedRowsView(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "sortedRowsView",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNormalizeColumnsL1(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testNormalizeColumnsL1",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNormalizeColumnsL2Zeros(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testNormalizeColumnsL2Zeros",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "frobeniusNorm(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "frobeniusNorm",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSparseNormalizeColumnsL2Zeros(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testSparseNormalizeColumnsL2Zeros",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMinInColumns(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testMinInColumns",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSumRows(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testSumRows",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSparseNormalizeColumnsL2(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testSparseNormalizeColumnsL2",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testComputeOrthogonalityIdenticalColumns(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testComputeOrthogonalityIdenticalColumns",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNormalizeColumnsL1Zeros(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testNormalizeColumnsL1Zeros",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testComputeOrthogonalityOrthogonal(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testComputeOrthogonalityOrthogonal",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMaxInRow(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testMaxInRow",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMinSparseness(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testMinSparseness",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testMinSparseness(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testMinSparseness",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530086,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMaxInRow(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testMaxInRow",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530081,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComputeOrthogonalityOrthogonal(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testComputeOrthogonalityOrthogonal",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530078,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalizeColumnsL1Zeros(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testNormalizeColumnsL1Zeros",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530073,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComputeOrthogonalityIdenticalColumns(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testComputeOrthogonalityIdenticalColumns",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530068,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSparseNormalizeColumnsL2(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testSparseNormalizeColumnsL2",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530064,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSumRows(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testSumRows",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530060,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMinInColumns(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testMinInColumns",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530055,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSparseNormalizeColumnsL2Zeros(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testSparseNormalizeColumnsL2Zeros",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530049,
      "executionTime": 6,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "frobeniusNorm(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "frobeniusNorm",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530042,
      "executionTime": 7,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalizeColumnsL2Zeros(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testNormalizeColumnsL2Zeros",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530031,
      "executionTime": 10,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalizeColumnsL1(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testNormalizeColumnsL1",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530026,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "sortedRowsView(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "sortedRowsView",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530017,
      "executionTime": 8,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMaxInColumns(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testMaxInColumns",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529997,
      "executionTime": 20,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalizeColumnsL2(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testNormalizeColumnsL2",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529992,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMaxSparseness(org.carrot2.matrix.MatrixUtilsTest)",
        "methodName": "testMaxSparseness",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529983,
      "executionTime": 9,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testMaxSparseness(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMaxSparseness(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalizeColumnsL2(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalizeColumnsL2(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMaxInColumns(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMaxInColumns(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "sortedRowsView(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "sortedRowsView(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalizeColumnsL1(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalizeColumnsL1(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalizeColumnsL2Zeros(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalizeColumnsL2Zeros(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "frobeniusNorm(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "frobeniusNorm(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSparseNormalizeColumnsL2Zeros(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSparseNormalizeColumnsL2Zeros(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMinInColumns(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMinInColumns(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSumRows(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSumRows(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSparseNormalizeColumnsL2(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSparseNormalizeColumnsL2(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComputeOrthogonalityIdenticalColumns(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComputeOrthogonalityIdenticalColumns(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalizeColumnsL1Zeros(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalizeColumnsL1Zeros(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComputeOrthogonalityOrthogonal(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComputeOrthogonalityOrthogonal(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMaxInRow(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMaxInRow(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMinSparseness(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMinSparseness(org.carrot2.matrix.MatrixUtilsTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497530094,
  "executionTime": 37,
  "description": {
    "displayName": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
    "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testMaxBound(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
        "methodName": "testMaxBound",
        "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOtherAssignableTypes(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
        "methodName": "testOtherAssignableTypes",
        "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testWithinRange(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
        "methodName": "testWithinRange",
        "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testGreaterThanMax(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
        "methodName": "testGreaterThanMax",
        "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLessThanMin(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
        "methodName": "testLessThanMin",
        "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMinBound(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
        "methodName": "testMinBound",
        "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
        "methodName": "testInvalidType",
        "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNull(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
        "methodName": "testNull",
        "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testNull(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
        "methodName": "testNull",
        "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530127,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
        "methodName": "testInvalidType",
        "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530122,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMinBound(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
        "methodName": "testMinBound",
        "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530118,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLessThanMin(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
        "methodName": "testLessThanMin",
        "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530115,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testGreaterThanMax(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
        "methodName": "testGreaterThanMax",
        "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530110,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testWithinRange(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
        "methodName": "testWithinRange",
        "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530107,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOtherAssignableTypes(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
        "methodName": "testOtherAssignableTypes",
        "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530102,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMaxBound(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
        "methodName": "testMaxBound",
        "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530095,
      "executionTime": 7,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testMaxBound(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMaxBound(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOtherAssignableTypes(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOtherAssignableTypes(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testWithinRange(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testWithinRange(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testGreaterThanMax(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testGreaterThanMax(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLessThanMin(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLessThanMin(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMinBound(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMinBound(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInvalidType(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInvalidType(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNull(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNull(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497530133,
  "executionTime": 12,
  "description": {
    "displayName": "org.carrot2.util.RollingWindowAverageTest",
    "className": "org.carrot2.util.RollingWindowAverageTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testRollingAverage(org.carrot2.util.RollingWindowAverageTest)",
        "methodName": "testRollingAverage",
        "className": "org.carrot2.util.RollingWindowAverageTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testBucketsNumber(org.carrot2.util.RollingWindowAverageTest)",
        "methodName": "testBucketsNumber",
        "className": "org.carrot2.util.RollingWindowAverageTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmpty(org.carrot2.util.RollingWindowAverageTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.util.RollingWindowAverageTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.util.RollingWindowAverageTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.util.RollingWindowAverageTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530142,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testBucketsNumber(org.carrot2.util.RollingWindowAverageTest)",
        "methodName": "testBucketsNumber",
        "className": "org.carrot2.util.RollingWindowAverageTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530139,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRollingAverage(org.carrot2.util.RollingWindowAverageTest)",
        "methodName": "testRollingAverage",
        "className": "org.carrot2.util.RollingWindowAverageTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530134,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testRollingAverage(org.carrot2.util.RollingWindowAverageTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRollingAverage(org.carrot2.util.RollingWindowAverageTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testBucketsNumber(org.carrot2.util.RollingWindowAverageTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testBucketsNumber(org.carrot2.util.RollingWindowAverageTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmpty(org.carrot2.util.RollingWindowAverageTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.util.RollingWindowAverageTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497528842,
  "executionTime": 642,
  "description": {
    "displayName": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
    "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testNullQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
        "methodName": "testNullQuery",
        "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testCaseInsensitivity(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
        "methodName": "testCaseInsensitivity",
        "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHtmlInSnippet(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
        "methodName": "testHtmlInSnippet",
        "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testUtf8Query(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
        "methodName": "testUtf8Query",
        "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDoubleQuotes(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
        "methodName": "testDoubleQuotes",
        "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSpecialCharactersQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
        "methodName": "testSpecialCharactersQuery",
        "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOneWordQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
        "methodName": "testOneWordQuery",
        "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSpacesInQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
        "methodName": "testSpacesInQuery",
        "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHtmlInQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
        "methodName": "testHtmlInQuery",
        "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMultiWordQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
        "methodName": "testMultiWordQuery",
        "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testMultiWordQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
        "methodName": "testMultiWordQuery",
        "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529481,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHtmlInQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
        "methodName": "testHtmlInQuery",
        "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529476,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSpacesInQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
        "methodName": "testSpacesInQuery",
        "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529472,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOneWordQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
        "methodName": "testOneWordQuery",
        "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529467,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSpecialCharactersQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
        "methodName": "testSpecialCharactersQuery",
        "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529462,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDoubleQuotes(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
        "methodName": "testDoubleQuotes",
        "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529458,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUtf8Query(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
        "methodName": "testUtf8Query",
        "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529454,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHtmlInSnippet(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
        "methodName": "testHtmlInSnippet",
        "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529450,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCaseInsensitivity(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
        "methodName": "testCaseInsensitivity",
        "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528849,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNullQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
        "methodName": "testNullQuery",
        "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528843,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testNullQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNullQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCaseInsensitivity(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCaseInsensitivity(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHtmlInSnippet(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHtmlInSnippet(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testUtf8Query(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUtf8Query(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDoubleQuotes(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDoubleQuotes(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSpecialCharactersQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSpecialCharactersQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOneWordQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOneWordQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSpacesInQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSpacesInQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHtmlInQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHtmlInQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMultiWordQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMultiWordQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497529491,
  "executionTime": 806,
  "description": {
    "displayName": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
    "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testLong(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testLong",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMixedTypeList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testMixedTypeList",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testFloat(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testFloat",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testFileResource(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testFileResource",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testArrayList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testArrayList",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testChar(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testChar",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSubList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testSubList",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testByte(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testByte",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSimpleXmlAnnotatedClass(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testSimpleXmlAnnotatedClass",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLinkedList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testLinkedList",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEnum(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testEnum",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHashMapWithList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testHashMapWithList",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNull(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testNull",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testString(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testString",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testClassWithWrapperStrictMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testClassWithWrapperStrictMatched",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testClass(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testClass",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHashMap(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testHashMap",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDouble(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testDouble",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTreeMap(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testTreeMap",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNestedMaps(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testNestedMaps",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testClassWithWrapperNotStrictMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testClassWithWrapperNotStrictMatched",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNestedList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testNestedList",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testShort(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testShort",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInt(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testInt",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testValueWithDefaultStringType(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testValueWithDefaultStringType",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testBoolean(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testBoolean",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNonprimitiveClassWithDefaultConstructor(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testNonprimitiveClassWithDefaultConstructor",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testClassWithWrapperStrictNotMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testClassWithWrapperStrictNotMatched",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testClassWithWrapperStrictNotMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testClassWithWrapperStrictNotMatched",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530292,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNonprimitiveClassWithDefaultConstructor(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testNonprimitiveClassWithDefaultConstructor",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530276,
      "executionTime": 16,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testBoolean(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testBoolean",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530253,
      "executionTime": 23,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testValueWithDefaultStringType(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testValueWithDefaultStringType",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530246,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInt(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testInt",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530210,
      "executionTime": 33,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testShort(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testShort",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530178,
      "executionTime": 32,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNestedList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testNestedList",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530151,
      "executionTime": 26,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testClassWithWrapperNotStrictMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testClassWithWrapperNotStrictMatched",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530093,
      "executionTime": 58,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNestedMaps(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testNestedMaps",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530067,
      "executionTime": 25,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTreeMap(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testTreeMap",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530045,
      "executionTime": 22,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDouble(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testDouble",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530014,
      "executionTime": 31,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHashMap(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testHashMap",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529992,
      "executionTime": 22,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testClass(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testClass",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529971,
      "executionTime": 21,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testClassWithWrapperStrictMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testClassWithWrapperStrictMatched",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529922,
      "executionTime": 49,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testString(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testString",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529909,
      "executionTime": 13,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNull(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testNull",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529898,
      "executionTime": 10,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHashMapWithList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testHashMapWithList",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529872,
      "executionTime": 26,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEnum(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testEnum",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529793,
      "executionTime": 78,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLinkedList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testLinkedList",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529773,
      "executionTime": 20,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSimpleXmlAnnotatedClass(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testSimpleXmlAnnotatedClass",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529722,
      "executionTime": 51,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testByte(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testByte",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529695,
      "executionTime": 27,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSubList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testSubList",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529676,
      "executionTime": 18,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testChar(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testChar",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529657,
      "executionTime": 19,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testArrayList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testArrayList",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529635,
      "executionTime": 22,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFileResource(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testFileResource",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529615,
      "executionTime": 20,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFloat(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testFloat",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529581,
      "executionTime": 33,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMixedTypeList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testMixedTypeList",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529551,
      "executionTime": 29,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLong(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
        "methodName": "testLong",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529493,
      "executionTime": 58,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testLong(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLong(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMixedTypeList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMixedTypeList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testFloat(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFloat(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testFileResource(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFileResource(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testArrayList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testArrayList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testChar(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testChar(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSubList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSubList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testByte(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testByte(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSimpleXmlAnnotatedClass(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSimpleXmlAnnotatedClass(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLinkedList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLinkedList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEnum(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEnum(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHashMapWithList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHashMapWithList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNull(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNull(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testString(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testString(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testClassWithWrapperStrictMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testClassWithWrapperStrictMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testClass(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testClass(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHashMap(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHashMap(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDouble(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDouble(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTreeMap(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTreeMap(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNestedMaps(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNestedMaps(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testClassWithWrapperNotStrictMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testClassWithWrapperNotStrictMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNestedList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNestedList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testShort(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testShort(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInt(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInt(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testValueWithDefaultStringType(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testValueWithDefaultStringType(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testBoolean(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testBoolean(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNonprimitiveClassWithDefaultConstructor(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNonprimitiveClassWithDefaultConstructor(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testClassWithWrapperStrictNotMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testClassWithWrapperStrictNotMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497530306,
  "executionTime": 15,
  "description": {
    "displayName": "org.carrot2.source.etools.EToolsDocumentSourceTest",
    "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "org.carrot2.util.tests.UsesExternalServices": {}
      }
    ],
    "children": [
      {
        "displayName": "testLargeQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testLargeQuery",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoResultsQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testNoResultsQuery",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testURLsUnique(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testURLsUnique",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testResultsTotal(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testResultsTotal",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMetadataAvailable(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInCachingController(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testInCachingController",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testGzipCompression(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testGzipCompression",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDataSources(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testDataSources",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDataSourceResultsCount(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testDataSourceResultsCount",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHtmlUnescaping(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testHtmlUnescaping",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSmallQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testSmallQuery",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testUtfCharacters(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testUtfCharacters",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testUtfCharacters(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testUtfCharacters",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530320,
      "executionTime": 1,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSmallQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testSmallQuery",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530320,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHtmlUnescaping(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testHtmlUnescaping",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530320,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDataSourceResultsCount(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testDataSourceResultsCount",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530319,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDataSources(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testDataSources",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530319,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testGzipCompression(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testGzipCompression",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530319,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInCachingController(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testInCachingController",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530317,
      "executionTime": 1,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMetadataAvailable(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530314,
      "executionTime": 3,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testResultsTotal(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testResultsTotal",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530312,
      "executionTime": 1,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testURLsUnique(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testURLsUnique",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530310,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoResultsQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testNoResultsQuery",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530309,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLargeQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)",
        "methodName": "testLargeQuery",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530308,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testLargeQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLargeQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoResultsQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoResultsQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testURLsUnique(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testURLsUnique(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testResultsTotal(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testResultsTotal(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInCachingController(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInCachingController(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testGzipCompression(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testGzipCompression(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDataSources(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDataSources(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDataSourceResultsCount(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDataSourceResultsCount(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHtmlUnescaping(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHtmlUnescaping(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSmallQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSmallQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testUtfCharacters(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUtfCharacters(org.carrot2.source.etools.EToolsDocumentSourceTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497530324,
  "executionTime": 104,
  "description": {
    "displayName": "org.carrot2.text.preprocessing.LabelFormatterTest",
    "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testPhraseWithLowerCaseWords(org.carrot2.text.preprocessing.LabelFormatterTest)",
        "methodName": "testPhraseWithLowerCaseWords",
        "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSingleStopWord(org.carrot2.text.preprocessing.LabelFormatterTest)",
        "methodName": "testSingleStopWord",
        "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSingleWordCapitalized(org.carrot2.text.preprocessing.LabelFormatterTest)",
        "methodName": "testSingleWordCapitalized",
        "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testChinesePhrases(org.carrot2.text.preprocessing.LabelFormatterTest)",
        "methodName": "testChinesePhrases",
        "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPhraseWithCapitalizedWords(org.carrot2.text.preprocessing.LabelFormatterTest)",
        "methodName": "testPhraseWithCapitalizedWords",
        "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPhraseWithStopWords(org.carrot2.text.preprocessing.LabelFormatterTest)",
        "methodName": "testPhraseWithStopWords",
        "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSingleWordNotCapitalized(org.carrot2.text.preprocessing.LabelFormatterTest)",
        "methodName": "testSingleWordNotCapitalized",
        "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPhraseWithoutStopWords(org.carrot2.text.preprocessing.LabelFormatterTest)",
        "methodName": "testPhraseWithoutStopWords",
        "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testPhraseWithoutStopWords(org.carrot2.text.preprocessing.LabelFormatterTest)",
        "methodName": "testPhraseWithoutStopWords",
        "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530421,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSingleWordNotCapitalized(org.carrot2.text.preprocessing.LabelFormatterTest)",
        "methodName": "testSingleWordNotCapitalized",
        "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530409,
      "executionTime": 12,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPhraseWithStopWords(org.carrot2.text.preprocessing.LabelFormatterTest)",
        "methodName": "testPhraseWithStopWords",
        "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530401,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPhraseWithCapitalizedWords(org.carrot2.text.preprocessing.LabelFormatterTest)",
        "methodName": "testPhraseWithCapitalizedWords",
        "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530394,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testChinesePhrases(org.carrot2.text.preprocessing.LabelFormatterTest)",
        "methodName": "testChinesePhrases",
        "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530388,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSingleWordCapitalized(org.carrot2.text.preprocessing.LabelFormatterTest)",
        "methodName": "testSingleWordCapitalized",
        "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530343,
      "executionTime": 24,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSingleStopWord(org.carrot2.text.preprocessing.LabelFormatterTest)",
        "methodName": "testSingleStopWord",
        "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530337,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPhraseWithLowerCaseWords(org.carrot2.text.preprocessing.LabelFormatterTest)",
        "methodName": "testPhraseWithLowerCaseWords",
        "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530329,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testPhraseWithLowerCaseWords(org.carrot2.text.preprocessing.LabelFormatterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPhraseWithLowerCaseWords(org.carrot2.text.preprocessing.LabelFormatterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSingleStopWord(org.carrot2.text.preprocessing.LabelFormatterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSingleStopWord(org.carrot2.text.preprocessing.LabelFormatterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSingleWordCapitalized(org.carrot2.text.preprocessing.LabelFormatterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSingleWordCapitalized(org.carrot2.text.preprocessing.LabelFormatterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testChinesePhrases(org.carrot2.text.preprocessing.LabelFormatterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testChinesePhrases(org.carrot2.text.preprocessing.LabelFormatterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPhraseWithCapitalizedWords(org.carrot2.text.preprocessing.LabelFormatterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPhraseWithCapitalizedWords(org.carrot2.text.preprocessing.LabelFormatterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPhraseWithStopWords(org.carrot2.text.preprocessing.LabelFormatterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPhraseWithStopWords(org.carrot2.text.preprocessing.LabelFormatterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSingleWordNotCapitalized(org.carrot2.text.preprocessing.LabelFormatterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSingleWordNotCapitalized(org.carrot2.text.preprocessing.LabelFormatterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPhraseWithoutStopWords(org.carrot2.text.preprocessing.LabelFormatterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPhraseWithoutStopWords(org.carrot2.text.preprocessing.LabelFormatterTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497530431,
  "executionTime": 32,
  "description": {
    "displayName": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest",
    "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)",
        "methodName": "testNonStopWords",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)",
        "methodName": "testStopWords",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStopWordsInPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)",
        "methodName": "testStopWordsInPhrases",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testStopWordsInPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)",
        "methodName": "testStopWordsInPhrases",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530454,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)",
        "methodName": "testStopWords",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530447,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)",
        "methodName": "testNonStopWords",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530438,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530431,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStopWordsInPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStopWordsInPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497530466,
  "executionTime": 171,
  "description": {
    "displayName": "org.carrot2.clustering.lingo.ClusterDocumentAssignerTest",
    "className": "org.carrot2.clustering.lingo.ClusterDocumentAssignerTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testEmpty(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.clustering.lingo.ClusterDocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoPhrases(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)",
        "methodName": "testNoPhrases",
        "className": "org.carrot2.clustering.lingo.ClusterDocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSinglePhraseSingleWords(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)",
        "methodName": "testSinglePhraseSingleWords",
        "className": "org.carrot2.clustering.lingo.ClusterDocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSinglePhraseNoSingleWords(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)",
        "methodName": "testSinglePhraseNoSingleWords",
        "className": "org.carrot2.clustering.lingo.ClusterDocumentAssignerTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testSinglePhraseNoSingleWords(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)",
        "methodName": "testSinglePhraseNoSingleWords",
        "className": "org.carrot2.clustering.lingo.ClusterDocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530632,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSinglePhraseSingleWords(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)",
        "methodName": "testSinglePhraseSingleWords",
        "className": "org.carrot2.clustering.lingo.ClusterDocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530625,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoPhrases(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)",
        "methodName": "testNoPhrases",
        "className": "org.carrot2.clustering.lingo.ClusterDocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530602,
      "executionTime": 23,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.clustering.lingo.ClusterDocumentAssignerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530505,
      "executionTime": 97,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testEmpty(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoPhrases(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoPhrases(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSinglePhraseSingleWords(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSinglePhraseSingleWords(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSinglePhraseNoSingleWords(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSinglePhraseNoSingleWords(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497530639,
  "executionTime": 41,
  "description": {
    "displayName": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
    "className": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testInvalidStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
        "methodName": "testInvalidStrictType",
        "className": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNull(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
        "methodName": "testNull",
        "className": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
        "methodName": "testInvalidType",
        "className": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testValidNonStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
        "methodName": "testValidNonStrictType",
        "className": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInvalidNonStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
        "methodName": "testInvalidNonStrictType",
        "className": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testValidStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
        "methodName": "testValidStrictType",
        "className": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testValidStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
        "methodName": "testValidStrictType",
        "className": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530674,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInvalidNonStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
        "methodName": "testInvalidNonStrictType",
        "className": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530671,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testValidNonStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
        "methodName": "testValidNonStrictType",
        "className": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530667,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
        "methodName": "testInvalidType",
        "className": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530663,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNull(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
        "methodName": "testNull",
        "className": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530658,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInvalidStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
        "methodName": "testInvalidStrictType",
        "className": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530646,
      "executionTime": 12,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testInvalidStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInvalidStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNull(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNull(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInvalidType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInvalidType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testValidNonStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testValidNonStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInvalidNonStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInvalidNonStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testValidStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testValidStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497530685,
  "executionTime": 169,
  "description": {
    "displayName": "org.carrot2.util.IndirectSorterTest",
    "className": "org.carrot2.util.IndirectSorterTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testIntLargerArray(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testIntLargerArray",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testIntEmpty(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testIntEmpty",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testObjectRepeatedElements(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testObjectRepeatedElements",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testIntReversed(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testIntReversed",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDoubleRepeatedElements(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testDoubleRepeatedElements",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testIntRepeatedElements(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testIntRepeatedElements",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDoubleUnsorted(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testDoubleUnsorted",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testIntSingleElement(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testIntSingleElement",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testObjectEmpty(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testObjectEmpty",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDoubleSorted(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testDoubleSorted",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testObjectReversed(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testObjectReversed",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testObjectLargerArray(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testObjectLargerArray",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testObjectSorted(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testObjectSorted",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDoubleEmpty(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testDoubleEmpty",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDoubleSingleElement(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testDoubleSingleElement",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testFloatReversed(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testFloatReversed",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testIntSorted(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testIntSorted",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testObjectUnsorted(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testObjectUnsorted",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testIntUnsorted(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testIntUnsorted",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDoubleLargerArray(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testDoubleLargerArray",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDoubleReversed(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testDoubleReversed",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testShortReversed(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testShortReversed",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testObjectSingleElement(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testObjectSingleElement",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testObjectSingleElement(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testObjectSingleElement",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530850,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testShortReversed(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testShortReversed",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530846,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDoubleReversed(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testDoubleReversed",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530840,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDoubleLargerArray(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testDoubleLargerArray",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530836,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testIntUnsorted(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testIntUnsorted",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530832,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testObjectUnsorted(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testObjectUnsorted",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530827,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testIntSorted(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testIntSorted",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530823,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFloatReversed(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testFloatReversed",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530818,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDoubleSingleElement(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testDoubleSingleElement",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530814,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDoubleEmpty(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testDoubleEmpty",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530808,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testObjectSorted(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testObjectSorted",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530805,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testObjectLargerArray(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testObjectLargerArray",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530795,
      "executionTime": 9,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testObjectReversed(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testObjectReversed",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530791,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDoubleSorted(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testDoubleSorted",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530788,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testObjectEmpty(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testObjectEmpty",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530779,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testIntSingleElement(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testIntSingleElement",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530775,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDoubleUnsorted(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testDoubleUnsorted",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530768,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testIntRepeatedElements(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testIntRepeatedElements",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530762,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDoubleRepeatedElements(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testDoubleRepeatedElements",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530748,
      "executionTime": 13,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testIntReversed(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testIntReversed",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530712,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testObjectRepeatedElements(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testObjectRepeatedElements",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530707,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testIntEmpty(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testIntEmpty",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530693,
      "executionTime": 13,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testIntLargerArray(org.carrot2.util.IndirectSorterTest)",
        "methodName": "testIntLargerArray",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530687,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testIntLargerArray(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIntLargerArray(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testIntEmpty(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIntEmpty(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testObjectRepeatedElements(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testObjectRepeatedElements(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testIntReversed(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIntReversed(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDoubleRepeatedElements(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDoubleRepeatedElements(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testIntRepeatedElements(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIntRepeatedElements(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDoubleUnsorted(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDoubleUnsorted(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testIntSingleElement(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIntSingleElement(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testObjectEmpty(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testObjectEmpty(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDoubleSorted(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDoubleSorted(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testObjectReversed(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testObjectReversed(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testObjectLargerArray(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testObjectLargerArray(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testObjectSorted(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testObjectSorted(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDoubleEmpty(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDoubleEmpty(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDoubleSingleElement(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDoubleSingleElement(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testFloatReversed(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFloatReversed(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testIntSorted(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIntSorted(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testObjectUnsorted(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testObjectUnsorted(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testIntUnsorted(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIntUnsorted(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDoubleLargerArray(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDoubleLargerArray(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDoubleReversed(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDoubleReversed(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testShortReversed(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testShortReversed(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testObjectSingleElement(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testObjectSingleElement(org.carrot2.util.IndirectSorterTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497529736,
  "executionTime": 1662,
  "description": {
    "displayName": "org.carrot2.dcs.DcsAppTest",
    "className": "org.carrot2.dcs.DcsAppTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
          "stackSamples": 10,
          "linger": 1000,
          "leakedThreadsBelongToSuite": true,
          "failTestIfLeaking": true
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Nightly": {
          "value": ""
        }
      }
    ],
    "children": [
      {
        "displayName": "testJsonCallback(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testJsonCallback",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPostUrlEncodedWithExternalSource(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testPostUrlEncodedWithExternalSource",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testGetWithExternalSource(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testGetWithExternalSource",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDcsConfigLocation(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testDcsConfigLocation",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testParametersPage(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testParametersPage",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPostUrlEncodedWithC2Stream(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testPostUrlEncodedWithC2Stream",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "directFeedAttributeOverriding(org.carrot2.dcs.DcsAppTest)",
        "methodName": "directFeedAttributeOverriding",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPostWithVariousC2StreamXmlEncoding(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testPostWithVariousC2StreamXmlEncoding",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testJsonOutput(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testJsonOutput",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTextarea(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testTextarea",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStartPage(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testStartPage",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testExternalSource(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testExternalSource",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOutputPage(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testOutputPage",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testFileUpload(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testFileUpload",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInputPage(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testInputPage",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOnlyClusters(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testOnlyClusters",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testOnlyClusters(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testOnlyClusters",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531220,
      "executionTime": 1,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInputPage(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testInputPage",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531220,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFileUpload(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testFileUpload",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531219,
      "executionTime": 1,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOutputPage(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testOutputPage",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531219,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExternalSource(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testExternalSource",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531217,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStartPage(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testStartPage",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531215,
      "executionTime": 1,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTextarea(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testTextarea",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531213,
      "executionTime": 1,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testJsonOutput(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testJsonOutput",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531207,
      "executionTime": 4,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPostWithVariousC2StreamXmlEncoding(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testPostWithVariousC2StreamXmlEncoding",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531205,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "directFeedAttributeOverriding(org.carrot2.dcs.DcsAppTest)",
        "methodName": "directFeedAttributeOverriding",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531205,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPostUrlEncodedWithC2Stream(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testPostUrlEncodedWithC2Stream",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531204,
      "executionTime": 1,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testParametersPage(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testParametersPage",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531203,
      "executionTime": 1,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDcsConfigLocation(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testDcsConfigLocation",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531191,
      "executionTime": 10,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testGetWithExternalSource(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testGetWithExternalSource",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531125,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPostUrlEncodedWithExternalSource(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testPostUrlEncodedWithExternalSource",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531123,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testJsonCallback(org.carrot2.dcs.DcsAppTest)",
        "methodName": "testJsonCallback",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531121,
      "executionTime": 2,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "out": "2012-01-02 10:45:29,794 INFO  dcs: Starting DCS...\r\n2012-01-02 10:45:31,032 INFO  dcs: DCS started on port: 57913\r\n"
    },
    {
      "test": "testJsonCallback(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testJsonCallback(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPostUrlEncodedWithExternalSource(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPostUrlEncodedWithExternalSource(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testGetWithExternalSource(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testGetWithExternalSource(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDcsConfigLocation(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDcsConfigLocation(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testParametersPage(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testParametersPage(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPostUrlEncodedWithC2Stream(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPostUrlEncodedWithC2Stream(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "directFeedAttributeOverriding(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "directFeedAttributeOverriding(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPostWithVariousC2StreamXmlEncoding(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPostWithVariousC2StreamXmlEncoding(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testJsonOutput(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testJsonOutput(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTextarea(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTextarea(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStartPage(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStartPage(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExternalSource(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExternalSource(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOutputPage(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOutputPage(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testFileUpload(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFileUpload(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInputPage(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInputPage(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOnlyClusters(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOnlyClusters(org.carrot2.dcs.DcsAppTest)",
      "event": "TEST_FINISHED"
    },
    {
      "out": "2012-01-02 10:45:31,380 INFO  dcs: DCS stopped.\r\n"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497531477,
  "executionTime": 93,
  "description": {
    "displayName": "org.carrot2.util.resource.ResourceLookupTest",
    "className": "org.carrot2.util.resource.ResourceLookupTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testHashCodeEqualsClassLocator(org.carrot2.util.resource.ResourceLookupTest)",
        "methodName": "testHashCodeEqualsClassLocator",
        "className": "org.carrot2.util.resource.ResourceLookupTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHashCodeEqualsContextClassLoaderLocator(org.carrot2.util.resource.ResourceLookupTest)",
        "methodName": "testHashCodeEqualsContextClassLoaderLocator",
        "className": "org.carrot2.util.resource.ResourceLookupTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHashCodeEqualsResourceLookup(org.carrot2.util.resource.ResourceLookupTest)",
        "methodName": "testHashCodeEqualsResourceLookup",
        "className": "org.carrot2.util.resource.ResourceLookupTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHashCodeEqualsDirLocator(org.carrot2.util.resource.ResourceLookupTest)",
        "methodName": "testHashCodeEqualsDirLocator",
        "className": "org.carrot2.util.resource.ResourceLookupTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHashCodeEqualsClassLoaderLocator(org.carrot2.util.resource.ResourceLookupTest)",
        "methodName": "testHashCodeEqualsClassLoaderLocator",
        "className": "org.carrot2.util.resource.ResourceLookupTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHashCodeEqualsPrefixDecorator(org.carrot2.util.resource.ResourceLookupTest)",
        "methodName": "testHashCodeEqualsPrefixDecorator",
        "className": "org.carrot2.util.resource.ResourceLookupTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testHashCodeEqualsPrefixDecorator(org.carrot2.util.resource.ResourceLookupTest)",
        "methodName": "testHashCodeEqualsPrefixDecorator",
        "className": "org.carrot2.util.resource.ResourceLookupTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531566,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHashCodeEqualsClassLoaderLocator(org.carrot2.util.resource.ResourceLookupTest)",
        "methodName": "testHashCodeEqualsClassLoaderLocator",
        "className": "org.carrot2.util.resource.ResourceLookupTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531561,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHashCodeEqualsDirLocator(org.carrot2.util.resource.ResourceLookupTest)",
        "methodName": "testHashCodeEqualsDirLocator",
        "className": "org.carrot2.util.resource.ResourceLookupTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531557,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHashCodeEqualsResourceLookup(org.carrot2.util.resource.ResourceLookupTest)",
        "methodName": "testHashCodeEqualsResourceLookup",
        "className": "org.carrot2.util.resource.ResourceLookupTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531553,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHashCodeEqualsContextClassLoaderLocator(org.carrot2.util.resource.ResourceLookupTest)",
        "methodName": "testHashCodeEqualsContextClassLoaderLocator",
        "className": "org.carrot2.util.resource.ResourceLookupTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531549,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHashCodeEqualsClassLocator(org.carrot2.util.resource.ResourceLookupTest)",
        "methodName": "testHashCodeEqualsClassLocator",
        "className": "org.carrot2.util.resource.ResourceLookupTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531494,
      "executionTime": 49,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testHashCodeEqualsClassLocator(org.carrot2.util.resource.ResourceLookupTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHashCodeEqualsClassLocator(org.carrot2.util.resource.ResourceLookupTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHashCodeEqualsContextClassLoaderLocator(org.carrot2.util.resource.ResourceLookupTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHashCodeEqualsContextClassLoaderLocator(org.carrot2.util.resource.ResourceLookupTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHashCodeEqualsResourceLookup(org.carrot2.util.resource.ResourceLookupTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHashCodeEqualsResourceLookup(org.carrot2.util.resource.ResourceLookupTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHashCodeEqualsDirLocator(org.carrot2.util.resource.ResourceLookupTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHashCodeEqualsDirLocator(org.carrot2.util.resource.ResourceLookupTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHashCodeEqualsClassLoaderLocator(org.carrot2.util.resource.ResourceLookupTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHashCodeEqualsClassLoaderLocator(org.carrot2.util.resource.ResourceLookupTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHashCodeEqualsPrefixDecorator(org.carrot2.util.resource.ResourceLookupTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHashCodeEqualsPrefixDecorator(org.carrot2.util.resource.ResourceLookupTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497531572,
  "executionTime": 14,
  "description": {
    "displayName": "org.carrot2.util.attribute.AttributeValueSetTest",
    "className": "org.carrot2.util.attribute.AttributeValueSetTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testOneLevelBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)",
        "methodName": "testOneLevelBaseAttributeValueSet",
        "className": "org.carrot2.util.attribute.AttributeValueSetTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMultiLevelBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)",
        "methodName": "testMultiLevelBaseAttributeValueSet",
        "className": "org.carrot2.util.attribute.AttributeValueSetTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNullBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)",
        "methodName": "testNullBaseAttributeValueSet",
        "className": "org.carrot2.util.attribute.AttributeValueSetTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testNullBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)",
        "methodName": "testNullBaseAttributeValueSet",
        "className": "org.carrot2.util.attribute.AttributeValueSetTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531583,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMultiLevelBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)",
        "methodName": "testMultiLevelBaseAttributeValueSet",
        "className": "org.carrot2.util.attribute.AttributeValueSetTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531579,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOneLevelBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)",
        "methodName": "testOneLevelBaseAttributeValueSet",
        "className": "org.carrot2.util.attribute.AttributeValueSetTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531573,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testOneLevelBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOneLevelBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMultiLevelBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMultiLevelBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNullBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNullBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497531586,
  "executionTime": 1,
  "description": {
    "displayName": "org.carrot2.source.google.GoogleDesktopDocumentSourceTest",
    "className": "org.carrot2.source.google.GoogleDesktopDocumentSourceTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "org.junit.Ignore": {
          "value": ""
        }
      }
    ],
    "children": []
  },
  "tests": [],
  "failures": [],
  "output": []
},

{
  "slave": 3,
  "startTimestamp": 1325497531589,
  "executionTime": 33,
  "description": {
    "displayName": "org.carrot2.text.preprocessing.TokenizerTest",
    "className": "org.carrot2.text.preprocessing.TokenizerTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testEmptyField(org.carrot2.text.preprocessing.TokenizerTest)",
        "methodName": "testEmptyField",
        "className": "org.carrot2.text.preprocessing.TokenizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoDocuments(org.carrot2.text.preprocessing.TokenizerTest)",
        "methodName": "testNoDocuments",
        "className": "org.carrot2.text.preprocessing.TokenizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmptyFirstField(org.carrot2.text.preprocessing.TokenizerTest)",
        "methodName": "testEmptyFirstField",
        "className": "org.carrot2.text.preprocessing.TokenizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmptyDocuments(org.carrot2.text.preprocessing.TokenizerTest)",
        "methodName": "testEmptyDocuments",
        "className": "org.carrot2.text.preprocessing.TokenizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMoreDocuments(org.carrot2.text.preprocessing.TokenizerTest)",
        "methodName": "testMoreDocuments",
        "className": "org.carrot2.text.preprocessing.TokenizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOneDocument(org.carrot2.text.preprocessing.TokenizerTest)",
        "methodName": "testOneDocument",
        "className": "org.carrot2.text.preprocessing.TokenizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSentenceSeparator(org.carrot2.text.preprocessing.TokenizerTest)",
        "methodName": "testSentenceSeparator",
        "className": "org.carrot2.text.preprocessing.TokenizerTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testSentenceSeparator(org.carrot2.text.preprocessing.TokenizerTest)",
        "methodName": "testSentenceSeparator",
        "className": "org.carrot2.text.preprocessing.TokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531618,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOneDocument(org.carrot2.text.preprocessing.TokenizerTest)",
        "methodName": "testOneDocument",
        "className": "org.carrot2.text.preprocessing.TokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531613,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMoreDocuments(org.carrot2.text.preprocessing.TokenizerTest)",
        "methodName": "testMoreDocuments",
        "className": "org.carrot2.text.preprocessing.TokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531608,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyDocuments(org.carrot2.text.preprocessing.TokenizerTest)",
        "methodName": "testEmptyDocuments",
        "className": "org.carrot2.text.preprocessing.TokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531605,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyFirstField(org.carrot2.text.preprocessing.TokenizerTest)",
        "methodName": "testEmptyFirstField",
        "className": "org.carrot2.text.preprocessing.TokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531601,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoDocuments(org.carrot2.text.preprocessing.TokenizerTest)",
        "methodName": "testNoDocuments",
        "className": "org.carrot2.text.preprocessing.TokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531597,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyField(org.carrot2.text.preprocessing.TokenizerTest)",
        "methodName": "testEmptyField",
        "className": "org.carrot2.text.preprocessing.TokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531590,
      "executionTime": 7,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testEmptyField(org.carrot2.text.preprocessing.TokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyField(org.carrot2.text.preprocessing.TokenizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoDocuments(org.carrot2.text.preprocessing.TokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoDocuments(org.carrot2.text.preprocessing.TokenizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyFirstField(org.carrot2.text.preprocessing.TokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyFirstField(org.carrot2.text.preprocessing.TokenizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyDocuments(org.carrot2.text.preprocessing.TokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyDocuments(org.carrot2.text.preprocessing.TokenizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMoreDocuments(org.carrot2.text.preprocessing.TokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMoreDocuments(org.carrot2.text.preprocessing.TokenizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOneDocument(org.carrot2.text.preprocessing.TokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOneDocument(org.carrot2.text.preprocessing.TokenizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSentenceSeparator(org.carrot2.text.preprocessing.TokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSentenceSeparator(org.carrot2.text.preprocessing.TokenizerTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497530859,
  "executionTime": 407,
  "description": {
    "displayName": "org.carrot2.source.google.GoogleDocumentSourceTest",
    "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
          "stackSamples": 10,
          "linger": 2000,
          "leakedThreadsBelongToSuite": false,
          "failTestIfLeaking": true
        }
      },
      {
        "org.carrot2.util.tests.UsesExternalServices": {}
      }
    ],
    "children": [
      {
        "displayName": "testHtmlUnescaping(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testHtmlUnescaping",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMetadataAvailable(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testResultsTotal(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testResultsTotal",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLargeQuery(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testLargeQuery",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testConservativeMode(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testConservativeMode",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testUtfCharacters(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testUtfCharacters",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSpeculativeMode(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testSpeculativeMode",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testURLsUnique(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testURLsUnique",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoUrlEncodingInUrls(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testNoUrlEncodingInUrls",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSmallQuery(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testSmallQuery",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHighlightsRemoved(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testHighlightsRemoved",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testQueryLargerThanPage(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testQueryLargerThanPage",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoResultsQuery(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testNoResultsQuery",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInCachingController(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testInCachingController",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testInCachingController(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testInCachingController",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531266,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoResultsQuery(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testNoResultsQuery",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531265,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testQueryLargerThanPage(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testQueryLargerThanPage",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531265,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHighlightsRemoved(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testHighlightsRemoved",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531265,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSmallQuery(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testSmallQuery",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531264,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoUrlEncodingInUrls(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testNoUrlEncodingInUrls",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531264,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testURLsUnique(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testURLsUnique",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531263,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSpeculativeMode(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testSpeculativeMode",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531262,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUtfCharacters(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testUtfCharacters",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531262,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testConservativeMode(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testConservativeMode",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531262,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLargeQuery(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testLargeQuery",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531261,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testResultsTotal(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testResultsTotal",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531258,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMetadataAvailable(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531258,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHtmlUnescaping(org.carrot2.source.google.GoogleDocumentSourceTest)",
        "methodName": "testHtmlUnescaping",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530861,
      "executionTime": 1,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testHtmlUnescaping(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHtmlUnescaping(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testResultsTotal(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testResultsTotal(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLargeQuery(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLargeQuery(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testConservativeMode(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testConservativeMode(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testUtfCharacters(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUtfCharacters(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSpeculativeMode(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSpeculativeMode(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testURLsUnique(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testURLsUnique(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoUrlEncodingInUrls(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoUrlEncodingInUrls(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSmallQuery(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSmallQuery(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHighlightsRemoved(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHighlightsRemoved(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testQueryLargerThanPage(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testQueryLargerThanPage(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoResultsQuery(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoResultsQuery(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInCachingController(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInCachingController(org.carrot2.source.google.GoogleDocumentSourceTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497531627,
  "executionTime": 28,
  "description": {
    "displayName": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
    "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "org.carrot2.util.tests.UsesExternalServices": {}
      }
    ],
    "children": [
      {
        "displayName": "testFileTypeOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testFileTypeOption",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSpeculativeMode(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testSpeculativeMode",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testResultsTotal(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testResultsTotal",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHtmlUnescaping(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testHtmlUnescaping",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSiteOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testSiteOption",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMetadataAvailable(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testUtfCharacters(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testUtfCharacters",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testConservativeMode(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testConservativeMode",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInCachingController(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testInCachingController",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testURLsUnique(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testURLsUnique",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLargeQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testLargeQuery",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoResultsQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testNoResultsQuery",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMarketOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testMarketOption",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSmallQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testSmallQuery",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testQueryLargerThanPage(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testQueryLargerThanPage",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testQueryLargerThanPage(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testQueryLargerThanPage",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531655,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSmallQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testSmallQuery",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531654,
      "executionTime": 1,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMarketOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testMarketOption",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531654,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoResultsQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testNoResultsQuery",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531654,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLargeQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testLargeQuery",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531653,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testURLsUnique(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testURLsUnique",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531653,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInCachingController(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testInCachingController",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531652,
      "executionTime": 1,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testConservativeMode(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testConservativeMode",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531652,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUtfCharacters(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testUtfCharacters",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531652,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMetadataAvailable(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531651,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSiteOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testSiteOption",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531650,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHtmlUnescaping(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testHtmlUnescaping",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531649,
      "executionTime": 1,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testResultsTotal(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testResultsTotal",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531649,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSpeculativeMode(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testSpeculativeMode",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531648,
      "executionTime": 1,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFileTypeOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
        "methodName": "testFileTypeOption",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531647,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testFileTypeOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFileTypeOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSpeculativeMode(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSpeculativeMode(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testResultsTotal(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testResultsTotal(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHtmlUnescaping(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHtmlUnescaping(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSiteOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSiteOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testUtfCharacters(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUtfCharacters(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testConservativeMode(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testConservativeMode(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInCachingController(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInCachingController(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testURLsUnique(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testURLsUnique(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLargeQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLargeQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoResultsQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoResultsQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMarketOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMarketOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSmallQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSmallQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testQueryLargerThanPage(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testQueryLargerThanPage(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497531268,
  "executionTime": 31,
  "description": {
    "displayName": "org.carrot2.util.attribute.constraint.ConstraintCreatorTest",
    "className": "org.carrot2.util.attribute.constraint.ConstraintCreatorTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testCreateSingleConstraint(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
        "methodName": "testCreateSingleConstraint",
        "className": "org.carrot2.util.attribute.constraint.ConstraintCreatorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testCreateMultipleConstraints(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
        "methodName": "testCreateMultipleConstraints",
        "className": "org.carrot2.util.attribute.constraint.ConstraintCreatorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testCreateImplementationException(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
        "methodName": "testCreateImplementationException",
        "className": "org.carrot2.util.attribute.constraint.ConstraintCreatorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testCreateImplementationSuccess(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
        "methodName": "testCreateImplementationSuccess",
        "className": "org.carrot2.util.attribute.constraint.ConstraintCreatorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testIsConstraintAnnotation(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
        "methodName": "testIsConstraintAnnotation",
        "className": "org.carrot2.util.attribute.constraint.ConstraintCreatorTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testIsConstraintAnnotation(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
        "methodName": "testIsConstraintAnnotation",
        "className": "org.carrot2.util.attribute.constraint.ConstraintCreatorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531295,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCreateImplementationSuccess(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
        "methodName": "testCreateImplementationSuccess",
        "className": "org.carrot2.util.attribute.constraint.ConstraintCreatorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531290,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCreateImplementationException(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
        "methodName": "testCreateImplementationException",
        "className": "org.carrot2.util.attribute.constraint.ConstraintCreatorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531285,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCreateMultipleConstraints(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
        "methodName": "testCreateMultipleConstraints",
        "className": "org.carrot2.util.attribute.constraint.ConstraintCreatorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531277,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCreateSingleConstraint(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
        "methodName": "testCreateSingleConstraint",
        "className": "org.carrot2.util.attribute.constraint.ConstraintCreatorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531269,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testCreateSingleConstraint(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCreateSingleConstraint(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCreateMultipleConstraints(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCreateMultipleConstraints(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCreateImplementationException(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCreateImplementationException(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCreateImplementationSuccess(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCreateImplementationSuccess(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testIsConstraintAnnotation(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIsConstraintAnnotation(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497531659,
  "executionTime": 44,
  "description": {
    "displayName": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
    "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testTermTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
        "methodName": "testTermTokens",
        "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNastyUrlTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
        "methodName": "testNastyUrlTokens",
        "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNumericTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
        "methodName": "testNumericTokens",
        "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testUrlTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
        "methodName": "testUrlTokens",
        "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "punctuationAndSentenceMarkers(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
        "methodName": "punctuationAndSentenceMarkers",
        "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSymbolTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
        "methodName": "testSymbolTokens",
        "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testKoreanWordSplit(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
        "methodName": "testKoreanWordSplit",
        "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmailTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
        "methodName": "testEmailTokens",
        "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testAcronymTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
        "methodName": "testAcronymTokens",
        "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testAcronymTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
        "methodName": "testAcronymTokens",
        "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531700,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmailTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
        "methodName": "testEmailTokens",
        "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531695,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testKoreanWordSplit(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
        "methodName": "testKoreanWordSplit",
        "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531690,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSymbolTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
        "methodName": "testSymbolTokens",
        "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531687,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "punctuationAndSentenceMarkers(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
        "methodName": "punctuationAndSentenceMarkers",
        "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531683,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUrlTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
        "methodName": "testUrlTokens",
        "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531680,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNumericTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
        "methodName": "testNumericTokens",
        "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531675,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNastyUrlTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
        "methodName": "testNastyUrlTokens",
        "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531671,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTermTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
        "methodName": "testTermTokens",
        "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531665,
      "executionTime": 6,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testTermTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTermTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNastyUrlTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNastyUrlTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNumericTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNumericTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testUrlTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUrlTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "punctuationAndSentenceMarkers(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "punctuationAndSentenceMarkers(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSymbolTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSymbolTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testKoreanWordSplit(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testKoreanWordSplit(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmailTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmailTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAcronymTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAcronymTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497531303,
  "executionTime": 254,
  "description": {
    "displayName": "org.carrot2.core.ClusterTest",
    "className": "org.carrot2.core.ClusterTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testByReversedSizeAndLabelComparator(org.carrot2.core.ClusterTest)",
        "methodName": "testByReversedSizeAndLabelComparator",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testByLabelComparator(org.carrot2.core.ClusterTest)",
        "methodName": "testByLabelComparator",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSubclusterIdentifiers(org.carrot2.core.ClusterTest)",
        "methodName": "testSubclusterIdentifiers",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoIdentifiers(org.carrot2.core.ClusterTest)",
        "methodName": "testNoIdentifiers",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testFindSubcluster(org.carrot2.core.ClusterTest)",
        "methodName": "testFindSubcluster",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testBuildOtherTopicsSomeAssigned(org.carrot2.core.ClusterTest)",
        "methodName": "testBuildOtherTopicsSomeAssigned",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testBySizeComparator(org.carrot2.core.ClusterTest)",
        "methodName": "testBySizeComparator",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSomeIdentifiers(org.carrot2.core.ClusterTest)",
        "methodName": "testSomeIdentifiers",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testAllDocumentsEmptyFlat(org.carrot2.core.ClusterTest)",
        "methodName": "testAllDocumentsEmptyFlat",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSizeNonEmptyHierarchicalWithoutOverlap(org.carrot2.core.ClusterTest)",
        "methodName": "testSizeNonEmptyHierarchicalWithoutOverlap",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testByReversedWeightedScoreAndSizeComparatorOnlySize(org.carrot2.core.ClusterTest)",
        "methodName": "testByReversedWeightedScoreAndSizeComparatorOnlySize",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testByReversedWeightedScoreAndSizeComparatorOnlyScore(org.carrot2.core.ClusterTest)",
        "methodName": "testByReversedWeightedScoreAndSizeComparatorOnlyScore",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testFindRootCluster(org.carrot2.core.ClusterTest)",
        "methodName": "testFindRootCluster",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSizeNonEmptyHierarchicalWithOverlap(org.carrot2.core.ClusterTest)",
        "methodName": "testSizeNonEmptyHierarchicalWithOverlap",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testAllDocumentsEmptyHierarchical(org.carrot2.core.ClusterTest)",
        "methodName": "testAllDocumentsEmptyHierarchical",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testBuildOtherTopicsAllAssigned(org.carrot2.core.ClusterTest)",
        "methodName": "testBuildOtherTopicsAllAssigned",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testFindNotFound(org.carrot2.core.ClusterTest)",
        "methodName": "testFindNotFound",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSizeNonEmptyFlat(org.carrot2.core.ClusterTest)",
        "methodName": "testSizeNonEmptyFlat",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testBuildOtherTopicsNonAssigned(org.carrot2.core.ClusterTest)",
        "methodName": "testBuildOtherTopicsNonAssigned",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNonUniqueIdentifiers(org.carrot2.core.ClusterTest)",
        "methodName": "testNonUniqueIdentifiers",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testNonUniqueIdentifiers(org.carrot2.core.ClusterTest)",
        "methodName": "testNonUniqueIdentifiers",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531554,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testBuildOtherTopicsNonAssigned(org.carrot2.core.ClusterTest)",
        "methodName": "testBuildOtherTopicsNonAssigned",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531543,
      "executionTime": 9,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSizeNonEmptyFlat(org.carrot2.core.ClusterTest)",
        "methodName": "testSizeNonEmptyFlat",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531534,
      "executionTime": 9,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFindNotFound(org.carrot2.core.ClusterTest)",
        "methodName": "testFindNotFound",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531491,
      "executionTime": 24,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testBuildOtherTopicsAllAssigned(org.carrot2.core.ClusterTest)",
        "methodName": "testBuildOtherTopicsAllAssigned",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531370,
      "executionTime": 17,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAllDocumentsEmptyHierarchical(org.carrot2.core.ClusterTest)",
        "methodName": "testAllDocumentsEmptyHierarchical",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531365,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSizeNonEmptyHierarchicalWithOverlap(org.carrot2.core.ClusterTest)",
        "methodName": "testSizeNonEmptyHierarchicalWithOverlap",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531360,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFindRootCluster(org.carrot2.core.ClusterTest)",
        "methodName": "testFindRootCluster",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531356,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testByReversedWeightedScoreAndSizeComparatorOnlyScore(org.carrot2.core.ClusterTest)",
        "methodName": "testByReversedWeightedScoreAndSizeComparatorOnlyScore",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531352,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testByReversedWeightedScoreAndSizeComparatorOnlySize(org.carrot2.core.ClusterTest)",
        "methodName": "testByReversedWeightedScoreAndSizeComparatorOnlySize",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531347,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSizeNonEmptyHierarchicalWithoutOverlap(org.carrot2.core.ClusterTest)",
        "methodName": "testSizeNonEmptyHierarchicalWithoutOverlap",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531342,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAllDocumentsEmptyFlat(org.carrot2.core.ClusterTest)",
        "methodName": "testAllDocumentsEmptyFlat",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531339,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSomeIdentifiers(org.carrot2.core.ClusterTest)",
        "methodName": "testSomeIdentifiers",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531335,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testBySizeComparator(org.carrot2.core.ClusterTest)",
        "methodName": "testBySizeComparator",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531331,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testBuildOtherTopicsSomeAssigned(org.carrot2.core.ClusterTest)",
        "methodName": "testBuildOtherTopicsSomeAssigned",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531327,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFindSubcluster(org.carrot2.core.ClusterTest)",
        "methodName": "testFindSubcluster",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531323,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoIdentifiers(org.carrot2.core.ClusterTest)",
        "methodName": "testNoIdentifiers",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531319,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSubclusterIdentifiers(org.carrot2.core.ClusterTest)",
        "methodName": "testSubclusterIdentifiers",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531315,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testByLabelComparator(org.carrot2.core.ClusterTest)",
        "methodName": "testByLabelComparator",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531311,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testByReversedSizeAndLabelComparator(org.carrot2.core.ClusterTest)",
        "methodName": "testByReversedSizeAndLabelComparator",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531305,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testByReversedSizeAndLabelComparator(org.carrot2.core.ClusterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testByReversedSizeAndLabelComparator(org.carrot2.core.ClusterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testByLabelComparator(org.carrot2.core.ClusterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testByLabelComparator(org.carrot2.core.ClusterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSubclusterIdentifiers(org.carrot2.core.ClusterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSubclusterIdentifiers(org.carrot2.core.ClusterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoIdentifiers(org.carrot2.core.ClusterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoIdentifiers(org.carrot2.core.ClusterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testFindSubcluster(org.carrot2.core.ClusterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFindSubcluster(org.carrot2.core.ClusterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testBuildOtherTopicsSomeAssigned(org.carrot2.core.ClusterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testBuildOtherTopicsSomeAssigned(org.carrot2.core.ClusterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testBySizeComparator(org.carrot2.core.ClusterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testBySizeComparator(org.carrot2.core.ClusterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSomeIdentifiers(org.carrot2.core.ClusterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSomeIdentifiers(org.carrot2.core.ClusterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAllDocumentsEmptyFlat(org.carrot2.core.ClusterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAllDocumentsEmptyFlat(org.carrot2.core.ClusterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSizeNonEmptyHierarchicalWithoutOverlap(org.carrot2.core.ClusterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSizeNonEmptyHierarchicalWithoutOverlap(org.carrot2.core.ClusterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testByReversedWeightedScoreAndSizeComparatorOnlySize(org.carrot2.core.ClusterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testByReversedWeightedScoreAndSizeComparatorOnlySize(org.carrot2.core.ClusterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testByReversedWeightedScoreAndSizeComparatorOnlyScore(org.carrot2.core.ClusterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testByReversedWeightedScoreAndSizeComparatorOnlyScore(org.carrot2.core.ClusterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testFindRootCluster(org.carrot2.core.ClusterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFindRootCluster(org.carrot2.core.ClusterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSizeNonEmptyHierarchicalWithOverlap(org.carrot2.core.ClusterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSizeNonEmptyHierarchicalWithOverlap(org.carrot2.core.ClusterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAllDocumentsEmptyHierarchical(org.carrot2.core.ClusterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAllDocumentsEmptyHierarchical(org.carrot2.core.ClusterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testBuildOtherTopicsAllAssigned(org.carrot2.core.ClusterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testBuildOtherTopicsAllAssigned(org.carrot2.core.ClusterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testFindNotFound(org.carrot2.core.ClusterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFindNotFound(org.carrot2.core.ClusterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSizeNonEmptyFlat(org.carrot2.core.ClusterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSizeNonEmptyFlat(org.carrot2.core.ClusterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testBuildOtherTopicsNonAssigned(org.carrot2.core.ClusterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testBuildOtherTopicsNonAssigned(org.carrot2.core.ClusterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNonUniqueIdentifiers(org.carrot2.core.ClusterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNonUniqueIdentifiers(org.carrot2.core.ClusterTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497531711,
  "executionTime": 627,
  "description": {
    "displayName": "org.carrot2.util.attribute.AttributeBinderTest",
    "className": "org.carrot2.util.attribute.AttributeBinderTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testCollectionInput(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testCollectionInput",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOutputReferenceAttributeWithoutConstraint(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testOutputReferenceAttributeWithoutConstraint",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testBindableHierarchyInput(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testBindableHierarchyInput",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPrivateNestedAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testPrivateNestedAttributeClass",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOnlyBindingDirectionAnnotationProvided(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testOnlyBindingDirectionAnnotationProvided",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPrefixing(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testPrefixing",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDuplicateOutputKeysAtDifferentLevels(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testDuplicateOutputKeysAtDifferentLevels",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPrivateStaticAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testPrivateStaticAttributeClass",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSingleClassUnbind(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testSingleClassUnbind",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testCircularReferences(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testCircularReferences",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testRemainingAttributes(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testRemainingAttributes",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoPublicConstructorAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testNoPublicConstructorAttributeClass",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testRequiredAttributeNullAttemptWithRequiredCheckingDisabled(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testRequiredAttributeNullAttemptWithRequiredCheckingDisabled",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testReferenceWithReferenceInstanceInAttributes(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testReferenceWithReferenceInstanceInAttributes",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testReferenceOutput(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testReferenceOutput",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNotBindable(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testNotBindable",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNullReference(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testNullReference",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNullInputAttributes(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testNullInputAttributes",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNotBindableCoercedAttribute(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testNotBindableCoercedAttribute",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDuplicateInputKeysAtDifferentLevels(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testDuplicateInputKeysAtDifferentLevels",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTargetInvocationException(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testTargetInvocationException",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSimpleConstraints(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testSimpleConstraints",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testRequiredAttributeNullAttempt(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testRequiredAttributeNullAttempt",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testRequiredInputAttributeNotProvided(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testRequiredInputAttributeNotProvided",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testRequiredInputAttributeIsNull(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testRequiredInputAttributeIsNull",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testAttributeAnnotationWithoutBindingDirection(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testAttributeAnnotationWithoutBindingDirection",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testClassCoercion(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testClassCoercion",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testClassValuedAttribute(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testClassValuedAttribute",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testClassCoercionFromString(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testClassCoercionFromString",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testBindableHierarchyOutput(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testBindableHierarchyOutput",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSingleClassInput(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testSingleClassInput",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDuplicateOutputKeysAtSameLevel(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testDuplicateOutputKeysAtSameLevel",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDuplicateInputKeysAtSameLevel(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testDuplicateInputKeysAtSameLevel",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testRequiredAttributeAlreadyBound(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testRequiredAttributeAlreadyBound",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNonprimitiveOutputAttributeInputBinding(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testNonprimitiveOutputAttributeInputBinding",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testReferenceInput(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testReferenceInput",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSingleClassOutput(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testSingleClassOutput",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEnumInput(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testEnumInput",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testCompoundConstraints(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testCompoundConstraints",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInputReferenceAttributeWithoutConstraint(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testInputReferenceAttributeWithoutConstraint",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testInputReferenceAttributeWithoutConstraint(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testInputReferenceAttributeWithoutConstraint",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532332,
      "executionTime": 6,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCompoundConstraints(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testCompoundConstraints",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532321,
      "executionTime": 11,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEnumInput(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testEnumInput",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532315,
      "executionTime": 6,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSingleClassOutput(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testSingleClassOutput",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532309,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testReferenceInput(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testReferenceInput",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532305,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNonprimitiveOutputAttributeInputBinding(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testNonprimitiveOutputAttributeInputBinding",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532299,
      "executionTime": 6,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRequiredAttributeAlreadyBound(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testRequiredAttributeAlreadyBound",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532291,
      "executionTime": 6,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDuplicateInputKeysAtSameLevel(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testDuplicateInputKeysAtSameLevel",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532286,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDuplicateOutputKeysAtSameLevel(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testDuplicateOutputKeysAtSameLevel",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532278,
      "executionTime": 7,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSingleClassInput(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testSingleClassInput",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532270,
      "executionTime": 7,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testBindableHierarchyOutput(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testBindableHierarchyOutput",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532263,
      "executionTime": 6,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testClassCoercionFromString(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testClassCoercionFromString",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532257,
      "executionTime": 6,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testClassValuedAttribute(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testClassValuedAttribute",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532250,
      "executionTime": 7,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testClassCoercion(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testClassCoercion",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532243,
      "executionTime": 7,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAttributeAnnotationWithoutBindingDirection(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testAttributeAnnotationWithoutBindingDirection",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532233,
      "executionTime": 10,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRequiredInputAttributeIsNull(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testRequiredInputAttributeIsNull",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532227,
      "executionTime": 6,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRequiredInputAttributeNotProvided(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testRequiredInputAttributeNotProvided",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532215,
      "executionTime": 12,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRequiredAttributeNullAttempt(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testRequiredAttributeNullAttempt",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532209,
      "executionTime": 6,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSimpleConstraints(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testSimpleConstraints",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532202,
      "executionTime": 7,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTargetInvocationException(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testTargetInvocationException",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532198,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDuplicateInputKeysAtDifferentLevels(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testDuplicateInputKeysAtDifferentLevels",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532193,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNotBindableCoercedAttribute(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testNotBindableCoercedAttribute",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532185,
      "executionTime": 7,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNullInputAttributes(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testNullInputAttributes",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532181,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNullReference(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testNullReference",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532166,
      "executionTime": 10,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNotBindable(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testNotBindable",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532159,
      "executionTime": 6,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testReferenceOutput(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testReferenceOutput",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532148,
      "executionTime": 8,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testReferenceWithReferenceInstanceInAttributes(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testReferenceWithReferenceInstanceInAttributes",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532138,
      "executionTime": 9,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRequiredAttributeNullAttemptWithRequiredCheckingDisabled(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testRequiredAttributeNullAttemptWithRequiredCheckingDisabled",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532128,
      "executionTime": 9,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoPublicConstructorAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testNoPublicConstructorAttributeClass",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532122,
      "executionTime": 6,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRemainingAttributes(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testRemainingAttributes",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532108,
      "executionTime": 12,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCircularReferences(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testCircularReferences",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532022,
      "executionTime": 8,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSingleClassUnbind(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testSingleClassUnbind",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532002,
      "executionTime": 20,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPrivateStaticAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testPrivateStaticAttributeClass",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531989,
      "executionTime": 7,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDuplicateOutputKeysAtDifferentLevels(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testDuplicateOutputKeysAtDifferentLevels",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531982,
      "executionTime": 7,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPrefixing(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testPrefixing",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531976,
      "executionTime": 6,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOnlyBindingDirectionAnnotationProvided(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testOnlyBindingDirectionAnnotationProvided",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531967,
      "executionTime": 8,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPrivateNestedAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testPrivateNestedAttributeClass",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531957,
      "executionTime": 10,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testBindableHierarchyInput(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testBindableHierarchyInput",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531943,
      "executionTime": 13,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOutputReferenceAttributeWithoutConstraint(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testOutputReferenceAttributeWithoutConstraint",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531909,
      "executionTime": 11,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCollectionInput(org.carrot2.util.attribute.AttributeBinderTest)",
        "methodName": "testCollectionInput",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531726,
      "executionTime": 183,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testCollectionInput(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCollectionInput(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOutputReferenceAttributeWithoutConstraint(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOutputReferenceAttributeWithoutConstraint(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testBindableHierarchyInput(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testBindableHierarchyInput(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPrivateNestedAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPrivateNestedAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOnlyBindingDirectionAnnotationProvided(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOnlyBindingDirectionAnnotationProvided(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPrefixing(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPrefixing(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDuplicateOutputKeysAtDifferentLevels(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDuplicateOutputKeysAtDifferentLevels(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPrivateStaticAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPrivateStaticAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSingleClassUnbind(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSingleClassUnbind(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCircularReferences(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCircularReferences(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testRemainingAttributes(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRemainingAttributes(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoPublicConstructorAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoPublicConstructorAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testRequiredAttributeNullAttemptWithRequiredCheckingDisabled(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRequiredAttributeNullAttemptWithRequiredCheckingDisabled(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testReferenceWithReferenceInstanceInAttributes(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testReferenceWithReferenceInstanceInAttributes(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testReferenceOutput(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testReferenceOutput(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNotBindable(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNotBindable(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNullReference(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNullReference(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNullInputAttributes(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNullInputAttributes(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNotBindableCoercedAttribute(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNotBindableCoercedAttribute(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDuplicateInputKeysAtDifferentLevels(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDuplicateInputKeysAtDifferentLevels(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTargetInvocationException(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTargetInvocationException(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSimpleConstraints(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSimpleConstraints(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testRequiredAttributeNullAttempt(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRequiredAttributeNullAttempt(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testRequiredInputAttributeNotProvided(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRequiredInputAttributeNotProvided(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testRequiredInputAttributeIsNull(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRequiredInputAttributeIsNull(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAttributeAnnotationWithoutBindingDirection(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAttributeAnnotationWithoutBindingDirection(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testClassCoercion(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testClassCoercion(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testClassValuedAttribute(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testClassValuedAttribute(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testClassCoercionFromString(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testClassCoercionFromString(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testBindableHierarchyOutput(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testBindableHierarchyOutput(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSingleClassInput(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSingleClassInput(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDuplicateOutputKeysAtSameLevel(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDuplicateOutputKeysAtSameLevel(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDuplicateInputKeysAtSameLevel(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDuplicateInputKeysAtSameLevel(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testRequiredAttributeAlreadyBound(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRequiredAttributeAlreadyBound(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNonprimitiveOutputAttributeInputBinding(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNonprimitiveOutputAttributeInputBinding(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testReferenceInput(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testReferenceInput(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSingleClassOutput(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSingleClassOutput(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEnumInput(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEnumInput(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCompoundConstraints(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCompoundConstraints(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInputReferenceAttributeWithoutConstraint(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInputReferenceAttributeWithoutConstraint(org.carrot2.util.attribute.AttributeBinderTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497531560,
  "executionTime": 53,
  "description": {
    "displayName": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
    "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testDoesNotHaveToExistNotMetExistingFile(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
        "methodName": "testDoesNotHaveToExistNotMetExistingFile",
        "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMustExistNotMetNonExisting(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
        "methodName": "testMustExistNotMetNonExisting",
        "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNull(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
        "methodName": "testNull",
        "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDoesNotHaveToExistMetExistingDirectory(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
        "methodName": "testDoesNotHaveToExistMetExistingDirectory",
        "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDoesNotHaveToExistMetNonExisting(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
        "methodName": "testDoesNotHaveToExistMetNonExisting",
        "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMustExistMet(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
        "methodName": "testMustExistMet",
        "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
        "methodName": "testInvalidType",
        "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMustExistNotMetExistingFile(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
        "methodName": "testMustExistNotMetExistingFile",
        "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testMustExistNotMetExistingFile(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
        "methodName": "testMustExistNotMetExistingFile",
        "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531608,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
        "methodName": "testInvalidType",
        "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531603,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMustExistMet(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
        "methodName": "testMustExistMet",
        "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531598,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDoesNotHaveToExistMetNonExisting(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
        "methodName": "testDoesNotHaveToExistMetNonExisting",
        "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531593,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDoesNotHaveToExistMetExistingDirectory(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
        "methodName": "testDoesNotHaveToExistMetExistingDirectory",
        "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531588,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNull(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
        "methodName": "testNull",
        "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531583,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMustExistNotMetNonExisting(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
        "methodName": "testMustExistNotMetNonExisting",
        "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531577,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDoesNotHaveToExistNotMetExistingFile(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
        "methodName": "testDoesNotHaveToExistNotMetExistingFile",
        "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531561,
      "executionTime": 15,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testDoesNotHaveToExistNotMetExistingFile(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDoesNotHaveToExistNotMetExistingFile(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMustExistNotMetNonExisting(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMustExistNotMetNonExisting(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNull(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNull(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDoesNotHaveToExistMetExistingDirectory(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDoesNotHaveToExistMetExistingDirectory(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDoesNotHaveToExistMetNonExisting(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDoesNotHaveToExistMetNonExisting(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMustExistMet(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMustExistMet(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInvalidType(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInvalidType(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMustExistNotMetExistingFile(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMustExistNotMetExistingFile(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497531616,
  "executionTime": 41,
  "description": {
    "displayName": "org.carrot2.util.IntArrayPredicateIteratorTest",
    "className": "org.carrot2.util.IntArrayPredicateIteratorTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testSimpleCase(org.carrot2.util.IntArrayPredicateIteratorTest)",
        "methodName": "testSimpleCase",
        "className": "org.carrot2.util.IntArrayPredicateIteratorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoSeparator(org.carrot2.util.IntArrayPredicateIteratorTest)",
        "methodName": "testNoSeparator",
        "className": "org.carrot2.util.IntArrayPredicateIteratorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testBorderCase(org.carrot2.util.IntArrayPredicateIteratorTest)",
        "methodName": "testBorderCase",
        "className": "org.carrot2.util.IntArrayPredicateIteratorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmptyArray(org.carrot2.util.IntArrayPredicateIteratorTest)",
        "methodName": "testEmptyArray",
        "className": "org.carrot2.util.IntArrayPredicateIteratorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSubrange(org.carrot2.util.IntArrayPredicateIteratorTest)",
        "methodName": "testSubrange",
        "className": "org.carrot2.util.IntArrayPredicateIteratorTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testSubrange(org.carrot2.util.IntArrayPredicateIteratorTest)",
        "methodName": "testSubrange",
        "className": "org.carrot2.util.IntArrayPredicateIteratorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531653,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyArray(org.carrot2.util.IntArrayPredicateIteratorTest)",
        "methodName": "testEmptyArray",
        "className": "org.carrot2.util.IntArrayPredicateIteratorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531648,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testBorderCase(org.carrot2.util.IntArrayPredicateIteratorTest)",
        "methodName": "testBorderCase",
        "className": "org.carrot2.util.IntArrayPredicateIteratorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531624,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoSeparator(org.carrot2.util.IntArrayPredicateIteratorTest)",
        "methodName": "testNoSeparator",
        "className": "org.carrot2.util.IntArrayPredicateIteratorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531621,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSimpleCase(org.carrot2.util.IntArrayPredicateIteratorTest)",
        "methodName": "testSimpleCase",
        "className": "org.carrot2.util.IntArrayPredicateIteratorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531616,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testSimpleCase(org.carrot2.util.IntArrayPredicateIteratorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSimpleCase(org.carrot2.util.IntArrayPredicateIteratorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoSeparator(org.carrot2.util.IntArrayPredicateIteratorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoSeparator(org.carrot2.util.IntArrayPredicateIteratorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testBorderCase(org.carrot2.util.IntArrayPredicateIteratorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testBorderCase(org.carrot2.util.IntArrayPredicateIteratorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyArray(org.carrot2.util.IntArrayPredicateIteratorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyArray(org.carrot2.util.IntArrayPredicateIteratorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSubrange(org.carrot2.util.IntArrayPredicateIteratorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSubrange(org.carrot2.util.IntArrayPredicateIteratorTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497531659,
  "executionTime": 371,
  "description": {
    "displayName": "org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest",
    "className": "org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testSeparateLexicalDataForDifferentResourceLookup(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)",
        "methodName": "testSeparateLexicalDataForDifferentResourceLookup",
        "className": "org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLexicalDataFromTheSameResourceDirIsShared(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)",
        "methodName": "testLexicalDataFromTheSameResourceDirIsShared",
        "className": "org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLexicalDataIsReloadedOnDemand(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)",
        "methodName": "testLexicalDataIsReloadedOnDemand",
        "className": "org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testLexicalDataIsReloadedOnDemand(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)",
        "methodName": "testLexicalDataIsReloadedOnDemand",
        "className": "org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531928,
      "executionTime": 102,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLexicalDataFromTheSameResourceDirIsShared(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)",
        "methodName": "testLexicalDataFromTheSameResourceDirIsShared",
        "className": "org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531911,
      "executionTime": 17,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSeparateLexicalDataForDifferentResourceLookup(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)",
        "methodName": "testSeparateLexicalDataForDifferentResourceLookup",
        "className": "org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531660,
      "executionTime": 251,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testSeparateLexicalDataForDifferentResourceLookup(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSeparateLexicalDataForDifferentResourceLookup(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLexicalDataFromTheSameResourceDirIsShared(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLexicalDataFromTheSameResourceDirIsShared(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLexicalDataIsReloadedOnDemand(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLexicalDataIsReloadedOnDemand(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497528863,
  "executionTime": 706,
  "description": {
    "displayName": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
    "className": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testLNMF(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
        "methodName": "testLNMF",
        "className": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNMFKL(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
        "methodName": "testNMFKL",
        "className": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testUnorderedNMFED(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
        "methodName": "testUnorderedNMFED",
        "className": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOrderedNMFED(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
        "methodName": "testOrderedNMFED",
        "className": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testKMeans(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
        "methodName": "testKMeans",
        "className": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSVD(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
        "methodName": "testSVD",
        "className": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testSVD(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
        "methodName": "testSVD",
        "className": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529555,
      "executionTime": 13,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testKMeans(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
        "methodName": "testKMeans",
        "className": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529543,
      "executionTime": 11,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOrderedNMFED(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
        "methodName": "testOrderedNMFED",
        "className": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529532,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUnorderedNMFED(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
        "methodName": "testUnorderedNMFED",
        "className": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529524,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNMFKL(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
        "methodName": "testNMFKL",
        "className": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529517,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLNMF(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
        "methodName": "testLNMF",
        "className": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497528864,
      "executionTime": 52,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testLNMF(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLNMF(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNMFKL(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNMFKL(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testUnorderedNMFED(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUnorderedNMFED(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOrderedNMFED(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOrderedNMFED(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testKMeans(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testKMeans(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSVD(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSVD(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497529574,
  "executionTime": 720,
  "description": {
    "displayName": "org.carrot2.util.httpclient.HttpClientFactoryTest",
    "className": "org.carrot2.util.httpclient.HttpClientFactoryTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testTimeOut(org.carrot2.util.httpclient.HttpClientFactoryTest)",
        "methodName": "testTimeOut",
        "className": "org.carrot2.util.httpclient.HttpClientFactoryTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testTimeOut(org.carrot2.util.httpclient.HttpClientFactoryTest)",
        "methodName": "testTimeOut",
        "className": "org.carrot2.util.httpclient.HttpClientFactoryTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497529584,
      "executionTime": 710,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testTimeOut(org.carrot2.util.httpclient.HttpClientFactoryTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTimeOut(org.carrot2.util.httpclient.HttpClientFactoryTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497530328,
  "executionTime": 309,
  "description": {
    "displayName": "org.carrot2.util.attribute.BindableDescriptorTest",
    "className": "org.carrot2.util.attribute.BindableDescriptorTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testOnlyWithNoCriteria(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testOnlyWithNoCriteria",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmptyGroupsAfterFiltering(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testEmptyGroupsAfterFiltering",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOnlyInputProcessing(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testOnlyInputProcessing",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNotInput(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testNotInput",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testProcessingByGroup(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testProcessingByGroup",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOnlyInitProcessing(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testOnlyInitProcessing",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testRepeatedGrouping(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testRepeatedGrouping",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testAllByStructure(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testAllByStructure",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOnlyInputOutputInitProcessing(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testOnlyInputOutputInitProcessing",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testAllByGroup(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testAllByGroup",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOnlyInputOutput(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testOnlyInputOutput",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNotInputProcessing(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testNotInputProcessing",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInputByLevel(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testInputByLevel",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOnlyInput(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testOnlyInput",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDefaultValues(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testDefaultValues",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testFlatten(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testFlatten",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testAllByLevel(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testAllByLevel",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testAllByLevel(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testAllByLevel",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530628,
      "executionTime": 8,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFlatten(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testFlatten",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530622,
      "executionTime": 6,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDefaultValues(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testDefaultValues",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530602,
      "executionTime": 20,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOnlyInput(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testOnlyInput",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530584,
      "executionTime": 17,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInputByLevel(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testInputByLevel",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530533,
      "executionTime": 46,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNotInputProcessing(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testNotInputProcessing",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530525,
      "executionTime": 8,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOnlyInputOutput(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testOnlyInputOutput",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530517,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAllByGroup(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testAllByGroup",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530506,
      "executionTime": 9,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOnlyInputOutputInitProcessing(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testOnlyInputOutputInitProcessing",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530489,
      "executionTime": 11,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAllByStructure(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testAllByStructure",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530480,
      "executionTime": 8,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRepeatedGrouping(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testRepeatedGrouping",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530471,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOnlyInitProcessing(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testOnlyInitProcessing",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530456,
      "executionTime": 14,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testProcessingByGroup(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testProcessingByGroup",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530443,
      "executionTime": 8,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNotInput(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testNotInput",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530434,
      "executionTime": 8,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOnlyInputProcessing(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testOnlyInputProcessing",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530425,
      "executionTime": 8,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyGroupsAfterFiltering(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testEmptyGroupsAfterFiltering",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530407,
      "executionTime": 17,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOnlyWithNoCriteria(org.carrot2.util.attribute.BindableDescriptorTest)",
        "methodName": "testOnlyWithNoCriteria",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530330,
      "executionTime": 9,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testOnlyWithNoCriteria(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOnlyWithNoCriteria(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyGroupsAfterFiltering(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyGroupsAfterFiltering(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOnlyInputProcessing(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOnlyInputProcessing(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNotInput(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNotInput(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testProcessingByGroup(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testProcessingByGroup(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOnlyInitProcessing(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOnlyInitProcessing(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testRepeatedGrouping(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRepeatedGrouping(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAllByStructure(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAllByStructure(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOnlyInputOutputInitProcessing(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOnlyInputOutputInitProcessing(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAllByGroup(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAllByGroup(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOnlyInputOutput(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOnlyInputOutput(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNotInputProcessing(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNotInputProcessing(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInputByLevel(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInputByLevel(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOnlyInput(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOnlyInput(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDefaultValues(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDefaultValues(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testFlatten(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFlatten(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAllByLevel(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAllByLevel(org.carrot2.util.attribute.BindableDescriptorTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497530645,
  "executionTime": 18,
  "description": {
    "displayName": "org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest",
    "className": "org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest",
    "annotations": [
      {
        "org.carrot2.util.tests.UsesExternalServices": {}
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testCatsQuery(org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest)",
        "methodName": "testCatsQuery",
        "className": "org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMetadataAvailable(org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testMetadataAvailable(org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530662,
      "executionTime": 1,
      "slave": 2,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCatsQuery(org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest)",
        "methodName": "testCatsQuery",
        "className": "org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530660,
      "executionTime": 2,
      "slave": 2,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testCatsQuery(org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCatsQuery(org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497530666,
  "executionTime": 109,
  "description": {
    "displayName": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
    "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testNonStopPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
        "methodName": "testNonStopPhrases",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStopPhrasesWithStemmedWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
        "methodName": "testStopPhrasesWithStemmedWords",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
        "methodName": "testNonStopWords",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStemmedWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
        "methodName": "testStemmedWords",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStopPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
        "methodName": "testStopPhrases",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
        "methodName": "testStopWords",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
        "methodName": "testStopWords",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530767,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStopPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
        "methodName": "testStopPhrases",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530761,
      "executionTime": 6,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStemmedWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
        "methodName": "testStemmedWords",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530718,
      "executionTime": 31,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530685,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
        "methodName": "testNonStopWords",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530679,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStopPhrasesWithStemmedWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
        "methodName": "testStopPhrasesWithStemmedWords",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530673,
      "executionTime": 6,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNonStopPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
        "methodName": "testNonStopPhrases",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530668,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testNonStopPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNonStopPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStopPhrasesWithStemmedWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStopPhrasesWithStemmedWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStemmedWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStemmedWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStopPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStopPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497530780,
  "executionTime": 117,
  "description": {
    "displayName": "org.carrot2.text.clustering.MultilingualClusteringTest",
    "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testMoreLanguagesTrivialOrNoClusters(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testMoreLanguagesTrivialOrNoClusters",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOneLanguageNontrivialClustersFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testOneLanguageNontrivialClustersFlattenNone",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMoreLanguagesFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testMoreLanguagesFlattenMajorLanguage",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmptyFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testEmptyFlattenMajorLanguage",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOneLanguageNontrivialClustersFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testOneLanguageNontrivialClustersFlattenAll",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOneLanguageNontrivialClustersFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testOneLanguageNontrivialClustersFlattenMajorLanguage",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmptyFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testEmptyFlattenAll",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOneLanguageOtherTopicsClusterFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testOneLanguageOtherTopicsClusterFlattenAll",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoLanguageFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testNoLanguageFlattenAll",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOneLanguageOtherTopicsClusterFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testOneLanguageOtherTopicsClusterFlattenNone",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOneLanguageOtherTopicsClusterFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testOneLanguageOtherTopicsClusterFlattenMajorLanguage",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmptyFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testEmptyFlattenNone",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoLanguageFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testNoLanguageFlattenNone",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMoreLanguagesFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testMoreLanguagesFlattenAll",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMoreLanguagesFlattenMajorNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testMoreLanguagesFlattenMajorNone",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoLanguageFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testNoLanguageFlattenMajorLanguage",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testNoLanguageFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testNoLanguageFlattenMajorLanguage",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530894,
      "executionTime": 3,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMoreLanguagesFlattenMajorNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testMoreLanguagesFlattenMajorNone",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530891,
      "executionTime": 3,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMoreLanguagesFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testMoreLanguagesFlattenAll",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530887,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoLanguageFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testNoLanguageFlattenNone",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530883,
      "executionTime": 3,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testEmptyFlattenNone",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530880,
      "executionTime": 3,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOneLanguageOtherTopicsClusterFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testOneLanguageOtherTopicsClusterFlattenMajorLanguage",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530875,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOneLanguageOtherTopicsClusterFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testOneLanguageOtherTopicsClusterFlattenNone",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530871,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoLanguageFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testNoLanguageFlattenAll",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530865,
      "executionTime": 6,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOneLanguageOtherTopicsClusterFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testOneLanguageOtherTopicsClusterFlattenAll",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530859,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testEmptyFlattenAll",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530855,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOneLanguageNontrivialClustersFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testOneLanguageNontrivialClustersFlattenMajorLanguage",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530850,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOneLanguageNontrivialClustersFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testOneLanguageNontrivialClustersFlattenAll",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530846,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testEmptyFlattenMajorLanguage",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530842,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMoreLanguagesFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testMoreLanguagesFlattenMajorLanguage",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530837,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOneLanguageNontrivialClustersFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testOneLanguageNontrivialClustersFlattenNone",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530828,
      "executionTime": 8,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMoreLanguagesTrivialOrNoClusters(org.carrot2.text.clustering.MultilingualClusteringTest)",
        "methodName": "testMoreLanguagesTrivialOrNoClusters",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530782,
      "executionTime": 45,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testMoreLanguagesTrivialOrNoClusters(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMoreLanguagesTrivialOrNoClusters(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOneLanguageNontrivialClustersFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOneLanguageNontrivialClustersFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMoreLanguagesFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMoreLanguagesFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOneLanguageNontrivialClustersFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOneLanguageNontrivialClustersFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOneLanguageNontrivialClustersFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOneLanguageNontrivialClustersFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOneLanguageOtherTopicsClusterFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOneLanguageOtherTopicsClusterFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoLanguageFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoLanguageFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOneLanguageOtherTopicsClusterFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOneLanguageOtherTopicsClusterFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOneLanguageOtherTopicsClusterFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOneLanguageOtherTopicsClusterFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoLanguageFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoLanguageFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMoreLanguagesFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMoreLanguagesFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMoreLanguagesFlattenMajorNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMoreLanguagesFlattenMajorNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoLanguageFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoLanguageFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497530900,
  "executionTime": 23,
  "description": {
    "displayName": "org.carrot2.text.preprocessing.StemmerEnglishTest",
    "className": "org.carrot2.text.preprocessing.StemmerEnglishTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testUpperCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)",
        "methodName": "testUpperCaseWords",
        "className": "org.carrot2.text.preprocessing.StemmerEnglishTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLowerCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)",
        "methodName": "testLowerCaseWords",
        "className": "org.carrot2.text.preprocessing.StemmerEnglishTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMixedCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)",
        "methodName": "testMixedCaseWords",
        "className": "org.carrot2.text.preprocessing.StemmerEnglishTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testMixedCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)",
        "methodName": "testMixedCaseWords",
        "className": "org.carrot2.text.preprocessing.StemmerEnglishTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530918,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLowerCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)",
        "methodName": "testLowerCaseWords",
        "className": "org.carrot2.text.preprocessing.StemmerEnglishTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530914,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUpperCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)",
        "methodName": "testUpperCaseWords",
        "className": "org.carrot2.text.preprocessing.StemmerEnglishTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530900,
      "executionTime": 13,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testUpperCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUpperCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLowerCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLowerCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMixedCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMixedCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497530926,
  "executionTime": 44,
  "description": {
    "displayName": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
    "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testAttributeDescriptorsC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
        "methodName": "testAttributeDescriptorsC",
        "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testKeyInKeyCheck(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
        "methodName": "testKeyInKeyCheck",
        "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testAttributesC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
        "methodName": "testAttributesC",
        "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testAttributeBuilderC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
        "methodName": "testAttributeBuilderC",
        "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInputOutputGettersSetters(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
        "methodName": "testInputOutputGettersSetters",
        "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testKeysC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
        "methodName": "testKeysC",
        "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOwnAttributesC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
        "methodName": "testOwnAttributesC",
        "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testOwnAttributesC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
        "methodName": "testOwnAttributesC",
        "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530967,
      "executionTime": 3,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testKeysC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
        "methodName": "testKeysC",
        "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530962,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInputOutputGettersSetters(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
        "methodName": "testInputOutputGettersSetters",
        "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530954,
      "executionTime": 8,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAttributeBuilderC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
        "methodName": "testAttributeBuilderC",
        "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530948,
      "executionTime": 6,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAttributesC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
        "methodName": "testAttributesC",
        "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530944,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testKeyInKeyCheck(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
        "methodName": "testKeyInKeyCheck",
        "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530938,
      "executionTime": 6,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAttributeDescriptorsC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
        "methodName": "testAttributeDescriptorsC",
        "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530927,
      "executionTime": 10,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testAttributeDescriptorsC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAttributeDescriptorsC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testKeyInKeyCheck(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testKeyInKeyCheck(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAttributesC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAttributesC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAttributeBuilderC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAttributeBuilderC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInputOutputGettersSetters(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInputOutputGettersSetters(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testKeysC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testKeysC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOwnAttributesC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOwnAttributesC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497530975,
  "executionTime": 967,
  "description": {
    "displayName": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
    "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testEmptyDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
        "methodName": "testEmptyDocuments",
        "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testClusteringWithDfThreshold(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
        "methodName": "testClusteringWithDfThreshold",
        "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStemmingUsedWithDefaultAttributes(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
        "methodName": "testStemmingUsedWithDefaultAttributes",
        "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStress(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
        "methodName": "testStress",
        "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoLabelCandidates(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
        "methodName": "testNoLabelCandidates",
        "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testRepeatedClusteringWithCache(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
        "methodName": "testRepeatedClusteringWithCache",
        "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMetadataAvailable(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
        "methodName": "testNoDocuments",
        "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoRequiredDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
        "methodName": "testNoRequiredDocuments",
        "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testClusteringDataMining(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
        "methodName": "testClusteringDataMining",
        "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testClusteringDataMining(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
        "methodName": "testClusteringDataMining",
        "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531702,
      "executionTime": 237,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoRequiredDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
        "methodName": "testNoRequiredDocuments",
        "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531695,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
        "methodName": "testNoDocuments",
        "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531687,
      "executionTime": 8,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMetadataAvailable(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531681,
      "executionTime": 6,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRepeatedClusteringWithCache(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
        "methodName": "testRepeatedClusteringWithCache",
        "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531178,
      "executionTime": 503,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoLabelCandidates(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
        "methodName": "testNoLabelCandidates",
        "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531162,
      "executionTime": 15,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStress(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
        "methodName": "testStress",
        "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531158,
      "executionTime": 1,
      "slave": 2,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStemmingUsedWithDefaultAttributes(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
        "methodName": "testStemmingUsedWithDefaultAttributes",
        "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531133,
      "executionTime": 23,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testClusteringWithDfThreshold(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
        "methodName": "testClusteringWithDfThreshold",
        "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531036,
      "executionTime": 97,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
        "methodName": "testEmptyDocuments",
        "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530983,
      "executionTime": 52,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testEmptyDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testClusteringWithDfThreshold(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testClusteringWithDfThreshold(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStemmingUsedWithDefaultAttributes(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStemmingUsedWithDefaultAttributes(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStress(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStress(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoLabelCandidates(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoLabelCandidates(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testRepeatedClusteringWithCache(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRepeatedClusteringWithCache(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoRequiredDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoRequiredDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testClusteringDataMining(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testClusteringDataMining(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497531952,
  "executionTime": 32,
  "description": {
    "displayName": "org.carrot2.text.linguistic.ArabicTest",
    "className": "org.carrot2.text.linguistic.ArabicTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testCommonWords(org.carrot2.text.linguistic.ArabicTest)",
        "methodName": "testCommonWords",
        "className": "org.carrot2.text.linguistic.ArabicTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLanguageCode(org.carrot2.text.linguistic.ArabicTest)",
        "methodName": "testLanguageCode",
        "className": "org.carrot2.text.linguistic.ArabicTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStemming(org.carrot2.text.linguistic.ArabicTest)",
        "methodName": "testStemming",
        "className": "org.carrot2.text.linguistic.ArabicTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStemmerAvailable(org.carrot2.text.linguistic.ArabicTest)",
        "methodName": "testStemmerAvailable",
        "className": "org.carrot2.text.linguistic.ArabicTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testStemmerAvailable(org.carrot2.text.linguistic.ArabicTest)",
        "methodName": "testStemmerAvailable",
        "className": "org.carrot2.text.linguistic.ArabicTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531979,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStemming(org.carrot2.text.linguistic.ArabicTest)",
        "methodName": "testStemming",
        "className": "org.carrot2.text.linguistic.ArabicTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531966,
      "executionTime": 13,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLanguageCode(org.carrot2.text.linguistic.ArabicTest)",
        "methodName": "testLanguageCode",
        "className": "org.carrot2.text.linguistic.ArabicTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531962,
      "executionTime": 3,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCommonWords(org.carrot2.text.linguistic.ArabicTest)",
        "methodName": "testCommonWords",
        "className": "org.carrot2.text.linguistic.ArabicTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531956,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testCommonWords(org.carrot2.text.linguistic.ArabicTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCommonWords(org.carrot2.text.linguistic.ArabicTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLanguageCode(org.carrot2.text.linguistic.ArabicTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLanguageCode(org.carrot2.text.linguistic.ArabicTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStemming(org.carrot2.text.linguistic.ArabicTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStemming(org.carrot2.text.linguistic.ArabicTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStemmerAvailable(org.carrot2.text.linguistic.ArabicTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStemmerAvailable(org.carrot2.text.linguistic.ArabicTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497531988,
  "executionTime": 227,
  "description": {
    "displayName": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
    "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testNoQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testNoQueryWords",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNullQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testNullQuery",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSingleStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testSingleStems",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNullStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testNullStems",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testWordTfByDocumentAggregation(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testWordTfByDocumentAggregation",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testFrequentSingleStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testFrequentSingleStems",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDifferentStemsInQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testDifferentStemsInQuery",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testBlankQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testBlankQuery",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testAllQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testAllQueryWords",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOriginalFrequencyAggregation(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testOriginalFrequencyAggregation",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSomeQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testSomeQueryWords",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testSomeQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testSomeQueryWords",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532210,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOriginalFrequencyAggregation(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testOriginalFrequencyAggregation",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532204,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532199,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAllQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testAllQueryWords",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532191,
      "executionTime": 8,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testBlankQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testBlankQuery",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532122,
      "executionTime": 6,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDifferentStemsInQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testDifferentStemsInQuery",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532112,
      "executionTime": 9,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFrequentSingleStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testFrequentSingleStems",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532100,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testWordTfByDocumentAggregation(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testWordTfByDocumentAggregation",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532093,
      "executionTime": 6,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNullStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testNullStems",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532085,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSingleStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testSingleStems",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532045,
      "executionTime": 40,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNullQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testNullQuery",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531996,
      "executionTime": 27,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
        "methodName": "testNoQueryWords",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531989,
      "executionTime": 6,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testNoQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNullQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNullQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSingleStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSingleStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNullStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNullStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testWordTfByDocumentAggregation(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testWordTfByDocumentAggregation(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testFrequentSingleStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFrequentSingleStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDifferentStemsInQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDifferentStemsInQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testBlankQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testBlankQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAllQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAllQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOriginalFrequencyAggregation(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOriginalFrequencyAggregation(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSomeQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSomeQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497532217,
  "executionTime": 1618,
  "description": {
    "displayName": "org.carrot2.core.ComponentSuitesTest",
    "className": "org.carrot2.core.ComponentSuitesTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testCarrot2DefaultComponentSuite(org.carrot2.core.ComponentSuitesTest)",
        "methodName": "testCarrot2DefaultComponentSuite",
        "className": "org.carrot2.core.ComponentSuitesTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testIncludes(org.carrot2.core.ComponentSuitesTest)",
        "methodName": "testIncludes",
        "className": "org.carrot2.core.ComponentSuitesTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testIncludes(org.carrot2.core.ComponentSuitesTest)",
        "methodName": "testIncludes",
        "className": "org.carrot2.core.ComponentSuitesTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533796,
      "executionTime": 39,
      "slave": 2,
      "status": "ERROR",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCarrot2DefaultComponentSuite(org.carrot2.core.ComponentSuitesTest)",
        "methodName": "testCarrot2DefaultComponentSuite",
        "className": "org.carrot2.core.ComponentSuitesTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532218,
      "executionTime": 1578,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testCarrot2DefaultComponentSuite(org.carrot2.core.ComponentSuitesTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCarrot2DefaultComponentSuite(org.carrot2.core.ComponentSuitesTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testIncludes(org.carrot2.core.ComponentSuitesTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIncludes(org.carrot2.core.ComponentSuitesTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497533837,
  "executionTime": 53,
  "description": {
    "displayName": "org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest",
    "className": "org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testOneDocumentOneFieldMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
        "methodName": "testOneDocumentOneFieldMoreSentences",
        "className": "org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOneDocumentMoreFieldsMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
        "methodName": "testOneDocumentMoreFieldsMoreSentences",
        "className": "org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMoreDocumentsMoreFieldsMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
        "methodName": "testMoreDocumentsMoreFieldsMoreSentences",
        "className": "org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOneDocumentOneFieldOneSentence(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
        "methodName": "testOneDocumentOneFieldOneSentence",
        "className": "org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testOneDocumentOneFieldOneSentence(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
        "methodName": "testOneDocumentOneFieldOneSentence",
        "className": "org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533887,
      "executionTime": 3,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMoreDocumentsMoreFieldsMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
        "methodName": "testMoreDocumentsMoreFieldsMoreSentences",
        "className": "org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533879,
      "executionTime": 8,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533872,
      "executionTime": 6,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOneDocumentMoreFieldsMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
        "methodName": "testOneDocumentMoreFieldsMoreSentences",
        "className": "org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533863,
      "executionTime": 8,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOneDocumentOneFieldMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
        "methodName": "testOneDocumentOneFieldMoreSentences",
        "className": "org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533850,
      "executionTime": 13,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testOneDocumentOneFieldMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOneDocumentOneFieldMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOneDocumentMoreFieldsMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOneDocumentMoreFieldsMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMoreDocumentsMoreFieldsMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMoreDocumentsMoreFieldsMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOneDocumentOneFieldOneSentence(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOneDocumentOneFieldOneSentence(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497533891,
  "executionTime": 8,
  "description": {
    "displayName": "org.carrot2.output.metrics.IdealPartitioningBasedMetricTest",
    "className": "org.carrot2.output.metrics.IdealPartitioningBasedMetricTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testNoPartitionInformation(org.carrot2.output.metrics.IdealPartitioningBasedMetricTest)",
        "methodName": "testNoPartitionInformation",
        "className": "org.carrot2.output.metrics.IdealPartitioningBasedMetricTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testNoPartitionInformation(org.carrot2.output.metrics.IdealPartitioningBasedMetricTest)",
        "methodName": "testNoPartitionInformation",
        "className": "org.carrot2.output.metrics.IdealPartitioningBasedMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533892,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testNoPartitionInformation(org.carrot2.output.metrics.IdealPartitioningBasedMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoPartitionInformation(org.carrot2.output.metrics.IdealPartitioningBasedMetricTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497533902,
  "executionTime": 464,
  "description": {
    "displayName": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
    "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testFileResourceFile(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testFileResourceFile",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testExistingValueOfEnum(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testExistingValueOfEnum",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLoadableClass(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testLoadableClass",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStringNotAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testStringNotAssignable",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStringNonStrictlyAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testStringNonStrictlyAssignable",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStringField(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testStringField",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testFileResourceUrlWithParameters(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testFileResourceUrlWithParameters",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testExistingValueOfInteger(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testExistingValueOfInteger",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStringStrictlyAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testStringStrictlyAssignable",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNonLoadableClass(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testNonLoadableClass",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNonStringValue(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testNonStringValue",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testNonStringValue(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testNonStringValue",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534359,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNonLoadableClass(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testNonLoadableClass",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534345,
      "executionTime": 8,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStringStrictlyAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testStringStrictlyAssignable",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534340,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExistingValueOfInteger(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testExistingValueOfInteger",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534336,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFileResourceUrlWithParameters(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testFileResourceUrlWithParameters",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534331,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStringField(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testStringField",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534327,
      "executionTime": 3,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStringNonStrictlyAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testStringNonStrictlyAssignable",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534322,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStringNotAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testStringNotAssignable",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534316,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLoadableClass(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testLoadableClass",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534305,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExistingValueOfEnum(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testExistingValueOfEnum",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534276,
      "executionTime": 29,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFileResourceFile(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
        "methodName": "testFileResourceFile",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534240,
      "executionTime": 35,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testFileResourceFile(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFileResourceFile(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExistingValueOfEnum(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExistingValueOfEnum(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLoadableClass(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLoadableClass(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStringNotAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStringNotAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStringNonStrictlyAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStringNonStrictlyAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStringField(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStringField(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testFileResourceUrlWithParameters(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFileResourceUrlWithParameters(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExistingValueOfInteger(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExistingValueOfInteger(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStringStrictlyAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStringStrictlyAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNonLoadableClass(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_STARTED"
    },
    {
      "out": "2012-01-02 10:45:34,346 WARN  org.carrot2.util.ReflectionUtils: Could not load class: xorg.carrot2.util.attribute.AttributeTransformerFromStringTest (xorg.carrot2.util.attribute.AttributeTransformerFromStringTest).\r\n"
    },
    {
      "test": "testNonLoadableClass(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNonStringValue(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNonStringValue(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497534369,
  "executionTime": 87,
  "description": {
    "displayName": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
    "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testFullyContaminatedCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testFullyContaminatedCluster",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testAllDocumentsInOtherTopics(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testAllDocumentsInOtherTopics",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testHardPartitionsOverlappingClusters",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTrivialCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testTrivialCluster",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPureCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testPureCluster",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPartiallyContaminatedCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testPartiallyContaminatedCluster",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testHardClustersWithOverlappingPartitions",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmptyCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testEmptyCluster",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoPartitionInformation(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testNoPartitionInformation",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testIdealClustering(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testIdealClustering",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testOverlappingPartitionsOverlappingClusters",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testOverlappingPartitionsOverlappingClusters",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534452,
      "executionTime": 3,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testIdealClustering(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testIdealClustering",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534448,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoPartitionInformation(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testNoPartitionInformation",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534444,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testEmptyCluster",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534431,
      "executionTime": 13,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testHardClustersWithOverlappingPartitions",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534421,
      "executionTime": 10,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPartiallyContaminatedCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testPartiallyContaminatedCluster",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534414,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPureCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testPureCluster",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534408,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTrivialCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testTrivialCluster",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534402,
      "executionTime": 6,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testHardPartitionsOverlappingClusters",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534396,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAllDocumentsInOtherTopics(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testAllDocumentsInOtherTopics",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534391,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFullyContaminatedCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
        "methodName": "testFullyContaminatedCluster",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534372,
      "executionTime": 19,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testFullyContaminatedCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFullyContaminatedCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAllDocumentsInOtherTopics(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAllDocumentsInOtherTopics(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTrivialCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTrivialCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPureCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPureCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPartiallyContaminatedCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPartiallyContaminatedCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoPartitionInformation(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoPartitionInformation(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testIdealClustering(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIdealClustering(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497534458,
  "executionTime": 54,
  "description": {
    "displayName": "org.carrot2.webapp.util.UserAgentUtilsTest",
    "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testFirefox(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testFirefox",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testBlank(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testBlank",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testIE6(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testIE6",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNull(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testNull",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLetterInNumber(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testLetterInNumber",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testIENoNumber(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testIENoNumber",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testIE55(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testIE55",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testFirefly(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testFirefly",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOpera(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testOpera",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testIE7MoreDigits(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testIE7MoreDigits",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testIE7(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testIE7",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testIE7(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testIE7",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534509,
      "executionTime": 3,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testIE7MoreDigits(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testIE7MoreDigits",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534505,
      "executionTime": 3,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOpera(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testOpera",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534502,
      "executionTime": 3,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFirefly(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testFirefly",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534498,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testIE55(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testIE55",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534494,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testIENoNumber(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testIENoNumber",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534487,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLetterInNumber(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testLetterInNumber",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534480,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNull(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testNull",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534475,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testIE6(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testIE6",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534469,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testBlank(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testBlank",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534465,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFirefox(org.carrot2.webapp.util.UserAgentUtilsTest)",
        "methodName": "testFirefox",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534459,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testFirefox(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFirefox(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testBlank(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testBlank(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testIE6(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIE6(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNull(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNull(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLetterInNumber(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLetterInNumber(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testIENoNumber(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIENoNumber(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testIE55(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIE55(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testFirefly(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFirefly(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOpera(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOpera(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testIE7MoreDigits(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIE7MoreDigits(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testIE7(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIE7(org.carrot2.webapp.util.UserAgentUtilsTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497534514,
  "executionTime": 20,
  "description": {
    "displayName": "org.carrot2.util.attribute.constraint.ValueHintConstraintTest",
    "className": "org.carrot2.util.attribute.constraint.ValueHintConstraintTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testHintValue(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)",
        "methodName": "testHintValue",
        "className": "org.carrot2.util.attribute.constraint.ValueHintConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNull(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)",
        "methodName": "testNull",
        "className": "org.carrot2.util.attribute.constraint.ValueHintConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)",
        "methodName": "testInvalidType",
        "className": "org.carrot2.util.attribute.constraint.ValueHintConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOtherValues(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)",
        "methodName": "testOtherValues",
        "className": "org.carrot2.util.attribute.constraint.ValueHintConstraintTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testOtherValues(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)",
        "methodName": "testOtherValues",
        "className": "org.carrot2.util.attribute.constraint.ValueHintConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534530,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)",
        "methodName": "testInvalidType",
        "className": "org.carrot2.util.attribute.constraint.ValueHintConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534525,
      "executionTime": 5,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNull(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)",
        "methodName": "testNull",
        "className": "org.carrot2.util.attribute.constraint.ValueHintConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534522,
      "executionTime": 3,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHintValue(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)",
        "methodName": "testHintValue",
        "className": "org.carrot2.util.attribute.constraint.ValueHintConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534515,
      "executionTime": 7,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testHintValue(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHintValue(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNull(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNull(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInvalidType(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInvalidType(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOtherValues(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOtherValues(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497534536,
  "executionTime": 17,
  "description": {
    "displayName": "org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest",
    "className": "org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testHintValue(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)",
        "methodName": "testHintValue",
        "className": "org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNotHintValue(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)",
        "methodName": "testNotHintValue",
        "className": "org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)",
        "methodName": "testInvalidType",
        "className": "org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNull(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)",
        "methodName": "testNull",
        "className": "org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testNull(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)",
        "methodName": "testNull",
        "className": "org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534549,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)",
        "methodName": "testInvalidType",
        "className": "org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534545,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNotHintValue(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)",
        "methodName": "testNotHintValue",
        "className": "org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534541,
      "executionTime": 3,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHintValue(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)",
        "methodName": "testHintValue",
        "className": "org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534537,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testHintValue(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHintValue(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNotHintValue(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNotHintValue(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInvalidType(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInvalidType(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNull(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNull(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 2,
  "startTimestamp": 1325497534554,
  "executionTime": 40,
  "description": {
    "displayName": "org.carrot2.text.linguistic.DefaultStemmerFactoryTest",
    "className": "org.carrot2.text.linguistic.DefaultStemmerFactoryTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testEnglishHasSnowballStemmer(org.carrot2.text.linguistic.DefaultStemmerFactoryTest)",
        "methodName": "testEnglishHasSnowballStemmer",
        "className": "org.carrot2.text.linguistic.DefaultStemmerFactoryTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPolishHasMorfologikStemmer(org.carrot2.text.linguistic.DefaultStemmerFactoryTest)",
        "methodName": "testPolishHasMorfologikStemmer",
        "className": "org.carrot2.text.linguistic.DefaultStemmerFactoryTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testPolishHasMorfologikStemmer(org.carrot2.text.linguistic.DefaultStemmerFactoryTest)",
        "methodName": "testPolishHasMorfologikStemmer",
        "className": "org.carrot2.text.linguistic.DefaultStemmerFactoryTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534559,
      "executionTime": 35,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEnglishHasSnowballStemmer(org.carrot2.text.linguistic.DefaultStemmerFactoryTest)",
        "methodName": "testEnglishHasSnowballStemmer",
        "className": "org.carrot2.text.linguistic.DefaultStemmerFactoryTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534555,
      "executionTime": 4,
      "slave": 2,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testEnglishHasSnowballStemmer(org.carrot2.text.linguistic.DefaultStemmerFactoryTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEnglishHasSnowballStemmer(org.carrot2.text.linguistic.DefaultStemmerFactoryTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPolishHasMorfologikStemmer(org.carrot2.text.linguistic.DefaultStemmerFactoryTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPolishHasMorfologikStemmer(org.carrot2.text.linguistic.DefaultStemmerFactoryTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497532341,
  "executionTime": 682,
  "description": {
    "displayName": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
    "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testRepeatedClusteringWithCache(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
        "methodName": "testRepeatedClusteringWithCache",
        "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmptyDocuments(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
        "methodName": "testEmptyDocuments",
        "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMetadataAvailable(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStress(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
        "methodName": "testStress",
        "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testClusteringWithDfThreshold(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
        "methodName": "testClusteringWithDfThreshold",
        "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoDocuments(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
        "methodName": "testNoDocuments",
        "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testClusteringDataMining(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
        "methodName": "testClusteringDataMining",
        "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMaxClusters(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
        "methodName": "testMaxClusters",
        "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testComputeIntersection(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
        "methodName": "testComputeIntersection",
        "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testComputeIntersection(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
        "methodName": "testComputeIntersection",
        "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533020,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMaxClusters(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
        "methodName": "testMaxClusters",
        "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532950,
      "executionTime": 65,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testClusteringDataMining(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
        "methodName": "testClusteringDataMining",
        "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532887,
      "executionTime": 62,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoDocuments(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
        "methodName": "testNoDocuments",
        "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532883,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testClusteringWithDfThreshold(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
        "methodName": "testClusteringWithDfThreshold",
        "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532844,
      "executionTime": 39,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStress(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
        "methodName": "testStress",
        "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532844,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMetadataAvailable(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532837,
      "executionTime": 7,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyDocuments(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
        "methodName": "testEmptyDocuments",
        "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532827,
      "executionTime": 8,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRepeatedClusteringWithCache(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
        "methodName": "testRepeatedClusteringWithCache",
        "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532595,
      "executionTime": 232,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testRepeatedClusteringWithCache(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRepeatedClusteringWithCache(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyDocuments(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyDocuments(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStress(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStress(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testClusteringWithDfThreshold(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testClusteringWithDfThreshold(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoDocuments(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoDocuments(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testClusteringDataMining(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testClusteringDataMining(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMaxClusters(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMaxClusters(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComputeIntersection(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComputeIntersection(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497533026,
  "executionTime": 10,
  "description": {
    "displayName": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
    "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testUtfCharacters(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
        "methodName": "testUtfCharacters",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testResultsTotal(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
        "methodName": "testResultsTotal",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSmallQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
        "methodName": "testSmallQuery",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMetadataAvailable(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHtmlUnescaping(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
        "methodName": "testHtmlUnescaping",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testURLsUnique(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
        "methodName": "testURLsUnique",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoResultsQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
        "methodName": "testNoResultsQuery",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLargeQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
        "methodName": "testLargeQuery",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInCachingController(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
        "methodName": "testInCachingController",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testInCachingController(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
        "methodName": "testInCachingController",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533036,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLargeQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
        "methodName": "testLargeQuery",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533035,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoResultsQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
        "methodName": "testNoResultsQuery",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533035,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testURLsUnique(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
        "methodName": "testURLsUnique",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533034,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHtmlUnescaping(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
        "methodName": "testHtmlUnescaping",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533034,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMetadataAvailable(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533029,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSmallQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
        "methodName": "testSmallQuery",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533029,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testResultsTotal(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
        "methodName": "testResultsTotal",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533028,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUtfCharacters(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
        "methodName": "testUtfCharacters",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533028,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testUtfCharacters(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUtfCharacters(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testResultsTotal(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testResultsTotal(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSmallQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSmallQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHtmlUnescaping(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHtmlUnescaping(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testURLsUnique(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testURLsUnique(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoResultsQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoResultsQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLargeQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLargeQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInCachingController(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInCachingController(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497533038,
  "executionTime": 129,
  "description": {
    "displayName": "org.carrot2.text.linguistic.ThaiTokenizerTest",
    "className": "org.carrot2.text.linguistic.ThaiTokenizerTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testThaiTermTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)",
        "methodName": "testThaiTermTokens",
        "className": "org.carrot2.text.linguistic.ThaiTokenizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNumericTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)",
        "methodName": "testNumericTokens",
        "className": "org.carrot2.text.linguistic.ThaiTokenizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testThaiEnglishTermTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)",
        "methodName": "testThaiEnglishTermTokens",
        "className": "org.carrot2.text.linguistic.ThaiTokenizerTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testThaiEnglishTermTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)",
        "methodName": "testThaiEnglishTermTokens",
        "className": "org.carrot2.text.linguistic.ThaiTokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533164,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNumericTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)",
        "methodName": "testNumericTokens",
        "className": "org.carrot2.text.linguistic.ThaiTokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533161,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testThaiTermTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)",
        "methodName": "testThaiTermTokens",
        "className": "org.carrot2.text.linguistic.ThaiTokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533039,
      "executionTime": 122,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testThaiTermTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testThaiTermTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNumericTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNumericTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testThaiEnglishTermTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testThaiEnglishTermTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497533169,
  "executionTime": 47,
  "description": {
    "displayName": "org.carrot2.core.ClusterWithParentTest",
    "className": "org.carrot2.core.ClusterWithParentTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testFindSubcluster(org.carrot2.core.ClusterWithParentTest)",
        "methodName": "testFindSubcluster",
        "className": "org.carrot2.core.ClusterWithParentTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEqualsAndHashCode(org.carrot2.core.ClusterWithParentTest)",
        "methodName": "testEqualsAndHashCode",
        "className": "org.carrot2.core.ClusterWithParentTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testFindNotFound(org.carrot2.core.ClusterWithParentTest)",
        "methodName": "testFindNotFound",
        "className": "org.carrot2.core.ClusterWithParentTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoSubclusters(org.carrot2.core.ClusterWithParentTest)",
        "methodName": "testNoSubclusters",
        "className": "org.carrot2.core.ClusterWithParentTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testCommonSubcluster(org.carrot2.core.ClusterWithParentTest)",
        "methodName": "testCommonSubcluster",
        "className": "org.carrot2.core.ClusterWithParentTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testFindRootCluster(org.carrot2.core.ClusterWithParentTest)",
        "methodName": "testFindRootCluster",
        "className": "org.carrot2.core.ClusterWithParentTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmptyList(org.carrot2.core.ClusterWithParentTest)",
        "methodName": "testEmptyList",
        "className": "org.carrot2.core.ClusterWithParentTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDisjointSubclusters(org.carrot2.core.ClusterWithParentTest)",
        "methodName": "testDisjointSubclusters",
        "className": "org.carrot2.core.ClusterWithParentTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testCyclicReferences(org.carrot2.core.ClusterWithParentTest)",
        "methodName": "testCyclicReferences",
        "className": "org.carrot2.core.ClusterWithParentTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testCyclicReferences(org.carrot2.core.ClusterWithParentTest)",
        "methodName": "testCyclicReferences",
        "className": "org.carrot2.core.ClusterWithParentTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533200,
      "executionTime": 15,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDisjointSubclusters(org.carrot2.core.ClusterWithParentTest)",
        "methodName": "testDisjointSubclusters",
        "className": "org.carrot2.core.ClusterWithParentTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533197,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyList(org.carrot2.core.ClusterWithParentTest)",
        "methodName": "testEmptyList",
        "className": "org.carrot2.core.ClusterWithParentTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533193,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFindRootCluster(org.carrot2.core.ClusterWithParentTest)",
        "methodName": "testFindRootCluster",
        "className": "org.carrot2.core.ClusterWithParentTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533189,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCommonSubcluster(org.carrot2.core.ClusterWithParentTest)",
        "methodName": "testCommonSubcluster",
        "className": "org.carrot2.core.ClusterWithParentTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533184,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoSubclusters(org.carrot2.core.ClusterWithParentTest)",
        "methodName": "testNoSubclusters",
        "className": "org.carrot2.core.ClusterWithParentTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533181,
      "executionTime": 2,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFindNotFound(org.carrot2.core.ClusterWithParentTest)",
        "methodName": "testFindNotFound",
        "className": "org.carrot2.core.ClusterWithParentTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533178,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEqualsAndHashCode(org.carrot2.core.ClusterWithParentTest)",
        "methodName": "testEqualsAndHashCode",
        "className": "org.carrot2.core.ClusterWithParentTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533174,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFindSubcluster(org.carrot2.core.ClusterWithParentTest)",
        "methodName": "testFindSubcluster",
        "className": "org.carrot2.core.ClusterWithParentTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533170,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testFindSubcluster(org.carrot2.core.ClusterWithParentTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFindSubcluster(org.carrot2.core.ClusterWithParentTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEqualsAndHashCode(org.carrot2.core.ClusterWithParentTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEqualsAndHashCode(org.carrot2.core.ClusterWithParentTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testFindNotFound(org.carrot2.core.ClusterWithParentTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFindNotFound(org.carrot2.core.ClusterWithParentTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoSubclusters(org.carrot2.core.ClusterWithParentTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoSubclusters(org.carrot2.core.ClusterWithParentTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCommonSubcluster(org.carrot2.core.ClusterWithParentTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCommonSubcluster(org.carrot2.core.ClusterWithParentTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testFindRootCluster(org.carrot2.core.ClusterWithParentTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFindRootCluster(org.carrot2.core.ClusterWithParentTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyList(org.carrot2.core.ClusterWithParentTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyList(org.carrot2.core.ClusterWithParentTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDisjointSubclusters(org.carrot2.core.ClusterWithParentTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDisjointSubclusters(org.carrot2.core.ClusterWithParentTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCyclicReferences(org.carrot2.core.ClusterWithParentTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCyclicReferences(org.carrot2.core.ClusterWithParentTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497533218,
  "executionTime": 22,
  "description": {
    "displayName": "org.carrot2.text.linguistic.EnglishTest",
    "className": "org.carrot2.text.linguistic.EnglishTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testStemmerAvailable(org.carrot2.text.linguistic.EnglishTest)",
        "methodName": "testStemmerAvailable",
        "className": "org.carrot2.text.linguistic.EnglishTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLanguageCode(org.carrot2.text.linguistic.EnglishTest)",
        "methodName": "testLanguageCode",
        "className": "org.carrot2.text.linguistic.EnglishTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "pattern(org.carrot2.text.linguistic.EnglishTest)",
        "methodName": "pattern",
        "className": "org.carrot2.text.linguistic.EnglishTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testCommonWords(org.carrot2.text.linguistic.EnglishTest)",
        "methodName": "testCommonWords",
        "className": "org.carrot2.text.linguistic.EnglishTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStemming(org.carrot2.text.linguistic.EnglishTest)",
        "methodName": "testStemming",
        "className": "org.carrot2.text.linguistic.EnglishTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testStemming(org.carrot2.text.linguistic.EnglishTest)",
        "methodName": "testStemming",
        "className": "org.carrot2.text.linguistic.EnglishTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533237,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCommonWords(org.carrot2.text.linguistic.EnglishTest)",
        "methodName": "testCommonWords",
        "className": "org.carrot2.text.linguistic.EnglishTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533234,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "pattern(org.carrot2.text.linguistic.EnglishTest)",
        "methodName": "pattern",
        "className": "org.carrot2.text.linguistic.EnglishTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533230,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLanguageCode(org.carrot2.text.linguistic.EnglishTest)",
        "methodName": "testLanguageCode",
        "className": "org.carrot2.text.linguistic.EnglishTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533225,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStemmerAvailable(org.carrot2.text.linguistic.EnglishTest)",
        "methodName": "testStemmerAvailable",
        "className": "org.carrot2.text.linguistic.EnglishTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533220,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testStemmerAvailable(org.carrot2.text.linguistic.EnglishTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStemmerAvailable(org.carrot2.text.linguistic.EnglishTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLanguageCode(org.carrot2.text.linguistic.EnglishTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLanguageCode(org.carrot2.text.linguistic.EnglishTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "pattern(org.carrot2.text.linguistic.EnglishTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "pattern(org.carrot2.text.linguistic.EnglishTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCommonWords(org.carrot2.text.linguistic.EnglishTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCommonWords(org.carrot2.text.linguistic.EnglishTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStemming(org.carrot2.text.linguistic.EnglishTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStemming(org.carrot2.text.linguistic.EnglishTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497533244,
  "executionTime": 58,
  "description": {
    "displayName": "org.carrot2.output.metrics.ContaminationMetricTest",
    "className": "org.carrot2.output.metrics.ContaminationMetricTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testIdealClustering(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testIdealClustering",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testOverlappingPartitionsOverlappingClusters",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTrivialCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testTrivialCluster",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPartiallyContaminatedCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testPartiallyContaminatedCluster",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoPartitionInformation(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testNoPartitionInformation",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testHardPartitionsOverlappingClusters",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testFullyContaminatedCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testFullyContaminatedCluster",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmptyCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testEmptyCluster",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testAllDocumentsInOtherTopics(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testAllDocumentsInOtherTopics",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testHardClustersWithOverlappingPartitions",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPureCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testPureCluster",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testWorstCaseH(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testWorstCaseH",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testWorstCaseH(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testWorstCaseH",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533300,
      "executionTime": 2,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPureCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testPureCluster",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533297,
      "executionTime": 2,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testHardClustersWithOverlappingPartitions",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533293,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAllDocumentsInOtherTopics(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testAllDocumentsInOtherTopics",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533290,
      "executionTime": 2,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testEmptyCluster",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533287,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFullyContaminatedCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testFullyContaminatedCluster",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533283,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testHardPartitionsOverlappingClusters",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533280,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoPartitionInformation(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testNoPartitionInformation",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533276,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPartiallyContaminatedCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testPartiallyContaminatedCluster",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533272,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTrivialCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testTrivialCluster",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533269,
      "executionTime": 2,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testOverlappingPartitionsOverlappingClusters",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533264,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testIdealClustering(org.carrot2.output.metrics.ContaminationMetricTest)",
        "methodName": "testIdealClustering",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533245,
      "executionTime": 18,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testIdealClustering(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIdealClustering(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTrivialCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTrivialCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPartiallyContaminatedCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPartiallyContaminatedCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoPartitionInformation(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoPartitionInformation(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testFullyContaminatedCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFullyContaminatedCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAllDocumentsInOtherTopics(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAllDocumentsInOtherTopics(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPureCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPureCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testWorstCaseH(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testWorstCaseH(org.carrot2.output.metrics.ContaminationMetricTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497533303,
  "executionTime": 11,
  "description": {
    "displayName": "org.carrot2.util.LinearApproximationTest",
    "className": "org.carrot2.util.LinearApproximationTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testTwoPoints(org.carrot2.util.LinearApproximationTest)",
        "methodName": "testTwoPoints",
        "className": "org.carrot2.util.LinearApproximationTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOnePoint(org.carrot2.util.LinearApproximationTest)",
        "methodName": "testOnePoint",
        "className": "org.carrot2.util.LinearApproximationTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testThreePoints(org.carrot2.util.LinearApproximationTest)",
        "methodName": "testThreePoints",
        "className": "org.carrot2.util.LinearApproximationTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testThreePoints(org.carrot2.util.LinearApproximationTest)",
        "methodName": "testThreePoints",
        "className": "org.carrot2.util.LinearApproximationTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533311,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOnePoint(org.carrot2.util.LinearApproximationTest)",
        "methodName": "testOnePoint",
        "className": "org.carrot2.util.LinearApproximationTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533308,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTwoPoints(org.carrot2.util.LinearApproximationTest)",
        "methodName": "testTwoPoints",
        "className": "org.carrot2.util.LinearApproximationTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533304,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testTwoPoints(org.carrot2.util.LinearApproximationTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTwoPoints(org.carrot2.util.LinearApproximationTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOnePoint(org.carrot2.util.LinearApproximationTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOnePoint(org.carrot2.util.LinearApproximationTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testThreePoints(org.carrot2.util.LinearApproximationTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testThreePoints(org.carrot2.util.LinearApproximationTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497533317,
  "executionTime": 1432,
  "description": {
    "displayName": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
    "className": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testAllTopicsWithMinTopicSize(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
        "methodName": "testAllTopicsWithMinTopicSize",
        "className": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testAllTopicsWithoutDocumentsWithoutTopic(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
        "methodName": "testAllTopicsWithoutDocumentsWithoutTopic",
        "className": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMetadataAvailable(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testData(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
        "methodName": "testData",
        "className": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testAllTopicsWithDocumentsWithoutTopic(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
        "methodName": "testAllTopicsWithDocumentsWithoutTopic",
        "className": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testResultsNumber(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
        "methodName": "testResultsNumber",
        "className": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testResultsNumber(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
        "methodName": "testResultsNumber",
        "className": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534744,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAllTopicsWithDocumentsWithoutTopic(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
        "methodName": "testAllTopicsWithDocumentsWithoutTopic",
        "className": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534596,
      "executionTime": 141,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testData(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
        "methodName": "testData",
        "className": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534591,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMetadataAvailable(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534583,
      "executionTime": 7,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAllTopicsWithoutDocumentsWithoutTopic(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
        "methodName": "testAllTopicsWithoutDocumentsWithoutTopic",
        "className": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534408,
      "executionTime": 175,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAllTopicsWithMinTopicSize(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
        "methodName": "testAllTopicsWithMinTopicSize",
        "className": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533318,
      "executionTime": 1090,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testAllTopicsWithMinTopicSize(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAllTopicsWithMinTopicSize(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAllTopicsWithoutDocumentsWithoutTopic(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAllTopicsWithoutDocumentsWithoutTopic(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testData(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testData(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAllTopicsWithDocumentsWithoutTopic(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAllTopicsWithDocumentsWithoutTopic(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testResultsNumber(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testResultsNumber(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497534752,
  "executionTime": 10,
  "description": {
    "displayName": "org.carrot2.webapp.source.WebDocumentSourceTest",
    "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testResultsTotal(org.carrot2.webapp.source.WebDocumentSourceTest)",
        "methodName": "testResultsTotal",
        "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testFirstResults(org.carrot2.webapp.source.WebDocumentSourceTest)",
        "methodName": "testFirstResults",
        "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLargeQuery(org.carrot2.webapp.source.WebDocumentSourceTest)",
        "methodName": "testLargeQuery",
        "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMetadataAvailable(org.carrot2.webapp.source.WebDocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHtmlUnescaping(org.carrot2.webapp.source.WebDocumentSourceTest)",
        "methodName": "testHtmlUnescaping",
        "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testUtfCharacters(org.carrot2.webapp.source.WebDocumentSourceTest)",
        "methodName": "testUtfCharacters",
        "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSmallQuery(org.carrot2.webapp.source.WebDocumentSourceTest)",
        "methodName": "testSmallQuery",
        "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testURLsUnique(org.carrot2.webapp.source.WebDocumentSourceTest)",
        "methodName": "testURLsUnique",
        "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInCachingController(org.carrot2.webapp.source.WebDocumentSourceTest)",
        "methodName": "testInCachingController",
        "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoResultsQuery(org.carrot2.webapp.source.WebDocumentSourceTest)",
        "methodName": "testNoResultsQuery",
        "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testNoResultsQuery(org.carrot2.webapp.source.WebDocumentSourceTest)",
        "methodName": "testNoResultsQuery",
        "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534762,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInCachingController(org.carrot2.webapp.source.WebDocumentSourceTest)",
        "methodName": "testInCachingController",
        "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534762,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testURLsUnique(org.carrot2.webapp.source.WebDocumentSourceTest)",
        "methodName": "testURLsUnique",
        "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534761,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSmallQuery(org.carrot2.webapp.source.WebDocumentSourceTest)",
        "methodName": "testSmallQuery",
        "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534761,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUtfCharacters(org.carrot2.webapp.source.WebDocumentSourceTest)",
        "methodName": "testUtfCharacters",
        "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534761,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHtmlUnescaping(org.carrot2.webapp.source.WebDocumentSourceTest)",
        "methodName": "testHtmlUnescaping",
        "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534761,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMetadataAvailable(org.carrot2.webapp.source.WebDocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534754,
      "executionTime": 6,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLargeQuery(org.carrot2.webapp.source.WebDocumentSourceTest)",
        "methodName": "testLargeQuery",
        "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534754,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFirstResults(org.carrot2.webapp.source.WebDocumentSourceTest)",
        "methodName": "testFirstResults",
        "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534753,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testResultsTotal(org.carrot2.webapp.source.WebDocumentSourceTest)",
        "methodName": "testResultsTotal",
        "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534753,
      "executionTime": 0,
      "slave": 3,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testResultsTotal(org.carrot2.webapp.source.WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testResultsTotal(org.carrot2.webapp.source.WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testFirstResults(org.carrot2.webapp.source.WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFirstResults(org.carrot2.webapp.source.WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLargeQuery(org.carrot2.webapp.source.WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLargeQuery(org.carrot2.webapp.source.WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.webapp.source.WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.webapp.source.WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHtmlUnescaping(org.carrot2.webapp.source.WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHtmlUnescaping(org.carrot2.webapp.source.WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testUtfCharacters(org.carrot2.webapp.source.WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUtfCharacters(org.carrot2.webapp.source.WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSmallQuery(org.carrot2.webapp.source.WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSmallQuery(org.carrot2.webapp.source.WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testURLsUnique(org.carrot2.webapp.source.WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testURLsUnique(org.carrot2.webapp.source.WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInCachingController(org.carrot2.webapp.source.WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInCachingController(org.carrot2.webapp.source.WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoResultsQuery(org.carrot2.webapp.source.WebDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoResultsQuery(org.carrot2.webapp.source.WebDocumentSourceTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497534763,
  "executionTime": 16,
  "description": {
    "displayName": "org.carrot2.util.attribute.ConstraintTest",
    "className": "org.carrot2.util.attribute.ConstraintTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testViolatedStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)",
        "methodName": "testViolatedStrictImplementingClasses",
        "className": "org.carrot2.util.attribute.ConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNonStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)",
        "methodName": "testNonStrictImplementingClasses",
        "className": "org.carrot2.util.attribute.ConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)",
        "methodName": "testStrictImplementingClasses",
        "className": "org.carrot2.util.attribute.ConstraintTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)",
        "methodName": "testStrictImplementingClasses",
        "className": "org.carrot2.util.attribute.ConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534776,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNonStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)",
        "methodName": "testNonStrictImplementingClasses",
        "className": "org.carrot2.util.attribute.ConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534770,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testViolatedStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)",
        "methodName": "testViolatedStrictImplementingClasses",
        "className": "org.carrot2.util.attribute.ConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534764,
      "executionTime": 6,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testViolatedStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testViolatedStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNonStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNonStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497534781,
  "executionTime": 21,
  "description": {
    "displayName": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
    "className": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testInvalidString(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
        "methodName": "testInvalidString",
        "className": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNull(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
        "methodName": "testNull",
        "className": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
        "methodName": "testInvalidType",
        "className": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testValidCharSequence(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
        "methodName": "testValidCharSequence",
        "className": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInvalidCharSequence(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
        "methodName": "testInvalidCharSequence",
        "className": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testValidString(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
        "methodName": "testValidString",
        "className": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testValidString(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
        "methodName": "testValidString",
        "className": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534800,
      "executionTime": 2,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInvalidCharSequence(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
        "methodName": "testInvalidCharSequence",
        "className": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534796,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testValidCharSequence(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
        "methodName": "testValidCharSequence",
        "className": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534793,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
        "methodName": "testInvalidType",
        "className": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534790,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNull(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
        "methodName": "testNull",
        "className": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534787,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInvalidString(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
        "methodName": "testInvalidString",
        "className": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534782,
      "executionTime": 5,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testInvalidString(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInvalidString(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNull(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNull(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInvalidType(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInvalidType(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testValidCharSequence(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testValidCharSequence(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInvalidCharSequence(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInvalidCharSequence(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testValidString(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testValidString(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 3,
  "startTimestamp": 1325497534804,
  "executionTime": 22,
  "description": {
    "displayName": "org.carrot2.source.opensearch.OpenSearchDocumentSourceTest",
    "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testResultsPerPageNotSet(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
        "methodName": "testResultsPerPageNotSet",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoStartPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
        "methodName": "testNoStartPresent",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testBothStartsPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
        "methodName": "testBothStartsPresent",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testCorrectConfiguration(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
        "methodName": "testCorrectConfiguration",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSearchTermsNotPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
        "methodName": "testSearchTermsNotPresent",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testSearchTermsNotPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
        "methodName": "testSearchTermsNotPresent",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534822,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCorrectConfiguration(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
        "methodName": "testCorrectConfiguration",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534817,
      "executionTime": 4,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testBothStartsPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
        "methodName": "testBothStartsPresent",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534814,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoStartPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
        "methodName": "testNoStartPresent",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534811,
      "executionTime": 3,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testResultsPerPageNotSet(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
        "methodName": "testResultsPerPageNotSet",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534805,
      "executionTime": 6,
      "slave": 3,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testResultsPerPageNotSet(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testResultsPerPageNotSet(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoStartPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoStartPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testBothStartsPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testBothStartsPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCorrectConfiguration(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCorrectConfiguration(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSearchTermsNotPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSearchTermsNotPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497530150,
  "executionTime": 1051,
  "description": {
    "displayName": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
    "className": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testAllTopicsWithMinTopicSize(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
        "methodName": "testAllTopicsWithMinTopicSize",
        "className": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testAllTopicsWithoutDocumentsWithoutTopic(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
        "methodName": "testAllTopicsWithoutDocumentsWithoutTopic",
        "className": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMetadataAvailable(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testData(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
        "methodName": "testData",
        "className": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testAllTopicsWithDocumentsWithoutTopic(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
        "methodName": "testAllTopicsWithDocumentsWithoutTopic",
        "className": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testResultsNumber(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
        "methodName": "testResultsNumber",
        "className": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testResultsNumber(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
        "methodName": "testResultsNumber",
        "className": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531186,
      "executionTime": 14,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAllTopicsWithDocumentsWithoutTopic(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
        "methodName": "testAllTopicsWithDocumentsWithoutTopic",
        "className": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531107,
      "executionTime": 76,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testData(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
        "methodName": "testData",
        "className": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531102,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMetadataAvailable(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531087,
      "executionTime": 14,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAllTopicsWithoutDocumentsWithoutTopic(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
        "methodName": "testAllTopicsWithoutDocumentsWithoutTopic",
        "className": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530983,
      "executionTime": 96,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAllTopicsWithMinTopicSize(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
        "methodName": "testAllTopicsWithMinTopicSize",
        "className": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497530641,
      "executionTime": 342,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testAllTopicsWithMinTopicSize(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAllTopicsWithMinTopicSize(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAllTopicsWithoutDocumentsWithoutTopic(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAllTopicsWithoutDocumentsWithoutTopic(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testData(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testData(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAllTopicsWithDocumentsWithoutTopic(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAllTopicsWithDocumentsWithoutTopic(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testResultsNumber(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testResultsNumber(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497531204,
  "executionTime": 2175,
  "description": {
    "displayName": "org.carrot2.text.suffixtree.SuffixTreeTest",
    "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testInternalNodes(org.carrot2.text.suffixtree.SuffixTreeTest)",
        "methodName": "testInternalNodes",
        "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "checkStatesCount(org.carrot2.text.suffixtree.SuffixTreeTest)",
        "methodName": "checkStatesCount",
        "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "checkTransitionsCount(org.carrot2.text.suffixtree.SuffixTreeTest)",
        "methodName": "checkTransitionsCount",
        "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTreeVisitor(org.carrot2.text.suffixtree.SuffixTreeTest)",
        "methodName": "testTreeVisitor",
        "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "checkBanana(org.carrot2.text.suffixtree.SuffixTreeTest)",
        "methodName": "checkBanana",
        "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testContainsSuffix(org.carrot2.text.suffixtree.SuffixTreeTest)",
        "methodName": "testContainsSuffix",
        "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "checkRandomSymbols(org.carrot2.text.suffixtree.SuffixTreeTest)",
        "methodName": "checkRandomSymbols",
        "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "checkMississipi(org.carrot2.text.suffixtree.SuffixTreeTest)",
        "methodName": "checkMississipi",
        "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "checkCocoa(org.carrot2.text.suffixtree.SuffixTreeTest)",
        "methodName": "checkCocoa",
        "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "checkCocoa(org.carrot2.text.suffixtree.SuffixTreeTest)",
        "methodName": "checkCocoa",
        "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533374,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "checkMississipi(org.carrot2.text.suffixtree.SuffixTreeTest)",
        "methodName": "checkMississipi",
        "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533369,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "checkRandomSymbols(org.carrot2.text.suffixtree.SuffixTreeTest)",
        "methodName": "checkRandomSymbols",
        "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531275,
      "executionTime": 2093,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testContainsSuffix(org.carrot2.text.suffixtree.SuffixTreeTest)",
        "methodName": "testContainsSuffix",
        "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531269,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "checkBanana(org.carrot2.text.suffixtree.SuffixTreeTest)",
        "methodName": "checkBanana",
        "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531265,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTreeVisitor(org.carrot2.text.suffixtree.SuffixTreeTest)",
        "methodName": "testTreeVisitor",
        "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531256,
      "executionTime": 9,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "checkTransitionsCount(org.carrot2.text.suffixtree.SuffixTreeTest)",
        "methodName": "checkTransitionsCount",
        "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531238,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "checkStatesCount(org.carrot2.text.suffixtree.SuffixTreeTest)",
        "methodName": "checkStatesCount",
        "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531233,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInternalNodes(org.carrot2.text.suffixtree.SuffixTreeTest)",
        "methodName": "testInternalNodes",
        "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497531221,
      "executionTime": 11,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testInternalNodes(org.carrot2.text.suffixtree.SuffixTreeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInternalNodes(org.carrot2.text.suffixtree.SuffixTreeTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "checkStatesCount(org.carrot2.text.suffixtree.SuffixTreeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "checkStatesCount(org.carrot2.text.suffixtree.SuffixTreeTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "checkTransitionsCount(org.carrot2.text.suffixtree.SuffixTreeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "checkTransitionsCount(org.carrot2.text.suffixtree.SuffixTreeTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTreeVisitor(org.carrot2.text.suffixtree.SuffixTreeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTreeVisitor(org.carrot2.text.suffixtree.SuffixTreeTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "checkBanana(org.carrot2.text.suffixtree.SuffixTreeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "checkBanana(org.carrot2.text.suffixtree.SuffixTreeTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testContainsSuffix(org.carrot2.text.suffixtree.SuffixTreeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testContainsSuffix(org.carrot2.text.suffixtree.SuffixTreeTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "checkRandomSymbols(org.carrot2.text.suffixtree.SuffixTreeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "checkRandomSymbols(org.carrot2.text.suffixtree.SuffixTreeTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "checkMississipi(org.carrot2.text.suffixtree.SuffixTreeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "checkMississipi(org.carrot2.text.suffixtree.SuffixTreeTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "checkCocoa(org.carrot2.text.suffixtree.SuffixTreeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "checkCocoa(org.carrot2.text.suffixtree.SuffixTreeTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497533382,
  "executionTime": 573,
  "description": {
    "displayName": "org.carrot2.source.lucene.FSDirectoryWrapperTest",
    "className": "org.carrot2.source.lucene.FSDirectoryWrapperTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testFSDirectorySerialization(org.carrot2.source.lucene.FSDirectoryWrapperTest)",
        "methodName": "testFSDirectorySerialization",
        "className": "org.carrot2.source.lucene.FSDirectoryWrapperTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testFSDirectorySerialization(org.carrot2.source.lucene.FSDirectoryWrapperTest)",
        "methodName": "testFSDirectorySerialization",
        "className": "org.carrot2.source.lucene.FSDirectoryWrapperTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533851,
      "executionTime": 98,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testFSDirectorySerialization(org.carrot2.source.lucene.FSDirectoryWrapperTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFSDirectorySerialization(org.carrot2.source.lucene.FSDirectoryWrapperTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497533957,
  "executionTime": 520,
  "description": {
    "displayName": "org.carrot2.text.linguistic.DefaultTokenizerFactoryTest",
    "className": "org.carrot2.text.linguistic.DefaultTokenizerFactoryTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testChineseHasSmartChineseTokenizer(org.carrot2.text.linguistic.DefaultTokenizerFactoryTest)",
        "methodName": "testChineseHasSmartChineseTokenizer",
        "className": "org.carrot2.text.linguistic.DefaultTokenizerFactoryTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testChineseHasSmartChineseTokenizer(org.carrot2.text.linguistic.DefaultTokenizerFactoryTest)",
        "methodName": "testChineseHasSmartChineseTokenizer",
        "className": "org.carrot2.text.linguistic.DefaultTokenizerFactoryTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533957,
      "executionTime": 519,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testChineseHasSmartChineseTokenizer(org.carrot2.text.linguistic.DefaultTokenizerFactoryTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testChineseHasSmartChineseTokenizer(org.carrot2.text.linguistic.DefaultTokenizerFactoryTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497534479,
  "executionTime": 29,
  "description": {
    "displayName": "org.carrot2.util.ExceptionUtilsTest",
    "className": "org.carrot2.util.ExceptionUtilsTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testWrappedWithInitCause(org.carrot2.util.ExceptionUtilsTest)",
        "methodName": "testWrappedWithInitCause",
        "className": "org.carrot2.util.ExceptionUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testWrappedWithConstructor(org.carrot2.util.ExceptionUtilsTest)",
        "methodName": "testWrappedWithConstructor",
        "className": "org.carrot2.util.ExceptionUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoMatchingWrapperFound(org.carrot2.util.ExceptionUtilsTest)",
        "methodName": "testNoMatchingWrapperFound",
        "className": "org.carrot2.util.ExceptionUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNotWrappedAtAll(org.carrot2.util.ExceptionUtilsTest)",
        "methodName": "testNotWrappedAtAll",
        "className": "org.carrot2.util.ExceptionUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testWrappedWithStingConstructor(org.carrot2.util.ExceptionUtilsTest)",
        "methodName": "testWrappedWithStingConstructor",
        "className": "org.carrot2.util.ExceptionUtilsTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testWrappedWithStingConstructor(org.carrot2.util.ExceptionUtilsTest)",
        "methodName": "testWrappedWithStingConstructor",
        "className": "org.carrot2.util.ExceptionUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534504,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNotWrappedAtAll(org.carrot2.util.ExceptionUtilsTest)",
        "methodName": "testNotWrappedAtAll",
        "className": "org.carrot2.util.ExceptionUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534500,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoMatchingWrapperFound(org.carrot2.util.ExceptionUtilsTest)",
        "methodName": "testNoMatchingWrapperFound",
        "className": "org.carrot2.util.ExceptionUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534496,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testWrappedWithConstructor(org.carrot2.util.ExceptionUtilsTest)",
        "methodName": "testWrappedWithConstructor",
        "className": "org.carrot2.util.ExceptionUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534489,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testWrappedWithInitCause(org.carrot2.util.ExceptionUtilsTest)",
        "methodName": "testWrappedWithInitCause",
        "className": "org.carrot2.util.ExceptionUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534480,
      "executionTime": 8,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testWrappedWithInitCause(org.carrot2.util.ExceptionUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testWrappedWithInitCause(org.carrot2.util.ExceptionUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testWrappedWithConstructor(org.carrot2.util.ExceptionUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testWrappedWithConstructor(org.carrot2.util.ExceptionUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoMatchingWrapperFound(org.carrot2.util.ExceptionUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoMatchingWrapperFound(org.carrot2.util.ExceptionUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNotWrappedAtAll(org.carrot2.util.ExceptionUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNotWrappedAtAll(org.carrot2.util.ExceptionUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testWrappedWithStingConstructor(org.carrot2.util.ExceptionUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testWrappedWithStingConstructor(org.carrot2.util.ExceptionUtilsTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497534512,
  "executionTime": 724,
  "description": {
    "displayName": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
    "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testClusteringDataMining(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
        "methodName": "testClusteringDataMining",
        "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoDocuments(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
        "methodName": "testNoDocuments",
        "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmptyDocuments(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
        "methodName": "testEmptyDocuments",
        "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "smokeTest(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
        "methodName": "smokeTest",
        "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMetadataAvailable(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testRepeatedClusteringWithCache(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
        "methodName": "testRepeatedClusteringWithCache",
        "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testStress(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
        "methodName": "testStress",
        "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testStress(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
        "methodName": "testStress",
        "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535235,
      "executionTime": 1,
      "slave": 1,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRepeatedClusteringWithCache(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
        "methodName": "testRepeatedClusteringWithCache",
        "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535001,
      "executionTime": 234,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMetadataAvailable(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534997,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "smokeTest(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
        "methodName": "smokeTest",
        "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534978,
      "executionTime": 19,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyDocuments(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
        "methodName": "testEmptyDocuments",
        "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534969,
      "executionTime": 9,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoDocuments(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
        "methodName": "testNoDocuments",
        "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534963,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testClusteringDataMining(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
        "methodName": "testClusteringDataMining",
        "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534513,
      "executionTime": 449,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testClusteringDataMining(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testClusteringDataMining(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoDocuments(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoDocuments(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyDocuments(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyDocuments(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "smokeTest(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "smokeTest(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testRepeatedClusteringWithCache(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRepeatedClusteringWithCache(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStress(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStress(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497535242,
  "executionTime": 466,
  "description": {
    "displayName": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
    "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "luceneDocumentNotSerialized(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "luceneDocumentNotSerialized",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "luceneDocumentPassing(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "luceneDocumentPassing",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testCatchAllQueryWithHighlighting(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testCatchAllQueryWithHighlighting",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testURLsUnique(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testURLsUnique",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "luceneDocumentNotPassedByDefault(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "luceneDocumentNotPassedByDefault",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMultiEntryField(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testMultiEntryField",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "luceneScorePassing(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "luceneScorePassing",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testCustomQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testCustomQuery",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testAdvancedQueries(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testAdvancedQueries",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHtmlUnescaping(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testHtmlUnescaping",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoResultsQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testNoResultsQuery",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testResultsTotal(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testResultsTotal",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLargeQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testLargeQuery",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMetadataAvailable(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testCustomFormatter(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testCustomFormatter",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testUtfCharacters(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testUtfCharacters",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSmallQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testSmallQuery",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInCachingController(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testInCachingController",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testInCachingController(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testInCachingController",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535708,
      "executionTime": 0,
      "slave": 1,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSmallQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testSmallQuery",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535708,
      "executionTime": 0,
      "slave": 1,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUtfCharacters(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testUtfCharacters",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535707,
      "executionTime": 0,
      "slave": 1,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCustomFormatter(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testCustomFormatter",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535672,
      "executionTime": 35,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMetadataAvailable(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535668,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLargeQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testLargeQuery",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535668,
      "executionTime": 0,
      "slave": 1,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testResultsTotal(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testResultsTotal",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535667,
      "executionTime": 1,
      "slave": 1,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoResultsQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testNoResultsQuery",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535667,
      "executionTime": 0,
      "slave": 1,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHtmlUnescaping(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testHtmlUnescaping",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535667,
      "executionTime": 0,
      "slave": 1,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAdvancedQueries(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testAdvancedQueries",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535616,
      "executionTime": 51,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCustomQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testCustomQuery",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535584,
      "executionTime": 32,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "luceneScorePassing(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "luceneScorePassing",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535571,
      "executionTime": 13,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMultiEntryField(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testMultiEntryField",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535562,
      "executionTime": 8,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "luceneDocumentNotPassedByDefault(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "luceneDocumentNotPassedByDefault",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535550,
      "executionTime": 12,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testURLsUnique(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testURLsUnique",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535549,
      "executionTime": 0,
      "slave": 1,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCatchAllQueryWithHighlighting(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "testCatchAllQueryWithHighlighting",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535540,
      "executionTime": 9,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "luceneDocumentPassing(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "luceneDocumentPassing",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535527,
      "executionTime": 12,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "luceneDocumentNotSerialized(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
        "methodName": "luceneDocumentNotSerialized",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535286,
      "executionTime": 241,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "luceneDocumentNotSerialized(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "luceneDocumentNotSerialized(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "luceneDocumentPassing(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "luceneDocumentPassing(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCatchAllQueryWithHighlighting(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCatchAllQueryWithHighlighting(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testURLsUnique(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testURLsUnique(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "luceneDocumentNotPassedByDefault(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "luceneDocumentNotPassedByDefault(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMultiEntryField(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMultiEntryField(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "luceneScorePassing(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "luceneScorePassing(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCustomQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCustomQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAdvancedQueries(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAdvancedQueries(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHtmlUnescaping(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHtmlUnescaping(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoResultsQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoResultsQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testResultsTotal(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testResultsTotal(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLargeQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLargeQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCustomFormatter(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCustomFormatter(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testUtfCharacters(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUtfCharacters(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSmallQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSmallQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInCachingController(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInCachingController(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497535709,
  "executionTime": 7,
  "description": {
    "displayName": "org.carrot2.text.linguistic.LanguageModelTest",
    "className": "org.carrot2.text.linguistic.LanguageModelTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testLanguageModelReturnsCachedStemmer(org.carrot2.text.linguistic.LanguageModelTest)",
        "methodName": "testLanguageModelReturnsCachedStemmer",
        "className": "org.carrot2.text.linguistic.LanguageModelTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLanguageModelReturnsCachedTokenizer(org.carrot2.text.linguistic.LanguageModelTest)",
        "methodName": "testLanguageModelReturnsCachedTokenizer",
        "className": "org.carrot2.text.linguistic.LanguageModelTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testLanguageModelReturnsCachedTokenizer(org.carrot2.text.linguistic.LanguageModelTest)",
        "methodName": "testLanguageModelReturnsCachedTokenizer",
        "className": "org.carrot2.text.linguistic.LanguageModelTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535713,
      "executionTime": 2,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLanguageModelReturnsCachedStemmer(org.carrot2.text.linguistic.LanguageModelTest)",
        "methodName": "testLanguageModelReturnsCachedStemmer",
        "className": "org.carrot2.text.linguistic.LanguageModelTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535710,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testLanguageModelReturnsCachedStemmer(org.carrot2.text.linguistic.LanguageModelTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLanguageModelReturnsCachedStemmer(org.carrot2.text.linguistic.LanguageModelTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLanguageModelReturnsCachedTokenizer(org.carrot2.text.linguistic.LanguageModelTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLanguageModelReturnsCachedTokenizer(org.carrot2.text.linguistic.LanguageModelTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497535717,
  "executionTime": 31,
  "description": {
    "displayName": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
    "className": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testExternalFeatureScores(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
        "methodName": "testExternalFeatureScores",
        "className": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoPhrases(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
        "methodName": "testNoPhrases",
        "className": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSinglePhraseSingleWords(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
        "methodName": "testSinglePhraseSingleWords",
        "className": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testQueryWordsRemoval(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
        "methodName": "testQueryWordsRemoval",
        "className": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmpty(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSinglePhraseNoSingleWords(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
        "methodName": "testSinglePhraseNoSingleWords",
        "className": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testSinglePhraseNoSingleWords(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
        "methodName": "testSinglePhraseNoSingleWords",
        "className": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535745,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535743,
      "executionTime": 2,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testQueryWordsRemoval(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
        "methodName": "testQueryWordsRemoval",
        "className": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535739,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSinglePhraseSingleWords(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
        "methodName": "testSinglePhraseSingleWords",
        "className": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535736,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoPhrases(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
        "methodName": "testNoPhrases",
        "className": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535733,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExternalFeatureScores(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
        "methodName": "testExternalFeatureScores",
        "className": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535718,
      "executionTime": 15,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testExternalFeatureScores(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExternalFeatureScores(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoPhrases(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoPhrases(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSinglePhraseSingleWords(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSinglePhraseSingleWords(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testQueryWordsRemoval(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testQueryWordsRemoval(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmpty(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSinglePhraseNoSingleWords(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSinglePhraseNoSingleWords(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497535750,
  "executionTime": 11,
  "description": {
    "displayName": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
    "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testUtfCharacters(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
        "methodName": "testUtfCharacters",
        "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testResultsTotal(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
        "methodName": "testResultsTotal",
        "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSmallQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
        "methodName": "testSmallQuery",
        "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMetadataAvailable(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHtmlUnescaping(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
        "methodName": "testHtmlUnescaping",
        "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testURLsUnique(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
        "methodName": "testURLsUnique",
        "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoResultsQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
        "methodName": "testNoResultsQuery",
        "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLargeQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
        "methodName": "testLargeQuery",
        "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInCachingController(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
        "methodName": "testInCachingController",
        "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testInCachingController(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
        "methodName": "testInCachingController",
        "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535761,
      "executionTime": 0,
      "slave": 1,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLargeQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
        "methodName": "testLargeQuery",
        "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535760,
      "executionTime": 0,
      "slave": 1,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoResultsQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
        "methodName": "testNoResultsQuery",
        "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535760,
      "executionTime": 0,
      "slave": 1,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testURLsUnique(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
        "methodName": "testURLsUnique",
        "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535760,
      "executionTime": 0,
      "slave": 1,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHtmlUnescaping(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
        "methodName": "testHtmlUnescaping",
        "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535760,
      "executionTime": 0,
      "slave": 1,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMetadataAvailable(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535754,
      "executionTime": 6,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSmallQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
        "methodName": "testSmallQuery",
        "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535754,
      "executionTime": 0,
      "slave": 1,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testResultsTotal(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
        "methodName": "testResultsTotal",
        "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535753,
      "executionTime": 0,
      "slave": 1,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUtfCharacters(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
        "methodName": "testUtfCharacters",
        "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535753,
      "executionTime": 0,
      "slave": 1,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testUtfCharacters(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUtfCharacters(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testResultsTotal(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testResultsTotal(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSmallQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSmallQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHtmlUnescaping(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHtmlUnescaping(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testURLsUnique(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testURLsUnique(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoResultsQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoResultsQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLargeQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLargeQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInCachingController(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInCachingController(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497535763,
  "executionTime": 68,
  "description": {
    "displayName": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
    "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testFullyContaminatedCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testFullyContaminatedCluster",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testAllDocumentsInOtherTopics(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testAllDocumentsInOtherTopics",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testHardPartitionsOverlappingClusters",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTrivialCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testTrivialCluster",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPureCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testPureCluster",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPartiallyContaminatedCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testPartiallyContaminatedCluster",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testHardClustersWithOverlappingPartitions",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmptyCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testEmptyCluster",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoPartitionInformation(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testNoPartitionInformation",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testIdealClustering(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testIdealClustering",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testOverlappingPartitionsOverlappingClusters",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testOverlappingPartitionsOverlappingClusters",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535826,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testIdealClustering(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testIdealClustering",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535822,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoPartitionInformation(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testNoPartitionInformation",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535817,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testEmptyCluster",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535812,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testHardClustersWithOverlappingPartitions",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535806,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPartiallyContaminatedCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testPartiallyContaminatedCluster",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535802,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPureCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testPureCluster",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535799,
      "executionTime": 2,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTrivialCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testTrivialCluster",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535792,
      "executionTime": 6,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testHardPartitionsOverlappingClusters",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535777,
      "executionTime": 15,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAllDocumentsInOtherTopics(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testAllDocumentsInOtherTopics",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535774,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testFullyContaminatedCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
        "methodName": "testFullyContaminatedCluster",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535764,
      "executionTime": 10,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testFullyContaminatedCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testFullyContaminatedCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAllDocumentsInOtherTopics(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAllDocumentsInOtherTopics(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTrivialCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTrivialCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPureCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPureCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPartiallyContaminatedCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPartiallyContaminatedCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoPartitionInformation(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoPartitionInformation(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testIdealClustering(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIdealClustering(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497535834,
  "executionTime": 24,
  "description": {
    "displayName": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
    "className": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testNoPhrases(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
        "methodName": "testNoPhrases",
        "className": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSinglePhraseNoSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
        "methodName": "testSinglePhraseNoSingleWords",
        "className": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTwoPhrasesNoSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
        "methodName": "testTwoPhrasesNoSingleWords",
        "className": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSinglePhraseSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
        "methodName": "testSinglePhraseSingleWords",
        "className": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmpty(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSinglePhraseWithStopWord(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
        "methodName": "testSinglePhraseWithStopWord",
        "className": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testSinglePhraseWithStopWord(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
        "methodName": "testSinglePhraseWithStopWord",
        "className": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535855,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535852,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSinglePhraseSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
        "methodName": "testSinglePhraseSingleWords",
        "className": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535849,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testTwoPhrasesNoSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
        "methodName": "testTwoPhrasesNoSingleWords",
        "className": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535845,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSinglePhraseNoSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
        "methodName": "testSinglePhraseNoSingleWords",
        "className": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535840,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoPhrases(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
        "methodName": "testNoPhrases",
        "className": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535835,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testNoPhrases(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoPhrases(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSinglePhraseNoSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSinglePhraseNoSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTwoPhrasesNoSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTwoPhrasesNoSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSinglePhraseSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSinglePhraseSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmpty(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSinglePhraseWithStopWord(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSinglePhraseWithStopWord(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497532462,
  "executionTime": 3212,
  "description": {
    "displayName": "org.carrot2.core.ControllerTest",
    "className": "org.carrot2.core.ControllerTest",
    "annotations": [
      {
        "org.junit.runners.Suite$SuiteClasses": {
          "value": [
            "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
            "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
            "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
            "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
            "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
            "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests"
          ]
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "org.junit.runners.Suite"
        }
      }
    ],
    "children": [
      {
        "displayName": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
        "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          },
          {
            "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
              "stackSamples": 10,
              "linger": 2000,
              "leakedThreadsBelongToSuite": false,
              "failTestIfLeaking": true
            }
          }
        ],
        "children": [
          {
            "displayName": "testUsingPoolingManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
            "methodName": "testUsingPoolingManagerWithMoreThanOneController",
            "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testUnexpectedComponentDesignatorType(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
            "methodName": "testUnexpectedComponentDesignatorType",
            "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testUnknownComponentId(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
            "methodName": "testUnknownComponentId",
            "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testUsingSimpleManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
            "methodName": "testUsingSimpleManagerWithMoreThanOneController",
            "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testAutomaticInitialization(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
            "methodName": "testAutomaticInitialization",
            "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testUsingCachingManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
            "methodName": "testUsingCachingManagerWithMoreThanOneController",
            "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testUnexpectedComponentClass(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
            "methodName": "testUnexpectedComponentClass",
            "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testMultipleInitialization(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
            "methodName": "testMultipleInitialization",
            "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testMultipleDisposal(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
            "methodName": "testMultipleDisposal",
            "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
            "annotations": [],
            "children": []
          }
        ]
      },
      {
        "displayName": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          },
          {
            "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
              "stackSamples": 10,
              "linger": 5000,
              "leakedThreadsBelongToSuite": false,
              "failTestIfLeaking": true
            }
          }
        ],
        "children": [
          {
            "displayName": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testEmptyStatsInNewController",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testUnrelatedProcessingAttributesCopiedOnOutput",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "settingInitAttributeToNull",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testStatsTwoGoodQueriesCached",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testNormalExecution3Components(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testNormalExecution3Components",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testProcessingInvocationMethods",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testExceptionDuringProcessing",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testCollectionOfInitOutputAttributes",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testPassingRequiredProcessingAttribute",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testExceptionAfterProcessing",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStress(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testStress",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testInputAttributesCopiedOnOutput",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testExceptionWhileCreatingInstances",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testComponentConfigurationDifferentInitAttributes",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testComponentConfigurationProcessingAttributeAtInitTime",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testExceptionBeforeProcessing",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testNormalExecutionTimeMeasurement",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testComponentConfigurationDuplicateComponentId",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testStatsOneGoodQuery",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testOutputAttributesWithNullValues",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionWhileInit(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testExceptionWhileInit",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testStatsOneGoodQueryOneErrorQuery",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testContextDisposal(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testContextDisposal",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testNormalExecution1Component(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
            "methodName": "testNormalExecution1Component",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [],
            "children": []
          }
        ]
      },
      {
        "displayName": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          },
          {
            "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
              "stackSamples": 10,
              "linger": 5000,
              "leakedThreadsBelongToSuite": false,
              "failTestIfLeaking": true
            }
          }
        ],
        "children": [
          {
            "displayName": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testEmptyStatsInNewController",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testUnrelatedProcessingAttributesCopiedOnOutput",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "settingInitAttributeToNull",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testStatsTwoGoodQueriesCached",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testNormalExecution3Components(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testNormalExecution3Components",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testProcessingInvocationMethods",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testExceptionDuringProcessing",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testCollectionOfInitOutputAttributes",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testPassingRequiredProcessingAttribute",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testExceptionAfterProcessing",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStress(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testStress",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testInputAttributesCopiedOnOutput",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testExceptionWhileCreatingInstances",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testComponentConfigurationDifferentInitAttributes",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testComponentConfigurationProcessingAttributeAtInitTime",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testExceptionBeforeProcessing",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testNormalExecutionTimeMeasurement",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testComponentConfigurationDuplicateComponentId",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testStatsOneGoodQuery",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testOutputAttributesWithNullValues",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionWhileInit(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testExceptionWhileInit",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testStatsOneGoodQueryOneErrorQuery",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testContextDisposal(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testContextDisposal",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testNormalExecution1Component(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
            "methodName": "testNormalExecution1Component",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [],
            "children": []
          }
        ]
      },
      {
        "displayName": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          },
          {
            "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
              "stackSamples": 10,
              "linger": 5000,
              "leakedThreadsBelongToSuite": false,
              "failTestIfLeaking": true
            }
          }
        ],
        "children": [
          {
            "displayName": "testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
            "methodName": "testResettingPrimitiveAttribute",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
            "methodName": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentInstanceReused(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
            "methodName": "testComponentInstanceReused",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
            "methodName": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
            "methodName": "noWarningOnNonThreadSafeInputInstanceFieldDefault",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
            "methodName": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testResettingReferenceAttribute(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
            "methodName": "testResettingReferenceAttribute",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
            "methodName": "testResettingRequiredProcessingAttributeToNull",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
            "methodName": "testComponentConfigurationInitProcessingAttributeCreation",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testRepeatedExecution3Components(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
            "methodName": "testRepeatedExecution3Components",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
            "annotations": [],
            "children": []
          }
        ]
      },
      {
        "displayName": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          },
          {
            "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
              "stackSamples": 10,
              "linger": 5000,
              "leakedThreadsBelongToSuite": false,
              "failTestIfLeaking": true
            }
          }
        ],
        "children": [
          {
            "displayName": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testEmptyStatsInNewController",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testUnrelatedProcessingAttributesCopiedOnOutput",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "settingInitAttributeToNull",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testStatsTwoGoodQueriesCached",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testNormalExecution3Components",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testProcessingInvocationMethods",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testExceptionDuringProcessing",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testCollectionOfInitOutputAttributes",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testPassingRequiredProcessingAttribute",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testExceptionAfterProcessing",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStress(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testStress",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testInputAttributesCopiedOnOutput",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testExceptionWhileCreatingInstances",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testComponentConfigurationDifferentInitAttributes",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testComponentConfigurationProcessingAttributeAtInitTime",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testExceptionBeforeProcessing",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testNormalExecutionTimeMeasurement",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testComponentConfigurationDuplicateComponentId",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testStatsOneGoodQuery",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testOutputAttributesWithNullValues",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testExceptionWhileInit",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testStatsOneGoodQueryOneErrorQuery",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testContextDisposal(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testContextDisposal",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
            "methodName": "testNormalExecution1Component",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          }
        ]
      },
      {
        "displayName": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          },
          {
            "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
              "stackSamples": 10,
              "linger": 5000,
              "leakedThreadsBelongToSuite": false,
              "failTestIfLeaking": true
            }
          }
        ],
        "children": [
          {
            "displayName": "testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
            "methodName": "testResettingPrimitiveAttribute",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
            "methodName": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentInstanceReused(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
            "methodName": "testComponentInstanceReused",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
            "methodName": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
            "methodName": "noWarningOnNonThreadSafeInputInstanceFieldDefault",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
            "methodName": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testResettingReferenceAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
            "methodName": "testResettingReferenceAttribute",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
            "methodName": "testResettingRequiredProcessingAttributeToNull",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
            "methodName": "testComponentConfigurationInitProcessingAttributeCreation",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testRepeatedExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
            "methodName": "testRepeatedExecution3Components",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
            "annotations": [],
            "children": []
          }
        ]
      },
      {
        "displayName": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          },
          {
            "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
              "stackSamples": 10,
              "linger": 5000,
              "leakedThreadsBelongToSuite": false,
              "failTestIfLeaking": true
            }
          }
        ],
        "children": [
          {
            "displayName": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testEmptyStatsInNewController",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testUnrelatedProcessingAttributesCopiedOnOutput",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "settingInitAttributeToNull",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testStatsTwoGoodQueriesCached",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testNormalExecution3Components",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testProcessingInvocationMethods",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testExceptionDuringProcessing",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testCollectionOfInitOutputAttributes",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testPassingRequiredProcessingAttribute",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testExceptionAfterProcessing",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStress(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testStress",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testInputAttributesCopiedOnOutput",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testExceptionWhileCreatingInstances",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testComponentConfigurationDifferentInitAttributes",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testComponentConfigurationProcessingAttributeAtInitTime",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testExceptionBeforeProcessing",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testNormalExecutionTimeMeasurement",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testComponentConfigurationDuplicateComponentId",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testStatsOneGoodQuery",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testOutputAttributesWithNullValues",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testExceptionWhileInit",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testStatsOneGoodQueryOneErrorQuery",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testContextDisposal(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testContextDisposal",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
            "methodName": "testNormalExecution1Component",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          }
        ]
      },
      {
        "displayName": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          },
          {
            "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
              "stackSamples": 10,
              "linger": 5000,
              "leakedThreadsBelongToSuite": false,
              "failTestIfLeaking": true
            }
          }
        ],
        "children": [
          {
            "displayName": "testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
            "methodName": "testResettingPrimitiveAttribute",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
            "methodName": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentInstanceReused(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
            "methodName": "testComponentInstanceReused",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
            "methodName": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
            "methodName": "noWarningOnNonThreadSafeInputInstanceFieldDefault",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
            "methodName": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testResettingReferenceAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
            "methodName": "testResettingReferenceAttribute",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
            "methodName": "testResettingRequiredProcessingAttributeToNull",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
            "methodName": "testComponentConfigurationInitProcessingAttributeCreation",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testRepeatedExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
            "methodName": "testRepeatedExecution3Components",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
            "annotations": [],
            "children": []
          }
        ]
      },
      {
        "displayName": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          },
          {
            "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
              "stackSamples": 10,
              "linger": 5000,
              "leakedThreadsBelongToSuite": false,
              "failTestIfLeaking": true
            }
          }
        ],
        "children": [
          {
            "displayName": "testCachingEqualCacheKeys(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
            "methodName": "testCachingEqualCacheKeys",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testCachingInitAttributesIgnoredInCacheKey(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
            "methodName": "testCachingInitAttributesIgnoredInCacheKey",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testOutputAttributesWithNullValuesOneComponentCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
            "methodName": "testOutputAttributesWithNullValuesOneComponentCached",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testCachingReuseResultsInDifferentComponentPipeline(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
            "methodName": "testCachingReuseResultsInDifferentComponentPipeline",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testCachingDifferentCacheKeys(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
            "methodName": "testCachingDifferentCacheKeys",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testConcurrentDocumentModifications(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
            "methodName": "testConcurrentDocumentModifications",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
            "annotations": [],
            "children": []
          }
        ]
      },
      {
        "displayName": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          },
          {
            "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
              "stackSamples": 10,
              "linger": 5000,
              "leakedThreadsBelongToSuite": false,
              "failTestIfLeaking": true
            }
          }
        ],
        "children": [
          {
            "displayName": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testEmptyStatsInNewController",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testUnrelatedProcessingAttributesCopiedOnOutput",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "settingInitAttributeToNull",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testStatsTwoGoodQueriesCached",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testNormalExecution3Components",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testProcessingInvocationMethods",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testExceptionDuringProcessing",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testCollectionOfInitOutputAttributes",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testPassingRequiredProcessingAttribute",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testExceptionAfterProcessing",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStress(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testStress",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testInputAttributesCopiedOnOutput",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testExceptionWhileCreatingInstances",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testComponentConfigurationDifferentInitAttributes",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testComponentConfigurationProcessingAttributeAtInitTime",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testExceptionBeforeProcessing",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testNormalExecutionTimeMeasurement",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testComponentConfigurationDuplicateComponentId",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testStatsOneGoodQuery",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testOutputAttributesWithNullValues",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testExceptionWhileInit",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testStatsOneGoodQueryOneErrorQuery",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testContextDisposal(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testContextDisposal",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
            "methodName": "testNormalExecution1Component",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [],
            "children": []
          }
        ]
      },
      {
        "displayName": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          },
          {
            "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
              "stackSamples": 10,
              "linger": 5000,
              "leakedThreadsBelongToSuite": false,
              "failTestIfLeaking": true
            }
          }
        ],
        "children": [
          {
            "displayName": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testEmptyStatsInNewController",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testUnrelatedProcessingAttributesCopiedOnOutput",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "settingInitAttributeToNull",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testStatsTwoGoodQueriesCached",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testNormalExecution3Components",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testProcessingInvocationMethods",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testExceptionDuringProcessing",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testCollectionOfInitOutputAttributes",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testPassingRequiredProcessingAttribute",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testExceptionAfterProcessing",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStress(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testStress",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testInputAttributesCopiedOnOutput",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testExceptionWhileCreatingInstances",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testComponentConfigurationDifferentInitAttributes",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testComponentConfigurationProcessingAttributeAtInitTime",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testExceptionBeforeProcessing",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testNormalExecutionTimeMeasurement",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testComponentConfigurationDuplicateComponentId",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testStatsOneGoodQuery",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testOutputAttributesWithNullValues",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testExceptionWhileInit",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testStatsOneGoodQueryOneErrorQuery",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testContextDisposal(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testContextDisposal",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
            "methodName": "testNormalExecution1Component",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [],
            "children": []
          }
        ]
      },
      {
        "displayName": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          },
          {
            "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
              "stackSamples": 10,
              "linger": 5000,
              "leakedThreadsBelongToSuite": false,
              "failTestIfLeaking": true
            }
          }
        ],
        "children": [
          {
            "displayName": "testCachingEqualCacheKeys(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
            "methodName": "testCachingEqualCacheKeys",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testCachingInitAttributesIgnoredInCacheKey(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
            "methodName": "testCachingInitAttributesIgnoredInCacheKey",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testOutputAttributesWithNullValuesOneComponentCached(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
            "methodName": "testOutputAttributesWithNullValuesOneComponentCached",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testCachingReuseResultsInDifferentComponentPipeline(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
            "methodName": "testCachingReuseResultsInDifferentComponentPipeline",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testCachingDifferentCacheKeys(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
            "methodName": "testCachingDifferentCacheKeys",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
            "annotations": [],
            "children": []
          },
          {
            "displayName": "testConcurrentDocumentModifications(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
            "methodName": "testConcurrentDocumentModifications",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
            "annotations": [],
            "children": []
          }
        ]
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testConcurrentDocumentModifications(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
        "methodName": "testConcurrentDocumentModifications",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535674,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCachingDifferentCacheKeys(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
        "methodName": "testCachingDifferentCacheKeys",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535669,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCachingReuseResultsInDifferentComponentPipeline(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
        "methodName": "testCachingReuseResultsInDifferentComponentPipeline",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535663,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOutputAttributesWithNullValuesOneComponentCached(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
        "methodName": "testOutputAttributesWithNullValuesOneComponentCached",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535658,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCachingInitAttributesIgnoredInCacheKey(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
        "methodName": "testCachingInitAttributesIgnoredInCacheKey",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535651,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCachingEqualCacheKeys(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
        "methodName": "testCachingEqualCacheKeys",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535646,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testNormalExecution1Component",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535639,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testContextDisposal(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testContextDisposal",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535624,
      "executionTime": 15,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testStatsOneGoodQueryOneErrorQuery",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535617,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testExceptionWhileInit",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535611,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testOutputAttributesWithNullValues",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535604,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testStatsOneGoodQuery",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535396,
      "executionTime": 208,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testComponentConfigurationDuplicateComponentId",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535390,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testNormalExecutionTimeMeasurement",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535390,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testExceptionBeforeProcessing",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535383,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testComponentConfigurationProcessingAttributeAtInitTime",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535376,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testComponentConfigurationDifferentInitAttributes",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535370,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testExceptionWhileCreatingInstances",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535362,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testInputAttributesCopiedOnOutput",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535354,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStress(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testStress",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535354,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testExceptionAfterProcessing",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535347,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testPassingRequiredProcessingAttribute",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535341,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535335,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testCollectionOfInitOutputAttributes",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535328,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testExceptionDuringProcessing",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535318,
      "executionTime": 10,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testProcessingInvocationMethods",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535311,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testNormalExecution3Components",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535302,
      "executionTime": 9,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testStatsTwoGoodQueriesCached",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535296,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "settingInitAttributeToNull",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535290,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testUnrelatedProcessingAttributesCopiedOnOutput",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535283,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
        "methodName": "testEmptyStatsInNewController",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535279,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testNormalExecution1Component",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535275,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testContextDisposal(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testContextDisposal",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535272,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testStatsOneGoodQueryOneErrorQuery",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535268,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testExceptionWhileInit",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535264,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testOutputAttributesWithNullValues",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535261,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testStatsOneGoodQuery",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535056,
      "executionTime": 204,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testComponentConfigurationDuplicateComponentId",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535053,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testNormalExecutionTimeMeasurement",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535052,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testExceptionBeforeProcessing",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535048,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testComponentConfigurationProcessingAttributeAtInitTime",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535043,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testComponentConfigurationDifferentInitAttributes",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535039,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testExceptionWhileCreatingInstances",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534930,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testInputAttributesCopiedOnOutput",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534926,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStress(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testStress",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534925,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testExceptionAfterProcessing",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534921,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testPassingRequiredProcessingAttribute",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534918,
      "executionTime": 2,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534914,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testCollectionOfInitOutputAttributes",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534911,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testExceptionDuringProcessing",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534907,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testProcessingInvocationMethods",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534904,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testNormalExecution3Components",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534901,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testStatsTwoGoodQueriesCached",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534897,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "settingInitAttributeToNull",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534894,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testUnrelatedProcessingAttributesCopiedOnOutput",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534890,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
        "methodName": "testEmptyStatsInNewController",
        "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534887,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testConcurrentDocumentModifications(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
        "methodName": "testConcurrentDocumentModifications",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534887,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCachingDifferentCacheKeys(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
        "methodName": "testCachingDifferentCacheKeys",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534879,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCachingReuseResultsInDifferentComponentPipeline(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
        "methodName": "testCachingReuseResultsInDifferentComponentPipeline",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534870,
      "executionTime": 9,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOutputAttributesWithNullValuesOneComponentCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
        "methodName": "testOutputAttributesWithNullValuesOneComponentCached",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534863,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCachingInitAttributesIgnoredInCacheKey(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
        "methodName": "testCachingInitAttributesIgnoredInCacheKey",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534855,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCachingEqualCacheKeys(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
        "methodName": "testCachingEqualCacheKeys",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534848,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRepeatedExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
        "methodName": "testRepeatedExecution3Components",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534840,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
        "methodName": "testComponentConfigurationInitProcessingAttributeCreation",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534834,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
        "methodName": "testResettingRequiredProcessingAttributeToNull",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534826,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testResettingReferenceAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
        "methodName": "testResettingReferenceAttribute",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534816,
      "executionTime": 10,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
        "methodName": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534810,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
        "methodName": "noWarningOnNonThreadSafeInputInstanceFieldDefault",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534802,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
        "methodName": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534795,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentInstanceReused(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
        "methodName": "testComponentInstanceReused",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534786,
      "executionTime": 9,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
        "methodName": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534778,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
        "methodName": "testResettingPrimitiveAttribute",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534769,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testNormalExecution1Component",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534760,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testContextDisposal(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testContextDisposal",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534749,
      "executionTime": 11,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testStatsOneGoodQueryOneErrorQuery",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534738,
      "executionTime": 11,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testExceptionWhileInit",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534728,
      "executionTime": 9,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testOutputAttributesWithNullValues",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534703,
      "executionTime": 16,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testStatsOneGoodQuery",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534489,
      "executionTime": 213,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testComponentConfigurationDuplicateComponentId",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534481,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testNormalExecutionTimeMeasurement",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534480,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testExceptionBeforeProcessing",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534469,
      "executionTime": 11,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testComponentConfigurationProcessingAttributeAtInitTime",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534458,
      "executionTime": 11,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testComponentConfigurationDifferentInitAttributes",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534450,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testExceptionWhileCreatingInstances",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534441,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testInputAttributesCopiedOnOutput",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534431,
      "executionTime": 9,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStress(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testStress",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534431,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testExceptionAfterProcessing",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534421,
      "executionTime": 10,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testPassingRequiredProcessingAttribute",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534411,
      "executionTime": 10,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534402,
      "executionTime": 9,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testCollectionOfInitOutputAttributes",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534392,
      "executionTime": 9,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testExceptionDuringProcessing",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534381,
      "executionTime": 11,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testProcessingInvocationMethods",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534369,
      "executionTime": 12,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testNormalExecution3Components",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534354,
      "executionTime": 15,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testStatsTwoGoodQueriesCached",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534342,
      "executionTime": 9,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "settingInitAttributeToNull",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534333,
      "executionTime": 9,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testUnrelatedProcessingAttributesCopiedOnOutput",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534322,
      "executionTime": 11,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
        "methodName": "testEmptyStatsInNewController",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534211,
      "executionTime": 110,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRepeatedExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
        "methodName": "testRepeatedExecution3Components",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534203,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
        "methodName": "testComponentConfigurationInitProcessingAttributeCreation",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534198,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
        "methodName": "testResettingRequiredProcessingAttributeToNull",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534193,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testResettingReferenceAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
        "methodName": "testResettingReferenceAttribute",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534186,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
        "methodName": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534156,
      "executionTime": 30,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
        "methodName": "noWarningOnNonThreadSafeInputInstanceFieldDefault",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534138,
      "executionTime": 9,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
        "methodName": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534134,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentInstanceReused(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
        "methodName": "testComponentInstanceReused",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534129,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
        "methodName": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534124,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
        "methodName": "testResettingPrimitiveAttribute",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534118,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testNormalExecution1Component",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534110,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testContextDisposal(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testContextDisposal",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534104,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testStatsOneGoodQueryOneErrorQuery",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534096,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testExceptionWhileInit",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534091,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testOutputAttributesWithNullValues",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497534085,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testStatsOneGoodQuery",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533863,
      "executionTime": 222,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testComponentConfigurationDuplicateComponentId",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533858,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testNormalExecutionTimeMeasurement",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533857,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testExceptionBeforeProcessing",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533847,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testComponentConfigurationProcessingAttributeAtInitTime",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533842,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testComponentConfigurationDifferentInitAttributes",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533836,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testExceptionWhileCreatingInstances",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533830,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testInputAttributesCopiedOnOutput",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533820,
      "executionTime": 9,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStress(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testStress",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533807,
      "executionTime": 9,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testExceptionAfterProcessing",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533800,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testPassingRequiredProcessingAttribute",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533795,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533783,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testCollectionOfInitOutputAttributes",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533779,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testExceptionDuringProcessing",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533758,
      "executionTime": 15,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testProcessingInvocationMethods",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533695,
      "executionTime": 43,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testNormalExecution3Components",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533675,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testStatsTwoGoodQueriesCached",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533668,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "settingInitAttributeToNull",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533661,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testUnrelatedProcessingAttributesCopiedOnOutput",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533587,
      "executionTime": 73,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
        "methodName": "testEmptyStatsInNewController",
        "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533583,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testRepeatedExecution3Components(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
        "methodName": "testRepeatedExecution3Components",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533572,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
        "methodName": "testComponentConfigurationInitProcessingAttributeCreation",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533566,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
        "methodName": "testResettingRequiredProcessingAttributeToNull",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533557,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testResettingReferenceAttribute(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
        "methodName": "testResettingReferenceAttribute",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533550,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
        "methodName": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533546,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
        "methodName": "noWarningOnNonThreadSafeInputInstanceFieldDefault",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533538,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
        "methodName": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533533,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentInstanceReused(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
        "methodName": "testComponentInstanceReused",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533527,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
        "methodName": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533503,
      "executionTime": 24,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
        "methodName": "testResettingPrimitiveAttribute",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533498,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalExecution1Component(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testNormalExecution1Component",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533492,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testContextDisposal(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testContextDisposal",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533483,
      "executionTime": 9,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testStatsOneGoodQueryOneErrorQuery",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533472,
      "executionTime": 10,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionWhileInit(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testExceptionWhileInit",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533462,
      "executionTime": 9,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testOutputAttributesWithNullValues",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533452,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testStatsOneGoodQuery",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533244,
      "executionTime": 206,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testComponentConfigurationDuplicateComponentId",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533240,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testNormalExecutionTimeMeasurement",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533240,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testExceptionBeforeProcessing",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533234,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testComponentConfigurationProcessingAttributeAtInitTime",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533229,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testComponentConfigurationDifferentInitAttributes",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533222,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testExceptionWhileCreatingInstances",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533217,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testInputAttributesCopiedOnOutput",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533212,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStress(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testStress",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533212,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testExceptionAfterProcessing",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533206,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testPassingRequiredProcessingAttribute",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533182,
      "executionTime": 24,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533178,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testCollectionOfInitOutputAttributes",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533174,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testExceptionDuringProcessing",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533169,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testProcessingInvocationMethods",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533166,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalExecution3Components(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testNormalExecution3Components",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533161,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testStatsTwoGoodQueriesCached",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533155,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "settingInitAttributeToNull",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533150,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testUnrelatedProcessingAttributesCopiedOnOutput",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533141,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
        "methodName": "testEmptyStatsInNewController",
        "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533136,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalExecution1Component(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testNormalExecution1Component",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533129,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testContextDisposal(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testContextDisposal",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533116,
      "executionTime": 10,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testStatsOneGoodQueryOneErrorQuery",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533111,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionWhileInit(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testExceptionWhileInit",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533106,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testOutputAttributesWithNullValues",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497533060,
      "executionTime": 43,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testStatsOneGoodQuery",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532855,
      "executionTime": 204,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testComponentConfigurationDuplicateComponentId",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532850,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testNormalExecutionTimeMeasurement",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532850,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testExceptionBeforeProcessing",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532844,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testComponentConfigurationProcessingAttributeAtInitTime",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532837,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testComponentConfigurationDifferentInitAttributes",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532832,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testExceptionWhileCreatingInstances",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532827,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testInputAttributesCopiedOnOutput",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532822,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStress(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testStress",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532821,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testExceptionAfterProcessing",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532816,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testPassingRequiredProcessingAttribute",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532811,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532806,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testCollectionOfInitOutputAttributes",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532801,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testExceptionDuringProcessing",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532795,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testProcessingInvocationMethods",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532790,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNormalExecution3Components(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testNormalExecution3Components",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532784,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testStatsTwoGoodQueriesCached",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532780,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "settingInitAttributeToNull",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532776,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testUnrelatedProcessingAttributesCopiedOnOutput",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532766,
      "executionTime": 10,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
        "methodName": "testEmptyStatsInNewController",
        "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532745,
      "executionTime": 20,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMultipleDisposal(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
        "methodName": "testMultipleDisposal",
        "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532741,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMultipleInitialization(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
        "methodName": "testMultipleInitialization",
        "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532736,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUnexpectedComponentClass(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
        "methodName": "testUnexpectedComponentClass",
        "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532733,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUsingCachingManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
        "methodName": "testUsingCachingManagerWithMoreThanOneController",
        "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532725,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testAutomaticInitialization(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
        "methodName": "testAutomaticInitialization",
        "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532702,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUsingSimpleManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
        "methodName": "testUsingSimpleManagerWithMoreThanOneController",
        "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532698,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUnknownComponentId(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
        "methodName": "testUnknownComponentId",
        "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532694,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUnexpectedComponentDesignatorType(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
        "methodName": "testUnexpectedComponentDesignatorType",
        "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532691,
      "executionTime": 2,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testUsingPoolingManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
        "methodName": "testUsingPoolingManagerWithMoreThanOneController",
        "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497532688,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testUsingPoolingManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUsingPoolingManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testUnexpectedComponentDesignatorType(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUnexpectedComponentDesignatorType(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testUnknownComponentId(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
      "event": "TEST_STARTED"
    },
    {
      "out": "2012-01-02 10:45:32,695 WARN  org.carrot2.util.ReflectionUtils: Could not load class: nonexistent-component (nonexistent-component).\r\n"
    },
    {
      "test": "testUnknownComponentId(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testUsingSimpleManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUsingSimpleManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testAutomaticInitialization(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testAutomaticInitialization(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testUsingCachingManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUsingCachingManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testUnexpectedComponentClass(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUnexpectedComponentClass(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMultipleInitialization(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMultipleInitialization(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMultipleDisposal(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMultipleDisposal(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStress(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStress(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testContextDisposal(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testContextDisposal(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStress(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStress(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testContextDisposal(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testContextDisposal(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentInstanceReused(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentInstanceReused(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "out": "2012-01-02 10:45:33,534 INFO  org.carrot2.core.PoolingProcessingComponentManager$NonPrimitiveInputAttributesCheck: An object of a non-@ThreadSafe class org.carrot2.core.ControllerTestsPooling$NonThreadSafeClass bound at initialization-time to attribute nonThreadSafeProcessing. Make sure this is intended.\r\n"
    },
    {
      "test": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "out": "2012-01-02 10:45:33,547 INFO  org.carrot2.core.PoolingProcessingComponentManager$NonPrimitiveInputAttributesCheck: An object of a non-@ThreadSafe class org.carrot2.core.ControllerTestsPooling$NonThreadSafeClass bound at initialization-time to attribute nonThreadSafeInit. Make sure this is intended.\r\n"
    },
    {
      "test": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testResettingReferenceAttribute(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testResettingReferenceAttribute(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testRepeatedExecution3Components(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRepeatedExecution3Components(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStress(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStress(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testContextDisposal(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testContextDisposal(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentInstanceReused(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentInstanceReused(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "out": "2012-01-02 10:45:34,135 INFO  org.carrot2.core.PoolingProcessingComponentManager$NonPrimitiveInputAttributesCheck: An object of a non-@ThreadSafe class org.carrot2.core.ControllerTestsPooling$NonThreadSafeClass bound at initialization-time to attribute nonThreadSafeProcessing. Make sure this is intended.\r\n"
    },
    {
      "test": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "out": "2012-01-02 10:45:34,158 INFO  org.carrot2.core.PoolingProcessingComponentManager$NonPrimitiveInputAttributesCheck: An object of a non-@ThreadSafe class org.carrot2.core.ControllerTestsPooling$NonThreadSafeClass bound at initialization-time to attribute nonThreadSafeInit. Make sure this is intended.\r\n"
    },
    {
      "test": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testResettingReferenceAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testResettingReferenceAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testRepeatedExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRepeatedExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStress(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStress(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testContextDisposal(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testContextDisposal(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentInstanceReused(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentInstanceReused(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "out": "2012-01-02 10:45:34,798 INFO  org.carrot2.core.PoolingProcessingComponentManager$NonPrimitiveInputAttributesCheck: An object of a non-@ThreadSafe class org.carrot2.core.ControllerTestsPooling$NonThreadSafeClass bound at initialization-time to attribute nonThreadSafeProcessing. Make sure this is intended.\r\n"
    },
    {
      "test": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "out": "2012-01-02 10:45:34,813 INFO  org.carrot2.core.PoolingProcessingComponentManager$NonPrimitiveInputAttributesCheck: An object of a non-@ThreadSafe class org.carrot2.core.ControllerTestsPooling$NonThreadSafeClass bound at initialization-time to attribute nonThreadSafeInit. Make sure this is intended.\r\n"
    },
    {
      "test": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testResettingReferenceAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testResettingReferenceAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testRepeatedExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testRepeatedExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCachingEqualCacheKeys(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCachingEqualCacheKeys(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCachingInitAttributesIgnoredInCacheKey(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCachingInitAttributesIgnoredInCacheKey(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOutputAttributesWithNullValuesOneComponentCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOutputAttributesWithNullValuesOneComponentCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCachingReuseResultsInDifferentComponentPipeline(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCachingReuseResultsInDifferentComponentPipeline(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCachingDifferentCacheKeys(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCachingDifferentCacheKeys(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testConcurrentDocumentModifications(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testConcurrentDocumentModifications(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStress(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStress(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testContextDisposal(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testContextDisposal(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStress(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStress(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testContextDisposal(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testContextDisposal(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCachingEqualCacheKeys(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCachingEqualCacheKeys(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCachingInitAttributesIgnoredInCacheKey(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCachingInitAttributesIgnoredInCacheKey(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOutputAttributesWithNullValuesOneComponentCached(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOutputAttributesWithNullValuesOneComponentCached(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCachingReuseResultsInDifferentComponentPipeline(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCachingReuseResultsInDifferentComponentPipeline(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testCachingDifferentCacheKeys(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testCachingDifferentCacheKeys(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testConcurrentDocumentModifications(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testConcurrentDocumentModifications(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497535860,
  "executionTime": 33,
  "description": {
    "displayName": "org.carrot2.source.SearchRangeTest",
    "className": "org.carrot2.source.SearchRangeTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testMoreThanMaxResultsRequested(org.carrot2.source.SearchRangeTest)",
        "methodName": "testMoreThanMaxResultsRequested",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPageModeEmptyRange(org.carrot2.source.SearchRangeTest)",
        "methodName": "testPageModeEmptyRange",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPageModeGetTwoRangesStartAtNonZero(org.carrot2.source.SearchRangeTest)",
        "methodName": "testPageModeGetTwoRangesStartAtNonZero",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPageModeGetOneRangeStartAtNonZero(org.carrot2.source.SearchRangeTest)",
        "methodName": "testPageModeGetOneRangeStartAtNonZero",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPageModeMoreThanMaxResultsRequested(org.carrot2.source.SearchRangeTest)",
        "methodName": "testPageModeMoreThanMaxResultsRequested",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testGetTwoRangesUnderfull(org.carrot2.source.SearchRangeTest)",
        "methodName": "testGetTwoRangesUnderfull",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testGetTwoRangesFull(org.carrot2.source.SearchRangeTest)",
        "methodName": "testGetTwoRangesFull",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testGetOneRangeStartAtNonZero(org.carrot2.source.SearchRangeTest)",
        "methodName": "testGetOneRangeStartAtNonZero",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmptyRange(org.carrot2.source.SearchRangeTest)",
        "methodName": "testEmptyRange",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testGetTwoRangesStartAtNonZero(org.carrot2.source.SearchRangeTest)",
        "methodName": "testGetTwoRangesStartAtNonZero",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPageModeGetTwoRangesFull(org.carrot2.source.SearchRangeTest)",
        "methodName": "testPageModeGetTwoRangesFull",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPageModeGetTwoRangesUnderfull(org.carrot2.source.SearchRangeTest)",
        "methodName": "testPageModeGetTwoRangesUnderfull",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testPageModeGetTwoRangesUnderfull(org.carrot2.source.SearchRangeTest)",
        "methodName": "testPageModeGetTwoRangesUnderfull",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535891,
      "executionTime": 2,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPageModeGetTwoRangesFull(org.carrot2.source.SearchRangeTest)",
        "methodName": "testPageModeGetTwoRangesFull",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535889,
      "executionTime": 2,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testGetTwoRangesStartAtNonZero(org.carrot2.source.SearchRangeTest)",
        "methodName": "testGetTwoRangesStartAtNonZero",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535886,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmptyRange(org.carrot2.source.SearchRangeTest)",
        "methodName": "testEmptyRange",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535884,
      "executionTime": 2,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testGetOneRangeStartAtNonZero(org.carrot2.source.SearchRangeTest)",
        "methodName": "testGetOneRangeStartAtNonZero",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535882,
      "executionTime": 2,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testGetTwoRangesFull(org.carrot2.source.SearchRangeTest)",
        "methodName": "testGetTwoRangesFull",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535880,
      "executionTime": 2,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testGetTwoRangesUnderfull(org.carrot2.source.SearchRangeTest)",
        "methodName": "testGetTwoRangesUnderfull",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535878,
      "executionTime": 2,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPageModeMoreThanMaxResultsRequested(org.carrot2.source.SearchRangeTest)",
        "methodName": "testPageModeMoreThanMaxResultsRequested",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535875,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPageModeGetOneRangeStartAtNonZero(org.carrot2.source.SearchRangeTest)",
        "methodName": "testPageModeGetOneRangeStartAtNonZero",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535872,
      "executionTime": 2,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPageModeGetTwoRangesStartAtNonZero(org.carrot2.source.SearchRangeTest)",
        "methodName": "testPageModeGetTwoRangesStartAtNonZero",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535869,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPageModeEmptyRange(org.carrot2.source.SearchRangeTest)",
        "methodName": "testPageModeEmptyRange",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535866,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMoreThanMaxResultsRequested(org.carrot2.source.SearchRangeTest)",
        "methodName": "testMoreThanMaxResultsRequested",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535861,
      "executionTime": 5,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testMoreThanMaxResultsRequested(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMoreThanMaxResultsRequested(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPageModeEmptyRange(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPageModeEmptyRange(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPageModeGetTwoRangesStartAtNonZero(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPageModeGetTwoRangesStartAtNonZero(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPageModeGetOneRangeStartAtNonZero(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPageModeGetOneRangeStartAtNonZero(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPageModeMoreThanMaxResultsRequested(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPageModeMoreThanMaxResultsRequested(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testGetTwoRangesUnderfull(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testGetTwoRangesUnderfull(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testGetTwoRangesFull(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testGetTwoRangesFull(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testGetOneRangeStartAtNonZero(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testGetOneRangeStartAtNonZero(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmptyRange(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmptyRange(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testGetTwoRangesStartAtNonZero(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testGetTwoRangesStartAtNonZero(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPageModeGetTwoRangesFull(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPageModeGetTwoRangesFull(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPageModeGetTwoRangesUnderfull(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPageModeGetTwoRangesUnderfull(org.carrot2.source.SearchRangeTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497535676,
  "executionTime": 11,
  "description": {
    "displayName": "org.carrot2.util.CharArrayUtilsTest",
    "className": "org.carrot2.util.CharArrayUtilsTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testHasCapitalizedLetters(org.carrot2.util.CharArrayUtilsTest)",
        "methodName": "testHasCapitalizedLetters",
        "className": "org.carrot2.util.CharArrayUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testToLowerCaseCopy(org.carrot2.util.CharArrayUtilsTest)",
        "methodName": "testToLowerCaseCopy",
        "className": "org.carrot2.util.CharArrayUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testToLowerCaseBufferStartLength(org.carrot2.util.CharArrayUtilsTest)",
        "methodName": "testToLowerCaseBufferStartLength",
        "className": "org.carrot2.util.CharArrayUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "bufferTooSmall(org.carrot2.util.CharArrayUtilsTest)",
        "methodName": "bufferTooSmall",
        "className": "org.carrot2.util.CharArrayUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testToLowerCaseBuffer(org.carrot2.util.CharArrayUtilsTest)",
        "methodName": "testToLowerCaseBuffer",
        "className": "org.carrot2.util.CharArrayUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testToLowerCaseInPlace(org.carrot2.util.CharArrayUtilsTest)",
        "methodName": "testToLowerCaseInPlace",
        "className": "org.carrot2.util.CharArrayUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "wordTooShort(org.carrot2.util.CharArrayUtilsTest)",
        "methodName": "wordTooShort",
        "className": "org.carrot2.util.CharArrayUtilsTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "wordTooShort(org.carrot2.util.CharArrayUtilsTest)",
        "methodName": "wordTooShort",
        "className": "org.carrot2.util.CharArrayUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535687,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testToLowerCaseInPlace(org.carrot2.util.CharArrayUtilsTest)",
        "methodName": "testToLowerCaseInPlace",
        "className": "org.carrot2.util.CharArrayUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535686,
      "executionTime": 1,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testToLowerCaseBuffer(org.carrot2.util.CharArrayUtilsTest)",
        "methodName": "testToLowerCaseBuffer",
        "className": "org.carrot2.util.CharArrayUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535684,
      "executionTime": 1,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "bufferTooSmall(org.carrot2.util.CharArrayUtilsTest)",
        "methodName": "bufferTooSmall",
        "className": "org.carrot2.util.CharArrayUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535683,
      "executionTime": 0,
      "slave": 0,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testToLowerCaseBufferStartLength(org.carrot2.util.CharArrayUtilsTest)",
        "methodName": "testToLowerCaseBufferStartLength",
        "className": "org.carrot2.util.CharArrayUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535681,
      "executionTime": 2,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testToLowerCaseCopy(org.carrot2.util.CharArrayUtilsTest)",
        "methodName": "testToLowerCaseCopy",
        "className": "org.carrot2.util.CharArrayUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535679,
      "executionTime": 2,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testHasCapitalizedLetters(org.carrot2.util.CharArrayUtilsTest)",
        "methodName": "testHasCapitalizedLetters",
        "className": "org.carrot2.util.CharArrayUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535676,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testHasCapitalizedLetters(org.carrot2.util.CharArrayUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testHasCapitalizedLetters(org.carrot2.util.CharArrayUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testToLowerCaseCopy(org.carrot2.util.CharArrayUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testToLowerCaseCopy(org.carrot2.util.CharArrayUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testToLowerCaseBufferStartLength(org.carrot2.util.CharArrayUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testToLowerCaseBufferStartLength(org.carrot2.util.CharArrayUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "bufferTooSmall(org.carrot2.util.CharArrayUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "bufferTooSmall(org.carrot2.util.CharArrayUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testToLowerCaseBuffer(org.carrot2.util.CharArrayUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testToLowerCaseBuffer(org.carrot2.util.CharArrayUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testToLowerCaseInPlace(org.carrot2.util.CharArrayUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testToLowerCaseInPlace(org.carrot2.util.CharArrayUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "wordTooShort(org.carrot2.util.CharArrayUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "wordTooShort(org.carrot2.util.CharArrayUtilsTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497536110,
  "executionTime": 11,
  "description": {
    "displayName": "org.carrot2.util.resource.URLResourceWithParamsTest",
    "className": "org.carrot2.util.resource.URLResourceWithParamsTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testNoAttributesToSubstitute(org.carrot2.util.resource.URLResourceWithParamsTest)",
        "methodName": "testNoAttributesToSubstitute",
        "className": "org.carrot2.util.resource.URLResourceWithParamsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTwoAttributesToSubstitute(org.carrot2.util.resource.URLResourceWithParamsTest)",
        "methodName": "testTwoAttributesToSubstitute",
        "className": "org.carrot2.util.resource.URLResourceWithParamsTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testTwoAttributesToSubstitute(org.carrot2.util.resource.URLResourceWithParamsTest)",
        "methodName": "testTwoAttributesToSubstitute",
        "className": "org.carrot2.util.resource.URLResourceWithParamsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536117,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNoAttributesToSubstitute(org.carrot2.util.resource.URLResourceWithParamsTest)",
        "methodName": "testNoAttributesToSubstitute",
        "className": "org.carrot2.util.resource.URLResourceWithParamsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536111,
      "executionTime": 6,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testNoAttributesToSubstitute(org.carrot2.util.resource.URLResourceWithParamsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoAttributesToSubstitute(org.carrot2.util.resource.URLResourceWithParamsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTwoAttributesToSubstitute(org.carrot2.util.resource.URLResourceWithParamsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTwoAttributesToSubstitute(org.carrot2.util.resource.URLResourceWithParamsTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497535689,
  "executionTime": 374,
  "description": {
    "displayName": "org.carrot2.text.linguistic.ChineseTokenizerTest",
    "className": "org.carrot2.text.linguistic.ChineseTokenizerTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testPunctuationTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
        "methodName": "testPunctuationTokens",
        "className": "org.carrot2.text.linguistic.ChineseTokenizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNumericTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
        "methodName": "testNumericTokens",
        "className": "org.carrot2.text.linguistic.ChineseTokenizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testChineseEnglishTermTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
        "methodName": "testChineseEnglishTermTokens",
        "className": "org.carrot2.text.linguistic.ChineseTokenizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testJunkTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
        "methodName": "testJunkTokens",
        "className": "org.carrot2.text.linguistic.ChineseTokenizerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testTermTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
        "methodName": "testTermTokens",
        "className": "org.carrot2.text.linguistic.ChineseTokenizerTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testTermTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
        "methodName": "testTermTokens",
        "className": "org.carrot2.text.linguistic.ChineseTokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536058,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testJunkTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
        "methodName": "testJunkTokens",
        "className": "org.carrot2.text.linguistic.ChineseTokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536050,
      "executionTime": 8,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testChineseEnglishTermTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
        "methodName": "testChineseEnglishTermTokens",
        "className": "org.carrot2.text.linguistic.ChineseTokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536047,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNumericTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
        "methodName": "testNumericTokens",
        "className": "org.carrot2.text.linguistic.ChineseTokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536042,
      "executionTime": 5,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPunctuationTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
        "methodName": "testPunctuationTokens",
        "className": "org.carrot2.text.linguistic.ChineseTokenizerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497535690,
      "executionTime": 352,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testPunctuationTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPunctuationTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNumericTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNumericTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testChineseEnglishTermTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testChineseEnglishTermTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testJunkTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testJunkTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testTermTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testTermTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497536123,
  "executionTime": 28,
  "description": {
    "displayName": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
    "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testMaxBound(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
        "methodName": "testMaxBound",
        "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testOtherAssignableTypes(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
        "methodName": "testOtherAssignableTypes",
        "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testWithinRange(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
        "methodName": "testWithinRange",
        "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testGreaterThanMax(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
        "methodName": "testGreaterThanMax",
        "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testLessThanMin(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
        "methodName": "testLessThanMin",
        "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMinBound(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
        "methodName": "testMinBound",
        "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
        "methodName": "testInvalidType",
        "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNull(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
        "methodName": "testNull",
        "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testNull(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
        "methodName": "testNull",
        "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536148,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
        "methodName": "testInvalidType",
        "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536145,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMinBound(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
        "methodName": "testMinBound",
        "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536142,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testLessThanMin(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
        "methodName": "testLessThanMin",
        "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536140,
      "executionTime": 2,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testGreaterThanMax(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
        "methodName": "testGreaterThanMax",
        "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536137,
      "executionTime": 2,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testWithinRange(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
        "methodName": "testWithinRange",
        "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536134,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOtherAssignableTypes(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
        "methodName": "testOtherAssignableTypes",
        "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536130,
      "executionTime": 4,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMaxBound(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
        "methodName": "testMaxBound",
        "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536124,
      "executionTime": 6,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testMaxBound(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMaxBound(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testOtherAssignableTypes(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOtherAssignableTypes(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testWithinRange(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testWithinRange(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testGreaterThanMax(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testGreaterThanMax(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testLessThanMin(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testLessThanMin(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMinBound(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMinBound(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInvalidType(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInvalidType(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNull(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNull(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497536064,
  "executionTime": 20,
  "description": {
    "displayName": "org.carrot2.text.preprocessing.filter.QueryLabelFilterTest",
    "className": "org.carrot2.text.preprocessing.filter.QueryLabelFilterTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testPhraseWithSomeQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
        "methodName": "testPhraseWithSomeQueryWords",
        "className": "org.carrot2.text.preprocessing.filter.QueryLabelFilterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testPhraseWithAllQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
        "methodName": "testPhraseWithAllQueryWords",
        "className": "org.carrot2.text.preprocessing.filter.QueryLabelFilterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.filter.QueryLabelFilterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNonQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
        "methodName": "testNonQueryWords",
        "className": "org.carrot2.text.preprocessing.filter.QueryLabelFilterTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
        "methodName": "testQueryWords",
        "className": "org.carrot2.text.preprocessing.filter.QueryLabelFilterTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
        "methodName": "testQueryWords",
        "className": "org.carrot2.text.preprocessing.filter.QueryLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536081,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNonQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
        "methodName": "testNonQueryWords",
        "className": "org.carrot2.text.preprocessing.filter.QueryLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536077,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.text.preprocessing.filter.QueryLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536073,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPhraseWithAllQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
        "methodName": "testPhraseWithAllQueryWords",
        "className": "org.carrot2.text.preprocessing.filter.QueryLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536070,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPhraseWithSomeQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
        "methodName": "testPhraseWithSomeQueryWords",
        "className": "org.carrot2.text.preprocessing.filter.QueryLabelFilterTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536065,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testPhraseWithSomeQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPhraseWithSomeQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testPhraseWithAllQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPhraseWithAllQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNonQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNonQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497536153,
  "executionTime": 20,
  "description": {
    "displayName": "org.carrot2.util.attribute.constraint.IntModuloConstraintTest",
    "className": "org.carrot2.util.attribute.constraint.IntModuloConstraintTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testOtherAssignableTypes(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
        "methodName": "testOtherAssignableTypes",
        "className": "org.carrot2.util.attribute.constraint.IntModuloConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNull(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
        "methodName": "testNull",
        "className": "org.carrot2.util.attribute.constraint.IntModuloConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMet(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
        "methodName": "testMet",
        "className": "org.carrot2.util.attribute.constraint.IntModuloConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNotMet(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
        "methodName": "testNotMet",
        "className": "org.carrot2.util.attribute.constraint.IntModuloConstraintTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
        "methodName": "testInvalidType",
        "className": "org.carrot2.util.attribute.constraint.IntModuloConstraintTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
        "methodName": "testInvalidType",
        "className": "org.carrot2.util.attribute.constraint.IntModuloConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536170,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNotMet(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
        "methodName": "testNotMet",
        "className": "org.carrot2.util.attribute.constraint.IntModuloConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536167,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMet(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
        "methodName": "testMet",
        "className": "org.carrot2.util.attribute.constraint.IntModuloConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536164,
      "executionTime": 3,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testNull(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
        "methodName": "testNull",
        "className": "org.carrot2.util.attribute.constraint.IntModuloConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536162,
      "executionTime": 2,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testOtherAssignableTypes(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
        "methodName": "testOtherAssignableTypes",
        "className": "org.carrot2.util.attribute.constraint.IntModuloConstraintTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536153,
      "executionTime": 9,
      "slave": 1,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testOtherAssignableTypes(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testOtherAssignableTypes(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNull(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNull(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMet(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMet(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNotMet(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNotMet(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInvalidType(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInvalidType(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497536086,
  "executionTime": 38,
  "description": {
    "displayName": "org.carrot2.util.RangeUtilsTest",
    "className": "org.carrot2.util.RangeUtilsTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testInt11To29Range(org.carrot2.util.RangeUtilsTest)",
        "methodName": "testInt11To29Range",
        "className": "org.carrot2.util.RangeUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDouble1To3Range(org.carrot2.util.RangeUtilsTest)",
        "methodName": "testDouble1To3Range",
        "className": "org.carrot2.util.RangeUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDoubleLessThan1Range(org.carrot2.util.RangeUtilsTest)",
        "methodName": "testDoubleLessThan1Range",
        "className": "org.carrot2.util.RangeUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testIntZeroRange(org.carrot2.util.RangeUtilsTest)",
        "methodName": "testIntZeroRange",
        "className": "org.carrot2.util.RangeUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDouble3To6Range(org.carrot2.util.RangeUtilsTest)",
        "methodName": "testDouble3To6Range",
        "className": "org.carrot2.util.RangeUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testIntLessThan11Range(org.carrot2.util.RangeUtilsTest)",
        "methodName": "testIntLessThan11Range",
        "className": "org.carrot2.util.RangeUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInt30To59Range(org.carrot2.util.RangeUtilsTest)",
        "methodName": "testInt30To59Range",
        "className": "org.carrot2.util.RangeUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testInt60To100Range(org.carrot2.util.RangeUtilsTest)",
        "methodName": "testInt60To100Range",
        "className": "org.carrot2.util.RangeUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDouble6To10Range(org.carrot2.util.RangeUtilsTest)",
        "methodName": "testDouble6To10Range",
        "className": "org.carrot2.util.RangeUtilsTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testDoubleZeroRange(org.carrot2.util.RangeUtilsTest)",
        "methodName": "testDoubleZeroRange",
        "className": "org.carrot2.util.RangeUtilsTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testDoubleZeroRange(org.carrot2.util.RangeUtilsTest)",
        "methodName": "testDoubleZeroRange",
        "className": "org.carrot2.util.RangeUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536121,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDouble6To10Range(org.carrot2.util.RangeUtilsTest)",
        "methodName": "testDouble6To10Range",
        "className": "org.carrot2.util.RangeUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536118,
      "executionTime": 2,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInt60To100Range(org.carrot2.util.RangeUtilsTest)",
        "methodName": "testInt60To100Range",
        "className": "org.carrot2.util.RangeUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536115,
      "executionTime": 2,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInt30To59Range(org.carrot2.util.RangeUtilsTest)",
        "methodName": "testInt30To59Range",
        "className": "org.carrot2.util.RangeUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536111,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testIntLessThan11Range(org.carrot2.util.RangeUtilsTest)",
        "methodName": "testIntLessThan11Range",
        "className": "org.carrot2.util.RangeUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536107,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDouble3To6Range(org.carrot2.util.RangeUtilsTest)",
        "methodName": "testDouble3To6Range",
        "className": "org.carrot2.util.RangeUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536103,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testIntZeroRange(org.carrot2.util.RangeUtilsTest)",
        "methodName": "testIntZeroRange",
        "className": "org.carrot2.util.RangeUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536101,
      "executionTime": 2,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDoubleLessThan1Range(org.carrot2.util.RangeUtilsTest)",
        "methodName": "testDoubleLessThan1Range",
        "className": "org.carrot2.util.RangeUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536098,
      "executionTime": 2,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testDouble1To3Range(org.carrot2.util.RangeUtilsTest)",
        "methodName": "testDouble1To3Range",
        "className": "org.carrot2.util.RangeUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536094,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testInt11To29Range(org.carrot2.util.RangeUtilsTest)",
        "methodName": "testInt11To29Range",
        "className": "org.carrot2.util.RangeUtilsTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536087,
      "executionTime": 7,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testInt11To29Range(org.carrot2.util.RangeUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInt11To29Range(org.carrot2.util.RangeUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDouble1To3Range(org.carrot2.util.RangeUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDouble1To3Range(org.carrot2.util.RangeUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDoubleLessThan1Range(org.carrot2.util.RangeUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDoubleLessThan1Range(org.carrot2.util.RangeUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testIntZeroRange(org.carrot2.util.RangeUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIntZeroRange(org.carrot2.util.RangeUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDouble3To6Range(org.carrot2.util.RangeUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDouble3To6Range(org.carrot2.util.RangeUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testIntLessThan11Range(org.carrot2.util.RangeUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testIntLessThan11Range(org.carrot2.util.RangeUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInt30To59Range(org.carrot2.util.RangeUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInt30To59Range(org.carrot2.util.RangeUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testInt60To100Range(org.carrot2.util.RangeUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testInt60To100Range(org.carrot2.util.RangeUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDouble6To10Range(org.carrot2.util.RangeUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDouble6To10Range(org.carrot2.util.RangeUtilsTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testDoubleZeroRange(org.carrot2.util.RangeUtilsTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testDoubleZeroRange(org.carrot2.util.RangeUtilsTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 1,
  "startTimestamp": 1325497536174,
  "executionTime": 2,
  "description": {
    "displayName": "org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest",
    "className": "org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest",
    "annotations": [
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      },
      {
        "org.carrot2.util.tests.UsesExternalServices": {}
      },
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      }
    ],
    "children": [
      {
        "displayName": "testPresidentQuery(org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest)",
        "methodName": "testPresidentQuery",
        "className": "org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMetadataAvailable(org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testMetadataAvailable(org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest)",
        "methodName": "testMetadataAvailable",
        "className": "org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536176,
      "executionTime": 0,
      "slave": 1,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testPresidentQuery(org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest)",
        "methodName": "testPresidentQuery",
        "className": "org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536176,
      "executionTime": 0,
      "slave": 1,
      "status": "IGNORED",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": true,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testPresidentQuery(org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testPresidentQuery(org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMetadataAvailable(org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest)",
      "event": "TEST_FINISHED"
    }
  ]
},

{
  "slave": 0,
  "startTimestamp": 1325497536127,
  "executionTime": 18,
  "description": {
    "displayName": "org.carrot2.clustering.lingo.ClusterMergerTest",
    "className": "org.carrot2.clustering.lingo.ClusterMergerTest",
    "annotations": [
      {
        "com.carrotsearch.randomizedtesting.annotations.Timeout": {
          "millis": 60000
        }
      },
      {
        "org.junit.runner.RunWith": {
          "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
        }
      }
    ],
    "children": [
      {
        "displayName": "testEmpty(org.carrot2.clustering.lingo.ClusterMergerTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.clustering.lingo.ClusterMergerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testMultiMerge(org.carrot2.clustering.lingo.ClusterMergerTest)",
        "methodName": "testMultiMerge",
        "className": "org.carrot2.clustering.lingo.ClusterMergerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testSimpleMerge(org.carrot2.clustering.lingo.ClusterMergerTest)",
        "methodName": "testSimpleMerge",
        "className": "org.carrot2.clustering.lingo.ClusterMergerTest",
        "annotations": [],
        "children": []
      },
      {
        "displayName": "testNoMerge(org.carrot2.clustering.lingo.ClusterMergerTest)",
        "methodName": "testNoMerge",
        "className": "org.carrot2.clustering.lingo.ClusterMergerTest",
        "annotations": [],
        "children": []
      }
    ]
  },
  "tests": [
    {
      "description": {
        "displayName": "testNoMerge(org.carrot2.clustering.lingo.ClusterMergerTest)",
        "methodName": "testNoMerge",
        "className": "org.carrot2.clustering.lingo.ClusterMergerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536141,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testSimpleMerge(org.carrot2.clustering.lingo.ClusterMergerTest)",
        "methodName": "testSimpleMerge",
        "className": "org.carrot2.clustering.lingo.ClusterMergerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536138,
      "executionTime": 3,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testMultiMerge(org.carrot2.clustering.lingo.ClusterMergerTest)",
        "methodName": "testMultiMerge",
        "className": "org.carrot2.clustering.lingo.ClusterMergerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536134,
      "executionTime": 4,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    },
    {
      "description": {
        "displayName": "testEmpty(org.carrot2.clustering.lingo.ClusterMergerTest)",
        "methodName": "testEmpty",
        "className": "org.carrot2.clustering.lingo.ClusterMergerTest",
        "annotations": [],
        "children": []
      },
      "startTimestamp": 1325497536128,
      "executionTime": 6,
      "slave": 0,
      "status": "OK",
      "wasFailure": false,
      "wasError": false,
      "wasIgnored": false,
      "wasIgnoredByAssumption": false,
      "failures": []
    }
  ],
  "failures": [],
  "output": [
    {
      "test": "testEmpty(org.carrot2.clustering.lingo.ClusterMergerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testEmpty(org.carrot2.clustering.lingo.ClusterMergerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testMultiMerge(org.carrot2.clustering.lingo.ClusterMergerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testMultiMerge(org.carrot2.clustering.lingo.ClusterMergerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testSimpleMerge(org.carrot2.clustering.lingo.ClusterMergerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testSimpleMerge(org.carrot2.clustering.lingo.ClusterMergerTest)",
      "event": "TEST_FINISHED"
    },
    {
      "test": "testNoMerge(org.carrot2.clustering.lingo.ClusterMergerTest)",
      "event": "TEST_STARTED"
    },
    {
      "test": "testNoMerge(org.carrot2.clustering.lingo.ClusterMergerTest)",
      "event": "TEST_FINISHED"
    }
  ]
}

];

slaves = {
  "0": {
    "id": 0,
    "jvmName": "Java HotSpot(TM) 64-Bit Server VM, 20.4-b02",
    "charset": "windows-1250",
    "systemProperties": {
      "awt.toolkit": "sun.awt.windows.WToolkit",
      "carrot2.xml.feed.url.base": "",
      "dcs.test.web.dir.prefix": "e:\\repositories\\github.com\\carrot2\\applications/carrot2-dcs",
      "file.encoding": "Cp1250",
      "file.encoding.pkg": "sun.io",
      "file.separator": "\\",
      "java.awt.graphicsenv": "sun.awt.Win32GraphicsEnvironment",
      "java.awt.printerjob": "sun.awt.windows.WPrinterJob",
      "java.class.path": "e:\\repositories\\github.com\\carrot2\\applications\\carrot2-benchmarks\\lib\\h2-1.2.132.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-benchmarks\\lib\\junit-benchmarks-0.1.0.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-dcs\\lib\\commons-fileupload-1.2.1.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-webapp\\lib\\jawr-2.4.2.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-attribute\\.apt_factory\\org.carrot2.bindables.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-text\\lib\\JFlex.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.hppc\\hppc-0.4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.randomizedtesting\\ant-junit4-0.0.5-SNAPSHOT-standalone.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.randomizedtesting\\randomizedtesting-runner-0.0.5-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.google.guava\\guava-10.0.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.google.guava\\jsr305-1.3.9.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.planetj.compression\\pjl-comp-filter-1.7.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.thoughtworks.qdox\\qdox-1.12.jar;e:\\repositories\\github.com\\carrot2\\lib\\javax.servlet\\servlet-api-2.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\morfologik\\morfologik-stemming-1.5.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.java.dev.rome\\rome-1.0.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.java.dev.rome\\rome-fetcher-1.0.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.sf.ehcache\\ehcache-core-1.7.2.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-codec-1.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-collections-3.2.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-io-2.0.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-lang-2.6.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpclient-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpcore-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpmime-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.log4j\\log4j-1.2.16.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-analyzers-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-core-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-highlighter-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-memory-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-smartcn-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.mahout\\mahout-collections-1.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.mahout\\mahout-math-0.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.oro\\oro-2.0.8.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.velocity\\velocity-1.7.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.velocity\\velocity-tools-generic-2.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\resolver.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\serializer.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xalan-2.7.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xercesImpl-2.11.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xml-apis.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.carrot2.antlib\\org.carrot2.antlib.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.codehaus.jackson\\jackson-core-asl-1.7.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.codehaus.jackson\\jackson-mapper-asl-1.7.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.easymock\\easymock-3.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-continuation-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-deploy-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-http-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-io-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-security-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-server-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-servlet-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-servlets-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-util-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-webapp-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-xml-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-assert-1.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-mocks-1.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-util-1.1.6.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\cssparser-0.9.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\htmlunit-2.9-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\htmlunit-core-js-2.9-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\nekohtml-1.9.15-20101026.093020-2.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\sac-1.3.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.jdom\\jdom-1.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.junit4-ext\\junit-4.10.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.kohsuke.args4j\\args4j-2.0.9.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.simpleframework.xml\\simple-xml-2.4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\jcl-over-slf4j-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\slf4j-api-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\slf4j-log4j12-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-component-suites\\suites;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-log4j\\src;e:\\repositories\\github.com\\carrot2\\tmp\\classes-clover;e:\\repositories\\github.com\\carrot2\\tmp\\classes-test;e:\\repositories\\github.com\\carrot2\\tmp\\classes;e:\\repositories\\carrotsearch.com\\tools\\clover-ant-2.6.3\\lib\\clover.jar",
      "java.class.version": "50.0",
      "java.endorsed.dirs": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\endorsed",
      "java.ext.dirs": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\ext;C:\\Windows\\Sun\\Java\\lib\\ext",
      "java.home": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre",
      "java.io.tmpdir": "C:\\Users\\stachoo\\AppData\\Local\\Temp\\",
      "java.library.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;d:\\dev\\scm\\svn\\cmd;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\DMIX;d:\\dev\\scm\\git\\msysgit\\cmd;D:\\dev\\scm\\git\\tortoise\\bin;d:\\dev\\java\\ant\\bin;d:\\bin;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\bin;D:\\dev\\scm\\svn\\tortoise\\bin;d:\\dev\\java\\maven\\bin;.",
      "java.runtime.name": "Java(TM) SE Runtime Environment",
      "java.runtime.version": "1.6.0_29-b11",
      "java.specification.name": "Java Platform API Specification",
      "java.specification.vendor": "Sun Microsystems Inc.",
      "java.specification.version": "1.6",
      "java.vendor": "Sun Microsystems Inc.",
      "java.vendor.url": "http://java.sun.com/",
      "java.vendor.url.bug": "http://java.sun.com/cgi-bin/bugreport.cgi",
      "java.version": "1.6.0_29",
      "java.vm.info": "mixed mode",
      "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
      "java.vm.specification.name": "Java Virtual Machine Specification",
      "java.vm.specification.vendor": "Sun Microsystems Inc.",
      "java.vm.specification.version": "1.0",
      "java.vm.vendor": "Sun Microsystems Inc.",
      "java.vm.version": "20.4-b02",
      "junit4.memory.total": "191496192",
      "junit4.processors": "8",
      "line.separator": "\r\n",
      "log4j.configuration": "log4j-tests.xml",
      "os.arch": "amd64",
      "os.name": "Windows 7",
      "os.version": "6.1",
      "path.separator": ";",
      "sun.arch.data.model": "64",
      "sun.boot.class.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\resources.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\rt.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\sunrsasign.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\jsse.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\jce.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\charsets.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\modules\\jdk.boot.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\classes",
      "sun.boot.library.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\bin",
      "sun.cpu.endian": "little",
      "sun.cpu.isalist": "amd64",
      "sun.desktop": "windows",
      "sun.io.unicode.encoding": "UnicodeLittle",
      "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe @e:\\repositories\\github.com\\carrot2\\tmp\\junit4-474106197226016933.testmethods",
      "sun.java.launcher": "SUN_STANDARD",
      "sun.jnu.encoding": "Cp1250",
      "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
      "sun.os.patch.level": "Service Pack 1",
      "tests.externalservices": "${tests.externalservices}",
      "tests.nightly": "false",
      "tests.seed": "DECCF8F6DA530769",
      "user.country": "PL",
      "user.dir": "e:\\repositories\\github.com\\carrot2",
      "user.home": "C:\\Users\\stachoo",
      "user.language": "pl",
      "user.name": "stachoo",
      "user.timezone": "",
      "user.variant": ""
    }
  },
  "1": {
    "id": 1,
    "jvmName": "Java HotSpot(TM) 64-Bit Server VM, 20.4-b02",
    "charset": "windows-1250",
    "systemProperties": {
      "awt.toolkit": "sun.awt.windows.WToolkit",
      "carrot2.xml.feed.url.base": "",
      "dcs.test.web.dir.prefix": "e:\\repositories\\github.com\\carrot2\\applications/carrot2-dcs",
      "file.encoding": "Cp1250",
      "file.encoding.pkg": "sun.io",
      "file.separator": "\\",
      "java.awt.graphicsenv": "sun.awt.Win32GraphicsEnvironment",
      "java.awt.printerjob": "sun.awt.windows.WPrinterJob",
      "java.class.path": "e:\\repositories\\github.com\\carrot2\\applications\\carrot2-benchmarks\\lib\\h2-1.2.132.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-benchmarks\\lib\\junit-benchmarks-0.1.0.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-dcs\\lib\\commons-fileupload-1.2.1.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-webapp\\lib\\jawr-2.4.2.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-attribute\\.apt_factory\\org.carrot2.bindables.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-text\\lib\\JFlex.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.hppc\\hppc-0.4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.randomizedtesting\\ant-junit4-0.0.5-SNAPSHOT-standalone.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.randomizedtesting\\randomizedtesting-runner-0.0.5-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.google.guava\\guava-10.0.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.google.guava\\jsr305-1.3.9.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.planetj.compression\\pjl-comp-filter-1.7.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.thoughtworks.qdox\\qdox-1.12.jar;e:\\repositories\\github.com\\carrot2\\lib\\javax.servlet\\servlet-api-2.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\morfologik\\morfologik-stemming-1.5.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.java.dev.rome\\rome-1.0.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.java.dev.rome\\rome-fetcher-1.0.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.sf.ehcache\\ehcache-core-1.7.2.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-codec-1.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-collections-3.2.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-io-2.0.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-lang-2.6.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpclient-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpcore-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpmime-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.log4j\\log4j-1.2.16.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-analyzers-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-core-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-highlighter-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-memory-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-smartcn-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.mahout\\mahout-collections-1.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.mahout\\mahout-math-0.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.oro\\oro-2.0.8.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.velocity\\velocity-1.7.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.velocity\\velocity-tools-generic-2.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\resolver.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\serializer.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xalan-2.7.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xercesImpl-2.11.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xml-apis.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.carrot2.antlib\\org.carrot2.antlib.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.codehaus.jackson\\jackson-core-asl-1.7.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.codehaus.jackson\\jackson-mapper-asl-1.7.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.easymock\\easymock-3.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-continuation-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-deploy-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-http-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-io-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-security-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-server-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-servlet-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-servlets-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-util-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-webapp-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-xml-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-assert-1.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-mocks-1.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-util-1.1.6.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\cssparser-0.9.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\htmlunit-2.9-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\htmlunit-core-js-2.9-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\nekohtml-1.9.15-20101026.093020-2.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\sac-1.3.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.jdom\\jdom-1.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.junit4-ext\\junit-4.10.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.kohsuke.args4j\\args4j-2.0.9.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.simpleframework.xml\\simple-xml-2.4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\jcl-over-slf4j-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\slf4j-api-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\slf4j-log4j12-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-component-suites\\suites;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-log4j\\src;e:\\repositories\\github.com\\carrot2\\tmp\\classes-clover;e:\\repositories\\github.com\\carrot2\\tmp\\classes-test;e:\\repositories\\github.com\\carrot2\\tmp\\classes;e:\\repositories\\carrotsearch.com\\tools\\clover-ant-2.6.3\\lib\\clover.jar",
      "java.class.version": "50.0",
      "java.endorsed.dirs": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\endorsed",
      "java.ext.dirs": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\ext;C:\\Windows\\Sun\\Java\\lib\\ext",
      "java.home": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre",
      "java.io.tmpdir": "C:\\Users\\stachoo\\AppData\\Local\\Temp\\",
      "java.library.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;d:\\dev\\scm\\svn\\cmd;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\DMIX;d:\\dev\\scm\\git\\msysgit\\cmd;D:\\dev\\scm\\git\\tortoise\\bin;d:\\dev\\java\\ant\\bin;d:\\bin;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\bin;D:\\dev\\scm\\svn\\tortoise\\bin;d:\\dev\\java\\maven\\bin;.",
      "java.runtime.name": "Java(TM) SE Runtime Environment",
      "java.runtime.version": "1.6.0_29-b11",
      "java.specification.name": "Java Platform API Specification",
      "java.specification.vendor": "Sun Microsystems Inc.",
      "java.specification.version": "1.6",
      "java.vendor": "Sun Microsystems Inc.",
      "java.vendor.url": "http://java.sun.com/",
      "java.vendor.url.bug": "http://java.sun.com/cgi-bin/bugreport.cgi",
      "java.version": "1.6.0_29",
      "java.vm.info": "mixed mode",
      "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
      "java.vm.specification.name": "Java Virtual Machine Specification",
      "java.vm.specification.vendor": "Sun Microsystems Inc.",
      "java.vm.specification.version": "1.0",
      "java.vm.vendor": "Sun Microsystems Inc.",
      "java.vm.version": "20.4-b02",
      "junit4.memory.total": "191496192",
      "junit4.processors": "8",
      "line.separator": "\r\n",
      "log4j.configuration": "log4j-tests.xml",
      "os.arch": "amd64",
      "os.name": "Windows 7",
      "os.version": "6.1",
      "path.separator": ";",
      "sun.arch.data.model": "64",
      "sun.boot.class.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\resources.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\rt.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\sunrsasign.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\jsse.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\jce.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\charsets.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\modules\\jdk.boot.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\classes",
      "sun.boot.library.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\bin",
      "sun.cpu.endian": "little",
      "sun.cpu.isalist": "amd64",
      "sun.desktop": "windows",
      "sun.io.unicode.encoding": "UnicodeLittle",
      "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe @e:\\repositories\\github.com\\carrot2\\tmp\\junit4-7943256984334079569.testmethods",
      "sun.java.launcher": "SUN_STANDARD",
      "sun.jnu.encoding": "Cp1250",
      "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
      "sun.os.patch.level": "Service Pack 1",
      "tests.externalservices": "${tests.externalservices}",
      "tests.nightly": "false",
      "tests.seed": "DECCF8F6DA530769",
      "user.country": "PL",
      "user.dir": "e:\\repositories\\github.com\\carrot2",
      "user.home": "C:\\Users\\stachoo",
      "user.language": "pl",
      "user.name": "stachoo",
      "user.timezone": "",
      "user.variant": ""
    }
  },
  "2": {
    "id": 2,
    "jvmName": "Java HotSpot(TM) 64-Bit Server VM, 20.4-b02",
    "charset": "windows-1250",
    "systemProperties": {
      "awt.toolkit": "sun.awt.windows.WToolkit",
      "carrot2.xml.feed.url.base": "",
      "dcs.test.web.dir.prefix": "e:\\repositories\\github.com\\carrot2\\applications/carrot2-dcs",
      "file.encoding": "Cp1250",
      "file.encoding.pkg": "sun.io",
      "file.separator": "\\",
      "java.awt.graphicsenv": "sun.awt.Win32GraphicsEnvironment",
      "java.awt.printerjob": "sun.awt.windows.WPrinterJob",
      "java.class.path": "e:\\repositories\\github.com\\carrot2\\applications\\carrot2-benchmarks\\lib\\h2-1.2.132.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-benchmarks\\lib\\junit-benchmarks-0.1.0.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-dcs\\lib\\commons-fileupload-1.2.1.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-webapp\\lib\\jawr-2.4.2.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-attribute\\.apt_factory\\org.carrot2.bindables.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-text\\lib\\JFlex.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.hppc\\hppc-0.4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.randomizedtesting\\ant-junit4-0.0.5-SNAPSHOT-standalone.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.randomizedtesting\\randomizedtesting-runner-0.0.5-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.google.guava\\guava-10.0.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.google.guava\\jsr305-1.3.9.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.planetj.compression\\pjl-comp-filter-1.7.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.thoughtworks.qdox\\qdox-1.12.jar;e:\\repositories\\github.com\\carrot2\\lib\\javax.servlet\\servlet-api-2.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\morfologik\\morfologik-stemming-1.5.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.java.dev.rome\\rome-1.0.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.java.dev.rome\\rome-fetcher-1.0.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.sf.ehcache\\ehcache-core-1.7.2.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-codec-1.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-collections-3.2.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-io-2.0.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-lang-2.6.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpclient-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpcore-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpmime-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.log4j\\log4j-1.2.16.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-analyzers-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-core-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-highlighter-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-memory-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-smartcn-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.mahout\\mahout-collections-1.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.mahout\\mahout-math-0.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.oro\\oro-2.0.8.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.velocity\\velocity-1.7.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.velocity\\velocity-tools-generic-2.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\resolver.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\serializer.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xalan-2.7.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xercesImpl-2.11.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xml-apis.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.carrot2.antlib\\org.carrot2.antlib.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.codehaus.jackson\\jackson-core-asl-1.7.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.codehaus.jackson\\jackson-mapper-asl-1.7.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.easymock\\easymock-3.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-continuation-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-deploy-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-http-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-io-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-security-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-server-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-servlet-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-servlets-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-util-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-webapp-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-xml-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-assert-1.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-mocks-1.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-util-1.1.6.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\cssparser-0.9.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\htmlunit-2.9-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\htmlunit-core-js-2.9-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\nekohtml-1.9.15-20101026.093020-2.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\sac-1.3.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.jdom\\jdom-1.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.junit4-ext\\junit-4.10.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.kohsuke.args4j\\args4j-2.0.9.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.simpleframework.xml\\simple-xml-2.4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\jcl-over-slf4j-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\slf4j-api-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\slf4j-log4j12-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-component-suites\\suites;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-log4j\\src;e:\\repositories\\github.com\\carrot2\\tmp\\classes-clover;e:\\repositories\\github.com\\carrot2\\tmp\\classes-test;e:\\repositories\\github.com\\carrot2\\tmp\\classes;e:\\repositories\\carrotsearch.com\\tools\\clover-ant-2.6.3\\lib\\clover.jar",
      "java.class.version": "50.0",
      "java.endorsed.dirs": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\endorsed",
      "java.ext.dirs": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\ext;C:\\Windows\\Sun\\Java\\lib\\ext",
      "java.home": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre",
      "java.io.tmpdir": "C:\\Users\\stachoo\\AppData\\Local\\Temp\\",
      "java.library.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;d:\\dev\\scm\\svn\\cmd;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\DMIX;d:\\dev\\scm\\git\\msysgit\\cmd;D:\\dev\\scm\\git\\tortoise\\bin;d:\\dev\\java\\ant\\bin;d:\\bin;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\bin;D:\\dev\\scm\\svn\\tortoise\\bin;d:\\dev\\java\\maven\\bin;.",
      "java.runtime.name": "Java(TM) SE Runtime Environment",
      "java.runtime.version": "1.6.0_29-b11",
      "java.specification.name": "Java Platform API Specification",
      "java.specification.vendor": "Sun Microsystems Inc.",
      "java.specification.version": "1.6",
      "java.vendor": "Sun Microsystems Inc.",
      "java.vendor.url": "http://java.sun.com/",
      "java.vendor.url.bug": "http://java.sun.com/cgi-bin/bugreport.cgi",
      "java.version": "1.6.0_29",
      "java.vm.info": "mixed mode",
      "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
      "java.vm.specification.name": "Java Virtual Machine Specification",
      "java.vm.specification.vendor": "Sun Microsystems Inc.",
      "java.vm.specification.version": "1.0",
      "java.vm.vendor": "Sun Microsystems Inc.",
      "java.vm.version": "20.4-b02",
      "junit4.memory.total": "191496192",
      "junit4.processors": "8",
      "line.separator": "\r\n",
      "log4j.configuration": "log4j-tests.xml",
      "os.arch": "amd64",
      "os.name": "Windows 7",
      "os.version": "6.1",
      "path.separator": ";",
      "sun.arch.data.model": "64",
      "sun.boot.class.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\resources.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\rt.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\sunrsasign.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\jsse.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\jce.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\charsets.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\modules\\jdk.boot.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\classes",
      "sun.boot.library.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\bin",
      "sun.cpu.endian": "little",
      "sun.cpu.isalist": "amd64",
      "sun.desktop": "windows",
      "sun.io.unicode.encoding": "UnicodeLittle",
      "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe @e:\\repositories\\github.com\\carrot2\\tmp\\junit4-7463937504940782488.testmethods",
      "sun.java.launcher": "SUN_STANDARD",
      "sun.jnu.encoding": "Cp1250",
      "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
      "sun.os.patch.level": "Service Pack 1",
      "tests.externalservices": "${tests.externalservices}",
      "tests.nightly": "false",
      "tests.seed": "DECCF8F6DA530769",
      "user.country": "PL",
      "user.dir": "e:\\repositories\\github.com\\carrot2",
      "user.home": "C:\\Users\\stachoo",
      "user.language": "pl",
      "user.name": "stachoo",
      "user.timezone": "",
      "user.variant": ""
    }
  },
  "3": {
    "id": 3,
    "jvmName": "Java HotSpot(TM) 64-Bit Server VM, 20.4-b02",
    "charset": "windows-1250",
    "systemProperties": {
      "awt.toolkit": "sun.awt.windows.WToolkit",
      "carrot2.xml.feed.url.base": "",
      "dcs.test.web.dir.prefix": "e:\\repositories\\github.com\\carrot2\\applications/carrot2-dcs",
      "file.encoding": "Cp1250",
      "file.encoding.pkg": "sun.io",
      "file.separator": "\\",
      "java.awt.graphicsenv": "sun.awt.Win32GraphicsEnvironment",
      "java.awt.printerjob": "sun.awt.windows.WPrinterJob",
      "java.class.path": "e:\\repositories\\github.com\\carrot2\\applications\\carrot2-benchmarks\\lib\\h2-1.2.132.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-benchmarks\\lib\\junit-benchmarks-0.1.0.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-dcs\\lib\\commons-fileupload-1.2.1.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-webapp\\lib\\jawr-2.4.2.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-attribute\\.apt_factory\\org.carrot2.bindables.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-text\\lib\\JFlex.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.hppc\\hppc-0.4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.randomizedtesting\\ant-junit4-0.0.5-SNAPSHOT-standalone.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.randomizedtesting\\randomizedtesting-runner-0.0.5-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.google.guava\\guava-10.0.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.google.guava\\jsr305-1.3.9.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.planetj.compression\\pjl-comp-filter-1.7.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.thoughtworks.qdox\\qdox-1.12.jar;e:\\repositories\\github.com\\carrot2\\lib\\javax.servlet\\servlet-api-2.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\morfologik\\morfologik-stemming-1.5.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.java.dev.rome\\rome-1.0.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.java.dev.rome\\rome-fetcher-1.0.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.sf.ehcache\\ehcache-core-1.7.2.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-codec-1.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-collections-3.2.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-io-2.0.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-lang-2.6.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpclient-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpcore-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpmime-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.log4j\\log4j-1.2.16.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-analyzers-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-core-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-highlighter-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-memory-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-smartcn-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.mahout\\mahout-collections-1.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.mahout\\mahout-math-0.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.oro\\oro-2.0.8.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.velocity\\velocity-1.7.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.velocity\\velocity-tools-generic-2.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\resolver.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\serializer.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xalan-2.7.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xercesImpl-2.11.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xml-apis.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.carrot2.antlib\\org.carrot2.antlib.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.codehaus.jackson\\jackson-core-asl-1.7.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.codehaus.jackson\\jackson-mapper-asl-1.7.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.easymock\\easymock-3.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-continuation-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-deploy-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-http-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-io-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-security-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-server-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-servlet-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-servlets-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-util-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-webapp-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-xml-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-assert-1.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-mocks-1.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-util-1.1.6.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\cssparser-0.9.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\htmlunit-2.9-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\htmlunit-core-js-2.9-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\nekohtml-1.9.15-20101026.093020-2.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\sac-1.3.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.jdom\\jdom-1.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.junit4-ext\\junit-4.10.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.kohsuke.args4j\\args4j-2.0.9.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.simpleframework.xml\\simple-xml-2.4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\jcl-over-slf4j-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\slf4j-api-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\slf4j-log4j12-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-component-suites\\suites;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-log4j\\src;e:\\repositories\\github.com\\carrot2\\tmp\\classes-clover;e:\\repositories\\github.com\\carrot2\\tmp\\classes-test;e:\\repositories\\github.com\\carrot2\\tmp\\classes;e:\\repositories\\carrotsearch.com\\tools\\clover-ant-2.6.3\\lib\\clover.jar",
      "java.class.version": "50.0",
      "java.endorsed.dirs": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\endorsed",
      "java.ext.dirs": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\ext;C:\\Windows\\Sun\\Java\\lib\\ext",
      "java.home": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre",
      "java.io.tmpdir": "C:\\Users\\stachoo\\AppData\\Local\\Temp\\",
      "java.library.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;d:\\dev\\scm\\svn\\cmd;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\DMIX;d:\\dev\\scm\\git\\msysgit\\cmd;D:\\dev\\scm\\git\\tortoise\\bin;d:\\dev\\java\\ant\\bin;d:\\bin;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\bin;D:\\dev\\scm\\svn\\tortoise\\bin;d:\\dev\\java\\maven\\bin;.",
      "java.runtime.name": "Java(TM) SE Runtime Environment",
      "java.runtime.version": "1.6.0_29-b11",
      "java.specification.name": "Java Platform API Specification",
      "java.specification.vendor": "Sun Microsystems Inc.",
      "java.specification.version": "1.6",
      "java.vendor": "Sun Microsystems Inc.",
      "java.vendor.url": "http://java.sun.com/",
      "java.vendor.url.bug": "http://java.sun.com/cgi-bin/bugreport.cgi",
      "java.version": "1.6.0_29",
      "java.vm.info": "mixed mode",
      "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
      "java.vm.specification.name": "Java Virtual Machine Specification",
      "java.vm.specification.vendor": "Sun Microsystems Inc.",
      "java.vm.specification.version": "1.0",
      "java.vm.vendor": "Sun Microsystems Inc.",
      "java.vm.version": "20.4-b02",
      "junit4.memory.total": "191496192",
      "junit4.processors": "8",
      "line.separator": "\r\n",
      "log4j.configuration": "log4j-tests.xml",
      "os.arch": "amd64",
      "os.name": "Windows 7",
      "os.version": "6.1",
      "path.separator": ";",
      "sun.arch.data.model": "64",
      "sun.boot.class.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\resources.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\rt.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\sunrsasign.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\jsse.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\jce.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\charsets.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\modules\\jdk.boot.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\classes",
      "sun.boot.library.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\bin",
      "sun.cpu.endian": "little",
      "sun.cpu.isalist": "amd64",
      "sun.desktop": "windows",
      "sun.io.unicode.encoding": "UnicodeLittle",
      "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe @e:\\repositories\\github.com\\carrot2\\tmp\\junit4-937235502927286817.testmethods",
      "sun.java.launcher": "SUN_STANDARD",
      "sun.jnu.encoding": "Cp1250",
      "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
      "sun.os.patch.level": "Service Pack 1",
      "tests.externalservices": "${tests.externalservices}",
      "tests.nightly": "false",
      "tests.seed": "DECCF8F6DA530769",
      "user.country": "PL",
      "user.dir": "e:\\repositories\\github.com\\carrot2",
      "user.home": "C:\\Users\\stachoo",
      "user.language": "pl",
      "user.name": "stachoo",
      "user.timezone": "",
      "user.variant": ""
    }
  }
};