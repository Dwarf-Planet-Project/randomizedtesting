testData({
  "junit4": {
    "tests.seed": "F801026B52DB1308"
  },
  "suites": [
    {
      "slave": 0,
      "startTimestamp": 1326191503806,
      "startTimestampDate": "2012-01-10T11:31:43.806",
      "executionTime": 36,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest[1]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest",
        "className": "com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#getContextByHand(com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest)[0]",
            "displayName": "getContextByHand(com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest)",
            "methodName": "getContextByHand",
            "className": "com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#getContextFromSuper(com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest)[0]",
            "displayName": "getContextFromSuper(com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest)",
            "methodName": "getContextFromSuper",
            "className": "com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326191503826,
          "startTimestampDate": "2012-01-10T11:31:43.826",
          "executionTime": 8,
          "description": "id#getContextByHand(com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191503837,
          "startTimestampDate": "2012-01-10T11:31:43.837",
          "executionTime": 3,
          "description": "id#getContextFromSuper(com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "getContextByHand(com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "Random, next int: -1336134818\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "getContextByHand(com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "getContextFromSuper(com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "Random, next int: 1001871487\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "getContextFromSuper(com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326191503898,
      "startTimestampDate": "2012-01-10T11:31:43.898",
      "executionTime": 127,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests[1]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
        "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#paramsWithRepeatAndSeeds[0]",
            "displayName": "paramsWithRepeatAndSeeds",
            "className": "paramsWithRepeatAndSeeds",
            "annotations": [],
            "children": [
              {
                "id": "id#paramsWithRepeatAndSeeds {#0 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
                "displayName": "paramsWithRepeatAndSeeds {#0 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)",
                "methodName": "paramsWithRepeatAndSeeds {#0 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:DEADBEEF]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#paramsWithRepeatAndSeeds {#1 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
                "displayName": "paramsWithRepeatAndSeeds {#1 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)",
                "methodName": "paramsWithRepeatAndSeeds {#1 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:DEADBEEF]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#paramsWithRepeatAndSeeds {#2 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
                "displayName": "paramsWithRepeatAndSeeds {#2 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)",
                "methodName": "paramsWithRepeatAndSeeds {#2 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:CAFEBABE]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#paramsWithRepeatAndSeeds {#3 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
                "displayName": "paramsWithRepeatAndSeeds {#3 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)",
                "methodName": "paramsWithRepeatAndSeeds {#3 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:CAFEBABE]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#paramsWithRepeatAndSeeds {#0 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
                "displayName": "paramsWithRepeatAndSeeds {#0 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)",
                "methodName": "paramsWithRepeatAndSeeds {#0 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:DEADBEEF]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#paramsWithRepeatAndSeeds {#1 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
                "displayName": "paramsWithRepeatAndSeeds {#1 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)",
                "methodName": "paramsWithRepeatAndSeeds {#1 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:DEADBEEF]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#paramsWithRepeatAndSeeds {#2 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
                "displayName": "paramsWithRepeatAndSeeds {#2 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)",
                "methodName": "paramsWithRepeatAndSeeds {#2 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:CAFEBABE]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#paramsWithRepeatAndSeeds {#3 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
                "displayName": "paramsWithRepeatAndSeeds {#3 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)",
                "methodName": "paramsWithRepeatAndSeeds {#3 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:CAFEBABE]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
                "annotations": [],
                "children": []
              }
            ]
          },
          {
            "id": "id#simpleArgumentsConsumer[0]",
            "displayName": "simpleArgumentsConsumer",
            "className": "simpleArgumentsConsumer",
            "annotations": [],
            "children": [
              {
                "id": "id#simpleArgumentsConsumer {value\u003d1 string\u003dabc}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
                "displayName": "simpleArgumentsConsumer {value\u003d1 string\u003dabc}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)",
                "methodName": "simpleArgumentsConsumer {value\u003d1 string\u003dabc}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#simpleArgumentsConsumer {value\u003d2 string\u003ddef}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
                "displayName": "simpleArgumentsConsumer {value\u003d2 string\u003ddef}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)",
                "methodName": "simpleArgumentsConsumer {value\u003d2 string\u003ddef}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
                "annotations": [],
                "children": []
              }
            ]
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326191503980,
          "startTimestampDate": "2012-01-10T11:31:43.980",
          "executionTime": 2,
          "description": "id#paramsWithRepeatAndSeeds {#0 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191503983,
          "startTimestampDate": "2012-01-10T11:31:43.983",
          "executionTime": 3,
          "description": "id#paramsWithRepeatAndSeeds {#1 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191503987,
          "startTimestampDate": "2012-01-10T11:31:43.987",
          "executionTime": 10,
          "description": "id#paramsWithRepeatAndSeeds {#2 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191503998,
          "startTimestampDate": "2012-01-10T11:31:43.998",
          "executionTime": 3,
          "description": "id#paramsWithRepeatAndSeeds {#3 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191504002,
          "startTimestampDate": "2012-01-10T11:31:44.002",
          "executionTime": 6,
          "description": "id#simpleArgumentsConsumer {value\u003d1 string\u003dabc}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191504008,
          "startTimestampDate": "2012-01-10T11:31:44.008",
          "executionTime": 2,
          "description": "id#paramsWithRepeatAndSeeds {#0 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191504011,
          "startTimestampDate": "2012-01-10T11:31:44.011",
          "executionTime": 3,
          "description": "id#paramsWithRepeatAndSeeds {#1 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191504015,
          "startTimestampDate": "2012-01-10T11:31:44.015",
          "executionTime": 3,
          "description": "id#paramsWithRepeatAndSeeds {#2 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191504019,
          "startTimestampDate": "2012-01-10T11:31:44.019",
          "executionTime": 2,
          "description": "id#paramsWithRepeatAndSeeds {#3 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191504022,
          "startTimestampDate": "2012-01-10T11:31:44.022",
          "executionTime": 2,
          "description": "id#simpleArgumentsConsumer {value\u003d2 string\u003ddef}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "paramsWithRepeatAndSeeds {#0 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "1 abc [Randomness, seed\u003d[DEADBEEF]]\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "paramsWithRepeatAndSeeds {#0 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "paramsWithRepeatAndSeeds {#1 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "1 abc [Randomness, seed\u003d[DEADBEEF]]\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "paramsWithRepeatAndSeeds {#1 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "paramsWithRepeatAndSeeds {#2 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "1 abc [Randomness, seed\u003d[CAFEBABE]]\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "paramsWithRepeatAndSeeds {#2 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "paramsWithRepeatAndSeeds {#3 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "1 abc [Randomness, seed\u003d[CAFEBABE]]\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "paramsWithRepeatAndSeeds {#3 value\u003d1 string\u003dabc seed\u003d[F801026B52DB1308:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "simpleArgumentsConsumer {value\u003d1 string\u003dabc}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "1 abc [Randomness, seed\u003d[B32BD03EAA1EF3CA]]\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "simpleArgumentsConsumer {value\u003d1 string\u003dabc}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "paramsWithRepeatAndSeeds {#0 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "2 def [Randomness, seed\u003d[DEADBEEF]]\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "paramsWithRepeatAndSeeds {#0 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "paramsWithRepeatAndSeeds {#1 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "2 def [Randomness, seed\u003d[DEADBEEF]]\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "paramsWithRepeatAndSeeds {#1 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "paramsWithRepeatAndSeeds {#2 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "2 def [Randomness, seed\u003d[CAFEBABE]]\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "paramsWithRepeatAndSeeds {#2 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "paramsWithRepeatAndSeeds {#3 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "2 def [Randomness, seed\u003d[CAFEBABE]]\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "paramsWithRepeatAndSeeds {#3 value\u003d2 string\u003ddef seed\u003d[F801026B52DB1308:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "simpleArgumentsConsumer {value\u003d2 string\u003ddef}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "2 def [Randomness, seed\u003d[B32BD03EAA1EF3CA]]\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "simpleArgumentsConsumer {value\u003d2 string\u003ddef}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326191504033,
      "startTimestampDate": "2012-01-10T11:31:44.033",
      "executionTime": 1935,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test010Lingering[1]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
        "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#executorLeak[0]",
            "displayName": "executorLeak",
            "className": "executorLeak",
            "annotations": [],
            "children": [
              {
                "id": "id#executorLeak {#0 seed\u003d[F801026B52DB1308:A513EC998C4FCCE1]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
                "displayName": "executorLeak {#0 seed\u003d[F801026B52DB1308:A513EC998C4FCCE1]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
                "methodName": "executorLeak {#0 seed\u003d[F801026B52DB1308:A513EC998C4FCCE1]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#executorLeak {#1 seed\u003d[F801026B52DB1308:11455065B88D07CD]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
                "displayName": "executorLeak {#1 seed\u003d[F801026B52DB1308:11455065B88D07CD]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
                "methodName": "executorLeak {#1 seed\u003d[F801026B52DB1308:11455065B88D07CD]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#executorLeak {#2 seed\u003d[F801026B52DB1308:9FACC6B9E9494F06]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
                "displayName": "executorLeak {#2 seed\u003d[F801026B52DB1308:9FACC6B9E9494F06]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
                "methodName": "executorLeak {#2 seed\u003d[F801026B52DB1308:9FACC6B9E9494F06]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#executorLeak {#3 seed\u003d[F801026B52DB1308:AE426D5C85B7142F]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
                "displayName": "executorLeak {#3 seed\u003d[F801026B52DB1308:AE426D5C85B7142F]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
                "methodName": "executorLeak {#3 seed\u003d[F801026B52DB1308:AE426D5C85B7142F]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#executorLeak {#4 seed\u003d[F801026B52DB1308:E283E8F124BFD494]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
                "displayName": "executorLeak {#4 seed\u003d[F801026B52DB1308:E283E8F124BFD494]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
                "methodName": "executorLeak {#4 seed\u003d[F801026B52DB1308:E283E8F124BFD494]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#executorLeak {#5 seed\u003d[F801026B52DB1308:73793BAE59039994]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
                "displayName": "executorLeak {#5 seed\u003d[F801026B52DB1308:73793BAE59039994]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
                "methodName": "executorLeak {#5 seed\u003d[F801026B52DB1308:73793BAE59039994]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#executorLeak {#6 seed\u003d[F801026B52DB1308:4DA75F284B338992]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
                "displayName": "executorLeak {#6 seed\u003d[F801026B52DB1308:4DA75F284B338992]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
                "methodName": "executorLeak {#6 seed\u003d[F801026B52DB1308:4DA75F284B338992]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#executorLeak {#7 seed\u003d[F801026B52DB1308:D114C55268271D3C]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
                "displayName": "executorLeak {#7 seed\u003d[F801026B52DB1308:D114C55268271D3C]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
                "methodName": "executorLeak {#7 seed\u003d[F801026B52DB1308:D114C55268271D3C]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#executorLeak {#8 seed\u003d[F801026B52DB1308:E3B8203C1FEC0A66]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
                "displayName": "executorLeak {#8 seed\u003d[F801026B52DB1308:E3B8203C1FEC0A66]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
                "methodName": "executorLeak {#8 seed\u003d[F801026B52DB1308:E3B8203C1FEC0A66]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#executorLeak {#9 seed\u003d[F801026B52DB1308:343376867BBB3D34]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
                "displayName": "executorLeak {#9 seed\u003d[F801026B52DB1308:343376867BBB3D34]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
                "methodName": "executorLeak {#9 seed\u003d[F801026B52DB1308:343376867BBB3D34]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
                "annotations": [],
                "children": []
              }
            ]
          },
          {
            "id": "id#lingerForLeftOverThread(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
            "displayName": "lingerForLeftOverThread(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
            "methodName": "lingerForLeftOverThread",
            "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326191504051,
          "startTimestampDate": "2012-01-10T11:31:44.051",
          "executionTime": 36,
          "description": "id#executorLeak {#0 seed\u003d[F801026B52DB1308:A513EC998C4FCCE1]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191504088,
          "startTimestampDate": "2012-01-10T11:31:44.088",
          "executionTime": 113,
          "description": "id#executorLeak {#1 seed\u003d[F801026B52DB1308:11455065B88D07CD]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "com.carrotsearch.randomizedtesting.ThreadingError",
              "throwableString": "com.carrotsearch.randomizedtesting.ThreadingError: Left-over thread detected  (and terminated): Thread[pool-2-thread-50,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).",
              "stackTrace": "com.carrotsearch.randomizedtesting.ThreadingError: Left-over thread detected  (and terminated): Thread[pool-2-thread-50,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).\n",
              "kind": "error"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191504211,
          "startTimestampDate": "2012-01-10T11:31:44.211",
          "executionTime": 30,
          "description": "id#executorLeak {#2 seed\u003d[F801026B52DB1308:9FACC6B9E9494F06]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "com.carrotsearch.randomizedtesting.ThreadingError",
              "throwableString": "com.carrotsearch.randomizedtesting.ThreadingError: Left-over thread detected  (and terminated): Thread[pool-3-thread-50,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).",
              "stackTrace": "com.carrotsearch.randomizedtesting.ThreadingError: Left-over thread detected  (and terminated): Thread[pool-3-thread-50,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).\n",
              "kind": "error"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191504241,
          "startTimestampDate": "2012-01-10T11:31:44.241",
          "executionTime": 33,
          "description": "id#executorLeak {#3 seed\u003d[F801026B52DB1308:AE426D5C85B7142F]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "com.carrotsearch.randomizedtesting.ThreadingError",
              "throwableString": "com.carrotsearch.randomizedtesting.ThreadingError: Left-over thread detected  (and terminated): Thread[pool-4-thread-50,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).",
              "stackTrace": "com.carrotsearch.randomizedtesting.ThreadingError: Left-over thread detected  (and terminated): Thread[pool-4-thread-50,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).\n",
              "kind": "error"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191504275,
          "startTimestampDate": "2012-01-10T11:31:44.275",
          "executionTime": 96,
          "description": "id#executorLeak {#4 seed\u003d[F801026B52DB1308:E283E8F124BFD494]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191504372,
          "startTimestampDate": "2012-01-10T11:31:44.372",
          "executionTime": 221,
          "description": "id#executorLeak {#5 seed\u003d[F801026B52DB1308:73793BAE59039994]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "com.carrotsearch.randomizedtesting.ThreadingError",
              "throwableString": "com.carrotsearch.randomizedtesting.ThreadingError: Left-over thread detected  (and terminated): Thread[pool-6-thread-50,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).",
              "stackTrace": "com.carrotsearch.randomizedtesting.ThreadingError: Left-over thread detected  (and terminated): Thread[pool-6-thread-50,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).\n\tat __randomizedtesting.SeedInfo.seed([F801026B52DB1308:73793BAE59039994]:0)\n\tat sun.misc.Unsafe.unpark(Native Method)\n\tat java.util.concurrent.locks.LockSupport.unpark(LockSupport.java:122)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor(AbstractQueuedSynchronizer.java:640)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1242)\n\tat java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:431)\n\tat java.util.concurrent.ThreadPoolExecutor.workerDone(ThreadPoolExecutor.java:1013)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:912)\n\tat java.lang.Thread.run(Thread.java:662)\n",
              "kind": "error"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191504593,
          "startTimestampDate": "2012-01-10T11:31:44.593",
          "executionTime": 146,
          "description": "id#executorLeak {#6 seed\u003d[F801026B52DB1308:4DA75F284B338992]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "com.carrotsearch.randomizedtesting.ThreadingError",
              "throwableString": "com.carrotsearch.randomizedtesting.ThreadingError: Left-over thread detected  (and terminated): Thread[pool-7-thread-50,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).",
              "stackTrace": "com.carrotsearch.randomizedtesting.ThreadingError: Left-over thread detected  (and terminated): Thread[pool-7-thread-50,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).\n\tat __randomizedtesting.SeedInfo.seed([F801026B52DB1308:4DA75F284B338992]:0)\n\tat sun.misc.Unsafe.unpark(Native Method)\n\tat java.util.concurrent.locks.LockSupport.unpark(LockSupport.java:122)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor(AbstractQueuedSynchronizer.java:640)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1242)\n\tat java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:431)\n\tat java.util.concurrent.ThreadPoolExecutor.workerDone(ThreadPoolExecutor.java:1013)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:912)\n\tat java.lang.Thread.run(Thread.java:662)\n",
              "kind": "error"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191504740,
          "startTimestampDate": "2012-01-10T11:31:44.740",
          "executionTime": 57,
          "description": "id#executorLeak {#7 seed\u003d[F801026B52DB1308:D114C55268271D3C]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "com.carrotsearch.randomizedtesting.ThreadingError",
              "throwableString": "com.carrotsearch.randomizedtesting.ThreadingError: Left-over thread detected  (and terminated): Thread[pool-8-thread-49,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).",
              "stackTrace": "com.carrotsearch.randomizedtesting.ThreadingError: Left-over thread detected  (and terminated): Thread[pool-8-thread-49,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).\n",
              "kind": "error"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191504798,
          "startTimestampDate": "2012-01-10T11:31:44.798",
          "executionTime": 126,
          "description": "id#executorLeak {#8 seed\u003d[F801026B52DB1308:E3B8203C1FEC0A66]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "com.carrotsearch.randomizedtesting.ThreadingError",
              "throwableString": "com.carrotsearch.randomizedtesting.ThreadingError: Left-over thread detected  (and terminated): Thread[pool-9-thread-50,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).",
              "stackTrace": "com.carrotsearch.randomizedtesting.ThreadingError: Left-over thread detected  (and terminated): Thread[pool-9-thread-50,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).\n\tat __randomizedtesting.SeedInfo.seed([F801026B52DB1308:E3B8203C1FEC0A66]:0)\n\tat sun.misc.Unsafe.unpark(Native Method)\n\tat java.util.concurrent.locks.LockSupport.unpark(LockSupport.java:122)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor(AbstractQueuedSynchronizer.java:640)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1242)\n\tat java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:431)\n\tat java.util.concurrent.ThreadPoolExecutor.workerDone(ThreadPoolExecutor.java:1013)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:912)\n\tat java.lang.Thread.run(Thread.java:662)\n",
              "kind": "error"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191504925,
          "startTimestampDate": "2012-01-10T11:31:44.925",
          "executionTime": 29,
          "description": "id#executorLeak {#9 seed\u003d[F801026B52DB1308:343376867BBB3D34]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191504958,
          "startTimestampDate": "2012-01-10T11:31:44.958",
          "executionTime": 1008,
          "description": "id#lingerForLeftOverThread(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "executorLeak {#0 seed\u003d[F801026B52DB1308:A513EC998C4FCCE1]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "executorLeak {#0 seed\u003d[F801026B52DB1308:A513EC998C4FCCE1]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_STARTED",
          "test": "executorLeak {#1 seed\u003d[F801026B52DB1308:11455065B88D07CD]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "executorLeak {#1 seed\u003d[F801026B52DB1308:11455065B88D07CD]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_STARTED",
          "test": "executorLeak {#2 seed\u003d[F801026B52DB1308:9FACC6B9E9494F06]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "executorLeak {#2 seed\u003d[F801026B52DB1308:9FACC6B9E9494F06]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_STARTED",
          "test": "executorLeak {#3 seed\u003d[F801026B52DB1308:AE426D5C85B7142F]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "executorLeak {#3 seed\u003d[F801026B52DB1308:AE426D5C85B7142F]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_STARTED",
          "test": "executorLeak {#4 seed\u003d[F801026B52DB1308:E283E8F124BFD494]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "executorLeak {#4 seed\u003d[F801026B52DB1308:E283E8F124BFD494]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_STARTED",
          "test": "executorLeak {#5 seed\u003d[F801026B52DB1308:73793BAE59039994]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "executorLeak {#5 seed\u003d[F801026B52DB1308:73793BAE59039994]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_STARTED",
          "test": "executorLeak {#6 seed\u003d[F801026B52DB1308:4DA75F284B338992]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "executorLeak {#6 seed\u003d[F801026B52DB1308:4DA75F284B338992]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_STARTED",
          "test": "executorLeak {#7 seed\u003d[F801026B52DB1308:D114C55268271D3C]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "executorLeak {#7 seed\u003d[F801026B52DB1308:D114C55268271D3C]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_STARTED",
          "test": "executorLeak {#8 seed\u003d[F801026B52DB1308:E3B8203C1FEC0A66]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "executorLeak {#8 seed\u003d[F801026B52DB1308:E3B8203C1FEC0A66]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_STARTED",
          "test": "executorLeak {#9 seed\u003d[F801026B52DB1308:343376867BBB3D34]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "executorLeak {#9 seed\u003d[F801026B52DB1308:343376867BBB3D34]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_STARTED",
          "test": "lingerForLeftOverThread(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "lingerForLeftOverThread(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326191505976,
      "startTimestampDate": "2012-01-10T11:31:45.976",
      "executionTime": 9,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test001SimpleUseCase[1]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test001SimpleUseCase",
        "className": "com.carrotsearch.examples.randomizedrunner.Test001SimpleUseCase",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#success(com.carrotsearch.examples.randomizedrunner.Test001SimpleUseCase)[0]",
            "displayName": "success(com.carrotsearch.examples.randomizedrunner.Test001SimpleUseCase)",
            "methodName": "success",
            "className": "com.carrotsearch.examples.randomizedrunner.Test001SimpleUseCase",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326191505983,
          "startTimestampDate": "2012-01-10T11:31:45.983",
          "executionTime": 1,
          "description": "id#success(com.carrotsearch.examples.randomizedrunner.Test001SimpleUseCase)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "success(com.carrotsearch.examples.randomizedrunner.Test001SimpleUseCase)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "success(com.carrotsearch.examples.randomizedrunner.Test001SimpleUseCase)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326191506000,
      "startTimestampDate": "2012-01-10T11:31:46.000",
      "executionTime": 106,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness[1]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness",
        "className": "com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#expectNoException(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)[0]",
            "displayName": "expectNoException(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)",
            "methodName": "expectNoException",
            "className": "com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#fixedTesting(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)[0]",
            "displayName": "fixedTesting(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)",
            "methodName": "fixedTesting",
            "className": "com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#randomizedTesting(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)[0]",
            "displayName": "randomizedTesting(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)",
            "methodName": "randomizedTesting",
            "className": "com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326191506008,
          "startTimestampDate": "2012-01-10T11:31:46.008",
          "executionTime": 60,
          "description": "id#expectNoException(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)[0]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "java.lang.ArrayIndexOutOfBoundsException",
              "throwableString": "java.lang.ArrayIndexOutOfBoundsException: -3",
              "stackTrace": "java.lang.ArrayIndexOutOfBoundsException: -3\n\tat __randomizedtesting.SeedInfo.seed([F801026B52DB1308:8E8ED644E9326F8C]:0)\n\tat com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness.expectNoException(Test003UsingRandomness.java:81)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\n",
              "kind": "error"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191506070,
          "startTimestampDate": "2012-01-10T11:31:46.070",
          "executionTime": 8,
          "description": "id#fixedTesting(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191506080,
          "startTimestampDate": "2012-01-10T11:31:46.080",
          "executionTime": 18,
          "description": "id#randomizedTesting(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError: -873523195 \u003c (1835150376 or 1586293725)?",
              "stackTrace": "java.lang.AssertionError: -873523195 \u003c (1835150376 or 1586293725)?\n\tat __randomizedtesting.SeedInfo.seed([F801026B52DB1308:8C3CCC3242A04A49]:0)\n\tat org.junit.Assert.fail(Assert.java:93)\n\tat org.junit.Assert.assertTrue(Assert.java:43)\n\tat com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness.randomizedTesting(Test003UsingRandomness.java:69)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\n",
              "kind": "assertion"
            }
          ]
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "expectNoException(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "bad.\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "expectNoException(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)"
        },
        {
          "event": "TEST_STARTED",
          "test": "fixedTesting(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "fixedTesting(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)"
        },
        {
          "event": "TEST_STARTED",
          "test": "randomizedTesting(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "randomizedTesting(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326191506121,
      "startTimestampDate": "2012-01-10T11:31:46.121",
      "executionTime": 45,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed[2]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed",
        "className": "com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Seed": {
              "value": "AF567B2B9F8A8F1C"
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#failure(com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed)[0]",
            "displayName": "failure(com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed)",
            "methodName": "failure",
            "className": "com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#printContext(com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed)[0]",
            "displayName": "printContext(com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed)",
            "methodName": "printContext",
            "className": "com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326191506145,
          "startTimestampDate": "2012-01-10T11:31:46.145",
          "executionTime": 4,
          "description": "id#failure(com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\n\tat __randomizedtesting.SeedInfo.seed([F801026B52DB1308:13B5A8E0F476D33E]:0)\n\tat org.junit.Assert.fail(Assert.java:92)\n\tat org.junit.Assert.assertTrue(Assert.java:43)\n\tat org.junit.Assert.assertTrue(Assert.java:54)\n\tat com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed.failure(Test005RecoveringRandomSeed.java:81)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191506150,
          "startTimestampDate": "2012-01-10T11:31:46.150",
          "executionTime": 5,
          "description": "id#printContext(com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "APPEND_STDOUT",
          "content": "# Static context (@BeforeClass)\nF801026B52DB1308\n[Randomness, seed\u003d[F801026B52DB1308]]\n"
        },
        {
          "event": "TEST_STARTED",
          "test": "failure(com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "failure(com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed)"
        },
        {
          "event": "TEST_STARTED",
          "test": "printContext(com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "# Test context (@Test)\nF801026B52DB1308\n[Randomness, seed\u003d[B90F641E0B4CF7DB]]\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "printContext(com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326191506175,
      "startTimestampDate": "2012-01-10T11:31:46.175",
      "executionTime": 32,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test013Validators[2]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test013Validators",
        "className": "com.carrotsearch.examples.randomizedrunner.Test013Validators",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Validators": {
              "value": [
                "com.carrotsearch.randomizedtesting.validators.NoJUnit3TestMethods"
              ]
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testIAm(com.carrotsearch.examples.randomizedrunner.Test013Validators)[0]",
            "displayName": "testIAm(com.carrotsearch.examples.randomizedrunner.Test013Validators)",
            "methodName": "testIAm",
            "className": "com.carrotsearch.examples.randomizedrunner.Test013Validators",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [],
      "suiteFailures": [
        {
          "throwableClass": "java.lang.RuntimeException",
          "throwableString": "java.lang.RuntimeException: Class com.carrotsearch.examples.randomizedrunner.Test013Validators has a public instance method starting with \u0027test\u0027 that is not annotated with @Test, possibly a dead JUnit3 test case: public void com.carrotsearch.examples.randomizedrunner.Test013Validators.testOopsImNot()",
          "stackTrace": "java.lang.RuntimeException: Class com.carrotsearch.examples.randomizedrunner.Test013Validators has a public instance method starting with \u0027test\u0027 that is not annotated with @Test, possibly a dead JUnit3 test case: public void com.carrotsearch.examples.randomizedrunner.Test013Validators.testOopsImNot()\n\tat com.carrotsearch.randomizedtesting.validators.NoJUnit3TestMethods.validate(NoJUnit3TestMethods.java:32)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runCustomValidators(RandomizedRunner.java:1064)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:507)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\n",
          "kind": "error"
        }
      ],
      "executionEvents": []
    },
    {
      "slave": 0,
      "startTimestamp": 1326191506216,
      "startTimestampDate": "2012-01-10T11:31:46.216",
      "executionTime": 40,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput[0]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput",
        "className": "com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput",
        "annotations": [],
        "children": [
          {
            "id": "id#stderr(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)[1]",
            "displayName": "stderr(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)",
            "methodName": "stderr",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#stdout(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)[1]",
            "displayName": "stdout(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)",
            "methodName": "stdout",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#stdout_eol(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)[1]",
            "displayName": "stdout_eol(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)",
            "methodName": "stdout_eol",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#stderr_eol(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)[1]",
            "displayName": "stderr_eol(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)",
            "methodName": "stderr_eol",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#stderr_stdout_interwoven(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)[1]",
            "displayName": "stderr_stdout_interwoven(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)",
            "methodName": "stderr_stdout_interwoven",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#longline(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)[1]",
            "displayName": "longline(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)",
            "methodName": "longline",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326191506233,
          "startTimestampDate": "2012-01-10T11:31:46.233",
          "executionTime": 1,
          "description": "id#stderr(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191506234,
          "startTimestampDate": "2012-01-10T11:31:46.234",
          "executionTime": 1,
          "description": "id#stdout(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191506239,
          "startTimestampDate": "2012-01-10T11:31:46.239",
          "executionTime": 1,
          "description": "id#stdout_eol(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191506241,
          "startTimestampDate": "2012-01-10T11:31:46.241",
          "executionTime": 0,
          "description": "id#stderr_eol(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191506242,
          "startTimestampDate": "2012-01-10T11:31:46.242",
          "executionTime": 0,
          "description": "id#stderr_stdout_interwoven(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191506243,
          "startTimestampDate": "2012-01-10T11:31:46.243",
          "executionTime": 12,
          "description": "id#longline(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "stderr(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)"
        },
        {
          "event": "APPEND_STDERR",
          "content": "stderr-noeol"
        },
        {
          "event": "TEST_FINISHED",
          "test": "stderr(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)"
        },
        {
          "event": "TEST_STARTED",
          "test": "stdout(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "stdout-noeol"
        },
        {
          "event": "TEST_FINISHED",
          "test": "stdout(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)"
        },
        {
          "event": "TEST_STARTED",
          "test": "stdout_eol(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "stdout-witheol\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "stdout_eol(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)"
        },
        {
          "event": "TEST_STARTED",
          "test": "stderr_eol(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)"
        },
        {
          "event": "APPEND_STDERR",
          "content": "stderr-witheol\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "stderr_eol(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)"
        },
        {
          "event": "TEST_STARTED",
          "test": "stderr_stdout_interwoven(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "stdout-begin-"
        },
        {
          "event": "APPEND_STDERR",
          "content": "stderr-begin-"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "stdout-end"
        },
        {
          "event": "APPEND_STDERR",
          "content": "stderr-end"
        },
        {
          "event": "TEST_FINISHED",
          "test": "stderr_stdout_interwoven(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)"
        },
        {
          "event": "TEST_STARTED",
          "test": "longline(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "48495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657484950515253545556574849505152535455565748495051525354555657... and done.\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "longline(com.carrotsearch.examples.randomizedrunner.reports.Test005WithOutput)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326191506278,
      "startTimestampDate": "2012-01-10T11:31:46.278",
      "executionTime": 1626,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks[1]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks",
        "className": "com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#leftOverThread(com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks)[0]",
            "displayName": "leftOverThread(com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks)",
            "methodName": "leftOverThread",
            "className": "com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#noLeakHere(com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks)[0]",
            "displayName": "noLeakHere(com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks)",
            "methodName": "noLeakHere",
            "className": "com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326191506287,
          "startTimestampDate": "2012-01-10T11:31:46.287",
          "executionTime": 613,
          "description": "id#leftOverThread(com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks)[0]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "com.carrotsearch.randomizedtesting.ThreadingError",
              "throwableString": "com.carrotsearch.randomizedtesting.ThreadingError: Left-over thread detected  (and terminated): Thread[Thread-2,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).",
              "stackTrace": "com.carrotsearch.randomizedtesting.ThreadingError: Left-over thread detected  (and terminated): Thread[Thread-2,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).\n\tat __randomizedtesting.SeedInfo.seed([F801026B52DB1308:14165D485E91E7FC]:0)\n\tat sun.misc.Unsafe.unpark(Native Method)\n\tat java.util.concurrent.locks.LockSupport.unpark(LockSupport.java:122)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor(AbstractQueuedSynchronizer.java:640)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doReleaseShared(AbstractQueuedSynchronizer.java:667)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.releaseShared(AbstractQueuedSynchronizer.java:1318)\n\tat java.util.concurrent.CountDownLatch.countDown(CountDownLatch.java:267)\n\tat com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks$1.run(Test009ThreadLeaks.java:37)\n",
              "kind": "error"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191506901,
          "startTimestampDate": "2012-01-10T11:31:46.901",
          "executionTime": 1001,
          "description": "id#noLeakHere(com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "leftOverThread(com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks)"
        },
        {
          "event": "APPEND_STDERR",
          "content": "Jan 10, 2012 11:31:46 AM com.carrotsearch.randomizedtesting.RandomizedRunner reportStackProbes\nWARNING: 10 stack trace probe(s) taken and the constant root was:\n    ...\n    java.lang.Thread.sleep(Native Method)\n    com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks$1.run(Test009ThreadLeaks.java:38)\n\nDiverging stack paths from individual probes (if different than the common root):\n(all stacks constant.)\n\nJan 10, 2012 11:31:46 AM com.carrotsearch.randomizedtesting.RandomizedRunner tryToTerminate\nWARNING: Attempting to terminate thread: Thread-2(#262666716), currently at:\n    java.lang.Thread.sleep(Native Method)\n    com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks$1.run(Test009ThreadLeaks.java:38)\n\nJan 10, 2012 11:31:46 AM com.carrotsearch.randomizedtesting.RandomizedRunner tryToTerminate\nWARNING: Interrupted a runaway thread: Thread-2(#262666716)\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "leftOverThread(com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks)"
        },
        {
          "event": "TEST_STARTED",
          "test": "noLeakHere(com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "noLeakHere(com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326191507924,
      "startTimestampDate": "2012-01-10T11:31:47.924",
      "executionTime": 26,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test014Listeners[2]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test014Listeners",
        "className": "com.carrotsearch.examples.randomizedrunner.Test014Listeners",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          },
          {
            "com.carrotsearch.randomizedtesting.annotations.Listeners": {
              "value": [
                "com.carrotsearch.randomizedtesting.listeners.ReproduceInfoPrinter"
              ]
            }
          }
        ],
        "children": [
          {
            "id": "id#failure(com.carrotsearch.examples.randomizedrunner.Test014Listeners)[0]",
            "displayName": "failure(com.carrotsearch.examples.randomizedrunner.Test014Listeners)",
            "methodName": "failure",
            "className": "com.carrotsearch.examples.randomizedrunner.Test014Listeners",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326191507932,
          "startTimestampDate": "2012-01-10T11:31:47.932",
          "executionTime": 17,
          "description": "id#failure(com.carrotsearch.examples.randomizedrunner.Test014Listeners)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "junit.framework.AssertionFailedError",
              "throwableString": "junit.framework.AssertionFailedError",
              "stackTrace": "junit.framework.AssertionFailedError\n\tat __randomizedtesting.SeedInfo.seed([F801026B52DB1308:13B5A8E0F476D33E]:0)\n\tat junit.framework.Assert.fail(Assert.java:48)\n\tat junit.framework.Assert.assertTrue(Assert.java:20)\n\tat junit.framework.Assert.assertTrue(Assert.java:27)\n\tat com.carrotsearch.examples.randomizedrunner.Test014Listeners.failure(Test014Listeners.java:28)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\n",
              "kind": "assertion"
            }
          ]
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "failure(com.carrotsearch.examples.randomizedrunner.Test014Listeners)"
        },
        {
          "event": "APPEND_STDERR",
          "content": "FAILURE  : failure(com.carrotsearch.examples.randomizedrunner.Test014Listeners)\nMessage  : null\nReproduce:  -Dtests.seed\u003dF801026B52DB1308 -Dtests.class\u003dcom.carrotsearch.examples.randomizedrunner.Test014Listeners -Dtests.method\u003dfailure -Dfile.encoding\u003dUTF-8 -Duser.timezone\u003dEurope/Warsaw\nThrowable:\njunit.framework.AssertionFailedError\n    __randomizedtesting.SeedInfo.seed([F801026B52DB1308:13B5A8E0F476D33E]:0)\n    [...junit.framework.*]\n    com.carrotsearch.examples.randomizedrunner.Test014Listeners.failure(Test014Listeners.java:28)\n    [...sun.*, com.carrotsearch.randomizedtesting.*, java.lang.reflect.*]\n\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "failure(com.carrotsearch.examples.randomizedrunner.Test014Listeners)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326191507987,
      "startTimestampDate": "2012-01-10T11:31:47.987",
      "executionTime": 15,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test012TestGroups[1]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test012TestGroups",
        "className": "com.carrotsearch.examples.randomizedrunner.Test012TestGroups",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#usesDisplay(com.carrotsearch.examples.randomizedrunner.Test012TestGroups)[0]",
            "displayName": "usesDisplay(com.carrotsearch.examples.randomizedrunner.Test012TestGroups)",
            "methodName": "usesDisplay",
            "className": "com.carrotsearch.examples.randomizedrunner.Test012TestGroups",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326191508001,
          "startTimestampDate": "2012-01-10T11:31:48.001",
          "executionTime": 1,
          "description": "id#usesDisplay(com.carrotsearch.examples.randomizedrunner.Test012TestGroups)[0]",
          "status": "IGNORED",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "usesDisplay(com.carrotsearch.examples.randomizedrunner.Test012TestGroups)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "usesDisplay(com.carrotsearch.examples.randomizedrunner.Test012TestGroups)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326191508020,
      "startTimestampDate": "2012-01-10T11:31:48.020",
      "executionTime": 43,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test011NightlyTests[1]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test011NightlyTests",
        "className": "com.carrotsearch.examples.randomizedrunner.Test011NightlyTests",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#nightlyOnlyWithAssume(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)[0]",
            "displayName": "nightlyOnlyWithAssume(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)",
            "methodName": "nightlyOnlyWithAssume",
            "className": "com.carrotsearch.examples.randomizedrunner.Test011NightlyTests",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#nightlyOnly(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)[0]",
            "displayName": "nightlyOnly(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)",
            "methodName": "nightlyOnly",
            "className": "com.carrotsearch.examples.randomizedrunner.Test011NightlyTests",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#scaling(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)[0]",
            "displayName": "scaling(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)",
            "methodName": "scaling",
            "className": "com.carrotsearch.examples.randomizedrunner.Test011NightlyTests",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326191508032,
          "startTimestampDate": "2012-01-10T11:31:48.032",
          "executionTime": 19,
          "description": "id#nightlyOnlyWithAssume(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)[0]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat __randomizedtesting.SeedInfo.seed([F801026B52DB1308:5E3C09B7DBEAADEC]:0)\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.examples.randomizedrunner.Test011NightlyTests.nightlyOnlyWithAssume(Test011NightlyTests.java:39)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508059,
          "startTimestampDate": "2012-01-10T11:31:48.059",
          "executionTime": 0,
          "description": "id#nightlyOnly(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508060,
          "startTimestampDate": "2012-01-10T11:31:48.060",
          "executionTime": 2,
          "description": "id#scaling(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "nightlyOnlyWithAssume(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "nightlyOnlyWithAssume(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "nightlyOnly(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "nightlyOnly(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "scaling(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "Mode: daily\nMultiplier: 1.0\nrandom scaled int \u003d 14\nrandom scaled int \u003d 56\nrandom scaled int \u003d 24\nrandom scaled int \u003d 44\nrandom scaled int \u003d 11\nrandom scaled int \u003d 71\nrandom scaled int \u003d 38\nrandom scaled int \u003d 20\nrandom scaled int \u003d 71\nrandom scaled int \u003d 57\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "scaling(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326191508072,
      "startTimestampDate": "2012-01-10T11:31:48.072",
      "executionTime": 242,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested[2]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested",
        "className": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested",
        "annotations": [
          {
            "org.junit.runners.Suite$SuiteClasses": {
              "value": [
                "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1",
                "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2",
                "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3"
              ]
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "org.junit.runners.Suite"
            }
          }
        ],
        "children": [
          {
            "id": "id#com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1[0]",
            "displayName": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1",
            "annotations": [],
            "children": [
              {
                "id": "id#failure(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)[1]",
                "displayName": "failure(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)",
                "methodName": "failure",
                "className": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1",
                "annotations": [
                  {
                    "org.junit.Test": {
                      "timeout": 0,
                      "expected": "org.junit.Test$None"
                    }
                  }
                ],
                "children": []
              },
              {
                "id": "id#error(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)[1]",
                "displayName": "error(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)",
                "methodName": "error",
                "className": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1",
                "annotations": [
                  {
                    "org.junit.Test": {
                      "timeout": 0,
                      "expected": "org.junit.Test$None"
                    }
                  }
                ],
                "children": []
              },
              {
                "id": "id#passed(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)[1]",
                "displayName": "passed(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)",
                "methodName": "passed",
                "className": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1",
                "annotations": [
                  {
                    "org.junit.Test": {
                      "timeout": 0,
                      "expected": "org.junit.Test$None"
                    }
                  }
                ],
                "children": []
              },
              {
                "id": "id#ignored(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)[2]",
                "displayName": "ignored(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)",
                "methodName": "ignored",
                "className": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1",
                "annotations": [
                  {
                    "org.junit.Test": {
                      "timeout": 0,
                      "expected": "org.junit.Test$None"
                    }
                  },
                  {
                    "org.junit.Ignore": {
                      "value": ""
                    }
                  }
                ],
                "children": []
              },
              {
                "id": "id#ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)[1]",
                "displayName": "ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)",
                "methodName": "ignored_assumption",
                "className": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1",
                "annotations": [
                  {
                    "org.junit.Test": {
                      "timeout": 0,
                      "expected": "org.junit.Test$None"
                    }
                  }
                ],
                "children": []
              }
            ]
          },
          {
            "id": "id#com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2[0]",
            "displayName": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2",
            "annotations": [],
            "children": [
              {
                "id": "id#failure(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)[1]",
                "displayName": "failure(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)",
                "methodName": "failure",
                "className": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2",
                "annotations": [
                  {
                    "org.junit.Test": {
                      "timeout": 0,
                      "expected": "org.junit.Test$None"
                    }
                  }
                ],
                "children": []
              },
              {
                "id": "id#error(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)[1]",
                "displayName": "error(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)",
                "methodName": "error",
                "className": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2",
                "annotations": [
                  {
                    "org.junit.Test": {
                      "timeout": 0,
                      "expected": "org.junit.Test$None"
                    }
                  }
                ],
                "children": []
              },
              {
                "id": "id#passed(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)[1]",
                "displayName": "passed(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)",
                "methodName": "passed",
                "className": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2",
                "annotations": [
                  {
                    "org.junit.Test": {
                      "timeout": 0,
                      "expected": "org.junit.Test$None"
                    }
                  }
                ],
                "children": []
              },
              {
                "id": "id#ignored(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)[2]",
                "displayName": "ignored(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)",
                "methodName": "ignored",
                "className": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2",
                "annotations": [
                  {
                    "org.junit.Test": {
                      "timeout": 0,
                      "expected": "org.junit.Test$None"
                    }
                  },
                  {
                    "org.junit.Ignore": {
                      "value": ""
                    }
                  }
                ],
                "children": []
              },
              {
                "id": "id#ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)[1]",
                "displayName": "ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)",
                "methodName": "ignored_assumption",
                "className": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2",
                "annotations": [
                  {
                    "org.junit.Test": {
                      "timeout": 0,
                      "expected": "org.junit.Test$None"
                    }
                  }
                ],
                "children": []
              }
            ]
          },
          {
            "id": "id#com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3[0]",
            "displayName": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3",
            "annotations": [],
            "children": [
              {
                "id": "id#failure(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)[1]",
                "displayName": "failure(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)",
                "methodName": "failure",
                "className": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3",
                "annotations": [
                  {
                    "org.junit.Test": {
                      "timeout": 0,
                      "expected": "org.junit.Test$None"
                    }
                  }
                ],
                "children": []
              },
              {
                "id": "id#error(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)[1]",
                "displayName": "error(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)",
                "methodName": "error",
                "className": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3",
                "annotations": [
                  {
                    "org.junit.Test": {
                      "timeout": 0,
                      "expected": "org.junit.Test$None"
                    }
                  }
                ],
                "children": []
              },
              {
                "id": "id#passed(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)[1]",
                "displayName": "passed(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)",
                "methodName": "passed",
                "className": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3",
                "annotations": [
                  {
                    "org.junit.Test": {
                      "timeout": 0,
                      "expected": "org.junit.Test$None"
                    }
                  }
                ],
                "children": []
              },
              {
                "id": "id#ignored(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)[2]",
                "displayName": "ignored(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)",
                "methodName": "ignored",
                "className": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3",
                "annotations": [
                  {
                    "org.junit.Test": {
                      "timeout": 0,
                      "expected": "org.junit.Test$None"
                    }
                  },
                  {
                    "org.junit.Ignore": {
                      "value": ""
                    }
                  }
                ],
                "children": []
              },
              {
                "id": "id#ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)[1]",
                "displayName": "ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)",
                "methodName": "ignored_assumption",
                "className": "com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3",
                "annotations": [
                  {
                    "org.junit.Test": {
                      "timeout": 0,
                      "expected": "org.junit.Test$None"
                    }
                  }
                ],
                "children": []
              }
            ]
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326191508118,
          "startTimestampDate": "2012-01-10T11:31:48.118",
          "executionTime": 16,
          "description": "id#failure(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)[1]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "junit.framework.AssertionFailedError",
              "throwableString": "junit.framework.AssertionFailedError",
              "stackTrace": "junit.framework.AssertionFailedError\n\tat junit.framework.Assert.fail(Assert.java:48)\n\tat junit.framework.Assert.fail(Assert.java:56)\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses.failure(Test001AllStatuses.java:24)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:24)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508141,
          "startTimestampDate": "2012-01-10T11:31:48.141",
          "executionTime": 4,
          "description": "id#error(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)[1]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "java.lang.RuntimeException",
              "throwableString": "java.lang.RuntimeException",
              "stackTrace": "java.lang.RuntimeException\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses.error(Test001AllStatuses.java:29)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:24)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "error"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508145,
          "startTimestampDate": "2012-01-10T11:31:48.145",
          "executionTime": 0,
          "description": "id#passed(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508146,
          "startTimestampDate": "2012-01-10T11:31:48.146",
          "executionTime": 0,
          "description": "id#ignored(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)[2]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508146,
          "startTimestampDate": "2012-01-10T11:31:48.146",
          "executionTime": 13,
          "description": "id#ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses.ignored_assumption(Test001AllStatuses.java:19)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:24)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508160,
          "startTimestampDate": "2012-01-10T11:31:48.160",
          "executionTime": 10,
          "description": "id#failure(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)[1]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "junit.framework.AssertionFailedError",
              "throwableString": "junit.framework.AssertionFailedError",
              "stackTrace": "junit.framework.AssertionFailedError\n\tat junit.framework.Assert.fail(Assert.java:48)\n\tat junit.framework.Assert.fail(Assert.java:56)\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses.failure(Test001AllStatuses.java:24)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:24)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508170,
          "startTimestampDate": "2012-01-10T11:31:48.170",
          "executionTime": 4,
          "description": "id#error(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)[1]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "java.lang.RuntimeException",
              "throwableString": "java.lang.RuntimeException",
              "stackTrace": "java.lang.RuntimeException\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses.error(Test001AllStatuses.java:29)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:24)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "error"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508183,
          "startTimestampDate": "2012-01-10T11:31:48.183",
          "executionTime": 0,
          "description": "id#passed(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508184,
          "startTimestampDate": "2012-01-10T11:31:48.184",
          "executionTime": 0,
          "description": "id#ignored(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)[2]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508184,
          "startTimestampDate": "2012-01-10T11:31:48.184",
          "executionTime": 4,
          "description": "id#ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses.ignored_assumption(Test001AllStatuses.java:19)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:24)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508189,
          "startTimestampDate": "2012-01-10T11:31:48.189",
          "executionTime": 13,
          "description": "id#failure(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)[1]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "junit.framework.AssertionFailedError",
              "throwableString": "junit.framework.AssertionFailedError",
              "stackTrace": "junit.framework.AssertionFailedError\n\tat junit.framework.Assert.fail(Assert.java:48)\n\tat junit.framework.Assert.fail(Assert.java:56)\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses.failure(Test001AllStatuses.java:24)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:24)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508202,
          "startTimestampDate": "2012-01-10T11:31:48.202",
          "executionTime": 4,
          "description": "id#error(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)[1]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "java.lang.RuntimeException",
              "throwableString": "java.lang.RuntimeException",
              "stackTrace": "java.lang.RuntimeException\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses.error(Test001AllStatuses.java:29)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:24)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "error"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508251,
          "startTimestampDate": "2012-01-10T11:31:48.251",
          "executionTime": 0,
          "description": "id#passed(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508308,
          "startTimestampDate": "2012-01-10T11:31:48.308",
          "executionTime": 0,
          "description": "id#ignored(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)[2]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508309,
          "startTimestampDate": "2012-01-10T11:31:48.309",
          "executionTime": 5,
          "description": "id#ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses.ignored_assumption(Test001AllStatuses.java:19)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:24)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "failure(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "failure(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)"
        },
        {
          "event": "TEST_STARTED",
          "test": "error(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "error(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)"
        },
        {
          "event": "TEST_STARTED",
          "test": "passed(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "passed(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)"
        },
        {
          "event": "TEST_STARTED",
          "test": "ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass1)"
        },
        {
          "event": "TEST_STARTED",
          "test": "failure(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "failure(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)"
        },
        {
          "event": "TEST_STARTED",
          "test": "error(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "error(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)"
        },
        {
          "event": "TEST_STARTED",
          "test": "passed(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "passed(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)"
        },
        {
          "event": "TEST_STARTED",
          "test": "ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass2)"
        },
        {
          "event": "TEST_STARTED",
          "test": "failure(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "failure(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)"
        },
        {
          "event": "TEST_STARTED",
          "test": "error(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "error(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)"
        },
        {
          "event": "TEST_STARTED",
          "test": "passed(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "passed(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)"
        },
        {
          "event": "TEST_STARTED",
          "test": "ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test004SuiteOfNested$Subclass3)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326191508345,
      "startTimestampDate": "2012-01-10T11:31:48.345",
      "executionTime": 190,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests[1]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
        "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#halfAndHalf[0]",
            "displayName": "halfAndHalf",
            "className": "halfAndHalf",
            "annotations": [],
            "children": [
              {
                "id": "id#halfAndHalf {#0 seed\u003d[F801026B52DB1308:CF6472BC0085A674]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "halfAndHalf {#0 seed\u003d[F801026B52DB1308:CF6472BC0085A674]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "halfAndHalf {#0 seed\u003d[F801026B52DB1308:CF6472BC0085A674]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#halfAndHalf {#1 seed\u003d[F801026B52DB1308:7B32CE4034476D58]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "halfAndHalf {#1 seed\u003d[F801026B52DB1308:7B32CE4034476D58]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "halfAndHalf {#1 seed\u003d[F801026B52DB1308:7B32CE4034476D58]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#halfAndHalf {#2 seed\u003d[F801026B52DB1308:F5DB589C65832593]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "halfAndHalf {#2 seed\u003d[F801026B52DB1308:F5DB589C65832593]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "halfAndHalf {#2 seed\u003d[F801026B52DB1308:F5DB589C65832593]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#halfAndHalf {#3 seed\u003d[F801026B52DB1308:C435F379097D7EBA]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "halfAndHalf {#3 seed\u003d[F801026B52DB1308:C435F379097D7EBA]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "halfAndHalf {#3 seed\u003d[F801026B52DB1308:C435F379097D7EBA]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#halfAndHalf {#4 seed\u003d[F801026B52DB1308:88F476D4A875BE01]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "halfAndHalf {#4 seed\u003d[F801026B52DB1308:88F476D4A875BE01]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "halfAndHalf {#4 seed\u003d[F801026B52DB1308:88F476D4A875BE01]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#halfAndHalf {#5 seed\u003d[F801026B52DB1308:190EA58BD5C9F301]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "halfAndHalf {#5 seed\u003d[F801026B52DB1308:190EA58BD5C9F301]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "halfAndHalf {#5 seed\u003d[F801026B52DB1308:190EA58BD5C9F301]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#halfAndHalf {#6 seed\u003d[F801026B52DB1308:27D0C10DC7F9E307]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "halfAndHalf {#6 seed\u003d[F801026B52DB1308:27D0C10DC7F9E307]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "halfAndHalf {#6 seed\u003d[F801026B52DB1308:27D0C10DC7F9E307]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#halfAndHalf {#7 seed\u003d[F801026B52DB1308:BB635B77E4ED77A9]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "halfAndHalf {#7 seed\u003d[F801026B52DB1308:BB635B77E4ED77A9]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "halfAndHalf {#7 seed\u003d[F801026B52DB1308:BB635B77E4ED77A9]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#halfAndHalf {#8 seed\u003d[F801026B52DB1308:89CFBE19932660F3]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "halfAndHalf {#8 seed\u003d[F801026B52DB1308:89CFBE19932660F3]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "halfAndHalf {#8 seed\u003d[F801026B52DB1308:89CFBE19932660F3]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#halfAndHalf {#9 seed\u003d[F801026B52DB1308:5E44E8A3F77157A1]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "halfAndHalf {#9 seed\u003d[F801026B52DB1308:5E44E8A3F77157A1]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "halfAndHalf {#9 seed\u003d[F801026B52DB1308:5E44E8A3F77157A1]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              }
            ]
          },
          {
            "id": "id#repeatFailure[0]",
            "displayName": "repeatFailure",
            "className": "repeatFailure",
            "annotations": [],
            "children": [
              {
                "id": "id#repeatFailure {#0 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "repeatFailure {#0 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "repeatFailure {#0 seed\u003d[F801026B52DB1308:F00DDEAD]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#repeatFailure {#1 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "repeatFailure {#1 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "repeatFailure {#1 seed\u003d[F801026B52DB1308:F00DDEAD]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#repeatFailure {#2 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "repeatFailure {#2 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "repeatFailure {#2 seed\u003d[F801026B52DB1308:F00DDEAD]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#repeatFailure {#3 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "repeatFailure {#3 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "repeatFailure {#3 seed\u003d[F801026B52DB1308:F00DDEAD]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#repeatFailure {#4 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "repeatFailure {#4 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "repeatFailure {#4 seed\u003d[F801026B52DB1308:F00DDEAD]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              }
            ]
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326191508375,
          "startTimestampDate": "2012-01-10T11:31:48.375",
          "executionTime": 4,
          "description": "id#halfAndHalf {#0 seed\u003d[F801026B52DB1308:CF6472BC0085A674]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\n\tat __randomizedtesting.SeedInfo.seed([F801026B52DB1308:CF6472BC0085A674]:0)\n\tat org.junit.Assert.fail(Assert.java:92)\n\tat org.junit.Assert.assertTrue(Assert.java:43)\n\tat org.junit.Assert.assertTrue(Assert.java:54)\n\tat com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests.halfAndHalf(Test006RepeatingTests.java:48)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508380,
          "startTimestampDate": "2012-01-10T11:31:48.380",
          "executionTime": 16,
          "description": "id#halfAndHalf {#1 seed\u003d[F801026B52DB1308:7B32CE4034476D58]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\n\tat __randomizedtesting.SeedInfo.seed([F801026B52DB1308:7B32CE4034476D58]:0)\n\tat org.junit.Assert.fail(Assert.java:92)\n\tat org.junit.Assert.assertTrue(Assert.java:43)\n\tat org.junit.Assert.assertTrue(Assert.java:54)\n\tat com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests.halfAndHalf(Test006RepeatingTests.java:48)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508398,
          "startTimestampDate": "2012-01-10T11:31:48.398",
          "executionTime": 4,
          "description": "id#halfAndHalf {#2 seed\u003d[F801026B52DB1308:F5DB589C65832593]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\n\tat __randomizedtesting.SeedInfo.seed([F801026B52DB1308:F5DB589C65832593]:0)\n\tat org.junit.Assert.fail(Assert.java:92)\n\tat org.junit.Assert.assertTrue(Assert.java:43)\n\tat org.junit.Assert.assertTrue(Assert.java:54)\n\tat com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests.halfAndHalf(Test006RepeatingTests.java:48)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508403,
          "startTimestampDate": "2012-01-10T11:31:48.403",
          "executionTime": 5,
          "description": "id#halfAndHalf {#3 seed\u003d[F801026B52DB1308:C435F379097D7EBA]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508408,
          "startTimestampDate": "2012-01-10T11:31:48.408",
          "executionTime": 9,
          "description": "id#halfAndHalf {#4 seed\u003d[F801026B52DB1308:88F476D4A875BE01]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508417,
          "startTimestampDate": "2012-01-10T11:31:48.417",
          "executionTime": 1,
          "description": "id#halfAndHalf {#5 seed\u003d[F801026B52DB1308:190EA58BD5C9F301]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508419,
          "startTimestampDate": "2012-01-10T11:31:48.419",
          "executionTime": 1,
          "description": "id#halfAndHalf {#6 seed\u003d[F801026B52DB1308:27D0C10DC7F9E307]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508420,
          "startTimestampDate": "2012-01-10T11:31:48.420",
          "executionTime": 16,
          "description": "id#halfAndHalf {#7 seed\u003d[F801026B52DB1308:BB635B77E4ED77A9]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\n\tat __randomizedtesting.SeedInfo.seed([F801026B52DB1308:BB635B77E4ED77A9]:0)\n\tat org.junit.Assert.fail(Assert.java:92)\n\tat org.junit.Assert.assertTrue(Assert.java:43)\n\tat org.junit.Assert.assertTrue(Assert.java:54)\n\tat com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests.halfAndHalf(Test006RepeatingTests.java:48)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508437,
          "startTimestampDate": "2012-01-10T11:31:48.437",
          "executionTime": 4,
          "description": "id#halfAndHalf {#8 seed\u003d[F801026B52DB1308:89CFBE19932660F3]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\n\tat __randomizedtesting.SeedInfo.seed([F801026B52DB1308:89CFBE19932660F3]:0)\n\tat org.junit.Assert.fail(Assert.java:92)\n\tat org.junit.Assert.assertTrue(Assert.java:43)\n\tat org.junit.Assert.assertTrue(Assert.java:54)\n\tat com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests.halfAndHalf(Test006RepeatingTests.java:48)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508441,
          "startTimestampDate": "2012-01-10T11:31:48.441",
          "executionTime": 2,
          "description": "id#halfAndHalf {#9 seed\u003d[F801026B52DB1308:5E44E8A3F77157A1]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508443,
          "startTimestampDate": "2012-01-10T11:31:48.443",
          "executionTime": 16,
          "description": "id#repeatFailure {#0 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\n\tat __randomizedtesting.SeedInfo.seed([F801026B52DB1308:F00DDEAD]:0)\n\tat org.junit.Assert.fail(Assert.java:92)\n\tat org.junit.Assert.assertTrue(Assert.java:43)\n\tat org.junit.Assert.assertTrue(Assert.java:54)\n\tat com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests.repeatFailure(Test006RepeatingTests.java:42)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508465,
          "startTimestampDate": "2012-01-10T11:31:48.465",
          "executionTime": 4,
          "description": "id#repeatFailure {#1 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\n\tat __randomizedtesting.SeedInfo.seed([F801026B52DB1308:F00DDEAD]:0)\n\tat org.junit.Assert.fail(Assert.java:92)\n\tat org.junit.Assert.assertTrue(Assert.java:43)\n\tat org.junit.Assert.assertTrue(Assert.java:54)\n\tat com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests.repeatFailure(Test006RepeatingTests.java:42)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508469,
          "startTimestampDate": "2012-01-10T11:31:48.469",
          "executionTime": 19,
          "description": "id#repeatFailure {#2 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\n\tat __randomizedtesting.SeedInfo.seed([F801026B52DB1308:F00DDEAD]:0)\n\tat org.junit.Assert.fail(Assert.java:92)\n\tat org.junit.Assert.assertTrue(Assert.java:43)\n\tat org.junit.Assert.assertTrue(Assert.java:54)\n\tat com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests.repeatFailure(Test006RepeatingTests.java:42)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508515,
          "startTimestampDate": "2012-01-10T11:31:48.515",
          "executionTime": 5,
          "description": "id#repeatFailure {#3 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\n\tat __randomizedtesting.SeedInfo.seed([F801026B52DB1308:F00DDEAD]:0)\n\tat org.junit.Assert.fail(Assert.java:92)\n\tat org.junit.Assert.assertTrue(Assert.java:43)\n\tat org.junit.Assert.assertTrue(Assert.java:54)\n\tat com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests.repeatFailure(Test006RepeatingTests.java:42)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508522,
          "startTimestampDate": "2012-01-10T11:31:48.522",
          "executionTime": 4,
          "description": "id#repeatFailure {#4 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\n\tat __randomizedtesting.SeedInfo.seed([F801026B52DB1308:F00DDEAD]:0)\n\tat org.junit.Assert.fail(Assert.java:92)\n\tat org.junit.Assert.assertTrue(Assert.java:43)\n\tat org.junit.Assert.assertTrue(Assert.java:54)\n\tat com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests.repeatFailure(Test006RepeatingTests.java:42)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\n",
              "kind": "assertion"
            }
          ]
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "halfAndHalf {#0 seed\u003d[F801026B52DB1308:CF6472BC0085A674]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "halfAndHalf {#0 seed\u003d[F801026B52DB1308:CF6472BC0085A674]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "halfAndHalf {#1 seed\u003d[F801026B52DB1308:7B32CE4034476D58]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "halfAndHalf {#1 seed\u003d[F801026B52DB1308:7B32CE4034476D58]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "halfAndHalf {#2 seed\u003d[F801026B52DB1308:F5DB589C65832593]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "halfAndHalf {#2 seed\u003d[F801026B52DB1308:F5DB589C65832593]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "halfAndHalf {#3 seed\u003d[F801026B52DB1308:C435F379097D7EBA]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "halfAndHalf {#3 seed\u003d[F801026B52DB1308:C435F379097D7EBA]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "halfAndHalf {#4 seed\u003d[F801026B52DB1308:88F476D4A875BE01]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "halfAndHalf {#4 seed\u003d[F801026B52DB1308:88F476D4A875BE01]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "halfAndHalf {#5 seed\u003d[F801026B52DB1308:190EA58BD5C9F301]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "halfAndHalf {#5 seed\u003d[F801026B52DB1308:190EA58BD5C9F301]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "halfAndHalf {#6 seed\u003d[F801026B52DB1308:27D0C10DC7F9E307]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "halfAndHalf {#6 seed\u003d[F801026B52DB1308:27D0C10DC7F9E307]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "halfAndHalf {#7 seed\u003d[F801026B52DB1308:BB635B77E4ED77A9]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "halfAndHalf {#7 seed\u003d[F801026B52DB1308:BB635B77E4ED77A9]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "halfAndHalf {#8 seed\u003d[F801026B52DB1308:89CFBE19932660F3]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "halfAndHalf {#8 seed\u003d[F801026B52DB1308:89CFBE19932660F3]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "halfAndHalf {#9 seed\u003d[F801026B52DB1308:5E44E8A3F77157A1]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "halfAndHalf {#9 seed\u003d[F801026B52DB1308:5E44E8A3F77157A1]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "repeatFailure {#0 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "repeatFailure {#0 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "repeatFailure {#1 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "repeatFailure {#1 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "repeatFailure {#2 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "repeatFailure {#2 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "repeatFailure {#3 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "repeatFailure {#3 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "repeatFailure {#4 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "repeatFailure {#4 seed\u003d[F801026B52DB1308:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326191508546,
      "startTimestampDate": "2012-01-10T11:31:48.546",
      "executionTime": 65,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness[2]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness",
        "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness",
        "annotations": [
          {
            "org.junit.runners.Suite$SuiteClasses": {
              "value": [
                "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized",
                "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed",
                "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression"
              ]
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "org.junit.runners.Suite"
            }
          }
        ],
        "children": [
          {
            "id": "id#com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized[1]",
            "displayName": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized",
            "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized",
            "annotations": [
              {
                "org.junit.runner.RunWith": {
                  "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
                }
              }
            ],
            "children": [
              {
                "id": "id#method1(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)[0]",
                "displayName": "method1(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)",
                "methodName": "method1",
                "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#method2(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)[0]",
                "displayName": "method2(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)",
                "methodName": "method2",
                "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#method3(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)[0]",
                "displayName": "method3(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)",
                "methodName": "method3",
                "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized",
                "annotations": [],
                "children": []
              }
            ]
          },
          {
            "id": "id#com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed[2]",
            "displayName": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed",
            "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed",
            "annotations": [
              {
                "com.carrotsearch.randomizedtesting.annotations.Seed": {
                  "value": "deadbeef"
                }
              },
              {
                "org.junit.runner.RunWith": {
                  "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
                }
              }
            ],
            "children": [
              {
                "id": "id#method1(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)[0]",
                "displayName": "method1(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)",
                "methodName": "method1",
                "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#method2(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)[0]",
                "displayName": "method2(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)",
                "methodName": "method2",
                "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#method3(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)[0]",
                "displayName": "method3(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)",
                "methodName": "method3",
                "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed",
                "annotations": [],
                "children": []
              }
            ]
          },
          {
            "id": "id#com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression[1]",
            "displayName": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression",
            "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression",
            "annotations": [
              {
                "org.junit.runner.RunWith": {
                  "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
                }
              }
            ],
            "children": [
              {
                "id": "id#regression[0]",
                "displayName": "regression",
                "className": "regression",
                "annotations": [],
                "children": [
                  {
                    "id": "id#regression {#0 seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression)[0]",
                    "displayName": "regression {#0 seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression)",
                    "methodName": "regression {#0 seed\u003d[F801026B52DB1308:DEADBEEF]}",
                    "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression",
                    "annotations": [],
                    "children": []
                  },
                  {
                    "id": "id#regression {#1 seed\u003d[F801026B52DB1308:DB8B5D6DAA9300F8]}(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression)[0]",
                    "displayName": "regression {#1 seed\u003d[F801026B52DB1308:DB8B5D6DAA9300F8]}(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression)",
                    "methodName": "regression {#1 seed\u003d[F801026B52DB1308:DB8B5D6DAA9300F8]}",
                    "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression",
                    "annotations": [],
                    "children": []
                  }
                ]
              }
            ]
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326191508570,
          "startTimestampDate": "2012-01-10T11:31:48.570",
          "executionTime": 2,
          "description": "id#method1(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508572,
          "startTimestampDate": "2012-01-10T11:31:48.572",
          "executionTime": 1,
          "description": "id#method2(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508574,
          "startTimestampDate": "2012-01-10T11:31:48.574",
          "executionTime": 1,
          "description": "id#method3(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508591,
          "startTimestampDate": "2012-01-10T11:31:48.591",
          "executionTime": 2,
          "description": "id#method1(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508593,
          "startTimestampDate": "2012-01-10T11:31:48.593",
          "executionTime": 1,
          "description": "id#method2(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508595,
          "startTimestampDate": "2012-01-10T11:31:48.595",
          "executionTime": 1,
          "description": "id#method3(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508607,
          "startTimestampDate": "2012-01-10T11:31:48.607",
          "executionTime": 2,
          "description": "id#regression {#0 seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191508609,
          "startTimestampDate": "2012-01-10T11:31:48.609",
          "executionTime": 1,
          "description": "id#regression {#1 seed\u003d[F801026B52DB1308:DB8B5D6DAA9300F8]}(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "method1(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "method1, 1628178472\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "method1(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)"
        },
        {
          "event": "TEST_STARTED",
          "test": "method2(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "method2, -826463273\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "method2(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)"
        },
        {
          "event": "TEST_STARTED",
          "test": "method3(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "method3, -1364516200\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "method3(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "--\n"
        },
        {
          "event": "TEST_STARTED",
          "test": "method1(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "method1, 1628178472\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "method1(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)"
        },
        {
          "event": "TEST_STARTED",
          "test": "method2(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "method2, -826463273\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "method2(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)"
        },
        {
          "event": "TEST_STARTED",
          "test": "method3(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "method3, -1364516200\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "method3(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "--\n"
        },
        {
          "event": "TEST_STARTED",
          "test": "regression {#0 seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "regression, 568599855\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "regression {#0 seed\u003d[F801026B52DB1308:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression)"
        },
        {
          "event": "TEST_STARTED",
          "test": "regression {#1 seed\u003d[F801026B52DB1308:DB8B5D6DAA9300F8]}(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "regression, 1860913915\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "regression {#1 seed\u003d[F801026B52DB1308:DB8B5D6DAA9300F8]}(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326191508616,
      "startTimestampDate": "2012-01-10T11:31:48.616",
      "executionTime": 2190,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test008Timeouts[1]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test008Timeouts",
        "className": "com.carrotsearch.examples.randomizedrunner.Test008Timeouts",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#standardAnnotation(com.carrotsearch.examples.randomizedrunner.Test008Timeouts)[0]",
            "displayName": "standardAnnotation(com.carrotsearch.examples.randomizedrunner.Test008Timeouts)",
            "methodName": "standardAnnotation",
            "className": "com.carrotsearch.examples.randomizedrunner.Test008Timeouts",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#timeoutAnnotation(com.carrotsearch.examples.randomizedrunner.Test008Timeouts)[0]",
            "displayName": "timeoutAnnotation(com.carrotsearch.examples.randomizedrunner.Test008Timeouts)",
            "methodName": "timeoutAnnotation",
            "className": "com.carrotsearch.examples.randomizedrunner.Test008Timeouts",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326191508632,
          "startTimestampDate": "2012-01-10T11:31:48.632",
          "executionTime": 1079,
          "description": "id#standardAnnotation(com.carrotsearch.examples.randomizedrunner.Test008Timeouts)[0]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "com.carrotsearch.randomizedtesting.ThreadingError",
              "throwableString": "com.carrotsearch.randomizedtesting.ThreadingError: Test case thread timed out  (and terminated): Thread[Thread-4,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).",
              "stackTrace": "com.carrotsearch.randomizedtesting.ThreadingError: Test case thread timed out  (and terminated): Thread[Thread-4,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).\n\tat __randomizedtesting.SeedInfo.seed([F801026B52DB1308]:0)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.sleep(RandomizedTest.java:560)\n\tat com.carrotsearch.examples.randomizedrunner.Test008Timeouts.standardAnnotation(Test008Timeouts.java:50)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\n\tat java.lang.Thread.run(Thread.java:662)\n",
              "kind": "error"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191509722,
          "startTimestampDate": "2012-01-10T11:31:49.722",
          "executionTime": 1081,
          "description": "id#timeoutAnnotation(com.carrotsearch.examples.randomizedrunner.Test008Timeouts)[0]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "com.carrotsearch.randomizedtesting.ThreadingError",
              "throwableString": "com.carrotsearch.randomizedtesting.ThreadingError: Test case thread timed out  (and terminated): Thread[Thread-5,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).",
              "stackTrace": "com.carrotsearch.randomizedtesting.ThreadingError: Test case thread timed out  (and terminated): Thread[Thread-5,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).\n\tat __randomizedtesting.SeedInfo.seed([F801026B52DB1308]:0)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.sleep(RandomizedTest.java:560)\n\tat com.carrotsearch.examples.randomizedrunner.Test008Timeouts.timeoutAnnotation(Test008Timeouts.java:56)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\n\tat java.lang.Thread.run(Thread.java:662)\n",
              "kind": "error"
            }
          ]
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "standardAnnotation(com.carrotsearch.examples.randomizedrunner.Test008Timeouts)"
        },
        {
          "event": "APPEND_STDERR",
          "content": "Jan 10, 2012 11:31:49 AM com.carrotsearch.randomizedtesting.RandomizedRunner reportStackProbes\nWARNING: 10 stack trace probe(s) taken and the constant root was:\n    ...\n    java.lang.Thread.sleep(Native Method)\n    [...com.carrotsearch.randomizedtesting.*]\n    com.carrotsearch.examples.randomizedrunner.Test008Timeouts.standardAnnotation(Test008Timeouts.java:50)\n    [...sun.*, com.carrotsearch.randomizedtesting.*, java.lang.reflect.*]\n    java.lang.Thread.run(Thread.java:662)\n\nDiverging stack paths from individual probes (if different than the common root):\n(all stacks constant.)\n\nJan 10, 2012 11:31:49 AM com.carrotsearch.randomizedtesting.RandomizedRunner tryToTerminate\nWARNING: Attempting to terminate thread: Thread-4(#1746453592), currently at:\n    java.lang.Thread.sleep(Native Method)\n    [...com.carrotsearch.randomizedtesting.*]\n    com.carrotsearch.examples.randomizedrunner.Test008Timeouts.standardAnnotation(Test008Timeouts.java:50)\n    [...sun.*, com.carrotsearch.randomizedtesting.*, java.lang.reflect.*]\n    java.lang.Thread.run(Thread.java:662)\n\nJan 10, 2012 11:31:49 AM com.carrotsearch.randomizedtesting.RandomizedRunner tryToTerminate\nWARNING: Interrupted a runaway thread: Thread-4(#1746453592)\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "standardAnnotation(com.carrotsearch.examples.randomizedrunner.Test008Timeouts)"
        },
        {
          "event": "TEST_STARTED",
          "test": "timeoutAnnotation(com.carrotsearch.examples.randomizedrunner.Test008Timeouts)"
        },
        {
          "event": "APPEND_STDERR",
          "content": "Jan 10, 2012 11:31:50 AM com.carrotsearch.randomizedtesting.RandomizedRunner reportStackProbes\nWARNING: 10 stack trace probe(s) taken and the constant root was:\n    ...\n    java.lang.Thread.sleep(Native Method)\n    [...com.carrotsearch.randomizedtesting.*]\n    com.carrotsearch.examples.randomizedrunner.Test008Timeouts.timeoutAnnotation(Test008Timeouts.java:56)\n    [...sun.*, com.carrotsearch.randomizedtesting.*, java.lang.reflect.*]\n    java.lang.Thread.run(Thread.java:662)\n\nDiverging stack paths from individual probes (if different than the common root):\n(all stacks constant.)\n\nJan 10, 2012 11:31:50 AM com.carrotsearch.randomizedtesting.RandomizedRunner tryToTerminate\nWARNING: Attempting to terminate thread: Thread-5(#1220876398), currently at:\n    java.lang.Thread.sleep(Native Method)\n    [...com.carrotsearch.randomizedtesting.*]\n    com.carrotsearch.examples.randomizedrunner.Test008Timeouts.timeoutAnnotation(Test008Timeouts.java:56)\n    [...sun.*, com.carrotsearch.randomizedtesting.*, java.lang.reflect.*]\n    java.lang.Thread.run(Thread.java:662)\n\nJan 10, 2012 11:31:50 AM com.carrotsearch.randomizedtesting.RandomizedRunner tryToTerminate\nWARNING: Interrupted a runaway thread: Thread-5(#1220876398)\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "timeoutAnnotation(com.carrotsearch.examples.randomizedrunner.Test008Timeouts)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326191510823,
      "startTimestampDate": "2012-01-10T11:31:50.823",
      "executionTime": 126,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures[0]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures",
        "className": "com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures",
        "annotations": [],
        "children": [
          {
            "id": "id#testCase(com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures)[1]",
            "displayName": "testCase(com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures)",
            "methodName": "testCase",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326191510833,
          "startTimestampDate": "2012-01-10T11:31:50.833",
          "executionTime": 108,
          "description": "id#testCase(com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures)[1]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "java.lang.RuntimeException",
              "throwableString": "java.lang.RuntimeException: testCase",
              "stackTrace": "java.lang.RuntimeException: testCase\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures.testCase(Test003MultipleFailures.java:40)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures$1$1.evaluate(Test003MultipleFailures.java:26)\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:18)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "error"
            },
            {
              "throwableClass": "java.lang.RuntimeException",
              "throwableString": "java.lang.RuntimeException: after",
              "stackTrace": "java.lang.RuntimeException: after\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures.after(Test003MultipleFailures.java:45)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:36)\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures$1$1.evaluate(Test003MultipleFailures.java:26)\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:18)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "error"
            },
            {
              "throwableClass": "java.lang.Exception",
              "throwableString": "java.lang.Exception: a",
              "stackTrace": "java.lang.Exception: a\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures$1$1.evaluate(Test003MultipleFailures.java:30)\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:18)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "error"
            },
            {
              "throwableClass": "java.lang.Exception",
              "throwableString": "java.lang.Exception: b",
              "stackTrace": "java.lang.Exception: b\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures$1$1.evaluate(Test003MultipleFailures.java:31)\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:18)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "error"
            }
          ]
        }
      ],
      "suiteFailures": [
        {
          "throwableClass": "java.lang.RuntimeException",
          "throwableString": "java.lang.RuntimeException: afterClass",
          "stackTrace": "java.lang.RuntimeException: afterClass\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures.afterClass(Test003MultipleFailures.java:50)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:36)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
          "kind": "error"
        }
      ],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testCase(com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCase(com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326191510950,
      "startTimestampDate": "2012-01-10T11:31:50.950",
      "executionTime": 16,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.reports.Test002SuiteFailure[0]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.reports.Test002SuiteFailure",
        "className": "com.carrotsearch.examples.randomizedrunner.reports.Test002SuiteFailure",
        "annotations": [],
        "children": [
          {
            "id": "id#testCase(com.carrotsearch.examples.randomizedrunner.reports.Test002SuiteFailure)[1]",
            "displayName": "testCase(com.carrotsearch.examples.randomizedrunner.reports.Test002SuiteFailure)",
            "methodName": "testCase",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test002SuiteFailure",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [],
      "suiteFailures": [
        {
          "throwableClass": "java.lang.RuntimeException",
          "throwableString": "java.lang.RuntimeException: beforeClass",
          "stackTrace": "java.lang.RuntimeException: beforeClass\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test002SuiteFailure.beforeClass(Test002SuiteFailure.java:13)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
          "kind": "error"
        },
        {
          "throwableClass": "java.lang.RuntimeException",
          "throwableString": "java.lang.RuntimeException: afterClass",
          "stackTrace": "java.lang.RuntimeException: afterClass\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test002SuiteFailure.afterClass(Test002SuiteFailure.java:21)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:36)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
          "kind": "error"
        }
      ],
      "executionEvents": []
    },
    {
      "slave": 0,
      "startTimestamp": 1326191510968,
      "startTimestampDate": "2012-01-10T11:31:50.968",
      "executionTime": 16,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses[0]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses",
        "className": "com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses",
        "annotations": [],
        "children": [
          {
            "id": "id#failure(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)[1]",
            "displayName": "failure(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)",
            "methodName": "failure",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#error(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)[1]",
            "displayName": "error(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)",
            "methodName": "error",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#passed(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)[1]",
            "displayName": "passed(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)",
            "methodName": "passed",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#ignored(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)[2]",
            "displayName": "ignored(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)",
            "methodName": "ignored",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              },
              {
                "org.junit.Ignore": {
                  "value": ""
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)[1]",
            "displayName": "ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)",
            "methodName": "ignored_assumption",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326191510971,
          "startTimestampDate": "2012-01-10T11:31:50.971",
          "executionTime": 4,
          "description": "id#failure(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)[1]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "junit.framework.AssertionFailedError",
              "throwableString": "junit.framework.AssertionFailedError",
              "stackTrace": "junit.framework.AssertionFailedError\n\tat junit.framework.Assert.fail(Assert.java:48)\n\tat junit.framework.Assert.fail(Assert.java:56)\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses.failure(Test001AllStatuses.java:24)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191510975,
          "startTimestampDate": "2012-01-10T11:31:50.975",
          "executionTime": 4,
          "description": "id#error(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)[1]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "java.lang.RuntimeException",
              "throwableString": "java.lang.RuntimeException",
              "stackTrace": "java.lang.RuntimeException\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses.error(Test001AllStatuses.java:29)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "error"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326191510979,
          "startTimestampDate": "2012-01-10T11:31:50.979",
          "executionTime": 0,
          "description": "id#passed(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191510980,
          "startTimestampDate": "2012-01-10T11:31:50.980",
          "executionTime": 0,
          "description": "id#ignored(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)[2]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326191510980,
          "startTimestampDate": "2012-01-10T11:31:50.980",
          "executionTime": 3,
          "description": "id#ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses.ignored_assumption(Test001AllStatuses.java:19)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "failure(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "failure(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)"
        },
        {
          "event": "TEST_STARTED",
          "test": "error(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "error(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)"
        },
        {
          "event": "TEST_STARTED",
          "test": "passed(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "passed(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)"
        },
        {
          "event": "TEST_STARTED",
          "test": "ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)"
        }
      ]
    }
  ],
  "slaves": {
    "0": {
      "id": 0,
      "jvmName": "Java HotSpot(TM) 64-Bit Server VM, 20.2-b06",
      "charset": "UTF-8",
      "systemProperties": {
        "file.encoding": "UTF-8",
        "file.encoding.pkg": "sun.io",
        "file.separator": "/",
        "foo": "bar",
        "java.awt.graphicsenv": "sun.awt.X11GraphicsEnvironment",
        "java.awt.printerjob": "sun.print.PSPrinterJob",
        "java.class.path": "/home/dweiss/carrot2/carrotsearch.labs/randomizedtesting/examples/target/test-classes:/home/dweiss/.m2/repository/com/carrotsearch/randomizedtesting/randomizedtesting-runner/0.0.5-SNAPSHOT/randomizedtesting-runner-0.0.5-SNAPSHOT.jar:/home/dweiss/.m2/repository/com/carrotsearch/randomizedtesting/ant-junit4/0.0.5-SNAPSHOT/ant-junit4-0.0.5-SNAPSHOT.jar:/home/dweiss/.m2/repository/junit/junit/4.10/junit-4.10.jar:/home/dweiss/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar:/home/dweiss/carrot2/carrotsearch.labs/randomizedtesting/examples/target/ant/lib/ant-junit4-0.0.5-SNAPSHOT.jar",
        "java.class.version": "50.0",
        "java.endorsed.dirs": "/home/dweiss/Applications/java/jdk1.6.0_27/jre/lib/endorsed",
        "java.ext.dirs": "/home/dweiss/Applications/java/jdk1.6.0_27/jre/lib/ext:/usr/java/packages/lib/ext",
        "java.home": "/home/dweiss/Applications/java/jdk1.6.0_27/jre",
        "java.io.tmpdir": "/tmp",
        "java.library.path": "/home/dweiss/Applications/java/jdk1.6.0_27/jre/lib/amd64/server:/home/dweiss/Applications/java/jdk1.6.0_27/jre/lib/amd64:/home/dweiss/Applications/java/jdk1.6.0_27/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib",
        "java.runtime.name": "Java(TM) SE Runtime Environment",
        "java.runtime.version": "1.6.0_27-b07",
        "java.specification.name": "Java Platform API Specification",
        "java.specification.vendor": "Sun Microsystems Inc.",
        "java.specification.version": "1.6",
        "java.vendor": "Sun Microsystems Inc.",
        "java.vendor.url": "http://java.sun.com/",
        "java.vendor.url.bug": "http://java.sun.com/cgi-bin/bugreport.cgi",
        "java.version": "1.6.0_27",
        "java.vm.info": "mixed mode",
        "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
        "java.vm.specification.name": "Java Virtual Machine Specification",
        "java.vm.specification.vendor": "Sun Microsystems Inc.",
        "java.vm.specification.version": "1.0",
        "java.vm.vendor": "Sun Microsystems Inc.",
        "java.vm.version": "20.2-b06",
        "junit4.memory.total": "50266112",
        "junit4.processors": "2",
        "line.separator": "\n",
        "os.arch": "amd64",
        "os.name": "Linux",
        "os.version": "3.0.0-14-generic",
        "path.separator": ":",
        "sun.arch.data.model": "64",
        "sun.boot.class.path": "/home/dweiss/Applications/java/jdk1.6.0_27/jre/lib/resources.jar:/home/dweiss/Applications/java/jdk1.6.0_27/jre/lib/rt.jar:/home/dweiss/Applications/java/jdk1.6.0_27/jre/lib/sunrsasign.jar:/home/dweiss/Applications/java/jdk1.6.0_27/jre/lib/jsse.jar:/home/dweiss/Applications/java/jdk1.6.0_27/jre/lib/jce.jar:/home/dweiss/Applications/java/jdk1.6.0_27/jre/lib/charsets.jar:/home/dweiss/Applications/java/jdk1.6.0_27/jre/lib/modules/jdk.boot.jar:/home/dweiss/Applications/java/jdk1.6.0_27/jre/classes",
        "sun.boot.library.path": "/home/dweiss/Applications/java/jdk1.6.0_27/jre/lib/amd64",
        "sun.cpu.endian": "little",
        "sun.cpu.isalist": "",
        "sun.desktop": "gnome",
        "sun.io.unicode.encoding": "UnicodeLittle",
        "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe @/home/dweiss/carrot2/carrotsearch.labs/randomizedtesting/examples/junit4-2601030752792466146.testmethods -flush",
        "sun.java.launcher": "SUN_STANDARD",
        "sun.jnu.encoding": "UTF-8",
        "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
        "sun.os.patch.level": "unknown",
        "tests.seed": "F801026B52DB1308",
        "user.country": "US",
        "user.dir": "/home/dweiss/carrot2/carrotsearch.labs/randomizedtesting/examples/target/ant",
        "user.home": "/home/dweiss",
        "user.language": "en",
        "user.name": "dweiss",
        "user.timezone": ""
      }
    }
  }
});