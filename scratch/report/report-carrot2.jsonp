testData({
  "junit4": {
    "tests.seed": "7C6FC98AC649E1E9"
  },
  "suites": [
    {
      "slave": 2,
      "startTimestamp": 1325773326576,
      "startTimestampDate": "2012-01-05T15:22:06.576",
      "executionTime": 552,
      "description": {
        "id": "id#org.carrot2.text.preprocessing.StemmerSyntheticTest[2]",
        "displayName": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testFrequentSingleStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
            "displayName": "testFrequentSingleStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
            "methodName": "testFrequentSingleStems",
            "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDifferentStemsInQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
            "displayName": "testDifferentStemsInQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
            "methodName": "testDifferentStemsInQuery",
            "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
            "displayName": "testNoQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
            "methodName": "testNoQueryWords",
            "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testWordTfByDocumentAggregation(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
            "displayName": "testWordTfByDocumentAggregation(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
            "methodName": "testWordTfByDocumentAggregation",
            "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAllQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
            "displayName": "testAllQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
            "methodName": "testAllQueryWords",
            "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOriginalFrequencyAggregation(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
            "displayName": "testOriginalFrequencyAggregation(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
            "methodName": "testOriginalFrequencyAggregation",
            "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testBlankQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
            "displayName": "testBlankQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
            "methodName": "testBlankQuery",
            "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSingleStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
            "displayName": "testSingleStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
            "methodName": "testSingleStems",
            "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmpty(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
            "displayName": "testEmpty(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNullQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
            "displayName": "testNullQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
            "methodName": "testNullQuery",
            "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNullStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
            "displayName": "testNullStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
            "methodName": "testNullStems",
            "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSomeQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
            "displayName": "testSomeQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)",
            "methodName": "testSomeQueryWords",
            "className": "org.carrot2.text.preprocessing.StemmerSyntheticTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773326595,
          "startTimestampDate": "2012-01-05T15:22:06.595",
          "executionTime": 413,
          "description": "id#testFrequentSingleStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327008,
          "startTimestampDate": "2012-01-05T15:22:07.008",
          "executionTime": 6,
          "description": "id#testDifferentStemsInQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327015,
          "startTimestampDate": "2012-01-05T15:22:07.015",
          "executionTime": 7,
          "description": "id#testNoQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327023,
          "startTimestampDate": "2012-01-05T15:22:07.023",
          "executionTime": 7,
          "description": "id#testWordTfByDocumentAggregation(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327030,
          "startTimestampDate": "2012-01-05T15:22:07.030",
          "executionTime": 8,
          "description": "id#testAllQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327039,
          "startTimestampDate": "2012-01-05T15:22:07.039",
          "executionTime": 6,
          "description": "id#testOriginalFrequencyAggregation(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327046,
          "startTimestampDate": "2012-01-05T15:22:07.046",
          "executionTime": 8,
          "description": "id#testBlankQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327055,
          "startTimestampDate": "2012-01-05T15:22:07.055",
          "executionTime": 11,
          "description": "id#testSingleStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327066,
          "startTimestampDate": "2012-01-05T15:22:07.066",
          "executionTime": 16,
          "description": "id#testEmpty(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327098,
          "startTimestampDate": "2012-01-05T15:22:07.098",
          "executionTime": 13,
          "description": "id#testNullQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327112,
          "startTimestampDate": "2012-01-05T15:22:07.112",
          "executionTime": 6,
          "description": "id#testNullStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327119,
          "startTimestampDate": "2012-01-05T15:22:07.119",
          "executionTime": 7,
          "description": "id#testSomeQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testFrequentSingleStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFrequentSingleStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDifferentStemsInQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDifferentStemsInQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testWordTfByDocumentAggregation(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testWordTfByDocumentAggregation(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAllQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAllQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOriginalFrequencyAggregation(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOriginalFrequencyAggregation(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testBlankQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testBlankQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSingleStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSingleStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNullQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNullQuery(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNullStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNullStems(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSomeQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSomeQueryWords(org.carrot2.text.preprocessing.StemmerSyntheticTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773327138,
      "startTimestampDate": "2012-01-05T15:22:07.138",
      "executionTime": 228,
      "description": {
        "id": "id#org.carrot2.util.attribute.constraint.IsFileConstraintTest[2]",
        "displayName": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
        "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testNull(org.carrot2.util.attribute.constraint.IsFileConstraintTest)[0]",
            "displayName": "testNull(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
            "methodName": "testNull",
            "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMustExistNotMetNonExisting(org.carrot2.util.attribute.constraint.IsFileConstraintTest)[0]",
            "displayName": "testMustExistNotMetNonExisting(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
            "methodName": "testMustExistNotMetNonExisting",
            "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDoesNotHaveToExistMetNonExisting(org.carrot2.util.attribute.constraint.IsFileConstraintTest)[0]",
            "displayName": "testDoesNotHaveToExistMetNonExisting(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
            "methodName": "testDoesNotHaveToExistMetNonExisting",
            "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMustExistNotMetExistingDirectory(org.carrot2.util.attribute.constraint.IsFileConstraintTest)[0]",
            "displayName": "testMustExistNotMetExistingDirectory(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
            "methodName": "testMustExistNotMetExistingDirectory",
            "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMustExistMet(org.carrot2.util.attribute.constraint.IsFileConstraintTest)[0]",
            "displayName": "testMustExistMet(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
            "methodName": "testMustExistMet",
            "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInvalidType(org.carrot2.util.attribute.constraint.IsFileConstraintTest)[0]",
            "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
            "methodName": "testInvalidType",
            "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDoesNotHaveToExistMet(org.carrot2.util.attribute.constraint.IsFileConstraintTest)[0]",
            "displayName": "testDoesNotHaveToExistMet(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
            "methodName": "testDoesNotHaveToExistMet",
            "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDoesNotHaveToExistNotMetExistingDirectory(org.carrot2.util.attribute.constraint.IsFileConstraintTest)[0]",
            "displayName": "testDoesNotHaveToExistNotMetExistingDirectory(org.carrot2.util.attribute.constraint.IsFileConstraintTest)",
            "methodName": "testDoesNotHaveToExistNotMetExistingDirectory",
            "className": "org.carrot2.util.attribute.constraint.IsFileConstraintTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773327148,
          "startTimestampDate": "2012-01-05T15:22:07.148",
          "executionTime": 79,
          "description": "id#testNull(org.carrot2.util.attribute.constraint.IsFileConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327228,
          "startTimestampDate": "2012-01-05T15:22:07.228",
          "executionTime": 20,
          "description": "id#testMustExistNotMetNonExisting(org.carrot2.util.attribute.constraint.IsFileConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327249,
          "startTimestampDate": "2012-01-05T15:22:07.249",
          "executionTime": 29,
          "description": "id#testDoesNotHaveToExistMetNonExisting(org.carrot2.util.attribute.constraint.IsFileConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327281,
          "startTimestampDate": "2012-01-05T15:22:07.281",
          "executionTime": 40,
          "description": "id#testMustExistNotMetExistingDirectory(org.carrot2.util.attribute.constraint.IsFileConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327322,
          "startTimestampDate": "2012-01-05T15:22:07.322",
          "executionTime": 7,
          "description": "id#testMustExistMet(org.carrot2.util.attribute.constraint.IsFileConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327330,
          "startTimestampDate": "2012-01-05T15:22:07.330",
          "executionTime": 9,
          "description": "id#testInvalidType(org.carrot2.util.attribute.constraint.IsFileConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327340,
          "startTimestampDate": "2012-01-05T15:22:07.340",
          "executionTime": 7,
          "description": "id#testDoesNotHaveToExistMet(org.carrot2.util.attribute.constraint.IsFileConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327356,
          "startTimestampDate": "2012-01-05T15:22:07.356",
          "executionTime": 8,
          "description": "id#testDoesNotHaveToExistNotMetExistingDirectory(org.carrot2.util.attribute.constraint.IsFileConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testNull(org.carrot2.util.attribute.constraint.IsFileConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNull(org.carrot2.util.attribute.constraint.IsFileConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMustExistNotMetNonExisting(org.carrot2.util.attribute.constraint.IsFileConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMustExistNotMetNonExisting(org.carrot2.util.attribute.constraint.IsFileConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDoesNotHaveToExistMetNonExisting(org.carrot2.util.attribute.constraint.IsFileConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDoesNotHaveToExistMetNonExisting(org.carrot2.util.attribute.constraint.IsFileConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMustExistNotMetExistingDirectory(org.carrot2.util.attribute.constraint.IsFileConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMustExistNotMetExistingDirectory(org.carrot2.util.attribute.constraint.IsFileConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMustExistMet(org.carrot2.util.attribute.constraint.IsFileConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMustExistMet(org.carrot2.util.attribute.constraint.IsFileConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInvalidType(org.carrot2.util.attribute.constraint.IsFileConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInvalidType(org.carrot2.util.attribute.constraint.IsFileConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDoesNotHaveToExistMet(org.carrot2.util.attribute.constraint.IsFileConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDoesNotHaveToExistMet(org.carrot2.util.attribute.constraint.IsFileConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDoesNotHaveToExistNotMetExistingDirectory(org.carrot2.util.attribute.constraint.IsFileConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDoesNotHaveToExistNotMetExistingDirectory(org.carrot2.util.attribute.constraint.IsFileConstraintTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773327371,
      "startTimestampDate": "2012-01-05T15:22:07.371",
      "executionTime": 21,
      "description": {
        "id": "id#org.carrot2.text.util.MutableCharArrayUtilsTest[2]",
        "displayName": "org.carrot2.text.util.MutableCharArrayUtilsTest",
        "className": "org.carrot2.text.util.MutableCharArrayUtilsTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#toLowerCaseNoWithReallocation(org.carrot2.text.util.MutableCharArrayUtilsTest)[0]",
            "displayName": "toLowerCaseNoWithReallocation(org.carrot2.text.util.MutableCharArrayUtilsTest)",
            "methodName": "toLowerCaseNoWithReallocation",
            "className": "org.carrot2.text.util.MutableCharArrayUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#toLowerCaseNoReallocation(org.carrot2.text.util.MutableCharArrayUtilsTest)[0]",
            "displayName": "toLowerCaseNoReallocation(org.carrot2.text.util.MutableCharArrayUtilsTest)",
            "methodName": "toLowerCaseNoReallocation",
            "className": "org.carrot2.text.util.MutableCharArrayUtilsTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773327375,
          "startTimestampDate": "2012-01-05T15:22:07.375",
          "executionTime": 8,
          "description": "id#toLowerCaseNoWithReallocation(org.carrot2.text.util.MutableCharArrayUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327384,
          "startTimestampDate": "2012-01-05T15:22:07.384",
          "executionTime": 7,
          "description": "id#toLowerCaseNoReallocation(org.carrot2.text.util.MutableCharArrayUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "toLowerCaseNoWithReallocation(org.carrot2.text.util.MutableCharArrayUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "toLowerCaseNoWithReallocation(org.carrot2.text.util.MutableCharArrayUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "toLowerCaseNoReallocation(org.carrot2.text.util.MutableCharArrayUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "toLowerCaseNoReallocation(org.carrot2.text.util.MutableCharArrayUtilsTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773327399,
      "startTimestampDate": "2012-01-05T15:22:07.399",
      "executionTime": 139,
      "description": {
        "id": "id#org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest[2]",
        "displayName": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)[0]",
            "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStemmedWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)[0]",
            "displayName": "testStemmedWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
            "methodName": "testStemmedWords",
            "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)[0]",
            "displayName": "testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
            "methodName": "testNonStopWords",
            "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStopPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)[0]",
            "displayName": "testStopPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
            "methodName": "testStopPhrases",
            "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNonStopPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)[0]",
            "displayName": "testNonStopPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
            "methodName": "testNonStopPhrases",
            "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStopPhrasesWithStemmedWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)[0]",
            "displayName": "testStopPhrasesWithStemmedWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
            "methodName": "testStopPhrasesWithStemmedWords",
            "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)[0]",
            "displayName": "testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)",
            "methodName": "testStopWords",
            "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773327435,
          "startTimestampDate": "2012-01-05T15:22:07.435",
          "executionTime": 9,
          "description": "id#testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327482,
          "startTimestampDate": "2012-01-05T15:22:07.482",
          "executionTime": 6,
          "description": "id#testStemmedWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327489,
          "startTimestampDate": "2012-01-05T15:22:07.489",
          "executionTime": 7,
          "description": "id#testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327499,
          "startTimestampDate": "2012-01-05T15:22:07.499",
          "executionTime": 9,
          "description": "id#testStopPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327509,
          "startTimestampDate": "2012-01-05T15:22:07.509",
          "executionTime": 9,
          "description": "id#testNonStopPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327519,
          "startTimestampDate": "2012-01-05T15:22:07.519",
          "executionTime": 5,
          "description": "id#testStopPhrasesWithStemmedWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327525,
          "startTimestampDate": "2012-01-05T15:22:07.525",
          "executionTime": 13,
          "description": "id#testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStemmedWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStemmedWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStopPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStopPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNonStopPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNonStopPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStopPhrasesWithStemmedWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStopPhrasesWithStemmedWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterSyntheticTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773326593,
      "startTimestampDate": "2012-01-05T15:22:06.593",
      "executionTime": 276,
      "description": {
        "id": "id#org.carrot2.text.linguistic.LanguageModelTest[2]",
        "displayName": "org.carrot2.text.linguistic.LanguageModelTest",
        "className": "org.carrot2.text.linguistic.LanguageModelTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testLanguageModelReturnsCachedTokenizer(org.carrot2.text.linguistic.LanguageModelTest)[0]",
            "displayName": "testLanguageModelReturnsCachedTokenizer(org.carrot2.text.linguistic.LanguageModelTest)",
            "methodName": "testLanguageModelReturnsCachedTokenizer",
            "className": "org.carrot2.text.linguistic.LanguageModelTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLanguageModelReturnsCachedStemmer(org.carrot2.text.linguistic.LanguageModelTest)[0]",
            "displayName": "testLanguageModelReturnsCachedStemmer(org.carrot2.text.linguistic.LanguageModelTest)",
            "methodName": "testLanguageModelReturnsCachedStemmer",
            "className": "org.carrot2.text.linguistic.LanguageModelTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773326603,
          "startTimestampDate": "2012-01-05T15:22:06.603",
          "executionTime": 259,
          "description": "id#testLanguageModelReturnsCachedTokenizer(org.carrot2.text.linguistic.LanguageModelTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773326864,
          "startTimestampDate": "2012-01-05T15:22:06.864",
          "executionTime": 4,
          "description": "id#testLanguageModelReturnsCachedStemmer(org.carrot2.text.linguistic.LanguageModelTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testLanguageModelReturnsCachedTokenizer(org.carrot2.text.linguistic.LanguageModelTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLanguageModelReturnsCachedTokenizer(org.carrot2.text.linguistic.LanguageModelTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLanguageModelReturnsCachedStemmer(org.carrot2.text.linguistic.LanguageModelTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLanguageModelReturnsCachedStemmer(org.carrot2.text.linguistic.LanguageModelTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773326877,
      "startTimestampDate": "2012-01-05T15:22:06.877",
      "executionTime": 14,
      "description": {
        "id": "id#org.carrot2.util.attribute.BindableDescriptorUtilsTest[2]",
        "displayName": "org.carrot2.util.attribute.BindableDescriptorUtilsTest",
        "className": "org.carrot2.util.attribute.BindableDescriptorUtilsTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testGetDescriptorClassName(org.carrot2.util.attribute.BindableDescriptorUtilsTest)[0]",
            "displayName": "testGetDescriptorClassName(org.carrot2.util.attribute.BindableDescriptorUtilsTest)",
            "methodName": "testGetDescriptorClassName",
            "className": "org.carrot2.util.attribute.BindableDescriptorUtilsTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773326880,
          "startTimestampDate": "2012-01-05T15:22:06.880",
          "executionTime": 10,
          "description": "id#testGetDescriptorClassName(org.carrot2.util.attribute.BindableDescriptorUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testGetDescriptorClassName(org.carrot2.util.attribute.BindableDescriptorUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testGetDescriptorClassName(org.carrot2.util.attribute.BindableDescriptorUtilsTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773326896,
      "startTimestampDate": "2012-01-05T15:22:06.896",
      "executionTime": 25,
      "description": {
        "id": "id#org.carrot2.text.util.CharArrayComparatorsTest[2]",
        "displayName": "org.carrot2.text.util.CharArrayComparatorsTest",
        "className": "org.carrot2.text.util.CharArrayComparatorsTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testNormalizingComparatorPL(org.carrot2.text.util.CharArrayComparatorsTest)[0]",
            "displayName": "testNormalizingComparatorPL(org.carrot2.text.util.CharArrayComparatorsTest)",
            "methodName": "testNormalizingComparatorPL",
            "className": "org.carrot2.text.util.CharArrayComparatorsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNullsAreEqual(org.carrot2.text.util.CharArrayComparatorsTest)[0]",
            "displayName": "testNullsAreEqual(org.carrot2.text.util.CharArrayComparatorsTest)",
            "methodName": "testNullsAreEqual",
            "className": "org.carrot2.text.util.CharArrayComparatorsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNormalizingComparator(org.carrot2.text.util.CharArrayComparatorsTest)[0]",
            "displayName": "testNormalizingComparator(org.carrot2.text.util.CharArrayComparatorsTest)",
            "methodName": "testNormalizingComparator",
            "className": "org.carrot2.text.util.CharArrayComparatorsTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773326899,
          "startTimestampDate": "2012-01-05T15:22:06.899",
          "executionTime": 11,
          "description": "id#testNormalizingComparatorPL(org.carrot2.text.util.CharArrayComparatorsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773326911,
          "startTimestampDate": "2012-01-05T15:22:06.911",
          "executionTime": 5,
          "description": "id#testNullsAreEqual(org.carrot2.text.util.CharArrayComparatorsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773326917,
          "startTimestampDate": "2012-01-05T15:22:06.917",
          "executionTime": 4,
          "description": "id#testNormalizingComparator(org.carrot2.text.util.CharArrayComparatorsTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testNormalizingComparatorPL(org.carrot2.text.util.CharArrayComparatorsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalizingComparatorPL(org.carrot2.text.util.CharArrayComparatorsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNullsAreEqual(org.carrot2.text.util.CharArrayComparatorsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNullsAreEqual(org.carrot2.text.util.CharArrayComparatorsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalizingComparator(org.carrot2.text.util.CharArrayComparatorsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalizingComparator(org.carrot2.text.util.CharArrayComparatorsTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773326929,
      "startTimestampDate": "2012-01-05T15:22:06.929",
      "executionTime": 1101,
      "description": {
        "id": "id#org.carrot2.text.suffixtree.SuffixTreeTest[2]",
        "displayName": "org.carrot2.text.suffixtree.SuffixTreeTest",
        "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#checkMississipi(org.carrot2.text.suffixtree.SuffixTreeTest)[0]",
            "displayName": "checkMississipi(org.carrot2.text.suffixtree.SuffixTreeTest)",
            "methodName": "checkMississipi",
            "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#checkCocoa(org.carrot2.text.suffixtree.SuffixTreeTest)[0]",
            "displayName": "checkCocoa(org.carrot2.text.suffixtree.SuffixTreeTest)",
            "methodName": "checkCocoa",
            "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testContainsSuffix(org.carrot2.text.suffixtree.SuffixTreeTest)[0]",
            "displayName": "testContainsSuffix(org.carrot2.text.suffixtree.SuffixTreeTest)",
            "methodName": "testContainsSuffix",
            "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTreeVisitor(org.carrot2.text.suffixtree.SuffixTreeTest)[0]",
            "displayName": "testTreeVisitor(org.carrot2.text.suffixtree.SuffixTreeTest)",
            "methodName": "testTreeVisitor",
            "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#checkRandomSymbols(org.carrot2.text.suffixtree.SuffixTreeTest)[0]",
            "displayName": "checkRandomSymbols(org.carrot2.text.suffixtree.SuffixTreeTest)",
            "methodName": "checkRandomSymbols",
            "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#checkBanana(org.carrot2.text.suffixtree.SuffixTreeTest)[0]",
            "displayName": "checkBanana(org.carrot2.text.suffixtree.SuffixTreeTest)",
            "methodName": "checkBanana",
            "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#checkTransitionsCount(org.carrot2.text.suffixtree.SuffixTreeTest)[0]",
            "displayName": "checkTransitionsCount(org.carrot2.text.suffixtree.SuffixTreeTest)",
            "methodName": "checkTransitionsCount",
            "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInternalNodes(org.carrot2.text.suffixtree.SuffixTreeTest)[0]",
            "displayName": "testInternalNodes(org.carrot2.text.suffixtree.SuffixTreeTest)",
            "methodName": "testInternalNodes",
            "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#checkStatesCount(org.carrot2.text.suffixtree.SuffixTreeTest)[0]",
            "displayName": "checkStatesCount(org.carrot2.text.suffixtree.SuffixTreeTest)",
            "methodName": "checkStatesCount",
            "className": "org.carrot2.text.suffixtree.SuffixTreeTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773326934,
          "startTimestampDate": "2012-01-05T15:22:06.934",
          "executionTime": 30,
          "description": "id#checkMississipi(org.carrot2.text.suffixtree.SuffixTreeTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773326965,
          "startTimestampDate": "2012-01-05T15:22:06.965",
          "executionTime": 4,
          "description": "id#checkCocoa(org.carrot2.text.suffixtree.SuffixTreeTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773326970,
          "startTimestampDate": "2012-01-05T15:22:06.970",
          "executionTime": 5,
          "description": "id#testContainsSuffix(org.carrot2.text.suffixtree.SuffixTreeTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773326976,
          "startTimestampDate": "2012-01-05T15:22:06.976",
          "executionTime": 6,
          "description": "id#testTreeVisitor(org.carrot2.text.suffixtree.SuffixTreeTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773326983,
          "startTimestampDate": "2012-01-05T15:22:06.983",
          "executionTime": 991,
          "description": "id#checkRandomSymbols(org.carrot2.text.suffixtree.SuffixTreeTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773327976,
          "startTimestampDate": "2012-01-05T15:22:07.976",
          "executionTime": 8,
          "description": "id#checkBanana(org.carrot2.text.suffixtree.SuffixTreeTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773327985,
          "startTimestampDate": "2012-01-05T15:22:07.985",
          "executionTime": 18,
          "description": "id#checkTransitionsCount(org.carrot2.text.suffixtree.SuffixTreeTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328008,
          "startTimestampDate": "2012-01-05T15:22:08.008",
          "executionTime": 14,
          "description": "id#testInternalNodes(org.carrot2.text.suffixtree.SuffixTreeTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328023,
          "startTimestampDate": "2012-01-05T15:22:08.023",
          "executionTime": 6,
          "description": "id#checkStatesCount(org.carrot2.text.suffixtree.SuffixTreeTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "checkMississipi(org.carrot2.text.suffixtree.SuffixTreeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "checkMississipi(org.carrot2.text.suffixtree.SuffixTreeTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "checkCocoa(org.carrot2.text.suffixtree.SuffixTreeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "checkCocoa(org.carrot2.text.suffixtree.SuffixTreeTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testContainsSuffix(org.carrot2.text.suffixtree.SuffixTreeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testContainsSuffix(org.carrot2.text.suffixtree.SuffixTreeTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTreeVisitor(org.carrot2.text.suffixtree.SuffixTreeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTreeVisitor(org.carrot2.text.suffixtree.SuffixTreeTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "checkRandomSymbols(org.carrot2.text.suffixtree.SuffixTreeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "checkRandomSymbols(org.carrot2.text.suffixtree.SuffixTreeTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "checkBanana(org.carrot2.text.suffixtree.SuffixTreeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "checkBanana(org.carrot2.text.suffixtree.SuffixTreeTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "checkTransitionsCount(org.carrot2.text.suffixtree.SuffixTreeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "checkTransitionsCount(org.carrot2.text.suffixtree.SuffixTreeTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInternalNodes(org.carrot2.text.suffixtree.SuffixTreeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInternalNodes(org.carrot2.text.suffixtree.SuffixTreeTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "checkStatesCount(org.carrot2.text.suffixtree.SuffixTreeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "checkStatesCount(org.carrot2.text.suffixtree.SuffixTreeTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773326803,
      "startTimestampDate": "2012-01-05T15:22:06.803",
      "executionTime": 1273,
      "description": {
        "id": "id#org.carrot2.source.xml.XmlDocumentSourceTest[2]",
        "displayName": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testLegacyXml(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
            "displayName": "testLegacyXml(org.carrot2.source.xml.XmlDocumentSourceTest)",
            "methodName": "testLegacyXml",
            "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testGappedIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
            "displayName": "testGappedIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)",
            "methodName": "testGappedIdsInSourceXml",
            "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
            "displayName": "testNoIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)",
            "methodName": "testNoIdsInSourceXml",
            "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMetadataAvailable(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
            "displayName": "testMetadataAvailable(org.carrot2.source.xml.XmlDocumentSourceTest)",
            "methodName": "testMetadataAvailable",
            "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDisablingInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
            "displayName": "testDisablingInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)",
            "methodName": "testDisablingInitializationTimeXslt",
            "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testResultsTruncation(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
            "displayName": "testResultsTruncation(org.carrot2.source.xml.XmlDocumentSourceTest)",
            "methodName": "testResultsTruncation",
            "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDuplicatedIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
            "displayName": "testDuplicatedIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)",
            "methodName": "testDuplicatedIdsInSourceXml",
            "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testXsltNoParameters(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
            "displayName": "testXsltNoParameters(org.carrot2.source.xml.XmlDocumentSourceTest)",
            "methodName": "testXsltNoParameters",
            "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
            "displayName": "testInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)",
            "methodName": "testInitializationTimeXslt",
            "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOverridingInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
            "displayName": "testOverridingInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)",
            "methodName": "testOverridingInitializationTimeXslt",
            "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testRemoteUrl(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
            "displayName": "testRemoteUrl(org.carrot2.source.xml.XmlDocumentSourceTest)",
            "methodName": "testRemoteUrl",
            "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testXsltWithParameters(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
            "displayName": "testXsltWithParameters(org.carrot2.source.xml.XmlDocumentSourceTest)",
            "methodName": "testXsltWithParameters",
            "className": "org.carrot2.source.xml.XmlDocumentSourceTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773326816,
          "startTimestampDate": "2012-01-05T15:22:06.816",
          "executionTime": 383,
          "description": "id#testLegacyXml(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773327202,
          "startTimestampDate": "2012-01-05T15:22:07.202",
          "executionTime": 23,
          "description": "id#testGappedIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773327227,
          "startTimestampDate": "2012-01-05T15:22:07.227",
          "executionTime": 22,
          "description": "id#testNoIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773327251,
          "startTimestampDate": "2012-01-05T15:22:07.251",
          "executionTime": 19,
          "description": "id#testMetadataAvailable(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773327271,
          "startTimestampDate": "2012-01-05T15:22:07.271",
          "executionTime": 454,
          "description": "id#testDisablingInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773327728,
          "startTimestampDate": "2012-01-05T15:22:07.728",
          "executionTime": 113,
          "description": "id#testResultsTruncation(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773327851,
          "startTimestampDate": "2012-01-05T15:22:07.851",
          "executionTime": 17,
          "description": "id#testDuplicatedIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773327869,
          "startTimestampDate": "2012-01-05T15:22:07.869",
          "executionTime": 32,
          "description": "id#testXsltNoParameters(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773327902,
          "startTimestampDate": "2012-01-05T15:22:07.902",
          "executionTime": 37,
          "description": "id#testInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773327940,
          "startTimestampDate": "2012-01-05T15:22:07.940",
          "executionTime": 51,
          "description": "id#testOverridingInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773327992,
          "startTimestampDate": "2012-01-05T15:22:07.992",
          "executionTime": 49,
          "description": "id#testRemoteUrl(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
              "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: failed assumption: carrot2.xml.feed.url.base property undefined.",
              "stackTrace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: failed assumption: carrot2.xml.feed.url.base property undefined.\r\n\tat __randomizedtesting.SeedInfo.seed([7C6FC98AC649E1E9:C46EA659A503C367]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:602)\r\n\tat org.carrot2.source.xml.XmlDocumentSourceTest.__CLR2_6_39sudoi2ca(XmlDocumentSourceTest.java:255)\r\n\tat org.carrot2.source.xml.XmlDocumentSourceTest.testRemoteUrl(XmlDocumentSourceTest.java:253)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat java.lang.reflect.Method.invoke(Method.java:597)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\r\n\tat java.lang.Thread.run(Thread.java:662)\r\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328045,
          "startTimestampDate": "2012-01-05T15:22:08.045",
          "executionTime": 29,
          "description": "id#testXsltWithParameters(org.carrot2.source.xml.XmlDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testLegacyXml(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLegacyXml(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testGappedIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testGappedIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMetadataAvailable(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMetadataAvailable(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDisablingInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDisablingInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testResultsTruncation(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testResultsTruncation(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDuplicatedIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDuplicatedIdsInSourceXml(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testXsltNoParameters(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testXsltNoParameters(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOverridingInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOverridingInitializationTimeXslt(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testRemoteUrl(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRemoteUrl(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testXsltWithParameters(org.carrot2.source.xml.XmlDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testXsltWithParameters(org.carrot2.source.xml.XmlDocumentSourceTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773328087,
      "startTimestampDate": "2012-01-05T15:22:08.087",
      "executionTime": 35,
      "description": {
        "id": "id#org.carrot2.source.google.GoogleDocumentSourceTest[4]",
        "displayName": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
              "stackSamples": 10,
              "linger": 2000,
              "leakedThreadsBelongToSuite": false,
              "failTestIfLeaking": true
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          },
          {
            "org.carrot2.util.tests.UsesExternalServices": {}
          }
        ],
        "children": [
          {
            "id": "id#testHighlightsRemoved(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
            "displayName": "testHighlightsRemoved(org.carrot2.source.google.GoogleDocumentSourceTest)",
            "methodName": "testHighlightsRemoved",
            "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSpeculativeMode(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
            "displayName": "testSpeculativeMode(org.carrot2.source.google.GoogleDocumentSourceTest)",
            "methodName": "testSpeculativeMode",
            "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testUtfCharacters(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
            "displayName": "testUtfCharacters(org.carrot2.source.google.GoogleDocumentSourceTest)",
            "methodName": "testUtfCharacters",
            "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoResultsQuery(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
            "displayName": "testNoResultsQuery(org.carrot2.source.google.GoogleDocumentSourceTest)",
            "methodName": "testNoResultsQuery",
            "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMetadataAvailable(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
            "displayName": "testMetadataAvailable(org.carrot2.source.google.GoogleDocumentSourceTest)",
            "methodName": "testMetadataAvailable",
            "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLargeQuery(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
            "displayName": "testLargeQuery(org.carrot2.source.google.GoogleDocumentSourceTest)",
            "methodName": "testLargeQuery",
            "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHtmlUnescaping(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
            "displayName": "testHtmlUnescaping(org.carrot2.source.google.GoogleDocumentSourceTest)",
            "methodName": "testHtmlUnescaping",
            "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testURLsUnique(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
            "displayName": "testURLsUnique(org.carrot2.source.google.GoogleDocumentSourceTest)",
            "methodName": "testURLsUnique",
            "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testResultsTotal(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
            "displayName": "testResultsTotal(org.carrot2.source.google.GoogleDocumentSourceTest)",
            "methodName": "testResultsTotal",
            "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testQueryLargerThanPage(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
            "displayName": "testQueryLargerThanPage(org.carrot2.source.google.GoogleDocumentSourceTest)",
            "methodName": "testQueryLargerThanPage",
            "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoUrlEncodingInUrls(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
            "displayName": "testNoUrlEncodingInUrls(org.carrot2.source.google.GoogleDocumentSourceTest)",
            "methodName": "testNoUrlEncodingInUrls",
            "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testConservativeMode(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
            "displayName": "testConservativeMode(org.carrot2.source.google.GoogleDocumentSourceTest)",
            "methodName": "testConservativeMode",
            "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSmallQuery(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
            "displayName": "testSmallQuery(org.carrot2.source.google.GoogleDocumentSourceTest)",
            "methodName": "testSmallQuery",
            "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInCachingController(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
            "displayName": "testInCachingController(org.carrot2.source.google.GoogleDocumentSourceTest)",
            "methodName": "testInCachingController",
            "className": "org.carrot2.source.google.GoogleDocumentSourceTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773328098,
          "startTimestampDate": "2012-01-05T15:22:08.098",
          "executionTime": 1,
          "description": "id#testHighlightsRemoved(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328100,
          "startTimestampDate": "2012-01-05T15:22:08.100",
          "executionTime": 0,
          "description": "id#testSpeculativeMode(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328101,
          "startTimestampDate": "2012-01-05T15:22:08.101",
          "executionTime": 9,
          "description": "id#testUtfCharacters(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328111,
          "startTimestampDate": "2012-01-05T15:22:08.111",
          "executionTime": 0,
          "description": "id#testNoResultsQuery(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328112,
          "startTimestampDate": "2012-01-05T15:22:08.112",
          "executionTime": 0,
          "description": "id#testMetadataAvailable(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328113,
          "startTimestampDate": "2012-01-05T15:22:08.113",
          "executionTime": 0,
          "description": "id#testLargeQuery(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328114,
          "startTimestampDate": "2012-01-05T15:22:08.114",
          "executionTime": 0,
          "description": "id#testHtmlUnescaping(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328115,
          "startTimestampDate": "2012-01-05T15:22:08.115",
          "executionTime": 1,
          "description": "id#testURLsUnique(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328116,
          "startTimestampDate": "2012-01-05T15:22:08.116",
          "executionTime": 1,
          "description": "id#testResultsTotal(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328117,
          "startTimestampDate": "2012-01-05T15:22:08.117",
          "executionTime": 0,
          "description": "id#testQueryLargerThanPage(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328118,
          "startTimestampDate": "2012-01-05T15:22:08.118",
          "executionTime": 0,
          "description": "id#testNoUrlEncodingInUrls(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328119,
          "startTimestampDate": "2012-01-05T15:22:08.119",
          "executionTime": 0,
          "description": "id#testConservativeMode(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328120,
          "startTimestampDate": "2012-01-05T15:22:08.120",
          "executionTime": 0,
          "description": "id#testSmallQuery(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328121,
          "startTimestampDate": "2012-01-05T15:22:08.121",
          "executionTime": 0,
          "description": "id#testInCachingController(org.carrot2.source.google.GoogleDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testHighlightsRemoved(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHighlightsRemoved(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSpeculativeMode(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSpeculativeMode(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUtfCharacters(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUtfCharacters(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoResultsQuery(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoResultsQuery(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMetadataAvailable(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMetadataAvailable(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLargeQuery(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLargeQuery(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHtmlUnescaping(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHtmlUnescaping(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testURLsUnique(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testURLsUnique(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testResultsTotal(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testResultsTotal(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testQueryLargerThanPage(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testQueryLargerThanPage(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoUrlEncodingInUrls(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoUrlEncodingInUrls(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testConservativeMode(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testConservativeMode(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSmallQuery(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSmallQuery(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInCachingController(org.carrot2.source.google.GoogleDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInCachingController(org.carrot2.source.google.GoogleDocumentSourceTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773326598,
      "startTimestampDate": "2012-01-05T15:22:06.598",
      "executionTime": 262,
      "description": {
        "id": "id#org.carrot2.text.linguistic.ThaiTokenizerTest[2]",
        "displayName": "org.carrot2.text.linguistic.ThaiTokenizerTest",
        "className": "org.carrot2.text.linguistic.ThaiTokenizerTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testNumericTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)[0]",
            "displayName": "testNumericTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)",
            "methodName": "testNumericTokens",
            "className": "org.carrot2.text.linguistic.ThaiTokenizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testThaiTermTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)[0]",
            "displayName": "testThaiTermTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)",
            "methodName": "testThaiTermTokens",
            "className": "org.carrot2.text.linguistic.ThaiTokenizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testThaiEnglishTermTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)[0]",
            "displayName": "testThaiEnglishTermTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)",
            "methodName": "testThaiEnglishTermTokens",
            "className": "org.carrot2.text.linguistic.ThaiTokenizerTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773326608,
          "startTimestampDate": "2012-01-05T15:22:06.608",
          "executionTime": 237,
          "description": "id#testNumericTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773326846,
          "startTimestampDate": "2012-01-05T15:22:06.846",
          "executionTime": 5,
          "description": "id#testThaiTermTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773326852,
          "startTimestampDate": "2012-01-05T15:22:06.852",
          "executionTime": 7,
          "description": "id#testThaiEnglishTermTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testNumericTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNumericTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testThaiTermTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testThaiTermTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testThaiEnglishTermTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testThaiEnglishTermTokens(org.carrot2.text.linguistic.ThaiTokenizerTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773326868,
      "startTimestampDate": "2012-01-05T15:22:06.868",
      "executionTime": 1340,
      "description": {
        "id": "id#org.carrot2.util.attribute.BindableDescriptorBuilderTest[2]",
        "displayName": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
        "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testSimpleComponent(org.carrot2.util.attribute.BindableDescriptorBuilderTest)[0]",
            "displayName": "testSimpleComponent(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
            "methodName": "testSimpleComponent",
            "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNotBindable(org.carrot2.util.attribute.BindableDescriptorBuilderTest)[0]",
            "displayName": "testNotBindable(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
            "methodName": "testNotBindable",
            "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testBindableReferenceWithBoundValue(org.carrot2.util.attribute.BindableDescriptorBuilderTest)[0]",
            "displayName": "testBindableReferenceWithBoundValue(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
            "methodName": "testBindableReferenceWithBoundValue",
            "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNonprimitiveAttribute(org.carrot2.util.attribute.BindableDescriptorBuilderTest)[0]",
            "displayName": "testNonprimitiveAttribute(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
            "methodName": "testNonprimitiveAttribute",
            "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testConcurrentSerialization(org.carrot2.util.attribute.BindableDescriptorBuilderTest)[0]",
            "displayName": "testConcurrentSerialization(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
            "methodName": "testConcurrentSerialization",
            "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSubClass(org.carrot2.util.attribute.BindableDescriptorBuilderTest)[0]",
            "displayName": "testSubClass(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
            "methodName": "testSubClass",
            "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testBindableReferenceWithDefaultValue(org.carrot2.util.attribute.BindableDescriptorBuilderTest)[0]",
            "displayName": "testBindableReferenceWithDefaultValue(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
            "methodName": "testBindableReferenceWithDefaultValue",
            "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCircularReference(org.carrot2.util.attribute.BindableDescriptorBuilderTest)[0]",
            "displayName": "testCircularReference(org.carrot2.util.attribute.BindableDescriptorBuilderTest)",
            "methodName": "testCircularReference",
            "className": "org.carrot2.util.attribute.BindableDescriptorBuilderTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773326875,
          "startTimestampDate": "2012-01-05T15:22:06.875",
          "executionTime": 57,
          "description": "id#testSimpleComponent(org.carrot2.util.attribute.BindableDescriptorBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773326933,
          "startTimestampDate": "2012-01-05T15:22:06.933",
          "executionTime": 4,
          "description": "id#testNotBindable(org.carrot2.util.attribute.BindableDescriptorBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773326938,
          "startTimestampDate": "2012-01-05T15:22:06.938",
          "executionTime": 37,
          "description": "id#testBindableReferenceWithBoundValue(org.carrot2.util.attribute.BindableDescriptorBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773326976,
          "startTimestampDate": "2012-01-05T15:22:06.976",
          "executionTime": 8,
          "description": "id#testNonprimitiveAttribute(org.carrot2.util.attribute.BindableDescriptorBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773326985,
          "startTimestampDate": "2012-01-05T15:22:06.985",
          "executionTime": 1193,
          "description": "id#testConcurrentSerialization(org.carrot2.util.attribute.BindableDescriptorBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328179,
          "startTimestampDate": "2012-01-05T15:22:08.179",
          "executionTime": 9,
          "description": "id#testSubClass(org.carrot2.util.attribute.BindableDescriptorBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328189,
          "startTimestampDate": "2012-01-05T15:22:08.189",
          "executionTime": 7,
          "description": "id#testBindableReferenceWithDefaultValue(org.carrot2.util.attribute.BindableDescriptorBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328202,
          "startTimestampDate": "2012-01-05T15:22:08.202",
          "executionTime": 6,
          "description": "id#testCircularReference(org.carrot2.util.attribute.BindableDescriptorBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testSimpleComponent(org.carrot2.util.attribute.BindableDescriptorBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSimpleComponent(org.carrot2.util.attribute.BindableDescriptorBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNotBindable(org.carrot2.util.attribute.BindableDescriptorBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNotBindable(org.carrot2.util.attribute.BindableDescriptorBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testBindableReferenceWithBoundValue(org.carrot2.util.attribute.BindableDescriptorBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testBindableReferenceWithBoundValue(org.carrot2.util.attribute.BindableDescriptorBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNonprimitiveAttribute(org.carrot2.util.attribute.BindableDescriptorBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNonprimitiveAttribute(org.carrot2.util.attribute.BindableDescriptorBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testConcurrentSerialization(org.carrot2.util.attribute.BindableDescriptorBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testConcurrentSerialization(org.carrot2.util.attribute.BindableDescriptorBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSubClass(org.carrot2.util.attribute.BindableDescriptorBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSubClass(org.carrot2.util.attribute.BindableDescriptorBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testBindableReferenceWithDefaultValue(org.carrot2.util.attribute.BindableDescriptorBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testBindableReferenceWithDefaultValue(org.carrot2.util.attribute.BindableDescriptorBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCircularReference(org.carrot2.util.attribute.BindableDescriptorBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCircularReference(org.carrot2.util.attribute.BindableDescriptorBuilderTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773328216,
      "startTimestampDate": "2012-01-05T15:22:08.216",
      "executionTime": 96,
      "description": {
        "id": "id#org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest[2]",
        "displayName": "org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest",
        "className": "org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testEmpty(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)[0]",
            "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testShortPhrases(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)[0]",
            "displayName": "testShortPhrases(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)",
            "methodName": "testShortPhrases",
            "className": "org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTooShortWords(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)[0]",
            "displayName": "testTooShortWords(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)",
            "methodName": "testTooShortWords",
            "className": "org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLongerWords(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)[0]",
            "displayName": "testLongerWords(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)",
            "methodName": "testLongerWords",
            "className": "org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773328220,
          "startTimestampDate": "2012-01-05T15:22:08.220",
          "executionTime": 46,
          "description": "id#testEmpty(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328266,
          "startTimestampDate": "2012-01-05T15:22:08.266",
          "executionTime": 37,
          "description": "id#testShortPhrases(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328303,
          "startTimestampDate": "2012-01-05T15:22:08.303",
          "executionTime": 4,
          "description": "id#testTooShortWords(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328307,
          "startTimestampDate": "2012-01-05T15:22:08.307",
          "executionTime": 4,
          "description": "id#testLongerWords(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testShortPhrases(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testShortPhrases(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTooShortWords(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTooShortWords(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLongerWords(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLongerWords(org.carrot2.text.preprocessing.filter.MinLengthLabelFilterTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773328128,
      "startTimestampDate": "2012-01-05T15:22:08.128",
      "executionTime": 197,
      "description": {
        "id": "id#org.carrot2.clustering.lingo.ClusterDocumentAssignerTest[2]",
        "displayName": "org.carrot2.clustering.lingo.ClusterDocumentAssignerTest",
        "className": "org.carrot2.clustering.lingo.ClusterDocumentAssignerTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testEmpty(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)[0]",
            "displayName": "testEmpty(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.clustering.lingo.ClusterDocumentAssignerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSinglePhraseNoSingleWords(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)[0]",
            "displayName": "testSinglePhraseNoSingleWords(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)",
            "methodName": "testSinglePhraseNoSingleWords",
            "className": "org.carrot2.clustering.lingo.ClusterDocumentAssignerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSinglePhraseSingleWords(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)[0]",
            "displayName": "testSinglePhraseSingleWords(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)",
            "methodName": "testSinglePhraseSingleWords",
            "className": "org.carrot2.clustering.lingo.ClusterDocumentAssignerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoPhrases(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)[0]",
            "displayName": "testNoPhrases(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)",
            "methodName": "testNoPhrases",
            "className": "org.carrot2.clustering.lingo.ClusterDocumentAssignerTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773328132,
          "startTimestampDate": "2012-01-05T15:22:08.132",
          "executionTime": 151,
          "description": "id#testEmpty(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328283,
          "startTimestampDate": "2012-01-05T15:22:08.283",
          "executionTime": 31,
          "description": "id#testSinglePhraseNoSingleWords(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328315,
          "startTimestampDate": "2012-01-05T15:22:08.315",
          "executionTime": 4,
          "description": "id#testSinglePhraseSingleWords(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328319,
          "startTimestampDate": "2012-01-05T15:22:08.319",
          "executionTime": 5,
          "description": "id#testNoPhrases(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSinglePhraseNoSingleWords(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSinglePhraseNoSingleWords(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSinglePhraseSingleWords(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSinglePhraseSingleWords(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoPhrases(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoPhrases(org.carrot2.clustering.lingo.ClusterDocumentAssignerTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773328330,
      "startTimestampDate": "2012-01-05T15:22:08.330",
      "executionTime": 77,
      "description": {
        "id": "id#org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest[2]",
        "displayName": "org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest",
        "className": "org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testEmpty(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)[0]",
            "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPhraseStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)[0]",
            "displayName": "testPhraseStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)",
            "methodName": "testPhraseStopLabels",
            "className": "org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSingleWordStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)[0]",
            "displayName": "testSingleWordStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)",
            "methodName": "testSingleWordStopLabels",
            "className": "org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNonStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)[0]",
            "displayName": "testNonStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)",
            "methodName": "testNonStopLabels",
            "className": "org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773328334,
          "startTimestampDate": "2012-01-05T15:22:08.334",
          "executionTime": 57,
          "description": "id#testEmpty(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328392,
          "startTimestampDate": "2012-01-05T15:22:08.392",
          "executionTime": 4,
          "description": "id#testPhraseStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328397,
          "startTimestampDate": "2012-01-05T15:22:08.397",
          "executionTime": 4,
          "description": "id#testSingleWordStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328402,
          "startTimestampDate": "2012-01-05T15:22:08.402",
          "executionTime": 4,
          "description": "id#testNonStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPhraseStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPhraseStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSingleWordStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSingleWordStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNonStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNonStopLabels(org.carrot2.text.preprocessing.filter.StopLabelFilterEnglishTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773328411,
      "startTimestampDate": "2012-01-05T15:22:08.411",
      "executionTime": 235,
      "description": {
        "id": "id#org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest[2]",
        "displayName": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
        "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testRepeatedClusteringWithCache(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)[0]",
            "displayName": "testRepeatedClusteringWithCache(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
            "methodName": "testRepeatedClusteringWithCache",
            "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoDocuments(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)[0]",
            "displayName": "testNoDocuments(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
            "methodName": "testNoDocuments",
            "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCollectionField(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)[0]",
            "displayName": "testCollectionField(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
            "methodName": "testCollectionField",
            "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMetadataAvailable(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)[0]",
            "displayName": "testMetadataAvailable(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
            "methodName": "testMetadataAvailable",
            "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmptyDocuments(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)[0]",
            "displayName": "testEmptyDocuments(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
            "methodName": "testEmptyDocuments",
            "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStress(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)[0]",
            "displayName": "testStress(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
            "methodName": "testStress",
            "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testScalarField(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)[0]",
            "displayName": "testScalarField(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
            "methodName": "testScalarField",
            "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testClusteringDataMining(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)[0]",
            "displayName": "testClusteringDataMining(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)",
            "methodName": "testClusteringDataMining",
            "className": "org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773328459,
          "startTimestampDate": "2012-01-05T15:22:08.459",
          "executionTime": 122,
          "description": "id#testRepeatedClusteringWithCache(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328581,
          "startTimestampDate": "2012-01-05T15:22:08.581",
          "executionTime": 25,
          "description": "id#testNoDocuments(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328606,
          "startTimestampDate": "2012-01-05T15:22:08.606",
          "executionTime": 14,
          "description": "id#testCollectionField(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328620,
          "startTimestampDate": "2012-01-05T15:22:08.620",
          "executionTime": 4,
          "description": "id#testMetadataAvailable(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328625,
          "startTimestampDate": "2012-01-05T15:22:08.625",
          "executionTime": 5,
          "description": "id#testEmptyDocuments(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328631,
          "startTimestampDate": "2012-01-05T15:22:08.631",
          "executionTime": 0,
          "description": "id#testStress(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328636,
          "startTimestampDate": "2012-01-05T15:22:08.636",
          "executionTime": 5,
          "description": "id#testScalarField(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328641,
          "startTimestampDate": "2012-01-05T15:22:08.641",
          "executionTime": 5,
          "description": "id#testClusteringDataMining(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testRepeatedClusteringWithCache(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRepeatedClusteringWithCache(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoDocuments(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoDocuments(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCollectionField(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCollectionField(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMetadataAvailable(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMetadataAvailable(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyDocuments(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyDocuments(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStress(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStress(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testScalarField(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testScalarField(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testClusteringDataMining(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testClusteringDataMining(org.carrot2.clustering.synthetic.ByFieldClusteringAlgorithmTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773328040,
      "startTimestampDate": "2012-01-05T15:22:08.040",
      "executionTime": 120,
      "description": {
        "id": "id#org.carrot2.text.preprocessing.filter.NumericLabelFilterTest[2]",
        "displayName": "org.carrot2.text.preprocessing.filter.NumericLabelFilterTest",
        "className": "org.carrot2.text.preprocessing.filter.NumericLabelFilterTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testNonNumericWords(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)[0]",
            "displayName": "testNonNumericWords(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
            "methodName": "testNonNumericWords",
            "className": "org.carrot2.text.preprocessing.filter.NumericLabelFilterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmpty(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)[0]",
            "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.text.preprocessing.filter.NumericLabelFilterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPhraseStartingWithNumbers(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)[0]",
            "displayName": "testPhraseStartingWithNumbers(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
            "methodName": "testPhraseStartingWithNumbers",
            "className": "org.carrot2.text.preprocessing.filter.NumericLabelFilterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPhraseStartingWithNonNumbers(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)[0]",
            "displayName": "testPhraseStartingWithNonNumbers(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
            "methodName": "testPhraseStartingWithNonNumbers",
            "className": "org.carrot2.text.preprocessing.filter.NumericLabelFilterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNumericWords(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)[0]",
            "displayName": "testNumericWords(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)",
            "methodName": "testNumericWords",
            "className": "org.carrot2.text.preprocessing.filter.NumericLabelFilterTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773328054,
          "startTimestampDate": "2012-01-05T15:22:08.054",
          "executionTime": 73,
          "description": "id#testNonNumericWords(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328128,
          "startTimestampDate": "2012-01-05T15:22:08.128",
          "executionTime": 5,
          "description": "id#testEmpty(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328134,
          "startTimestampDate": "2012-01-05T15:22:08.134",
          "executionTime": 11,
          "description": "id#testPhraseStartingWithNumbers(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328146,
          "startTimestampDate": "2012-01-05T15:22:08.146",
          "executionTime": 6,
          "description": "id#testPhraseStartingWithNonNumbers(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328153,
          "startTimestampDate": "2012-01-05T15:22:08.153",
          "executionTime": 6,
          "description": "id#testNumericWords(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testNonNumericWords(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNonNumericWords(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPhraseStartingWithNumbers(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPhraseStartingWithNumbers(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPhraseStartingWithNonNumbers(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPhraseStartingWithNonNumbers(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNumericWords(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNumericWords(org.carrot2.text.preprocessing.filter.NumericLabelFilterTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773328167,
      "startTimestampDate": "2012-01-05T15:22:08.167",
      "executionTime": 115,
      "description": {
        "id": "id#org.carrot2.text.util.MutableCharArrayTest[2]",
        "displayName": "org.carrot2.text.util.MutableCharArrayTest",
        "className": "org.carrot2.text.util.MutableCharArrayTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testReset(org.carrot2.text.util.MutableCharArrayTest)[0]",
            "displayName": "testReset(org.carrot2.text.util.MutableCharArrayTest)",
            "methodName": "testReset",
            "className": "org.carrot2.text.util.MutableCharArrayTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLength(org.carrot2.text.util.MutableCharArrayTest)[0]",
            "displayName": "testLength(org.carrot2.text.util.MutableCharArrayTest)",
            "methodName": "testLength",
            "className": "org.carrot2.text.util.MutableCharArrayTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCharArrayCharArrayIntInt(org.carrot2.text.util.MutableCharArrayTest)[0]",
            "displayName": "testCharArrayCharArrayIntInt(org.carrot2.text.util.MutableCharArrayTest)",
            "methodName": "testCharArrayCharArrayIntInt",
            "className": "org.carrot2.text.util.MutableCharArrayTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEquals(org.carrot2.text.util.MutableCharArrayTest)[0]",
            "displayName": "testEquals(org.carrot2.text.util.MutableCharArrayTest)",
            "methodName": "testEquals",
            "className": "org.carrot2.text.util.MutableCharArrayTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCharAt(org.carrot2.text.util.MutableCharArrayTest)[0]",
            "displayName": "testCharAt(org.carrot2.text.util.MutableCharArrayTest)",
            "methodName": "testCharAt",
            "className": "org.carrot2.text.util.MutableCharArrayTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSubSequence(org.carrot2.text.util.MutableCharArrayTest)[0]",
            "displayName": "testSubSequence(org.carrot2.text.util.MutableCharArrayTest)",
            "methodName": "testSubSequence",
            "className": "org.carrot2.text.util.MutableCharArrayTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCharArrayCharSequence(org.carrot2.text.util.MutableCharArrayTest)[0]",
            "displayName": "testCharArrayCharSequence(org.carrot2.text.util.MutableCharArrayTest)",
            "methodName": "testCharArrayCharSequence",
            "className": "org.carrot2.text.util.MutableCharArrayTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCharAtOutOfBounds(org.carrot2.text.util.MutableCharArrayTest)[0]",
            "displayName": "testCharAtOutOfBounds(org.carrot2.text.util.MutableCharArrayTest)",
            "methodName": "testCharAtOutOfBounds",
            "className": "org.carrot2.text.util.MutableCharArrayTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773328175,
          "startTimestampDate": "2012-01-05T15:22:08.175",
          "executionTime": 4,
          "description": "id#testReset(org.carrot2.text.util.MutableCharArrayTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328180,
          "startTimestampDate": "2012-01-05T15:22:08.180",
          "executionTime": 3,
          "description": "id#testLength(org.carrot2.text.util.MutableCharArrayTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328184,
          "startTimestampDate": "2012-01-05T15:22:08.184",
          "executionTime": 3,
          "description": "id#testCharArrayCharArrayIntInt(org.carrot2.text.util.MutableCharArrayTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328188,
          "startTimestampDate": "2012-01-05T15:22:08.188",
          "executionTime": 5,
          "description": "id#testEquals(org.carrot2.text.util.MutableCharArrayTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328264,
          "startTimestampDate": "2012-01-05T15:22:08.264",
          "executionTime": 3,
          "description": "id#testCharAt(org.carrot2.text.util.MutableCharArrayTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328267,
          "startTimestampDate": "2012-01-05T15:22:08.267",
          "executionTime": 5,
          "description": "id#testSubSequence(org.carrot2.text.util.MutableCharArrayTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328272,
          "startTimestampDate": "2012-01-05T15:22:08.272",
          "executionTime": 5,
          "description": "id#testCharArrayCharSequence(org.carrot2.text.util.MutableCharArrayTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328278,
          "startTimestampDate": "2012-01-05T15:22:08.278",
          "executionTime": 4,
          "description": "id#testCharAtOutOfBounds(org.carrot2.text.util.MutableCharArrayTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testReset(org.carrot2.text.util.MutableCharArrayTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testReset(org.carrot2.text.util.MutableCharArrayTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLength(org.carrot2.text.util.MutableCharArrayTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLength(org.carrot2.text.util.MutableCharArrayTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCharArrayCharArrayIntInt(org.carrot2.text.util.MutableCharArrayTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCharArrayCharArrayIntInt(org.carrot2.text.util.MutableCharArrayTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEquals(org.carrot2.text.util.MutableCharArrayTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEquals(org.carrot2.text.util.MutableCharArrayTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCharAt(org.carrot2.text.util.MutableCharArrayTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCharAt(org.carrot2.text.util.MutableCharArrayTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSubSequence(org.carrot2.text.util.MutableCharArrayTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSubSequence(org.carrot2.text.util.MutableCharArrayTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCharArrayCharSequence(org.carrot2.text.util.MutableCharArrayTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCharArrayCharSequence(org.carrot2.text.util.MutableCharArrayTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCharAtOutOfBounds(org.carrot2.text.util.MutableCharArrayTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCharAtOutOfBounds(org.carrot2.text.util.MutableCharArrayTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773328287,
      "startTimestampDate": "2012-01-05T15:22:08.287",
      "executionTime": 575,
      "description": {
        "id": "id#org.carrot2.util.pool.SoftUnboundedPoolTest[2]",
        "displayName": "org.carrot2.util.pool.SoftUnboundedPoolTest",
        "className": "org.carrot2.util.pool.SoftUnboundedPoolTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testParametersAndFlow(org.carrot2.util.pool.SoftUnboundedPoolTest)[0]",
            "displayName": "testParametersAndFlow(org.carrot2.util.pool.SoftUnboundedPoolTest)",
            "methodName": "testParametersAndFlow",
            "className": "org.carrot2.util.pool.SoftUnboundedPoolTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testBorrowReturnYieldsSameObject(org.carrot2.util.pool.SoftUnboundedPoolTest)[0]",
            "displayName": "testBorrowReturnYieldsSameObject(org.carrot2.util.pool.SoftUnboundedPoolTest)",
            "methodName": "testBorrowReturnYieldsSameObject",
            "className": "org.carrot2.util.pool.SoftUnboundedPoolTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStress(org.carrot2.util.pool.SoftUnboundedPoolTest)[0]",
            "displayName": "testStress(org.carrot2.util.pool.SoftUnboundedPoolTest)",
            "methodName": "testStress",
            "className": "org.carrot2.util.pool.SoftUnboundedPoolTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testIllegalStateOnBorrowAfterDispose(org.carrot2.util.pool.SoftUnboundedPoolTest)[0]",
            "displayName": "testIllegalStateOnBorrowAfterDispose(org.carrot2.util.pool.SoftUnboundedPoolTest)",
            "methodName": "testIllegalStateOnBorrowAfterDispose",
            "className": "org.carrot2.util.pool.SoftUnboundedPoolTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testBorrowBorrowYieldsDifferentObjects(org.carrot2.util.pool.SoftUnboundedPoolTest)[0]",
            "displayName": "testBorrowBorrowYieldsDifferentObjects(org.carrot2.util.pool.SoftUnboundedPoolTest)",
            "methodName": "testBorrowBorrowYieldsDifferentObjects",
            "className": "org.carrot2.util.pool.SoftUnboundedPoolTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testReturnAlreadyReturnedObject(org.carrot2.util.pool.SoftUnboundedPoolTest)[0]",
            "displayName": "testReturnAlreadyReturnedObject(org.carrot2.util.pool.SoftUnboundedPoolTest)",
            "methodName": "testReturnAlreadyReturnedObject",
            "className": "org.carrot2.util.pool.SoftUnboundedPoolTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773328291,
          "startTimestampDate": "2012-01-05T15:22:08.291",
          "executionTime": 31,
          "description": "id#testParametersAndFlow(org.carrot2.util.pool.SoftUnboundedPoolTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328323,
          "startTimestampDate": "2012-01-05T15:22:08.323",
          "executionTime": 4,
          "description": "id#testBorrowReturnYieldsSameObject(org.carrot2.util.pool.SoftUnboundedPoolTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328328,
          "startTimestampDate": "2012-01-05T15:22:08.328",
          "executionTime": 521,
          "description": "id#testStress(org.carrot2.util.pool.SoftUnboundedPoolTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328850,
          "startTimestampDate": "2012-01-05T15:22:08.850",
          "executionTime": 4,
          "description": "id#testIllegalStateOnBorrowAfterDispose(org.carrot2.util.pool.SoftUnboundedPoolTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328855,
          "startTimestampDate": "2012-01-05T15:22:08.855",
          "executionTime": 3,
          "description": "id#testBorrowBorrowYieldsDifferentObjects(org.carrot2.util.pool.SoftUnboundedPoolTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328858,
          "startTimestampDate": "2012-01-05T15:22:08.858",
          "executionTime": 3,
          "description": "id#testReturnAlreadyReturnedObject(org.carrot2.util.pool.SoftUnboundedPoolTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testParametersAndFlow(org.carrot2.util.pool.SoftUnboundedPoolTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testParametersAndFlow(org.carrot2.util.pool.SoftUnboundedPoolTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testBorrowReturnYieldsSameObject(org.carrot2.util.pool.SoftUnboundedPoolTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testBorrowReturnYieldsSameObject(org.carrot2.util.pool.SoftUnboundedPoolTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStress(org.carrot2.util.pool.SoftUnboundedPoolTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStress(org.carrot2.util.pool.SoftUnboundedPoolTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testIllegalStateOnBorrowAfterDispose(org.carrot2.util.pool.SoftUnboundedPoolTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIllegalStateOnBorrowAfterDispose(org.carrot2.util.pool.SoftUnboundedPoolTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testBorrowBorrowYieldsDifferentObjects(org.carrot2.util.pool.SoftUnboundedPoolTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testBorrowBorrowYieldsDifferentObjects(org.carrot2.util.pool.SoftUnboundedPoolTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testReturnAlreadyReturnedObject(org.carrot2.util.pool.SoftUnboundedPoolTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testReturnAlreadyReturnedObject(org.carrot2.util.pool.SoftUnboundedPoolTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773328652,
      "startTimestampDate": "2012-01-05T15:22:08.652",
      "executionTime": 34,
      "description": {
        "id": "id#org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest[2]",
        "displayName": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
        "className": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testValidNonStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)[0]",
            "displayName": "testValidNonStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
            "methodName": "testValidNonStrictType",
            "className": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInvalidStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)[0]",
            "displayName": "testInvalidStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
            "methodName": "testInvalidStrictType",
            "className": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInvalidType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)[0]",
            "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
            "methodName": "testInvalidType",
            "className": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNull(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)[0]",
            "displayName": "testNull(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
            "methodName": "testNull",
            "className": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInvalidNonStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)[0]",
            "displayName": "testInvalidNonStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
            "methodName": "testInvalidNonStrictType",
            "className": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testValidStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)[0]",
            "displayName": "testValidStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)",
            "methodName": "testValidStrictType",
            "className": "org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773328655,
          "startTimestampDate": "2012-01-05T15:22:08.655",
          "executionTime": 5,
          "description": "id#testValidNonStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328661,
          "startTimestampDate": "2012-01-05T15:22:08.661",
          "executionTime": 4,
          "description": "id#testInvalidStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328666,
          "startTimestampDate": "2012-01-05T15:22:08.666",
          "executionTime": 4,
          "description": "id#testInvalidType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328671,
          "startTimestampDate": "2012-01-05T15:22:08.671",
          "executionTime": 5,
          "description": "id#testNull(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328677,
          "startTimestampDate": "2012-01-05T15:22:08.677",
          "executionTime": 5,
          "description": "id#testInvalidNonStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328682,
          "startTimestampDate": "2012-01-05T15:22:08.682",
          "executionTime": 4,
          "description": "id#testValidStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testValidNonStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testValidNonStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInvalidStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInvalidStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInvalidType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInvalidType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNull(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNull(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInvalidNonStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInvalidNonStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testValidStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testValidStrictType(org.carrot2.util.attribute.constraint.ImplementingClassesConstraintTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773328689,
      "startTimestampDate": "2012-01-05T15:22:08.689",
      "executionTime": 83,
      "description": {
        "id": "id#org.carrot2.util.attribute.constraint.ConstraintCreatorTest[2]",
        "displayName": "org.carrot2.util.attribute.constraint.ConstraintCreatorTest",
        "className": "org.carrot2.util.attribute.constraint.ConstraintCreatorTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testCreateImplementationSuccess(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)[0]",
            "displayName": "testCreateImplementationSuccess(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
            "methodName": "testCreateImplementationSuccess",
            "className": "org.carrot2.util.attribute.constraint.ConstraintCreatorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCreateImplementationException(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)[0]",
            "displayName": "testCreateImplementationException(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
            "methodName": "testCreateImplementationException",
            "className": "org.carrot2.util.attribute.constraint.ConstraintCreatorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testIsConstraintAnnotation(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)[0]",
            "displayName": "testIsConstraintAnnotation(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
            "methodName": "testIsConstraintAnnotation",
            "className": "org.carrot2.util.attribute.constraint.ConstraintCreatorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCreateSingleConstraint(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)[0]",
            "displayName": "testCreateSingleConstraint(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
            "methodName": "testCreateSingleConstraint",
            "className": "org.carrot2.util.attribute.constraint.ConstraintCreatorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCreateMultipleConstraints(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)[0]",
            "displayName": "testCreateMultipleConstraints(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)",
            "methodName": "testCreateMultipleConstraints",
            "className": "org.carrot2.util.attribute.constraint.ConstraintCreatorTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773328693,
          "startTimestampDate": "2012-01-05T15:22:08.693",
          "executionTime": 6,
          "description": "id#testCreateImplementationSuccess(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328700,
          "startTimestampDate": "2012-01-05T15:22:08.700",
          "executionTime": 5,
          "description": "id#testCreateImplementationException(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328705,
          "startTimestampDate": "2012-01-05T15:22:08.705",
          "executionTime": 3,
          "description": "id#testIsConstraintAnnotation(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328709,
          "startTimestampDate": "2012-01-05T15:22:08.709",
          "executionTime": 3,
          "description": "id#testCreateSingleConstraint(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328763,
          "startTimestampDate": "2012-01-05T15:22:08.763",
          "executionTime": 8,
          "description": "id#testCreateMultipleConstraints(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testCreateImplementationSuccess(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCreateImplementationSuccess(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCreateImplementationException(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCreateImplementationException(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testIsConstraintAnnotation(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIsConstraintAnnotation(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCreateSingleConstraint(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCreateSingleConstraint(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCreateMultipleConstraints(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCreateMultipleConstraints(org.carrot2.util.attribute.constraint.ConstraintCreatorTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773328778,
      "startTimestampDate": "2012-01-05T15:22:08.778",
      "executionTime": 106,
      "description": {
        "id": "id#org.carrot2.core.ClusterTest[2]",
        "displayName": "org.carrot2.core.ClusterTest",
        "className": "org.carrot2.core.ClusterTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testBuildOtherTopicsNonAssigned(org.carrot2.core.ClusterTest)[0]",
            "displayName": "testBuildOtherTopicsNonAssigned(org.carrot2.core.ClusterTest)",
            "methodName": "testBuildOtherTopicsNonAssigned",
            "className": "org.carrot2.core.ClusterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFindNotFound(org.carrot2.core.ClusterTest)[0]",
            "displayName": "testFindNotFound(org.carrot2.core.ClusterTest)",
            "methodName": "testFindNotFound",
            "className": "org.carrot2.core.ClusterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSomeIdentifiers(org.carrot2.core.ClusterTest)[0]",
            "displayName": "testSomeIdentifiers(org.carrot2.core.ClusterTest)",
            "methodName": "testSomeIdentifiers",
            "className": "org.carrot2.core.ClusterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAllDocumentsEmptyFlat(org.carrot2.core.ClusterTest)[0]",
            "displayName": "testAllDocumentsEmptyFlat(org.carrot2.core.ClusterTest)",
            "methodName": "testAllDocumentsEmptyFlat",
            "className": "org.carrot2.core.ClusterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFindRootCluster(org.carrot2.core.ClusterTest)[0]",
            "displayName": "testFindRootCluster(org.carrot2.core.ClusterTest)",
            "methodName": "testFindRootCluster",
            "className": "org.carrot2.core.ClusterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFindSubcluster(org.carrot2.core.ClusterTest)[0]",
            "displayName": "testFindSubcluster(org.carrot2.core.ClusterTest)",
            "methodName": "testFindSubcluster",
            "className": "org.carrot2.core.ClusterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAllDocumentsEmptyHierarchical(org.carrot2.core.ClusterTest)[0]",
            "displayName": "testAllDocumentsEmptyHierarchical(org.carrot2.core.ClusterTest)",
            "methodName": "testAllDocumentsEmptyHierarchical",
            "className": "org.carrot2.core.ClusterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testByLabelComparator(org.carrot2.core.ClusterTest)[0]",
            "displayName": "testByLabelComparator(org.carrot2.core.ClusterTest)",
            "methodName": "testByLabelComparator",
            "className": "org.carrot2.core.ClusterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSizeNonEmptyHierarchicalWithOverlap(org.carrot2.core.ClusterTest)[0]",
            "displayName": "testSizeNonEmptyHierarchicalWithOverlap(org.carrot2.core.ClusterTest)",
            "methodName": "testSizeNonEmptyHierarchicalWithOverlap",
            "className": "org.carrot2.core.ClusterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testBuildOtherTopicsSomeAssigned(org.carrot2.core.ClusterTest)[0]",
            "displayName": "testBuildOtherTopicsSomeAssigned(org.carrot2.core.ClusterTest)",
            "methodName": "testBuildOtherTopicsSomeAssigned",
            "className": "org.carrot2.core.ClusterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testByReversedWeightedScoreAndSizeComparatorOnlyScore(org.carrot2.core.ClusterTest)[0]",
            "displayName": "testByReversedWeightedScoreAndSizeComparatorOnlyScore(org.carrot2.core.ClusterTest)",
            "methodName": "testByReversedWeightedScoreAndSizeComparatorOnlyScore",
            "className": "org.carrot2.core.ClusterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testByReversedWeightedScoreAndSizeComparatorOnlySize(org.carrot2.core.ClusterTest)[0]",
            "displayName": "testByReversedWeightedScoreAndSizeComparatorOnlySize(org.carrot2.core.ClusterTest)",
            "methodName": "testByReversedWeightedScoreAndSizeComparatorOnlySize",
            "className": "org.carrot2.core.ClusterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSizeNonEmptyHierarchicalWithoutOverlap(org.carrot2.core.ClusterTest)[0]",
            "displayName": "testSizeNonEmptyHierarchicalWithoutOverlap(org.carrot2.core.ClusterTest)",
            "methodName": "testSizeNonEmptyHierarchicalWithoutOverlap",
            "className": "org.carrot2.core.ClusterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSizeNonEmptyFlat(org.carrot2.core.ClusterTest)[0]",
            "displayName": "testSizeNonEmptyFlat(org.carrot2.core.ClusterTest)",
            "methodName": "testSizeNonEmptyFlat",
            "className": "org.carrot2.core.ClusterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testBySizeComparator(org.carrot2.core.ClusterTest)[0]",
            "displayName": "testBySizeComparator(org.carrot2.core.ClusterTest)",
            "methodName": "testBySizeComparator",
            "className": "org.carrot2.core.ClusterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoIdentifiers(org.carrot2.core.ClusterTest)[0]",
            "displayName": "testNoIdentifiers(org.carrot2.core.ClusterTest)",
            "methodName": "testNoIdentifiers",
            "className": "org.carrot2.core.ClusterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNonUniqueIdentifiers(org.carrot2.core.ClusterTest)[0]",
            "displayName": "testNonUniqueIdentifiers(org.carrot2.core.ClusterTest)",
            "methodName": "testNonUniqueIdentifiers",
            "className": "org.carrot2.core.ClusterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSubclusterIdentifiers(org.carrot2.core.ClusterTest)[0]",
            "displayName": "testSubclusterIdentifiers(org.carrot2.core.ClusterTest)",
            "methodName": "testSubclusterIdentifiers",
            "className": "org.carrot2.core.ClusterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testByReversedSizeAndLabelComparator(org.carrot2.core.ClusterTest)[0]",
            "displayName": "testByReversedSizeAndLabelComparator(org.carrot2.core.ClusterTest)",
            "methodName": "testByReversedSizeAndLabelComparator",
            "className": "org.carrot2.core.ClusterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testBuildOtherTopicsAllAssigned(org.carrot2.core.ClusterTest)[0]",
            "displayName": "testBuildOtherTopicsAllAssigned(org.carrot2.core.ClusterTest)",
            "methodName": "testBuildOtherTopicsAllAssigned",
            "className": "org.carrot2.core.ClusterTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773328787,
          "startTimestampDate": "2012-01-05T15:22:08.787",
          "executionTime": 6,
          "description": "id#testBuildOtherTopicsNonAssigned(org.carrot2.core.ClusterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328793,
          "startTimestampDate": "2012-01-05T15:22:08.793",
          "executionTime": 4,
          "description": "id#testFindNotFound(org.carrot2.core.ClusterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328798,
          "startTimestampDate": "2012-01-05T15:22:08.798",
          "executionTime": 5,
          "description": "id#testSomeIdentifiers(org.carrot2.core.ClusterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328804,
          "startTimestampDate": "2012-01-05T15:22:08.804",
          "executionTime": 4,
          "description": "id#testAllDocumentsEmptyFlat(org.carrot2.core.ClusterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328809,
          "startTimestampDate": "2012-01-05T15:22:08.809",
          "executionTime": 4,
          "description": "id#testFindRootCluster(org.carrot2.core.ClusterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328813,
          "startTimestampDate": "2012-01-05T15:22:08.813",
          "executionTime": 4,
          "description": "id#testFindSubcluster(org.carrot2.core.ClusterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328818,
          "startTimestampDate": "2012-01-05T15:22:08.818",
          "executionTime": 3,
          "description": "id#testAllDocumentsEmptyHierarchical(org.carrot2.core.ClusterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328822,
          "startTimestampDate": "2012-01-05T15:22:08.822",
          "executionTime": 3,
          "description": "id#testByLabelComparator(org.carrot2.core.ClusterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328826,
          "startTimestampDate": "2012-01-05T15:22:08.826",
          "executionTime": 4,
          "description": "id#testSizeNonEmptyHierarchicalWithOverlap(org.carrot2.core.ClusterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328831,
          "startTimestampDate": "2012-01-05T15:22:08.831",
          "executionTime": 4,
          "description": "id#testBuildOtherTopicsSomeAssigned(org.carrot2.core.ClusterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328836,
          "startTimestampDate": "2012-01-05T15:22:08.836",
          "executionTime": 5,
          "description": "id#testByReversedWeightedScoreAndSizeComparatorOnlyScore(org.carrot2.core.ClusterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328841,
          "startTimestampDate": "2012-01-05T15:22:08.841",
          "executionTime": 5,
          "description": "id#testByReversedWeightedScoreAndSizeComparatorOnlySize(org.carrot2.core.ClusterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328846,
          "startTimestampDate": "2012-01-05T15:22:08.846",
          "executionTime": 4,
          "description": "id#testSizeNonEmptyHierarchicalWithoutOverlap(org.carrot2.core.ClusterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328851,
          "startTimestampDate": "2012-01-05T15:22:08.851",
          "executionTime": 3,
          "description": "id#testSizeNonEmptyFlat(org.carrot2.core.ClusterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328855,
          "startTimestampDate": "2012-01-05T15:22:08.855",
          "executionTime": 4,
          "description": "id#testBySizeComparator(org.carrot2.core.ClusterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328859,
          "startTimestampDate": "2012-01-05T15:22:08.859",
          "executionTime": 4,
          "description": "id#testNoIdentifiers(org.carrot2.core.ClusterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328863,
          "startTimestampDate": "2012-01-05T15:22:08.863",
          "executionTime": 4,
          "description": "id#testNonUniqueIdentifiers(org.carrot2.core.ClusterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328868,
          "startTimestampDate": "2012-01-05T15:22:08.868",
          "executionTime": 5,
          "description": "id#testSubclusterIdentifiers(org.carrot2.core.ClusterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328874,
          "startTimestampDate": "2012-01-05T15:22:08.874",
          "executionTime": 5,
          "description": "id#testByReversedSizeAndLabelComparator(org.carrot2.core.ClusterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773328880,
          "startTimestampDate": "2012-01-05T15:22:08.880",
          "executionTime": 4,
          "description": "id#testBuildOtherTopicsAllAssigned(org.carrot2.core.ClusterTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testBuildOtherTopicsNonAssigned(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testBuildOtherTopicsNonAssigned(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFindNotFound(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFindNotFound(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSomeIdentifiers(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSomeIdentifiers(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAllDocumentsEmptyFlat(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAllDocumentsEmptyFlat(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFindRootCluster(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFindRootCluster(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFindSubcluster(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFindSubcluster(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAllDocumentsEmptyHierarchical(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAllDocumentsEmptyHierarchical(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testByLabelComparator(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testByLabelComparator(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSizeNonEmptyHierarchicalWithOverlap(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSizeNonEmptyHierarchicalWithOverlap(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testBuildOtherTopicsSomeAssigned(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testBuildOtherTopicsSomeAssigned(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testByReversedWeightedScoreAndSizeComparatorOnlyScore(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testByReversedWeightedScoreAndSizeComparatorOnlyScore(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testByReversedWeightedScoreAndSizeComparatorOnlySize(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testByReversedWeightedScoreAndSizeComparatorOnlySize(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSizeNonEmptyHierarchicalWithoutOverlap(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSizeNonEmptyHierarchicalWithoutOverlap(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSizeNonEmptyFlat(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSizeNonEmptyFlat(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testBySizeComparator(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testBySizeComparator(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoIdentifiers(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoIdentifiers(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNonUniqueIdentifiers(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNonUniqueIdentifiers(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSubclusterIdentifiers(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSubclusterIdentifiers(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testByReversedSizeAndLabelComparator(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testByReversedSizeAndLabelComparator(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testBuildOtherTopicsAllAssigned(org.carrot2.core.ClusterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testBuildOtherTopicsAllAssigned(org.carrot2.core.ClusterTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773328316,
      "startTimestampDate": "2012-01-05T15:22:08.316",
      "executionTime": 174,
      "description": {
        "id": "id#org.carrot2.text.preprocessing.TokenizerTest[2]",
        "displayName": "org.carrot2.text.preprocessing.TokenizerTest",
        "className": "org.carrot2.text.preprocessing.TokenizerTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testEmptyDocuments(org.carrot2.text.preprocessing.TokenizerTest)[0]",
            "displayName": "testEmptyDocuments(org.carrot2.text.preprocessing.TokenizerTest)",
            "methodName": "testEmptyDocuments",
            "className": "org.carrot2.text.preprocessing.TokenizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMoreDocuments(org.carrot2.text.preprocessing.TokenizerTest)[0]",
            "displayName": "testMoreDocuments(org.carrot2.text.preprocessing.TokenizerTest)",
            "methodName": "testMoreDocuments",
            "className": "org.carrot2.text.preprocessing.TokenizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmptyFirstField(org.carrot2.text.preprocessing.TokenizerTest)[0]",
            "displayName": "testEmptyFirstField(org.carrot2.text.preprocessing.TokenizerTest)",
            "methodName": "testEmptyFirstField",
            "className": "org.carrot2.text.preprocessing.TokenizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOneDocument(org.carrot2.text.preprocessing.TokenizerTest)[0]",
            "displayName": "testOneDocument(org.carrot2.text.preprocessing.TokenizerTest)",
            "methodName": "testOneDocument",
            "className": "org.carrot2.text.preprocessing.TokenizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmptyField(org.carrot2.text.preprocessing.TokenizerTest)[0]",
            "displayName": "testEmptyField(org.carrot2.text.preprocessing.TokenizerTest)",
            "methodName": "testEmptyField",
            "className": "org.carrot2.text.preprocessing.TokenizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoDocuments(org.carrot2.text.preprocessing.TokenizerTest)[0]",
            "displayName": "testNoDocuments(org.carrot2.text.preprocessing.TokenizerTest)",
            "methodName": "testNoDocuments",
            "className": "org.carrot2.text.preprocessing.TokenizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSentenceSeparator(org.carrot2.text.preprocessing.TokenizerTest)[0]",
            "displayName": "testSentenceSeparator(org.carrot2.text.preprocessing.TokenizerTest)",
            "methodName": "testSentenceSeparator",
            "className": "org.carrot2.text.preprocessing.TokenizerTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773328320,
          "startTimestampDate": "2012-01-05T15:22:08.320",
          "executionTime": 132,
          "description": "id#testEmptyDocuments(org.carrot2.text.preprocessing.TokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328453,
          "startTimestampDate": "2012-01-05T15:22:08.453",
          "executionTime": 10,
          "description": "id#testMoreDocuments(org.carrot2.text.preprocessing.TokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328463,
          "startTimestampDate": "2012-01-05T15:22:08.463",
          "executionTime": 5,
          "description": "id#testEmptyFirstField(org.carrot2.text.preprocessing.TokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328469,
          "startTimestampDate": "2012-01-05T15:22:08.469",
          "executionTime": 6,
          "description": "id#testOneDocument(org.carrot2.text.preprocessing.TokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328476,
          "startTimestampDate": "2012-01-05T15:22:08.476",
          "executionTime": 5,
          "description": "id#testEmptyField(org.carrot2.text.preprocessing.TokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328482,
          "startTimestampDate": "2012-01-05T15:22:08.482",
          "executionTime": 3,
          "description": "id#testNoDocuments(org.carrot2.text.preprocessing.TokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328486,
          "startTimestampDate": "2012-01-05T15:22:08.486",
          "executionTime": 3,
          "description": "id#testSentenceSeparator(org.carrot2.text.preprocessing.TokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testEmptyDocuments(org.carrot2.text.preprocessing.TokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyDocuments(org.carrot2.text.preprocessing.TokenizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMoreDocuments(org.carrot2.text.preprocessing.TokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMoreDocuments(org.carrot2.text.preprocessing.TokenizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyFirstField(org.carrot2.text.preprocessing.TokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyFirstField(org.carrot2.text.preprocessing.TokenizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOneDocument(org.carrot2.text.preprocessing.TokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOneDocument(org.carrot2.text.preprocessing.TokenizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyField(org.carrot2.text.preprocessing.TokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyField(org.carrot2.text.preprocessing.TokenizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoDocuments(org.carrot2.text.preprocessing.TokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoDocuments(org.carrot2.text.preprocessing.TokenizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSentenceSeparator(org.carrot2.text.preprocessing.TokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSentenceSeparator(org.carrot2.text.preprocessing.TokenizerTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773328495,
      "startTimestampDate": "2012-01-05T15:22:08.495",
      "executionTime": 23,
      "description": {
        "id": "id#org.carrot2.text.preprocessing.SubstringComparatorTest[2]",
        "displayName": "org.carrot2.text.preprocessing.SubstringComparatorTest",
        "className": "org.carrot2.text.preprocessing.SubstringComparatorTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testComparatorContract(org.carrot2.text.preprocessing.SubstringComparatorTest)[0]",
            "displayName": "testComparatorContract(org.carrot2.text.preprocessing.SubstringComparatorTest)",
            "methodName": "testComparatorContract",
            "className": "org.carrot2.text.preprocessing.SubstringComparatorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCarrot778(org.carrot2.text.preprocessing.SubstringComparatorTest)[0]",
            "displayName": "testCarrot778(org.carrot2.text.preprocessing.SubstringComparatorTest)",
            "methodName": "testCarrot778",
            "className": "org.carrot2.text.preprocessing.SubstringComparatorTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773328498,
          "startTimestampDate": "2012-01-05T15:22:08.498",
          "executionTime": 3,
          "description": "id#testComparatorContract(org.carrot2.text.preprocessing.SubstringComparatorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328502,
          "startTimestampDate": "2012-01-05T15:22:08.502",
          "executionTime": 15,
          "description": "id#testCarrot778(org.carrot2.text.preprocessing.SubstringComparatorTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testComparatorContract(org.carrot2.text.preprocessing.SubstringComparatorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComparatorContract(org.carrot2.text.preprocessing.SubstringComparatorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCarrot778(org.carrot2.text.preprocessing.SubstringComparatorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCarrot778(org.carrot2.text.preprocessing.SubstringComparatorTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773328522,
      "startTimestampDate": "2012-01-05T15:22:08.522",
      "executionTime": 58,
      "description": {
        "id": "id#org.carrot2.util.GraphUtilsTest[2]",
        "displayName": "org.carrot2.util.GraphUtilsTest",
        "className": "org.carrot2.util.GraphUtilsTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testOneBigSubgraph(org.carrot2.util.GraphUtilsTest)[0]",
            "displayName": "testOneBigSubgraph(org.carrot2.util.GraphUtilsTest)",
            "methodName": "testOneBigSubgraph",
            "className": "org.carrot2.util.GraphUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmpty(org.carrot2.util.GraphUtilsTest)[0]",
            "displayName": "testEmpty(org.carrot2.util.GraphUtilsTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.util.GraphUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTwoSubgraphs(org.carrot2.util.GraphUtilsTest)[0]",
            "displayName": "testTwoSubgraphs(org.carrot2.util.GraphUtilsTest)",
            "methodName": "testTwoSubgraphs",
            "className": "org.carrot2.util.GraphUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTrivialArcs(org.carrot2.util.GraphUtilsTest)[0]",
            "displayName": "testTrivialArcs(org.carrot2.util.GraphUtilsTest)",
            "methodName": "testTrivialArcs",
            "className": "org.carrot2.util.GraphUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOneSubgraph(org.carrot2.util.GraphUtilsTest)[0]",
            "displayName": "testOneSubgraph(org.carrot2.util.GraphUtilsTest)",
            "methodName": "testOneSubgraph",
            "className": "org.carrot2.util.GraphUtilsTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773328553,
          "startTimestampDate": "2012-01-05T15:22:08.553",
          "executionTime": 7,
          "description": "id#testOneBigSubgraph(org.carrot2.util.GraphUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328561,
          "startTimestampDate": "2012-01-05T15:22:08.561",
          "executionTime": 4,
          "description": "id#testEmpty(org.carrot2.util.GraphUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328565,
          "startTimestampDate": "2012-01-05T15:22:08.565",
          "executionTime": 4,
          "description": "id#testTwoSubgraphs(org.carrot2.util.GraphUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328570,
          "startTimestampDate": "2012-01-05T15:22:08.570",
          "executionTime": 5,
          "description": "id#testTrivialArcs(org.carrot2.util.GraphUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328575,
          "startTimestampDate": "2012-01-05T15:22:08.575",
          "executionTime": 4,
          "description": "id#testOneSubgraph(org.carrot2.util.GraphUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testOneBigSubgraph(org.carrot2.util.GraphUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOneBigSubgraph(org.carrot2.util.GraphUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.util.GraphUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.util.GraphUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTwoSubgraphs(org.carrot2.util.GraphUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTwoSubgraphs(org.carrot2.util.GraphUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTrivialArcs(org.carrot2.util.GraphUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTrivialArcs(org.carrot2.util.GraphUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOneSubgraph(org.carrot2.util.GraphUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOneSubgraph(org.carrot2.util.GraphUtilsTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773328584,
      "startTimestampDate": "2012-01-05T15:22:08.584",
      "executionTime": 46,
      "description": {
        "id": "id#org.carrot2.util.resource.ServletContextLocatorTest[2]",
        "displayName": "org.carrot2.util.resource.ServletContextLocatorTest",
        "className": "org.carrot2.util.resource.ServletContextLocatorTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testHashCodeEqualsServletContextLocator(org.carrot2.util.resource.ServletContextLocatorTest)[0]",
            "displayName": "testHashCodeEqualsServletContextLocator(org.carrot2.util.resource.ServletContextLocatorTest)",
            "methodName": "testHashCodeEqualsServletContextLocator",
            "className": "org.carrot2.util.resource.ServletContextLocatorTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773328604,
          "startTimestampDate": "2012-01-05T15:22:08.604",
          "executionTime": 25,
          "description": "id#testHashCodeEqualsServletContextLocator(org.carrot2.util.resource.ServletContextLocatorTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testHashCodeEqualsServletContextLocator(org.carrot2.util.resource.ServletContextLocatorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHashCodeEqualsServletContextLocator(org.carrot2.util.resource.ServletContextLocatorTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773327546,
      "startTimestampDate": "2012-01-05T15:22:07.546",
      "executionTime": 147,
      "description": {
        "id": "id#org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest[2]",
        "displayName": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
        "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testEmpty(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)[0]",
            "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNestedPhrases(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)[0]",
            "displayName": "testNestedPhrases(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
            "methodName": "testNestedPhrases",
            "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFuzzyOverrideNotApplied(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)[0]",
            "displayName": "testFuzzyOverrideNotApplied(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
            "methodName": "testFuzzyOverrideNotApplied",
            "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOverridingByFilteredOutPhrase(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)[0]",
            "displayName": "testOverridingByFilteredOutPhrase(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
            "methodName": "testOverridingByFilteredOutPhrase",
            "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFuzzyOverrideApplied(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)[0]",
            "displayName": "testFuzzyOverrideApplied(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
            "methodName": "testFuzzyOverrideApplied",
            "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOnePhrase(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)[0]",
            "displayName": "testOnePhrase(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
            "methodName": "testOnePhrase",
            "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSubphrases(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)[0]",
            "displayName": "testSubphrases(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)",
            "methodName": "testSubphrases",
            "className": "org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773327588,
          "startTimestampDate": "2012-01-05T15:22:07.588",
          "executionTime": 6,
          "description": "id#testEmpty(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327610,
          "startTimestampDate": "2012-01-05T15:22:07.610",
          "executionTime": 25,
          "description": "id#testNestedPhrases(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327636,
          "startTimestampDate": "2012-01-05T15:22:07.636",
          "executionTime": 14,
          "description": "id#testFuzzyOverrideNotApplied(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327651,
          "startTimestampDate": "2012-01-05T15:22:07.651",
          "executionTime": 7,
          "description": "id#testOverridingByFilteredOutPhrase(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327659,
          "startTimestampDate": "2012-01-05T15:22:07.659",
          "executionTime": 16,
          "description": "id#testFuzzyOverrideApplied(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327676,
          "startTimestampDate": "2012-01-05T15:22:07.676",
          "executionTime": 6,
          "description": "id#testOnePhrase(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327683,
          "startTimestampDate": "2012-01-05T15:22:07.683",
          "executionTime": 9,
          "description": "id#testSubphrases(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNestedPhrases(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNestedPhrases(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFuzzyOverrideNotApplied(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFuzzyOverrideNotApplied(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOverridingByFilteredOutPhrase(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOverridingByFilteredOutPhrase(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFuzzyOverrideApplied(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFuzzyOverrideApplied(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOnePhrase(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOnePhrase(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSubphrases(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSubphrases(org.carrot2.text.preprocessing.filter.CompleteLabelFilterTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773327698,
      "startTimestampDate": "2012-01-05T15:22:07.698",
      "executionTime": 116,
      "description": {
        "id": "id#org.carrot2.util.StringUtilsTest[2]",
        "displayName": "org.carrot2.util.StringUtilsTest",
        "className": "org.carrot2.util.StringUtilsTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testRemoveHtmlNestedTags(org.carrot2.util.StringUtilsTest)[0]",
            "displayName": "testRemoveHtmlNestedTags(org.carrot2.util.StringUtilsTest)",
            "methodName": "testRemoveHtmlNestedTags",
            "className": "org.carrot2.util.StringUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testRemoveHtmlTagWithAttributes(org.carrot2.util.StringUtilsTest)[0]",
            "displayName": "testRemoveHtmlTagWithAttributes(org.carrot2.util.StringUtilsTest)",
            "methodName": "testRemoveHtmlTagWithAttributes",
            "className": "org.carrot2.util.StringUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testRemoveHtmlSimpleTag(org.carrot2.util.StringUtilsTest)[0]",
            "displayName": "testRemoveHtmlSimpleTag(org.carrot2.util.StringUtilsTest)",
            "methodName": "testRemoveHtmlSimpleTag",
            "className": "org.carrot2.util.StringUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSplitCamelCaseWithDigits(org.carrot2.util.StringUtilsTest)[0]",
            "displayName": "testSplitCamelCaseWithDigits(org.carrot2.util.StringUtilsTest)",
            "methodName": "testSplitCamelCaseWithDigits",
            "className": "org.carrot2.util.StringUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testRemoveHtmlNoTags(org.carrot2.util.StringUtilsTest)[0]",
            "displayName": "testRemoveHtmlNoTags(org.carrot2.util.StringUtilsTest)",
            "methodName": "testRemoveHtmlNoTags",
            "className": "org.carrot2.util.StringUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSplitCamelCaseWithCapitals(org.carrot2.util.StringUtilsTest)[0]",
            "displayName": "testSplitCamelCaseWithCapitals(org.carrot2.util.StringUtilsTest)",
            "methodName": "testSplitCamelCaseWithCapitals",
            "className": "org.carrot2.util.StringUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSplitCamelCase(org.carrot2.util.StringUtilsTest)[0]",
            "displayName": "testSplitCamelCase(org.carrot2.util.StringUtilsTest)",
            "methodName": "testSplitCamelCase",
            "className": "org.carrot2.util.StringUtilsTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773327714,
          "startTimestampDate": "2012-01-05T15:22:07.714",
          "executionTime": 6,
          "description": "id#testRemoveHtmlNestedTags(org.carrot2.util.StringUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327721,
          "startTimestampDate": "2012-01-05T15:22:07.721",
          "executionTime": 41,
          "description": "id#testRemoveHtmlTagWithAttributes(org.carrot2.util.StringUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327764,
          "startTimestampDate": "2012-01-05T15:22:07.764",
          "executionTime": 5,
          "description": "id#testRemoveHtmlSimpleTag(org.carrot2.util.StringUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327778,
          "startTimestampDate": "2012-01-05T15:22:07.778",
          "executionTime": 19,
          "description": "id#testSplitCamelCaseWithDigits(org.carrot2.util.StringUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327798,
          "startTimestampDate": "2012-01-05T15:22:07.798",
          "executionTime": 4,
          "description": "id#testRemoveHtmlNoTags(org.carrot2.util.StringUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327803,
          "startTimestampDate": "2012-01-05T15:22:07.803",
          "executionTime": 5,
          "description": "id#testSplitCamelCaseWithCapitals(org.carrot2.util.StringUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327809,
          "startTimestampDate": "2012-01-05T15:22:07.809",
          "executionTime": 4,
          "description": "id#testSplitCamelCase(org.carrot2.util.StringUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testRemoveHtmlNestedTags(org.carrot2.util.StringUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRemoveHtmlNestedTags(org.carrot2.util.StringUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testRemoveHtmlTagWithAttributes(org.carrot2.util.StringUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRemoveHtmlTagWithAttributes(org.carrot2.util.StringUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testRemoveHtmlSimpleTag(org.carrot2.util.StringUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRemoveHtmlSimpleTag(org.carrot2.util.StringUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSplitCamelCaseWithDigits(org.carrot2.util.StringUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSplitCamelCaseWithDigits(org.carrot2.util.StringUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testRemoveHtmlNoTags(org.carrot2.util.StringUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRemoveHtmlNoTags(org.carrot2.util.StringUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSplitCamelCaseWithCapitals(org.carrot2.util.StringUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSplitCamelCaseWithCapitals(org.carrot2.util.StringUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSplitCamelCase(org.carrot2.util.StringUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSplitCamelCase(org.carrot2.util.StringUtilsTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773328634,
      "startTimestampDate": "2012-01-05T15:22:08.634",
      "executionTime": 27,
      "description": {
        "id": "id#org.carrot2.text.linguistic.EnglishTest[2]",
        "displayName": "org.carrot2.text.linguistic.EnglishTest",
        "className": "org.carrot2.text.linguistic.EnglishTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testCommonWords(org.carrot2.text.linguistic.EnglishTest)[0]",
            "displayName": "testCommonWords(org.carrot2.text.linguistic.EnglishTest)",
            "methodName": "testCommonWords",
            "className": "org.carrot2.text.linguistic.EnglishTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#pattern(org.carrot2.text.linguistic.EnglishTest)[0]",
            "displayName": "pattern(org.carrot2.text.linguistic.EnglishTest)",
            "methodName": "pattern",
            "className": "org.carrot2.text.linguistic.EnglishTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStemming(org.carrot2.text.linguistic.EnglishTest)[0]",
            "displayName": "testStemming(org.carrot2.text.linguistic.EnglishTest)",
            "methodName": "testStemming",
            "className": "org.carrot2.text.linguistic.EnglishTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStemmerAvailable(org.carrot2.text.linguistic.EnglishTest)[0]",
            "displayName": "testStemmerAvailable(org.carrot2.text.linguistic.EnglishTest)",
            "methodName": "testStemmerAvailable",
            "className": "org.carrot2.text.linguistic.EnglishTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLanguageCode(org.carrot2.text.linguistic.EnglishTest)[0]",
            "displayName": "testLanguageCode(org.carrot2.text.linguistic.EnglishTest)",
            "methodName": "testLanguageCode",
            "className": "org.carrot2.text.linguistic.EnglishTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773328637,
          "startTimestampDate": "2012-01-05T15:22:08.637",
          "executionTime": 5,
          "description": "id#testCommonWords(org.carrot2.text.linguistic.EnglishTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328642,
          "startTimestampDate": "2012-01-05T15:22:08.642",
          "executionTime": 3,
          "description": "id#pattern(org.carrot2.text.linguistic.EnglishTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328646,
          "startTimestampDate": "2012-01-05T15:22:08.646",
          "executionTime": 3,
          "description": "id#testStemming(org.carrot2.text.linguistic.EnglishTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328650,
          "startTimestampDate": "2012-01-05T15:22:08.650",
          "executionTime": 6,
          "description": "id#testStemmerAvailable(org.carrot2.text.linguistic.EnglishTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328656,
          "startTimestampDate": "2012-01-05T15:22:08.656",
          "executionTime": 4,
          "description": "id#testLanguageCode(org.carrot2.text.linguistic.EnglishTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testCommonWords(org.carrot2.text.linguistic.EnglishTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCommonWords(org.carrot2.text.linguistic.EnglishTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "pattern(org.carrot2.text.linguistic.EnglishTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "pattern(org.carrot2.text.linguistic.EnglishTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStemming(org.carrot2.text.linguistic.EnglishTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStemming(org.carrot2.text.linguistic.EnglishTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStemmerAvailable(org.carrot2.text.linguistic.EnglishTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStemmerAvailable(org.carrot2.text.linguistic.EnglishTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLanguageCode(org.carrot2.text.linguistic.EnglishTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLanguageCode(org.carrot2.text.linguistic.EnglishTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773327818,
      "startTimestampDate": "2012-01-05T15:22:07.818",
      "executionTime": 1297,
      "description": {
        "id": "id#org.carrot2.util.pool.FixedSizePoolTest[2]",
        "displayName": "org.carrot2.util.pool.FixedSizePoolTest",
        "className": "org.carrot2.util.pool.FixedSizePoolTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testExhaustAndReleaseOnDispose(org.carrot2.util.pool.FixedSizePoolTest)[0]",
            "displayName": "testExhaustAndReleaseOnDispose(org.carrot2.util.pool.FixedSizePoolTest)",
            "methodName": "testExhaustAndReleaseOnDispose",
            "className": "org.carrot2.util.pool.FixedSizePoolTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testIllegalStateOnBorrowAfterDispose(org.carrot2.util.pool.FixedSizePoolTest)[0]",
            "displayName": "testIllegalStateOnBorrowAfterDispose(org.carrot2.util.pool.FixedSizePoolTest)",
            "methodName": "testIllegalStateOnBorrowAfterDispose",
            "className": "org.carrot2.util.pool.FixedSizePoolTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testBorrowReturnYieldsSameObject(org.carrot2.util.pool.FixedSizePoolTest)[0]",
            "displayName": "testBorrowReturnYieldsSameObject(org.carrot2.util.pool.FixedSizePoolTest)",
            "methodName": "testBorrowReturnYieldsSameObject",
            "className": "org.carrot2.util.pool.FixedSizePoolTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testReturnAlreadyReturnedObject(org.carrot2.util.pool.FixedSizePoolTest)[0]",
            "displayName": "testReturnAlreadyReturnedObject(org.carrot2.util.pool.FixedSizePoolTest)",
            "methodName": "testReturnAlreadyReturnedObject",
            "className": "org.carrot2.util.pool.FixedSizePoolTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testBorrowBorrowYieldsDifferentObjects(org.carrot2.util.pool.FixedSizePoolTest)[0]",
            "displayName": "testBorrowBorrowYieldsDifferentObjects(org.carrot2.util.pool.FixedSizePoolTest)",
            "methodName": "testBorrowBorrowYieldsDifferentObjects",
            "className": "org.carrot2.util.pool.FixedSizePoolTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testParametersAndFlow(org.carrot2.util.pool.FixedSizePoolTest)[0]",
            "displayName": "testParametersAndFlow(org.carrot2.util.pool.FixedSizePoolTest)",
            "methodName": "testParametersAndFlow",
            "className": "org.carrot2.util.pool.FixedSizePoolTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStress(org.carrot2.util.pool.FixedSizePoolTest)[0]",
            "displayName": "testStress(org.carrot2.util.pool.FixedSizePoolTest)",
            "methodName": "testStress",
            "className": "org.carrot2.util.pool.FixedSizePoolTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773327925,
          "startTimestampDate": "2012-01-05T15:22:07.925",
          "executionTime": 10,
          "description": "id#testExhaustAndReleaseOnDispose(org.carrot2.util.pool.FixedSizePoolTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327937,
          "startTimestampDate": "2012-01-05T15:22:07.937",
          "executionTime": 6,
          "description": "id#testIllegalStateOnBorrowAfterDispose(org.carrot2.util.pool.FixedSizePoolTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327944,
          "startTimestampDate": "2012-01-05T15:22:07.944",
          "executionTime": 6,
          "description": "id#testBorrowReturnYieldsSameObject(org.carrot2.util.pool.FixedSizePoolTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327951,
          "startTimestampDate": "2012-01-05T15:22:07.951",
          "executionTime": 23,
          "description": "id#testReturnAlreadyReturnedObject(org.carrot2.util.pool.FixedSizePoolTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327978,
          "startTimestampDate": "2012-01-05T15:22:07.978",
          "executionTime": 9,
          "description": "id#testBorrowBorrowYieldsDifferentObjects(org.carrot2.util.pool.FixedSizePoolTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773327992,
          "startTimestampDate": "2012-01-05T15:22:07.992",
          "executionTime": 50,
          "description": "id#testParametersAndFlow(org.carrot2.util.pool.FixedSizePoolTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773328042,
          "startTimestampDate": "2012-01-05T15:22:08.042",
          "executionTime": 1073,
          "description": "id#testStress(org.carrot2.util.pool.FixedSizePoolTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testExhaustAndReleaseOnDispose(org.carrot2.util.pool.FixedSizePoolTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExhaustAndReleaseOnDispose(org.carrot2.util.pool.FixedSizePoolTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testIllegalStateOnBorrowAfterDispose(org.carrot2.util.pool.FixedSizePoolTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIllegalStateOnBorrowAfterDispose(org.carrot2.util.pool.FixedSizePoolTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testBorrowReturnYieldsSameObject(org.carrot2.util.pool.FixedSizePoolTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testBorrowReturnYieldsSameObject(org.carrot2.util.pool.FixedSizePoolTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testReturnAlreadyReturnedObject(org.carrot2.util.pool.FixedSizePoolTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testReturnAlreadyReturnedObject(org.carrot2.util.pool.FixedSizePoolTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testBorrowBorrowYieldsDifferentObjects(org.carrot2.util.pool.FixedSizePoolTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testBorrowBorrowYieldsDifferentObjects(org.carrot2.util.pool.FixedSizePoolTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testParametersAndFlow(org.carrot2.util.pool.FixedSizePoolTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testParametersAndFlow(org.carrot2.util.pool.FixedSizePoolTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStress(org.carrot2.util.pool.FixedSizePoolTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStress(org.carrot2.util.pool.FixedSizePoolTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773328668,
      "startTimestampDate": "2012-01-05T15:22:08.668",
      "executionTime": 974,
      "description": {
        "id": "id#org.carrot2.clustering.stc.STCClusteringAlgorithmTest[2]",
        "displayName": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
        "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testMaxClusters(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)[0]",
            "displayName": "testMaxClusters(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
            "methodName": "testMaxClusters",
            "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testComputeIntersection(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)[0]",
            "displayName": "testComputeIntersection(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
            "methodName": "testComputeIntersection",
            "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoDocuments(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)[0]",
            "displayName": "testNoDocuments(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
            "methodName": "testNoDocuments",
            "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStress(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)[0]",
            "displayName": "testStress(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
            "methodName": "testStress",
            "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testClusteringDataMining(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)[0]",
            "displayName": "testClusteringDataMining(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
            "methodName": "testClusteringDataMining",
            "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testClusteringWithDfThreshold(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)[0]",
            "displayName": "testClusteringWithDfThreshold(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
            "methodName": "testClusteringWithDfThreshold",
            "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMetadataAvailable(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)[0]",
            "displayName": "testMetadataAvailable(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
            "methodName": "testMetadataAvailable",
            "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testRepeatedClusteringWithCache(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)[0]",
            "displayName": "testRepeatedClusteringWithCache(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
            "methodName": "testRepeatedClusteringWithCache",
            "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmptyDocuments(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)[0]",
            "displayName": "testEmptyDocuments(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)",
            "methodName": "testEmptyDocuments",
            "className": "org.carrot2.clustering.stc.STCClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773328673,
          "startTimestampDate": "2012-01-05T15:22:08.673",
          "executionTime": 206,
          "description": "id#testMaxClusters(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328880,
          "startTimestampDate": "2012-01-05T15:22:08.880",
          "executionTime": 4,
          "description": "id#testComputeIntersection(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328885,
          "startTimestampDate": "2012-01-05T15:22:08.885",
          "executionTime": 6,
          "description": "id#testNoDocuments(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328892,
          "startTimestampDate": "2012-01-05T15:22:08.892",
          "executionTime": 0,
          "description": "id#testStress(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773328893,
          "startTimestampDate": "2012-01-05T15:22:08.893",
          "executionTime": 88,
          "description": "id#testClusteringDataMining(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773329057,
          "startTimestampDate": "2012-01-05T15:22:09.057",
          "executionTime": 81,
          "description": "id#testClusteringWithDfThreshold(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773329187,
          "startTimestampDate": "2012-01-05T15:22:09.187",
          "executionTime": 16,
          "description": "id#testMetadataAvailable(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773329205,
          "startTimestampDate": "2012-01-05T15:22:09.205",
          "executionTime": 402,
          "description": "id#testRepeatedClusteringWithCache(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773329610,
          "startTimestampDate": "2012-01-05T15:22:09.610",
          "executionTime": 32,
          "description": "id#testEmptyDocuments(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testMaxClusters(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMaxClusters(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComputeIntersection(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComputeIntersection(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoDocuments(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoDocuments(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStress(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStress(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testClusteringDataMining(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testClusteringDataMining(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testClusteringWithDfThreshold(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testClusteringWithDfThreshold(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMetadataAvailable(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMetadataAvailable(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testRepeatedClusteringWithCache(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRepeatedClusteringWithCache(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyDocuments(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyDocuments(org.carrot2.clustering.stc.STCClusteringAlgorithmTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773329646,
      "startTimestampDate": "2012-01-05T15:22:09.646",
      "executionTime": 154,
      "description": {
        "id": "id#org.carrot2.util.LinearApproximationTest[2]",
        "displayName": "org.carrot2.util.LinearApproximationTest",
        "className": "org.carrot2.util.LinearApproximationTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testOnePoint(org.carrot2.util.LinearApproximationTest)[0]",
            "displayName": "testOnePoint(org.carrot2.util.LinearApproximationTest)",
            "methodName": "testOnePoint",
            "className": "org.carrot2.util.LinearApproximationTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTwoPoints(org.carrot2.util.LinearApproximationTest)[0]",
            "displayName": "testTwoPoints(org.carrot2.util.LinearApproximationTest)",
            "methodName": "testTwoPoints",
            "className": "org.carrot2.util.LinearApproximationTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testThreePoints(org.carrot2.util.LinearApproximationTest)[0]",
            "displayName": "testThreePoints(org.carrot2.util.LinearApproximationTest)",
            "methodName": "testThreePoints",
            "className": "org.carrot2.util.LinearApproximationTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773329770,
          "startTimestampDate": "2012-01-05T15:22:09.770",
          "executionTime": 9,
          "description": "id#testOnePoint(org.carrot2.util.LinearApproximationTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773329783,
          "startTimestampDate": "2012-01-05T15:22:09.783",
          "executionTime": 5,
          "description": "id#testTwoPoints(org.carrot2.util.LinearApproximationTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773329790,
          "startTimestampDate": "2012-01-05T15:22:09.790",
          "executionTime": 9,
          "description": "id#testThreePoints(org.carrot2.util.LinearApproximationTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testOnePoint(org.carrot2.util.LinearApproximationTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOnePoint(org.carrot2.util.LinearApproximationTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTwoPoints(org.carrot2.util.LinearApproximationTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTwoPoints(org.carrot2.util.LinearApproximationTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testThreePoints(org.carrot2.util.LinearApproximationTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testThreePoints(org.carrot2.util.LinearApproximationTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773329802,
      "startTimestampDate": "2012-01-05T15:22:09.802",
      "executionTime": 1,
      "description": {
        "id": "id#org.carrot2.source.google.GoogleDesktopDocumentSourceTest[3]",
        "displayName": "org.carrot2.source.google.GoogleDesktopDocumentSourceTest",
        "className": "org.carrot2.source.google.GoogleDesktopDocumentSourceTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.Ignore": {
              "value": ""
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": []
      },
      "tests": [],
      "suiteFailures": [],
      "executionEvents": []
    },
    {
      "slave": 3,
      "startTimestamp": 1325773329808,
      "startTimestampDate": "2012-01-05T15:22:09.808",
      "executionTime": 384,
      "description": {
        "id": "id#org.carrot2.core.ClusterWithParentTest[2]",
        "displayName": "org.carrot2.core.ClusterWithParentTest",
        "className": "org.carrot2.core.ClusterWithParentTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testDisjointSubclusters(org.carrot2.core.ClusterWithParentTest)[0]",
            "displayName": "testDisjointSubclusters(org.carrot2.core.ClusterWithParentTest)",
            "methodName": "testDisjointSubclusters",
            "className": "org.carrot2.core.ClusterWithParentTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCyclicReferences(org.carrot2.core.ClusterWithParentTest)[0]",
            "displayName": "testCyclicReferences(org.carrot2.core.ClusterWithParentTest)",
            "methodName": "testCyclicReferences",
            "className": "org.carrot2.core.ClusterWithParentTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFindRootCluster(org.carrot2.core.ClusterWithParentTest)[0]",
            "displayName": "testFindRootCluster(org.carrot2.core.ClusterWithParentTest)",
            "methodName": "testFindRootCluster",
            "className": "org.carrot2.core.ClusterWithParentTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoSubclusters(org.carrot2.core.ClusterWithParentTest)[0]",
            "displayName": "testNoSubclusters(org.carrot2.core.ClusterWithParentTest)",
            "methodName": "testNoSubclusters",
            "className": "org.carrot2.core.ClusterWithParentTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmptyList(org.carrot2.core.ClusterWithParentTest)[0]",
            "displayName": "testEmptyList(org.carrot2.core.ClusterWithParentTest)",
            "methodName": "testEmptyList",
            "className": "org.carrot2.core.ClusterWithParentTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCommonSubcluster(org.carrot2.core.ClusterWithParentTest)[0]",
            "displayName": "testCommonSubcluster(org.carrot2.core.ClusterWithParentTest)",
            "methodName": "testCommonSubcluster",
            "className": "org.carrot2.core.ClusterWithParentTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFindNotFound(org.carrot2.core.ClusterWithParentTest)[0]",
            "displayName": "testFindNotFound(org.carrot2.core.ClusterWithParentTest)",
            "methodName": "testFindNotFound",
            "className": "org.carrot2.core.ClusterWithParentTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFindSubcluster(org.carrot2.core.ClusterWithParentTest)[0]",
            "displayName": "testFindSubcluster(org.carrot2.core.ClusterWithParentTest)",
            "methodName": "testFindSubcluster",
            "className": "org.carrot2.core.ClusterWithParentTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEqualsAndHashCode(org.carrot2.core.ClusterWithParentTest)[0]",
            "displayName": "testEqualsAndHashCode(org.carrot2.core.ClusterWithParentTest)",
            "methodName": "testEqualsAndHashCode",
            "className": "org.carrot2.core.ClusterWithParentTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773329985,
          "startTimestampDate": "2012-01-05T15:22:09.985",
          "executionTime": 9,
          "description": "id#testDisjointSubclusters(org.carrot2.core.ClusterWithParentTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773329995,
          "startTimestampDate": "2012-01-05T15:22:09.995",
          "executionTime": 21,
          "description": "id#testCyclicReferences(org.carrot2.core.ClusterWithParentTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330029,
          "startTimestampDate": "2012-01-05T15:22:10.029",
          "executionTime": 5,
          "description": "id#testFindRootCluster(org.carrot2.core.ClusterWithParentTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330035,
          "startTimestampDate": "2012-01-05T15:22:10.035",
          "executionTime": 47,
          "description": "id#testNoSubclusters(org.carrot2.core.ClusterWithParentTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330086,
          "startTimestampDate": "2012-01-05T15:22:10.086",
          "executionTime": 21,
          "description": "id#testEmptyList(org.carrot2.core.ClusterWithParentTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330124,
          "startTimestampDate": "2012-01-05T15:22:10.124",
          "executionTime": 7,
          "description": "id#testCommonSubcluster(org.carrot2.core.ClusterWithParentTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330174,
          "startTimestampDate": "2012-01-05T15:22:10.174",
          "executionTime": 8,
          "description": "id#testFindNotFound(org.carrot2.core.ClusterWithParentTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330183,
          "startTimestampDate": "2012-01-05T15:22:10.183",
          "executionTime": 4,
          "description": "id#testFindSubcluster(org.carrot2.core.ClusterWithParentTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330188,
          "startTimestampDate": "2012-01-05T15:22:10.188",
          "executionTime": 3,
          "description": "id#testEqualsAndHashCode(org.carrot2.core.ClusterWithParentTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testDisjointSubclusters(org.carrot2.core.ClusterWithParentTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDisjointSubclusters(org.carrot2.core.ClusterWithParentTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCyclicReferences(org.carrot2.core.ClusterWithParentTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCyclicReferences(org.carrot2.core.ClusterWithParentTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFindRootCluster(org.carrot2.core.ClusterWithParentTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFindRootCluster(org.carrot2.core.ClusterWithParentTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoSubclusters(org.carrot2.core.ClusterWithParentTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoSubclusters(org.carrot2.core.ClusterWithParentTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyList(org.carrot2.core.ClusterWithParentTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyList(org.carrot2.core.ClusterWithParentTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCommonSubcluster(org.carrot2.core.ClusterWithParentTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCommonSubcluster(org.carrot2.core.ClusterWithParentTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFindNotFound(org.carrot2.core.ClusterWithParentTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFindNotFound(org.carrot2.core.ClusterWithParentTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFindSubcluster(org.carrot2.core.ClusterWithParentTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFindSubcluster(org.carrot2.core.ClusterWithParentTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEqualsAndHashCode(org.carrot2.core.ClusterWithParentTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEqualsAndHashCode(org.carrot2.core.ClusterWithParentTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773330194,
      "startTimestampDate": "2012-01-05T15:22:10.194",
      "executionTime": 49,
      "description": {
        "id": "id#org.carrot2.source.opensearch.OpenSearchDocumentSourceTest[2]",
        "displayName": "org.carrot2.source.opensearch.OpenSearchDocumentSourceTest",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testCorrectConfiguration(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)[0]",
            "displayName": "testCorrectConfiguration(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
            "methodName": "testCorrectConfiguration",
            "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testBothStartsPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)[0]",
            "displayName": "testBothStartsPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
            "methodName": "testBothStartsPresent",
            "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSearchTermsNotPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)[0]",
            "displayName": "testSearchTermsNotPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
            "methodName": "testSearchTermsNotPresent",
            "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testResultsPerPageNotSet(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)[0]",
            "displayName": "testResultsPerPageNotSet(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
            "methodName": "testResultsPerPageNotSet",
            "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoStartPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)[0]",
            "displayName": "testNoStartPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)",
            "methodName": "testNoStartPresent",
            "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773330197,
          "startTimestampDate": "2012-01-05T15:22:10.197",
          "executionTime": 16,
          "description": "id#testCorrectConfiguration(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330216,
          "startTimestampDate": "2012-01-05T15:22:10.216",
          "executionTime": 8,
          "description": "id#testBothStartsPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330226,
          "startTimestampDate": "2012-01-05T15:22:10.226",
          "executionTime": 4,
          "description": "id#testSearchTermsNotPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330231,
          "startTimestampDate": "2012-01-05T15:22:10.231",
          "executionTime": 4,
          "description": "id#testResultsPerPageNotSet(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330236,
          "startTimestampDate": "2012-01-05T15:22:10.236",
          "executionTime": 4,
          "description": "id#testNoStartPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testCorrectConfiguration(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCorrectConfiguration(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testBothStartsPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testBothStartsPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSearchTermsNotPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSearchTermsNotPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testResultsPerPageNotSet(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testResultsPerPageNotSet(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoStartPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoStartPresent(org.carrot2.source.opensearch.OpenSearchDocumentSourceTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773330246,
      "startTimestampDate": "2012-01-05T15:22:10.246",
      "executionTime": 232,
      "description": {
        "id": "id#org.carrot2.util.attribute.ConstraintTest[2]",
        "displayName": "org.carrot2.util.attribute.ConstraintTest",
        "className": "org.carrot2.util.attribute.ConstraintTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testNonStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)[0]",
            "displayName": "testNonStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)",
            "methodName": "testNonStrictImplementingClasses",
            "className": "org.carrot2.util.attribute.ConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testViolatedStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)[0]",
            "displayName": "testViolatedStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)",
            "methodName": "testViolatedStrictImplementingClasses",
            "className": "org.carrot2.util.attribute.ConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)[0]",
            "displayName": "testStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)",
            "methodName": "testStrictImplementingClasses",
            "className": "org.carrot2.util.attribute.ConstraintTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773330386,
          "startTimestampDate": "2012-01-05T15:22:10.386",
          "executionTime": 9,
          "description": "id#testNonStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330463,
          "startTimestampDate": "2012-01-05T15:22:10.463",
          "executionTime": 9,
          "description": "id#testViolatedStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330473,
          "startTimestampDate": "2012-01-05T15:22:10.473",
          "executionTime": 5,
          "description": "id#testStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testNonStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNonStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testViolatedStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testViolatedStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStrictImplementingClasses(org.carrot2.util.attribute.ConstraintTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773329119,
      "startTimestampDate": "2012-01-05T15:22:09.119",
      "executionTime": 118,
      "description": {
        "id": "id#org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest[2]",
        "displayName": "org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest",
        "className": "org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testMoreDocumentsMoreFieldsMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)[0]",
            "displayName": "testMoreDocumentsMoreFieldsMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
            "methodName": "testMoreDocumentsMoreFieldsMoreSentences",
            "className": "org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmpty(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)[0]",
            "displayName": "testEmpty(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOneDocumentOneFieldOneSentence(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)[0]",
            "displayName": "testOneDocumentOneFieldOneSentence(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
            "methodName": "testOneDocumentOneFieldOneSentence",
            "className": "org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOneDocumentOneFieldMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)[0]",
            "displayName": "testOneDocumentOneFieldMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
            "methodName": "testOneDocumentOneFieldMoreSentences",
            "className": "org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOneDocumentMoreFieldsMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)[0]",
            "displayName": "testOneDocumentMoreFieldsMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)",
            "methodName": "testOneDocumentMoreFieldsMoreSentences",
            "className": "org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773329124,
          "startTimestampDate": "2012-01-05T15:22:09.124",
          "executionTime": 14,
          "description": "id#testMoreDocumentsMoreFieldsMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773329139,
          "startTimestampDate": "2012-01-05T15:22:09.139",
          "executionTime": 7,
          "description": "id#testEmpty(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773329188,
          "startTimestampDate": "2012-01-05T15:22:09.188",
          "executionTime": 6,
          "description": "id#testOneDocumentOneFieldOneSentence(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773329197,
          "startTimestampDate": "2012-01-05T15:22:09.197",
          "executionTime": 10,
          "description": "id#testOneDocumentOneFieldMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773329209,
          "startTimestampDate": "2012-01-05T15:22:09.209",
          "executionTime": 27,
          "description": "id#testOneDocumentMoreFieldsMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testMoreDocumentsMoreFieldsMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMoreDocumentsMoreFieldsMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOneDocumentOneFieldOneSentence(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOneDocumentOneFieldOneSentence(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOneDocumentOneFieldMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOneDocumentOneFieldMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOneDocumentMoreFieldsMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOneDocumentMoreFieldsMoreSentences(org.carrot2.text.preprocessing.PreprocessedDocumentScannerTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773329243,
      "startTimestampDate": "2012-01-05T15:22:09.243",
      "executionTime": 1367,
      "description": {
        "id": "id#org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest[2]",
        "displayName": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testStress(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)[0]",
            "displayName": "testStress(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
            "methodName": "testStress",
            "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testClusteringWithDfThreshold(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)[0]",
            "displayName": "testClusteringWithDfThreshold(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
            "methodName": "testClusteringWithDfThreshold",
            "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMetadataAvailable(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)[0]",
            "displayName": "testMetadataAvailable(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
            "methodName": "testMetadataAvailable",
            "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testRepeatedClusteringWithCache(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)[0]",
            "displayName": "testRepeatedClusteringWithCache(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
            "methodName": "testRepeatedClusteringWithCache",
            "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testClusteringDataMining(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)[0]",
            "displayName": "testClusteringDataMining(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
            "methodName": "testClusteringDataMining",
            "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)[0]",
            "displayName": "testNoDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
            "methodName": "testNoDocuments",
            "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStemmingUsedWithDefaultAttributes(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)[0]",
            "displayName": "testStemmingUsedWithDefaultAttributes(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
            "methodName": "testStemmingUsedWithDefaultAttributes",
            "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmptyDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)[0]",
            "displayName": "testEmptyDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
            "methodName": "testEmptyDocuments",
            "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoLabelCandidates(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)[0]",
            "displayName": "testNoLabelCandidates(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
            "methodName": "testNoLabelCandidates",
            "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoRequiredDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)[0]",
            "displayName": "testNoRequiredDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)",
            "methodName": "testNoRequiredDocuments",
            "className": "org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773329248,
          "startTimestampDate": "2012-01-05T15:22:09.248",
          "executionTime": 1,
          "description": "id#testStress(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773329253,
          "startTimestampDate": "2012-01-05T15:22:09.253",
          "executionTime": 288,
          "description": "id#testClusteringWithDfThreshold(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773329542,
          "startTimestampDate": "2012-01-05T15:22:09.542",
          "executionTime": 28,
          "description": "id#testMetadataAvailable(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773329570,
          "startTimestampDate": "2012-01-05T15:22:09.570",
          "executionTime": 594,
          "description": "id#testRepeatedClusteringWithCache(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773330255,
          "startTimestampDate": "2012-01-05T15:22:10.255",
          "executionTime": 254,
          "description": "id#testClusteringDataMining(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773330510,
          "startTimestampDate": "2012-01-05T15:22:10.510",
          "executionTime": 34,
          "description": "id#testNoDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773330546,
          "startTimestampDate": "2012-01-05T15:22:10.546",
          "executionTime": 13,
          "description": "id#testStemmingUsedWithDefaultAttributes(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773330567,
          "startTimestampDate": "2012-01-05T15:22:10.567",
          "executionTime": 12,
          "description": "id#testEmptyDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773330580,
          "startTimestampDate": "2012-01-05T15:22:10.580",
          "executionTime": 14,
          "description": "id#testNoLabelCandidates(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773330595,
          "startTimestampDate": "2012-01-05T15:22:10.595",
          "executionTime": 14,
          "description": "id#testNoRequiredDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testStress(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStress(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testClusteringWithDfThreshold(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testClusteringWithDfThreshold(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMetadataAvailable(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMetadataAvailable(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testRepeatedClusteringWithCache(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRepeatedClusteringWithCache(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testClusteringDataMining(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testClusteringDataMining(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStemmingUsedWithDefaultAttributes(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStemmingUsedWithDefaultAttributes(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoLabelCandidates(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoLabelCandidates(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoRequiredDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoRequiredDocuments(org.carrot2.clustering.lingo.LingoClusteringAlgorithmTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773328871,
      "startTimestampDate": "2012-01-05T15:22:08.871",
      "executionTime": 37,
      "description": {
        "id": "id#org.carrot2.source.pubmed.PubMedDocumentSourceTest[2]",
        "displayName": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
        "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testLargeQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)[0]",
            "displayName": "testLargeQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
            "methodName": "testLargeQuery",
            "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInCachingController(org.carrot2.source.pubmed.PubMedDocumentSourceTest)[0]",
            "displayName": "testInCachingController(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
            "methodName": "testInCachingController",
            "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testURLsUnique(org.carrot2.source.pubmed.PubMedDocumentSourceTest)[0]",
            "displayName": "testURLsUnique(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
            "methodName": "testURLsUnique",
            "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMetadataAvailable(org.carrot2.source.pubmed.PubMedDocumentSourceTest)[0]",
            "displayName": "testMetadataAvailable(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
            "methodName": "testMetadataAvailable",
            "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoResultsQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)[0]",
            "displayName": "testNoResultsQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
            "methodName": "testNoResultsQuery",
            "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHtmlUnescaping(org.carrot2.source.pubmed.PubMedDocumentSourceTest)[0]",
            "displayName": "testHtmlUnescaping(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
            "methodName": "testHtmlUnescaping",
            "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSmallQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)[0]",
            "displayName": "testSmallQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
            "methodName": "testSmallQuery",
            "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testUtfCharacters(org.carrot2.source.pubmed.PubMedDocumentSourceTest)[0]",
            "displayName": "testUtfCharacters(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
            "methodName": "testUtfCharacters",
            "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testResultsTotal(org.carrot2.source.pubmed.PubMedDocumentSourceTest)[0]",
            "displayName": "testResultsTotal(org.carrot2.source.pubmed.PubMedDocumentSourceTest)",
            "methodName": "testResultsTotal",
            "className": "org.carrot2.source.pubmed.PubMedDocumentSourceTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773328878,
          "startTimestampDate": "2012-01-05T15:22:08.878",
          "executionTime": 1,
          "description": "id#testLargeQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328880,
          "startTimestampDate": "2012-01-05T15:22:08.880",
          "executionTime": 0,
          "description": "id#testInCachingController(org.carrot2.source.pubmed.PubMedDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328881,
          "startTimestampDate": "2012-01-05T15:22:08.881",
          "executionTime": 0,
          "description": "id#testURLsUnique(org.carrot2.source.pubmed.PubMedDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328882,
          "startTimestampDate": "2012-01-05T15:22:08.882",
          "executionTime": 21,
          "description": "id#testMetadataAvailable(org.carrot2.source.pubmed.PubMedDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328904,
          "startTimestampDate": "2012-01-05T15:22:08.904",
          "executionTime": 0,
          "description": "id#testNoResultsQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328905,
          "startTimestampDate": "2012-01-05T15:22:08.905",
          "executionTime": 0,
          "description": "id#testHtmlUnescaping(org.carrot2.source.pubmed.PubMedDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328906,
          "startTimestampDate": "2012-01-05T15:22:08.906",
          "executionTime": 0,
          "description": "id#testSmallQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328907,
          "startTimestampDate": "2012-01-05T15:22:08.907",
          "executionTime": 0,
          "description": "id#testUtfCharacters(org.carrot2.source.pubmed.PubMedDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773328908,
          "startTimestampDate": "2012-01-05T15:22:08.908",
          "executionTime": 0,
          "description": "id#testResultsTotal(org.carrot2.source.pubmed.PubMedDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testLargeQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLargeQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInCachingController(org.carrot2.source.pubmed.PubMedDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInCachingController(org.carrot2.source.pubmed.PubMedDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testURLsUnique(org.carrot2.source.pubmed.PubMedDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testURLsUnique(org.carrot2.source.pubmed.PubMedDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMetadataAvailable(org.carrot2.source.pubmed.PubMedDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMetadataAvailable(org.carrot2.source.pubmed.PubMedDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoResultsQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoResultsQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHtmlUnescaping(org.carrot2.source.pubmed.PubMedDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHtmlUnescaping(org.carrot2.source.pubmed.PubMedDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSmallQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSmallQuery(org.carrot2.source.pubmed.PubMedDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUtfCharacters(org.carrot2.source.pubmed.PubMedDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUtfCharacters(org.carrot2.source.pubmed.PubMedDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testResultsTotal(org.carrot2.source.pubmed.PubMedDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testResultsTotal(org.carrot2.source.pubmed.PubMedDocumentSourceTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773328912,
      "startTimestampDate": "2012-01-05T15:22:08.912",
      "executionTime": 1334,
      "description": {
        "id": "id#org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest[2]",
        "displayName": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
        "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#smokeTest(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)[0]",
            "displayName": "smokeTest(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
            "methodName": "smokeTest",
            "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMetadataAvailable(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)[0]",
            "displayName": "testMetadataAvailable(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
            "methodName": "testMetadataAvailable",
            "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmptyDocuments(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)[0]",
            "displayName": "testEmptyDocuments(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
            "methodName": "testEmptyDocuments",
            "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testRepeatedClusteringWithCache(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)[0]",
            "displayName": "testRepeatedClusteringWithCache(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
            "methodName": "testRepeatedClusteringWithCache",
            "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testClusteringDataMining(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)[0]",
            "displayName": "testClusteringDataMining(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
            "methodName": "testClusteringDataMining",
            "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoDocuments(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)[0]",
            "displayName": "testNoDocuments(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
            "methodName": "testNoDocuments",
            "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStress(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)[0]",
            "displayName": "testStress(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)",
            "methodName": "testStress",
            "className": "org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773328957,
          "startTimestampDate": "2012-01-05T15:22:08.957",
          "executionTime": 387,
          "description": "id#smokeTest(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773329347,
          "startTimestampDate": "2012-01-05T15:22:09.347",
          "executionTime": 11,
          "description": "id#testMetadataAvailable(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773329367,
          "startTimestampDate": "2012-01-05T15:22:09.367",
          "executionTime": 11,
          "description": "id#testEmptyDocuments(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773329379,
          "startTimestampDate": "2012-01-05T15:22:09.379",
          "executionTime": 613,
          "description": "id#testRepeatedClusteringWithCache(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773329995,
          "startTimestampDate": "2012-01-05T15:22:09.995",
          "executionTime": 237,
          "description": "id#testClusteringDataMining(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773330233,
          "startTimestampDate": "2012-01-05T15:22:10.233",
          "executionTime": 11,
          "description": "id#testNoDocuments(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773330245,
          "startTimestampDate": "2012-01-05T15:22:10.245",
          "executionTime": 0,
          "description": "id#testStress(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "smokeTest(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "smokeTest(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMetadataAvailable(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMetadataAvailable(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyDocuments(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyDocuments(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testRepeatedClusteringWithCache(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRepeatedClusteringWithCache(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testClusteringDataMining(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testClusteringDataMining(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoDocuments(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoDocuments(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStress(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStress(org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithmTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773330489,
      "startTimestampDate": "2012-01-05T15:22:10.489",
      "executionTime": 434,
      "description": {
        "id": "id#org.carrot2.util.attribute.AttributeBinderTest[2]",
        "displayName": "org.carrot2.util.attribute.AttributeBinderTest",
        "className": "org.carrot2.util.attribute.AttributeBinderTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testPrivateStaticAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testPrivateStaticAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testPrivateStaticAttributeClass",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPrefixing(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testPrefixing(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testPrefixing",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDuplicateInputKeysAtDifferentLevels(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testDuplicateInputKeysAtDifferentLevels(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testDuplicateInputKeysAtDifferentLevels",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCollectionInput(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testCollectionInput(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testCollectionInput",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testRequiredInputAttributeIsNull(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testRequiredInputAttributeIsNull(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testRequiredInputAttributeIsNull",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testReferenceOutput(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testReferenceOutput(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testReferenceOutput",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCircularReferences(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testCircularReferences(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testCircularReferences",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNullInputAttributes(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testNullInputAttributes(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testNullInputAttributes",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testBindableHierarchyInput(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testBindableHierarchyInput(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testBindableHierarchyInput",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNotBindable(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testNotBindable(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testNotBindable",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEnumInput(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testEnumInput(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testEnumInput",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDuplicateOutputKeysAtSameLevel(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testDuplicateOutputKeysAtSameLevel(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testDuplicateOutputKeysAtSameLevel",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNullReference(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testNullReference(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testNullReference",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNotBindableCoercedAttribute(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testNotBindableCoercedAttribute(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testNotBindableCoercedAttribute",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSingleClassOutput(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testSingleClassOutput(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testSingleClassOutput",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSimpleConstraints(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testSimpleConstraints(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testSimpleConstraints",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testClassCoercion(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testClassCoercion(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testClassCoercion",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testRequiredAttributeNullAttemptWithRequiredCheckingDisabled(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testRequiredAttributeNullAttemptWithRequiredCheckingDisabled(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testRequiredAttributeNullAttemptWithRequiredCheckingDisabled",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testRequiredInputAttributeNotProvided(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testRequiredInputAttributeNotProvided(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testRequiredInputAttributeNotProvided",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNonprimitiveOutputAttributeInputBinding(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testNonprimitiveOutputAttributeInputBinding(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testNonprimitiveOutputAttributeInputBinding",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTargetInvocationException(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testTargetInvocationException(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testTargetInvocationException",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testClassValuedAttribute(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testClassValuedAttribute(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testClassValuedAttribute",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSingleClassUnbind(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testSingleClassUnbind(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testSingleClassUnbind",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOnlyBindingDirectionAnnotationProvided(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testOnlyBindingDirectionAnnotationProvided(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testOnlyBindingDirectionAnnotationProvided",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testReferenceWithReferenceInstanceInAttributes(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testReferenceWithReferenceInstanceInAttributes(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testReferenceWithReferenceInstanceInAttributes",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testRequiredAttributeNullAttempt(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testRequiredAttributeNullAttempt(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testRequiredAttributeNullAttempt",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAttributeAnnotationWithoutBindingDirection(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testAttributeAnnotationWithoutBindingDirection(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testAttributeAnnotationWithoutBindingDirection",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCompoundConstraints(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testCompoundConstraints(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testCompoundConstraints",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testClassCoercionFromString(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testClassCoercionFromString(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testClassCoercionFromString",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPrivateNestedAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testPrivateNestedAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testPrivateNestedAttributeClass",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testRequiredAttributeAlreadyBound(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testRequiredAttributeAlreadyBound(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testRequiredAttributeAlreadyBound",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSingleClassInput(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testSingleClassInput(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testSingleClassInput",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOutputReferenceAttributeWithoutConstraint(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testOutputReferenceAttributeWithoutConstraint(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testOutputReferenceAttributeWithoutConstraint",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoPublicConstructorAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testNoPublicConstructorAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testNoPublicConstructorAttributeClass",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testRemainingAttributes(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testRemainingAttributes(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testRemainingAttributes",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDuplicateOutputKeysAtDifferentLevels(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testDuplicateOutputKeysAtDifferentLevels(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testDuplicateOutputKeysAtDifferentLevels",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInputReferenceAttributeWithoutConstraint(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testInputReferenceAttributeWithoutConstraint(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testInputReferenceAttributeWithoutConstraint",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testReferenceInput(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testReferenceInput(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testReferenceInput",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDuplicateInputKeysAtSameLevel(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testDuplicateInputKeysAtSameLevel(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testDuplicateInputKeysAtSameLevel",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testBindableHierarchyOutput(org.carrot2.util.attribute.AttributeBinderTest)[0]",
            "displayName": "testBindableHierarchyOutput(org.carrot2.util.attribute.AttributeBinderTest)",
            "methodName": "testBindableHierarchyOutput",
            "className": "org.carrot2.util.attribute.AttributeBinderTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773330603,
          "startTimestampDate": "2012-01-05T15:22:10.603",
          "executionTime": 16,
          "description": "id#testPrivateStaticAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330621,
          "startTimestampDate": "2012-01-05T15:22:10.621",
          "executionTime": 8,
          "description": "id#testPrefixing(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330630,
          "startTimestampDate": "2012-01-05T15:22:10.630",
          "executionTime": 8,
          "description": "id#testDuplicateInputKeysAtDifferentLevels(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330639,
          "startTimestampDate": "2012-01-05T15:22:10.639",
          "executionTime": 9,
          "description": "id#testCollectionInput(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330649,
          "startTimestampDate": "2012-01-05T15:22:10.649",
          "executionTime": 8,
          "description": "id#testRequiredInputAttributeIsNull(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330658,
          "startTimestampDate": "2012-01-05T15:22:10.658",
          "executionTime": 8,
          "description": "id#testReferenceOutput(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330667,
          "startTimestampDate": "2012-01-05T15:22:10.667",
          "executionTime": 7,
          "description": "id#testCircularReferences(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330675,
          "startTimestampDate": "2012-01-05T15:22:10.675",
          "executionTime": 8,
          "description": "id#testNullInputAttributes(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330684,
          "startTimestampDate": "2012-01-05T15:22:10.684",
          "executionTime": 9,
          "description": "id#testBindableHierarchyInput(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330693,
          "startTimestampDate": "2012-01-05T15:22:10.693",
          "executionTime": 6,
          "description": "id#testNotBindable(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330700,
          "startTimestampDate": "2012-01-05T15:22:10.700",
          "executionTime": 8,
          "description": "id#testEnumInput(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330709,
          "startTimestampDate": "2012-01-05T15:22:10.709",
          "executionTime": 7,
          "description": "id#testDuplicateOutputKeysAtSameLevel(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330716,
          "startTimestampDate": "2012-01-05T15:22:10.716",
          "executionTime": 6,
          "description": "id#testNullReference(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330722,
          "startTimestampDate": "2012-01-05T15:22:10.722",
          "executionTime": 5,
          "description": "id#testNotBindableCoercedAttribute(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330728,
          "startTimestampDate": "2012-01-05T15:22:10.728",
          "executionTime": 6,
          "description": "id#testSingleClassOutput(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330773,
          "startTimestampDate": "2012-01-05T15:22:10.773",
          "executionTime": 13,
          "description": "id#testSimpleConstraints(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330787,
          "startTimestampDate": "2012-01-05T15:22:10.787",
          "executionTime": 6,
          "description": "id#testClassCoercion(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330794,
          "startTimestampDate": "2012-01-05T15:22:10.794",
          "executionTime": 6,
          "description": "id#testRequiredAttributeNullAttemptWithRequiredCheckingDisabled(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330801,
          "startTimestampDate": "2012-01-05T15:22:10.801",
          "executionTime": 4,
          "description": "id#testRequiredInputAttributeNotProvided(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330806,
          "startTimestampDate": "2012-01-05T15:22:10.806",
          "executionTime": 4,
          "description": "id#testNonprimitiveOutputAttributeInputBinding(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330811,
          "startTimestampDate": "2012-01-05T15:22:10.811",
          "executionTime": 5,
          "description": "id#testTargetInvocationException(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330816,
          "startTimestampDate": "2012-01-05T15:22:10.816",
          "executionTime": 5,
          "description": "id#testClassValuedAttribute(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330822,
          "startTimestampDate": "2012-01-05T15:22:10.822",
          "executionTime": 5,
          "description": "id#testSingleClassUnbind(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330827,
          "startTimestampDate": "2012-01-05T15:22:10.827",
          "executionTime": 5,
          "description": "id#testOnlyBindingDirectionAnnotationProvided(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330833,
          "startTimestampDate": "2012-01-05T15:22:10.833",
          "executionTime": 4,
          "description": "id#testReferenceWithReferenceInstanceInAttributes(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330838,
          "startTimestampDate": "2012-01-05T15:22:10.838",
          "executionTime": 4,
          "description": "id#testRequiredAttributeNullAttempt(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330843,
          "startTimestampDate": "2012-01-05T15:22:10.843",
          "executionTime": 8,
          "description": "id#testAttributeAnnotationWithoutBindingDirection(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330852,
          "startTimestampDate": "2012-01-05T15:22:10.852",
          "executionTime": 9,
          "description": "id#testCompoundConstraints(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330861,
          "startTimestampDate": "2012-01-05T15:22:10.861",
          "executionTime": 6,
          "description": "id#testClassCoercionFromString(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330868,
          "startTimestampDate": "2012-01-05T15:22:10.868",
          "executionTime": 6,
          "description": "id#testPrivateNestedAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330874,
          "startTimestampDate": "2012-01-05T15:22:10.874",
          "executionTime": 5,
          "description": "id#testRequiredAttributeAlreadyBound(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330880,
          "startTimestampDate": "2012-01-05T15:22:10.880",
          "executionTime": 4,
          "description": "id#testSingleClassInput(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330884,
          "startTimestampDate": "2012-01-05T15:22:10.884",
          "executionTime": 5,
          "description": "id#testOutputReferenceAttributeWithoutConstraint(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330889,
          "startTimestampDate": "2012-01-05T15:22:10.889",
          "executionTime": 5,
          "description": "id#testNoPublicConstructorAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330894,
          "startTimestampDate": "2012-01-05T15:22:10.894",
          "executionTime": 5,
          "description": "id#testRemainingAttributes(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330900,
          "startTimestampDate": "2012-01-05T15:22:10.900",
          "executionTime": 3,
          "description": "id#testDuplicateOutputKeysAtDifferentLevels(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330904,
          "startTimestampDate": "2012-01-05T15:22:10.904",
          "executionTime": 5,
          "description": "id#testInputReferenceAttributeWithoutConstraint(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330910,
          "startTimestampDate": "2012-01-05T15:22:10.910",
          "executionTime": 3,
          "description": "id#testReferenceInput(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330914,
          "startTimestampDate": "2012-01-05T15:22:10.914",
          "executionTime": 3,
          "description": "id#testDuplicateInputKeysAtSameLevel(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330918,
          "startTimestampDate": "2012-01-05T15:22:10.918",
          "executionTime": 5,
          "description": "id#testBindableHierarchyOutput(org.carrot2.util.attribute.AttributeBinderTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testPrivateStaticAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPrivateStaticAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPrefixing(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPrefixing(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDuplicateInputKeysAtDifferentLevels(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDuplicateInputKeysAtDifferentLevels(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCollectionInput(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCollectionInput(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testRequiredInputAttributeIsNull(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRequiredInputAttributeIsNull(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testReferenceOutput(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testReferenceOutput(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCircularReferences(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCircularReferences(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNullInputAttributes(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNullInputAttributes(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testBindableHierarchyInput(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testBindableHierarchyInput(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNotBindable(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNotBindable(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEnumInput(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEnumInput(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDuplicateOutputKeysAtSameLevel(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDuplicateOutputKeysAtSameLevel(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNullReference(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNullReference(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNotBindableCoercedAttribute(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNotBindableCoercedAttribute(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSingleClassOutput(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSingleClassOutput(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSimpleConstraints(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSimpleConstraints(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testClassCoercion(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testClassCoercion(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testRequiredAttributeNullAttemptWithRequiredCheckingDisabled(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRequiredAttributeNullAttemptWithRequiredCheckingDisabled(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testRequiredInputAttributeNotProvided(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRequiredInputAttributeNotProvided(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNonprimitiveOutputAttributeInputBinding(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNonprimitiveOutputAttributeInputBinding(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTargetInvocationException(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTargetInvocationException(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testClassValuedAttribute(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testClassValuedAttribute(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSingleClassUnbind(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSingleClassUnbind(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOnlyBindingDirectionAnnotationProvided(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOnlyBindingDirectionAnnotationProvided(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testReferenceWithReferenceInstanceInAttributes(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testReferenceWithReferenceInstanceInAttributes(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testRequiredAttributeNullAttempt(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRequiredAttributeNullAttempt(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAttributeAnnotationWithoutBindingDirection(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAttributeAnnotationWithoutBindingDirection(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCompoundConstraints(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCompoundConstraints(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testClassCoercionFromString(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testClassCoercionFromString(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPrivateNestedAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPrivateNestedAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testRequiredAttributeAlreadyBound(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRequiredAttributeAlreadyBound(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSingleClassInput(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSingleClassInput(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOutputReferenceAttributeWithoutConstraint(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOutputReferenceAttributeWithoutConstraint(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoPublicConstructorAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoPublicConstructorAttributeClass(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testRemainingAttributes(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRemainingAttributes(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDuplicateOutputKeysAtDifferentLevels(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDuplicateOutputKeysAtDifferentLevels(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInputReferenceAttributeWithoutConstraint(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInputReferenceAttributeWithoutConstraint(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testReferenceInput(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testReferenceInput(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDuplicateInputKeysAtSameLevel(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDuplicateInputKeysAtSameLevel(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testBindableHierarchyOutput(org.carrot2.util.attribute.AttributeBinderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testBindableHierarchyOutput(org.carrot2.util.attribute.AttributeBinderTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773330250,
      "startTimestampDate": "2012-01-05T15:22:10.250",
      "executionTime": 266,
      "description": {
        "id": "id#org.carrot2.text.vsm.PhraseMatrixBuilderTest[2]",
        "displayName": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
        "className": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testSinglePhraseSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)[0]",
            "displayName": "testSinglePhraseSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
            "methodName": "testSinglePhraseSingleWords",
            "className": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoPhrases(org.carrot2.text.vsm.PhraseMatrixBuilderTest)[0]",
            "displayName": "testNoPhrases(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
            "methodName": "testNoPhrases",
            "className": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTwoPhrasesNoSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)[0]",
            "displayName": "testTwoPhrasesNoSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
            "methodName": "testTwoPhrasesNoSingleWords",
            "className": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSinglePhraseNoSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)[0]",
            "displayName": "testSinglePhraseNoSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
            "methodName": "testSinglePhraseNoSingleWords",
            "className": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmpty(org.carrot2.text.vsm.PhraseMatrixBuilderTest)[0]",
            "displayName": "testEmpty(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSinglePhraseWithStopWord(org.carrot2.text.vsm.PhraseMatrixBuilderTest)[0]",
            "displayName": "testSinglePhraseWithStopWord(org.carrot2.text.vsm.PhraseMatrixBuilderTest)",
            "methodName": "testSinglePhraseWithStopWord",
            "className": "org.carrot2.text.vsm.PhraseMatrixBuilderTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773330354,
          "startTimestampDate": "2012-01-05T15:22:10.354",
          "executionTime": 37,
          "description": "id#testSinglePhraseSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773330399,
          "startTimestampDate": "2012-01-05T15:22:10.399",
          "executionTime": 74,
          "description": "id#testNoPhrases(org.carrot2.text.vsm.PhraseMatrixBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773330474,
          "startTimestampDate": "2012-01-05T15:22:10.474",
          "executionTime": 6,
          "description": "id#testTwoPhrasesNoSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773330481,
          "startTimestampDate": "2012-01-05T15:22:10.481",
          "executionTime": 6,
          "description": "id#testSinglePhraseNoSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773330488,
          "startTimestampDate": "2012-01-05T15:22:10.488",
          "executionTime": 22,
          "description": "id#testEmpty(org.carrot2.text.vsm.PhraseMatrixBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773330511,
          "startTimestampDate": "2012-01-05T15:22:10.511",
          "executionTime": 5,
          "description": "id#testSinglePhraseWithStopWord(org.carrot2.text.vsm.PhraseMatrixBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testSinglePhraseSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSinglePhraseSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoPhrases(org.carrot2.text.vsm.PhraseMatrixBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoPhrases(org.carrot2.text.vsm.PhraseMatrixBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTwoPhrasesNoSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTwoPhrasesNoSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSinglePhraseNoSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSinglePhraseNoSingleWords(org.carrot2.text.vsm.PhraseMatrixBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.text.vsm.PhraseMatrixBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.text.vsm.PhraseMatrixBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSinglePhraseWithStopWord(org.carrot2.text.vsm.PhraseMatrixBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSinglePhraseWithStopWord(org.carrot2.text.vsm.PhraseMatrixBuilderTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773330525,
      "startTimestampDate": "2012-01-05T15:22:10.525",
      "executionTime": 632,
      "description": {
        "id": "id#org.carrot2.source.ambient.AmbientDocumentSourceTest[2]",
        "displayName": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
        "className": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testData(org.carrot2.source.ambient.AmbientDocumentSourceTest)[0]",
            "displayName": "testData(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
            "methodName": "testData",
            "className": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAllTopicsWithMinTopicSize(org.carrot2.source.ambient.AmbientDocumentSourceTest)[0]",
            "displayName": "testAllTopicsWithMinTopicSize(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
            "methodName": "testAllTopicsWithMinTopicSize",
            "className": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMetadataAvailable(org.carrot2.source.ambient.AmbientDocumentSourceTest)[0]",
            "displayName": "testMetadataAvailable(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
            "methodName": "testMetadataAvailable",
            "className": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAllTopicsWithoutDocumentsWithoutTopic(org.carrot2.source.ambient.AmbientDocumentSourceTest)[0]",
            "displayName": "testAllTopicsWithoutDocumentsWithoutTopic(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
            "methodName": "testAllTopicsWithoutDocumentsWithoutTopic",
            "className": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAllTopicsWithDocumentsWithoutTopic(org.carrot2.source.ambient.AmbientDocumentSourceTest)[0]",
            "displayName": "testAllTopicsWithDocumentsWithoutTopic(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
            "methodName": "testAllTopicsWithDocumentsWithoutTopic",
            "className": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testResultsNumber(org.carrot2.source.ambient.AmbientDocumentSourceTest)[0]",
            "displayName": "testResultsNumber(org.carrot2.source.ambient.AmbientDocumentSourceTest)",
            "methodName": "testResultsNumber",
            "className": "org.carrot2.source.ambient.AmbientDocumentSourceTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773330537,
          "startTimestampDate": "2012-01-05T15:22:10.537",
          "executionTime": 298,
          "description": "id#testData(org.carrot2.source.ambient.AmbientDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773330836,
          "startTimestampDate": "2012-01-05T15:22:10.836",
          "executionTime": 99,
          "description": "id#testAllTopicsWithMinTopicSize(org.carrot2.source.ambient.AmbientDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773330936,
          "startTimestampDate": "2012-01-05T15:22:10.936",
          "executionTime": 5,
          "description": "id#testMetadataAvailable(org.carrot2.source.ambient.AmbientDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773330968,
          "startTimestampDate": "2012-01-05T15:22:10.968",
          "executionTime": 81,
          "description": "id#testAllTopicsWithoutDocumentsWithoutTopic(org.carrot2.source.ambient.AmbientDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331049,
          "startTimestampDate": "2012-01-05T15:22:11.049",
          "executionTime": 75,
          "description": "id#testAllTopicsWithDocumentsWithoutTopic(org.carrot2.source.ambient.AmbientDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331129,
          "startTimestampDate": "2012-01-05T15:22:11.129",
          "executionTime": 28,
          "description": "id#testResultsNumber(org.carrot2.source.ambient.AmbientDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testData(org.carrot2.source.ambient.AmbientDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testData(org.carrot2.source.ambient.AmbientDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAllTopicsWithMinTopicSize(org.carrot2.source.ambient.AmbientDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAllTopicsWithMinTopicSize(org.carrot2.source.ambient.AmbientDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMetadataAvailable(org.carrot2.source.ambient.AmbientDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMetadataAvailable(org.carrot2.source.ambient.AmbientDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAllTopicsWithoutDocumentsWithoutTopic(org.carrot2.source.ambient.AmbientDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAllTopicsWithoutDocumentsWithoutTopic(org.carrot2.source.ambient.AmbientDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAllTopicsWithDocumentsWithoutTopic(org.carrot2.source.ambient.AmbientDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAllTopicsWithDocumentsWithoutTopic(org.carrot2.source.ambient.AmbientDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testResultsNumber(org.carrot2.source.ambient.AmbientDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testResultsNumber(org.carrot2.source.ambient.AmbientDocumentSourceTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773331163,
      "startTimestampDate": "2012-01-05T15:22:11.163",
      "executionTime": 112,
      "description": {
        "id": "id#org.carrot2.clustering.lingo.ClusterLabelBuilderTest[2]",
        "displayName": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
        "className": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testQueryWordsRemoval(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)[0]",
            "displayName": "testQueryWordsRemoval(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
            "methodName": "testQueryWordsRemoval",
            "className": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testExternalFeatureScores(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)[0]",
            "displayName": "testExternalFeatureScores(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
            "methodName": "testExternalFeatureScores",
            "className": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSinglePhraseSingleWords(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)[0]",
            "displayName": "testSinglePhraseSingleWords(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
            "methodName": "testSinglePhraseSingleWords",
            "className": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoPhrases(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)[0]",
            "displayName": "testNoPhrases(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
            "methodName": "testNoPhrases",
            "className": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmpty(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)[0]",
            "displayName": "testEmpty(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSinglePhraseNoSingleWords(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)[0]",
            "displayName": "testSinglePhraseNoSingleWords(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)",
            "methodName": "testSinglePhraseNoSingleWords",
            "className": "org.carrot2.clustering.lingo.ClusterLabelBuilderTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773331172,
          "startTimestampDate": "2012-01-05T15:22:11.172",
          "executionTime": 42,
          "description": "id#testQueryWordsRemoval(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331214,
          "startTimestampDate": "2012-01-05T15:22:11.214",
          "executionTime": 14,
          "description": "id#testExternalFeatureScores(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331243,
          "startTimestampDate": "2012-01-05T15:22:11.243",
          "executionTime": 10,
          "description": "id#testSinglePhraseSingleWords(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331255,
          "startTimestampDate": "2012-01-05T15:22:11.255",
          "executionTime": 5,
          "description": "id#testNoPhrases(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331261,
          "startTimestampDate": "2012-01-05T15:22:11.261",
          "executionTime": 7,
          "description": "id#testEmpty(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331269,
          "startTimestampDate": "2012-01-05T15:22:11.269",
          "executionTime": 5,
          "description": "id#testSinglePhraseNoSingleWords(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testQueryWordsRemoval(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testQueryWordsRemoval(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExternalFeatureScores(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExternalFeatureScores(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSinglePhraseSingleWords(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSinglePhraseSingleWords(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoPhrases(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoPhrases(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSinglePhraseNoSingleWords(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSinglePhraseNoSingleWords(org.carrot2.clustering.lingo.ClusterLabelBuilderTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773330928,
      "startTimestampDate": "2012-01-05T15:22:10.928",
      "executionTime": 217,
      "description": {
        "id": "id#org.carrot2.util.attribute.AttributeValueSetsTest[2]",
        "displayName": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testSerializationDeserializationOfBaseReferences(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
            "displayName": "testSerializationDeserializationOfBaseReferences(org.carrot2.util.attribute.AttributeValueSetsTest)",
            "methodName": "testSerializationDeserializationOfBaseReferences",
            "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSerializationDeserializationEnumValues(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
            "displayName": "testSerializationDeserializationEnumValues(org.carrot2.util.attribute.AttributeValueSetsTest)",
            "methodName": "testSerializationDeserializationEnumValues",
            "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSerializationDeserializationWithNoValues(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
            "displayName": "testSerializationDeserializationWithNoValues(org.carrot2.util.attribute.AttributeValueSetsTest)",
            "methodName": "testSerializationDeserializationWithNoValues",
            "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testRemovingAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
            "displayName": "testRemovingAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetsTest)",
            "methodName": "testRemovingAttributeValueSet",
            "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAttributeValueSetsBasedOn(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
            "displayName": "testAttributeValueSetsBasedOn(org.carrot2.util.attribute.AttributeValueSetsTest)",
            "methodName": "testAttributeValueSetsBasedOn",
            "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAddingWithExistingId(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
            "displayName": "testAddingWithExistingId(org.carrot2.util.attribute.AttributeValueSetsTest)",
            "methodName": "testAddingWithExistingId",
            "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSerializationDeserializationOfNullValue(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
            "displayName": "testSerializationDeserializationOfNullValue(org.carrot2.util.attribute.AttributeValueSetsTest)",
            "methodName": "testSerializationDeserializationOfNullValue",
            "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSerializationDeserializationOfPrimitiveValues(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
            "displayName": "testSerializationDeserializationOfPrimitiveValues(org.carrot2.util.attribute.AttributeValueSetsTest)",
            "methodName": "testSerializationDeserializationOfPrimitiveValues",
            "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testGetDefaultWithNoDefaultProvided(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
            "displayName": "testGetDefaultWithNoDefaultProvided(org.carrot2.util.attribute.AttributeValueSetsTest)",
            "methodName": "testGetDefaultWithNoDefaultProvided",
            "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSerializationDeserializationOfCustomClass(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
            "displayName": "testSerializationDeserializationOfCustomClass(org.carrot2.util.attribute.AttributeValueSetsTest)",
            "methodName": "testSerializationDeserializationOfCustomClass",
            "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testGetDefaultWithEmptyAttributeValueSets(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
            "displayName": "testGetDefaultWithEmptyAttributeValueSets(org.carrot2.util.attribute.AttributeValueSetsTest)",
            "methodName": "testGetDefaultWithEmptyAttributeValueSets",
            "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSerializationDeserializationOfEmpty(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
            "displayName": "testSerializationDeserializationOfEmpty(org.carrot2.util.attribute.AttributeValueSetsTest)",
            "methodName": "testSerializationDeserializationOfEmpty",
            "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testGetDefaultWithDefaultProvided(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
            "displayName": "testGetDefaultWithDefaultProvided(org.carrot2.util.attribute.AttributeValueSetsTest)",
            "methodName": "testGetDefaultWithDefaultProvided",
            "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSerializationDeserializationOfIllegalDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
            "displayName": "testSerializationDeserializationOfIllegalDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)",
            "methodName": "testSerializationDeserializationOfIllegalDefaultAttributeValueSetId",
            "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSerializationDeserializationOfDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
            "displayName": "testSerializationDeserializationOfDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)",
            "methodName": "testSerializationDeserializationOfDefaultAttributeValueSetId",
            "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testIllegalSetDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
            "displayName": "testIllegalSetDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)",
            "methodName": "testIllegalSetDefaultAttributeValueSetId",
            "className": "org.carrot2.util.attribute.AttributeValueSetsTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773330934,
          "startTimestampDate": "2012-01-05T15:22:10.934",
          "executionTime": 34,
          "description": "id#testSerializationDeserializationOfBaseReferences(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330969,
          "startTimestampDate": "2012-01-05T15:22:10.969",
          "executionTime": 13,
          "description": "id#testSerializationDeserializationEnumValues(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330983,
          "startTimestampDate": "2012-01-05T15:22:10.983",
          "executionTime": 7,
          "description": "id#testSerializationDeserializationWithNoValues(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330991,
          "startTimestampDate": "2012-01-05T15:22:10.991",
          "executionTime": 3,
          "description": "id#testRemovingAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330994,
          "startTimestampDate": "2012-01-05T15:22:10.994",
          "executionTime": 4,
          "description": "id#testAttributeValueSetsBasedOn(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773330998,
          "startTimestampDate": "2012-01-05T15:22:10.998",
          "executionTime": 4,
          "description": "id#testAddingWithExistingId(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331002,
          "startTimestampDate": "2012-01-05T15:22:11.002",
          "executionTime": 9,
          "description": "id#testSerializationDeserializationOfNullValue(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331011,
          "startTimestampDate": "2012-01-05T15:22:11.011",
          "executionTime": 7,
          "description": "id#testSerializationDeserializationOfPrimitiveValues(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331019,
          "startTimestampDate": "2012-01-05T15:22:11.019",
          "executionTime": 2,
          "description": "id#testGetDefaultWithNoDefaultProvided(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331022,
          "startTimestampDate": "2012-01-05T15:22:11.022",
          "executionTime": 11,
          "description": "id#testSerializationDeserializationOfCustomClass(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331034,
          "startTimestampDate": "2012-01-05T15:22:11.034",
          "executionTime": 3,
          "description": "id#testGetDefaultWithEmptyAttributeValueSets(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331037,
          "startTimestampDate": "2012-01-05T15:22:11.037",
          "executionTime": 5,
          "description": "id#testSerializationDeserializationOfEmpty(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331043,
          "startTimestampDate": "2012-01-05T15:22:11.043",
          "executionTime": 4,
          "description": "id#testGetDefaultWithDefaultProvided(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331049,
          "startTimestampDate": "2012-01-05T15:22:11.049",
          "executionTime": 11,
          "description": "id#testSerializationDeserializationOfIllegalDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331111,
          "startTimestampDate": "2012-01-05T15:22:11.111",
          "executionTime": 11,
          "description": "id#testSerializationDeserializationOfDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331132,
          "startTimestampDate": "2012-01-05T15:22:11.132",
          "executionTime": 13,
          "description": "id#testIllegalSetDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testSerializationDeserializationOfBaseReferences(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSerializationDeserializationOfBaseReferences(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSerializationDeserializationEnumValues(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSerializationDeserializationEnumValues(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSerializationDeserializationWithNoValues(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSerializationDeserializationWithNoValues(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testRemovingAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRemovingAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAttributeValueSetsBasedOn(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAttributeValueSetsBasedOn(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAddingWithExistingId(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAddingWithExistingId(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSerializationDeserializationOfNullValue(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSerializationDeserializationOfNullValue(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSerializationDeserializationOfPrimitiveValues(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSerializationDeserializationOfPrimitiveValues(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testGetDefaultWithNoDefaultProvided(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testGetDefaultWithNoDefaultProvided(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSerializationDeserializationOfCustomClass(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSerializationDeserializationOfCustomClass(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testGetDefaultWithEmptyAttributeValueSets(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testGetDefaultWithEmptyAttributeValueSets(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSerializationDeserializationOfEmpty(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSerializationDeserializationOfEmpty(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testGetDefaultWithDefaultProvided(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testGetDefaultWithDefaultProvided(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSerializationDeserializationOfIllegalDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSerializationDeserializationOfIllegalDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSerializationDeserializationOfDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSerializationDeserializationOfDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testIllegalSetDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIllegalSetDefaultAttributeValueSetId(org.carrot2.util.attribute.AttributeValueSetsTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773331149,
      "startTimestampDate": "2012-01-05T15:22:11.149",
      "executionTime": 195,
      "description": {
        "id": "id#org.carrot2.text.preprocessing.DocumentAssignerTest[2]",
        "displayName": "org.carrot2.text.preprocessing.DocumentAssignerTest",
        "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testStemmedPhraseLabelConflation(org.carrot2.text.preprocessing.DocumentAssignerTest)[0]",
            "displayName": "testStemmedPhraseLabelConflation(org.carrot2.text.preprocessing.DocumentAssignerTest)",
            "methodName": "testStemmedPhraseLabelConflation",
            "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSingleWordLabels(org.carrot2.text.preprocessing.DocumentAssignerTest)[0]",
            "displayName": "testSingleWordLabels(org.carrot2.text.preprocessing.DocumentAssignerTest)",
            "methodName": "testSingleWordLabels",
            "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmpty(org.carrot2.text.preprocessing.DocumentAssignerTest)[0]",
            "displayName": "testEmpty(org.carrot2.text.preprocessing.DocumentAssignerTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPhraseLabelsNonExactMatch(org.carrot2.text.preprocessing.DocumentAssignerTest)[0]",
            "displayName": "testPhraseLabelsNonExactMatch(org.carrot2.text.preprocessing.DocumentAssignerTest)",
            "methodName": "testPhraseLabelsNonExactMatch",
            "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPhraseLabelsNonExactMatchOtherLabels(org.carrot2.text.preprocessing.DocumentAssignerTest)[0]",
            "displayName": "testPhraseLabelsNonExactMatchOtherLabels(org.carrot2.text.preprocessing.DocumentAssignerTest)",
            "methodName": "testPhraseLabelsNonExactMatchOtherLabels",
            "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStemmedSingleWordLabelConflation(org.carrot2.text.preprocessing.DocumentAssignerTest)[0]",
            "displayName": "testStemmedSingleWordLabelConflation(org.carrot2.text.preprocessing.DocumentAssignerTest)",
            "methodName": "testStemmedSingleWordLabelConflation",
            "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMinClusterSize(org.carrot2.text.preprocessing.DocumentAssignerTest)[0]",
            "displayName": "testMinClusterSize(org.carrot2.text.preprocessing.DocumentAssignerTest)",
            "methodName": "testMinClusterSize",
            "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPhraseLabelsExactMatch(org.carrot2.text.preprocessing.DocumentAssignerTest)[0]",
            "displayName": "testPhraseLabelsExactMatch(org.carrot2.text.preprocessing.DocumentAssignerTest)",
            "methodName": "testPhraseLabelsExactMatch",
            "className": "org.carrot2.text.preprocessing.DocumentAssignerTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773331157,
          "startTimestampDate": "2012-01-05T15:22:11.157",
          "executionTime": 44,
          "description": "id#testStemmedPhraseLabelConflation(org.carrot2.text.preprocessing.DocumentAssignerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331204,
          "startTimestampDate": "2012-01-05T15:22:11.204",
          "executionTime": 25,
          "description": "id#testSingleWordLabels(org.carrot2.text.preprocessing.DocumentAssignerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331230,
          "startTimestampDate": "2012-01-05T15:22:11.230",
          "executionTime": 7,
          "description": "id#testEmpty(org.carrot2.text.preprocessing.DocumentAssignerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331262,
          "startTimestampDate": "2012-01-05T15:22:11.262",
          "executionTime": 6,
          "description": "id#testPhraseLabelsNonExactMatch(org.carrot2.text.preprocessing.DocumentAssignerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331269,
          "startTimestampDate": "2012-01-05T15:22:11.269",
          "executionTime": 14,
          "description": "id#testPhraseLabelsNonExactMatchOtherLabels(org.carrot2.text.preprocessing.DocumentAssignerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331284,
          "startTimestampDate": "2012-01-05T15:22:11.284",
          "executionTime": 17,
          "description": "id#testStemmedSingleWordLabelConflation(org.carrot2.text.preprocessing.DocumentAssignerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331302,
          "startTimestampDate": "2012-01-05T15:22:11.302",
          "executionTime": 35,
          "description": "id#testMinClusterSize(org.carrot2.text.preprocessing.DocumentAssignerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331338,
          "startTimestampDate": "2012-01-05T15:22:11.338",
          "executionTime": 6,
          "description": "id#testPhraseLabelsExactMatch(org.carrot2.text.preprocessing.DocumentAssignerTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testStemmedPhraseLabelConflation(org.carrot2.text.preprocessing.DocumentAssignerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStemmedPhraseLabelConflation(org.carrot2.text.preprocessing.DocumentAssignerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSingleWordLabels(org.carrot2.text.preprocessing.DocumentAssignerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSingleWordLabels(org.carrot2.text.preprocessing.DocumentAssignerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.text.preprocessing.DocumentAssignerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.text.preprocessing.DocumentAssignerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPhraseLabelsNonExactMatch(org.carrot2.text.preprocessing.DocumentAssignerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPhraseLabelsNonExactMatch(org.carrot2.text.preprocessing.DocumentAssignerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPhraseLabelsNonExactMatchOtherLabels(org.carrot2.text.preprocessing.DocumentAssignerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPhraseLabelsNonExactMatchOtherLabels(org.carrot2.text.preprocessing.DocumentAssignerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStemmedSingleWordLabelConflation(org.carrot2.text.preprocessing.DocumentAssignerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStemmedSingleWordLabelConflation(org.carrot2.text.preprocessing.DocumentAssignerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMinClusterSize(org.carrot2.text.preprocessing.DocumentAssignerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMinClusterSize(org.carrot2.text.preprocessing.DocumentAssignerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPhraseLabelsExactMatch(org.carrot2.text.preprocessing.DocumentAssignerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPhraseLabelsExactMatch(org.carrot2.text.preprocessing.DocumentAssignerTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773331277,
      "startTimestampDate": "2012-01-05T15:22:11.277",
      "executionTime": 23,
      "description": {
        "id": "id#org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest[3]",
        "displayName": "org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest",
        "className": "org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          },
          {
            "org.carrot2.util.tests.UsesExternalServices": {}
          }
        ],
        "children": [
          {
            "id": "id#testMetadataAvailable(org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest)[0]",
            "displayName": "testMetadataAvailable(org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest)",
            "methodName": "testMetadataAvailable",
            "className": "org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPresidentQuery(org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest)[0]",
            "displayName": "testPresidentQuery(org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest)",
            "methodName": "testPresidentQuery",
            "className": "org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773331283,
          "startTimestampDate": "2012-01-05T15:22:11.283",
          "executionTime": 0,
          "description": "id#testMetadataAvailable(org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331284,
          "startTimestampDate": "2012-01-05T15:22:11.284",
          "executionTime": 16,
          "description": "id#testPresidentQuery(org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testMetadataAvailable(org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMetadataAvailable(org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPresidentQuery(org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPresidentQuery(org.carrot2.source.microsoft.Bing2NewsDocumentSourceTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773331318,
      "startTimestampDate": "2012-01-05T15:22:11.318",
      "executionTime": 186,
      "description": {
        "id": "id#org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest[2]",
        "displayName": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
        "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testWithinRange(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)[0]",
            "displayName": "testWithinRange(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
            "methodName": "testWithinRange",
            "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOtherAssignableTypes(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)[0]",
            "displayName": "testOtherAssignableTypes(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
            "methodName": "testOtherAssignableTypes",
            "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testGreaterThanMax(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)[0]",
            "displayName": "testGreaterThanMax(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
            "methodName": "testGreaterThanMax",
            "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNull(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)[0]",
            "displayName": "testNull(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
            "methodName": "testNull",
            "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMinBound(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)[0]",
            "displayName": "testMinBound(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
            "methodName": "testMinBound",
            "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInvalidType(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)[0]",
            "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
            "methodName": "testInvalidType",
            "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLessThanMin(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)[0]",
            "displayName": "testLessThanMin(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
            "methodName": "testLessThanMin",
            "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMaxBound(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)[0]",
            "displayName": "testMaxBound(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)",
            "methodName": "testMaxBound",
            "className": "org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773331350,
          "startTimestampDate": "2012-01-05T15:22:11.350",
          "executionTime": 16,
          "description": "id#testWithinRange(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331381,
          "startTimestampDate": "2012-01-05T15:22:11.381",
          "executionTime": 9,
          "description": "id#testOtherAssignableTypes(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331391,
          "startTimestampDate": "2012-01-05T15:22:11.391",
          "executionTime": 6,
          "description": "id#testGreaterThanMax(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331398,
          "startTimestampDate": "2012-01-05T15:22:11.398",
          "executionTime": 5,
          "description": "id#testNull(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331411,
          "startTimestampDate": "2012-01-05T15:22:11.411",
          "executionTime": 10,
          "description": "id#testMinBound(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331422,
          "startTimestampDate": "2012-01-05T15:22:11.422",
          "executionTime": 7,
          "description": "id#testInvalidType(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331430,
          "startTimestampDate": "2012-01-05T15:22:11.430",
          "executionTime": 6,
          "description": "id#testLessThanMin(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331500,
          "startTimestampDate": "2012-01-05T15:22:11.500",
          "executionTime": 4,
          "description": "id#testMaxBound(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testWithinRange(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testWithinRange(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOtherAssignableTypes(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOtherAssignableTypes(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testGreaterThanMax(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testGreaterThanMax(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNull(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNull(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMinBound(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMinBound(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInvalidType(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInvalidType(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLessThanMin(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLessThanMin(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMaxBound(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMaxBound(org.carrot2.util.attribute.constraint.DoubleRangeConstraintTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773331350,
      "startTimestampDate": "2012-01-05T15:22:11.350",
      "executionTime": 226,
      "description": {
        "id": "id#org.carrot2.output.metrics.ContaminationMetricTest[2]",
        "displayName": "org.carrot2.output.metrics.ContaminationMetricTest",
        "className": "org.carrot2.output.metrics.ContaminationMetricTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
            "displayName": "testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.ContaminationMetricTest)",
            "methodName": "testHardPartitionsOverlappingClusters",
            "className": "org.carrot2.output.metrics.ContaminationMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFullyContaminatedCluster(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
            "displayName": "testFullyContaminatedCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
            "methodName": "testFullyContaminatedCluster",
            "className": "org.carrot2.output.metrics.ContaminationMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testIdealClustering(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
            "displayName": "testIdealClustering(org.carrot2.output.metrics.ContaminationMetricTest)",
            "methodName": "testIdealClustering",
            "className": "org.carrot2.output.metrics.ContaminationMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoPartitionInformation(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
            "displayName": "testNoPartitionInformation(org.carrot2.output.metrics.ContaminationMetricTest)",
            "methodName": "testNoPartitionInformation",
            "className": "org.carrot2.output.metrics.ContaminationMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAllDocumentsInOtherTopics(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
            "displayName": "testAllDocumentsInOtherTopics(org.carrot2.output.metrics.ContaminationMetricTest)",
            "methodName": "testAllDocumentsInOtherTopics",
            "className": "org.carrot2.output.metrics.ContaminationMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPureCluster(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
            "displayName": "testPureCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
            "methodName": "testPureCluster",
            "className": "org.carrot2.output.metrics.ContaminationMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmptyCluster(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
            "displayName": "testEmptyCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
            "methodName": "testEmptyCluster",
            "className": "org.carrot2.output.metrics.ContaminationMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTrivialCluster(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
            "displayName": "testTrivialCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
            "methodName": "testTrivialCluster",
            "className": "org.carrot2.output.metrics.ContaminationMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
            "displayName": "testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.ContaminationMetricTest)",
            "methodName": "testHardClustersWithOverlappingPartitions",
            "className": "org.carrot2.output.metrics.ContaminationMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
            "displayName": "testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.ContaminationMetricTest)",
            "methodName": "testOverlappingPartitionsOverlappingClusters",
            "className": "org.carrot2.output.metrics.ContaminationMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPartiallyContaminatedCluster(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
            "displayName": "testPartiallyContaminatedCluster(org.carrot2.output.metrics.ContaminationMetricTest)",
            "methodName": "testPartiallyContaminatedCluster",
            "className": "org.carrot2.output.metrics.ContaminationMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testWorstCaseH(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
            "displayName": "testWorstCaseH(org.carrot2.output.metrics.ContaminationMetricTest)",
            "methodName": "testWorstCaseH",
            "className": "org.carrot2.output.metrics.ContaminationMetricTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773331370,
          "startTimestampDate": "2012-01-05T15:22:11.370",
          "executionTime": 48,
          "description": "id#testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331438,
          "startTimestampDate": "2012-01-05T15:22:11.438",
          "executionTime": 12,
          "description": "id#testFullyContaminatedCluster(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331451,
          "startTimestampDate": "2012-01-05T15:22:11.451",
          "executionTime": 8,
          "description": "id#testIdealClustering(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331460,
          "startTimestampDate": "2012-01-05T15:22:11.460",
          "executionTime": 39,
          "description": "id#testNoPartitionInformation(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331510,
          "startTimestampDate": "2012-01-05T15:22:11.510",
          "executionTime": 5,
          "description": "id#testAllDocumentsInOtherTopics(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331516,
          "startTimestampDate": "2012-01-05T15:22:11.516",
          "executionTime": 4,
          "description": "id#testPureCluster(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331533,
          "startTimestampDate": "2012-01-05T15:22:11.533",
          "executionTime": 5,
          "description": "id#testEmptyCluster(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331542,
          "startTimestampDate": "2012-01-05T15:22:11.542",
          "executionTime": 5,
          "description": "id#testTrivialCluster(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331548,
          "startTimestampDate": "2012-01-05T15:22:11.548",
          "executionTime": 7,
          "description": "id#testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331560,
          "startTimestampDate": "2012-01-05T15:22:11.560",
          "executionTime": 5,
          "description": "id#testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331565,
          "startTimestampDate": "2012-01-05T15:22:11.565",
          "executionTime": 6,
          "description": "id#testPartiallyContaminatedCluster(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331571,
          "startTimestampDate": "2012-01-05T15:22:11.571",
          "executionTime": 5,
          "description": "id#testWorstCaseH(org.carrot2.output.metrics.ContaminationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFullyContaminatedCluster(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFullyContaminatedCluster(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testIdealClustering(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIdealClustering(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoPartitionInformation(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoPartitionInformation(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAllDocumentsInOtherTopics(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAllDocumentsInOtherTopics(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPureCluster(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPureCluster(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyCluster(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyCluster(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTrivialCluster(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTrivialCluster(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPartiallyContaminatedCluster(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPartiallyContaminatedCluster(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testWorstCaseH(org.carrot2.output.metrics.ContaminationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testWorstCaseH(org.carrot2.output.metrics.ContaminationMetricTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773331507,
      "startTimestampDate": "2012-01-05T15:22:11.507",
      "executionTime": 34,
      "description": {
        "id": "id#org.carrot2.util.ExceptionUtilsTest[2]",
        "displayName": "org.carrot2.util.ExceptionUtilsTest",
        "className": "org.carrot2.util.ExceptionUtilsTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testNotWrappedAtAll(org.carrot2.util.ExceptionUtilsTest)[0]",
            "displayName": "testNotWrappedAtAll(org.carrot2.util.ExceptionUtilsTest)",
            "methodName": "testNotWrappedAtAll",
            "className": "org.carrot2.util.ExceptionUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoMatchingWrapperFound(org.carrot2.util.ExceptionUtilsTest)[0]",
            "displayName": "testNoMatchingWrapperFound(org.carrot2.util.ExceptionUtilsTest)",
            "methodName": "testNoMatchingWrapperFound",
            "className": "org.carrot2.util.ExceptionUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testWrappedWithStingConstructor(org.carrot2.util.ExceptionUtilsTest)[0]",
            "displayName": "testWrappedWithStingConstructor(org.carrot2.util.ExceptionUtilsTest)",
            "methodName": "testWrappedWithStingConstructor",
            "className": "org.carrot2.util.ExceptionUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testWrappedWithInitCause(org.carrot2.util.ExceptionUtilsTest)[0]",
            "displayName": "testWrappedWithInitCause(org.carrot2.util.ExceptionUtilsTest)",
            "methodName": "testWrappedWithInitCause",
            "className": "org.carrot2.util.ExceptionUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testWrappedWithConstructor(org.carrot2.util.ExceptionUtilsTest)[0]",
            "displayName": "testWrappedWithConstructor(org.carrot2.util.ExceptionUtilsTest)",
            "methodName": "testWrappedWithConstructor",
            "className": "org.carrot2.util.ExceptionUtilsTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773331511,
          "startTimestampDate": "2012-01-05T15:22:11.511",
          "executionTime": 5,
          "description": "id#testNotWrappedAtAll(org.carrot2.util.ExceptionUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331517,
          "startTimestampDate": "2012-01-05T15:22:11.517",
          "executionTime": 4,
          "description": "id#testNoMatchingWrapperFound(org.carrot2.util.ExceptionUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331523,
          "startTimestampDate": "2012-01-05T15:22:11.523",
          "executionTime": 5,
          "description": "id#testWrappedWithStingConstructor(org.carrot2.util.ExceptionUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331528,
          "startTimestampDate": "2012-01-05T15:22:11.528",
          "executionTime": 4,
          "description": "id#testWrappedWithInitCause(org.carrot2.util.ExceptionUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331534,
          "startTimestampDate": "2012-01-05T15:22:11.534",
          "executionTime": 6,
          "description": "id#testWrappedWithConstructor(org.carrot2.util.ExceptionUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testNotWrappedAtAll(org.carrot2.util.ExceptionUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNotWrappedAtAll(org.carrot2.util.ExceptionUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoMatchingWrapperFound(org.carrot2.util.ExceptionUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoMatchingWrapperFound(org.carrot2.util.ExceptionUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testWrappedWithStingConstructor(org.carrot2.util.ExceptionUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testWrappedWithStingConstructor(org.carrot2.util.ExceptionUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testWrappedWithInitCause(org.carrot2.util.ExceptionUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testWrappedWithInitCause(org.carrot2.util.ExceptionUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testWrappedWithConstructor(org.carrot2.util.ExceptionUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testWrappedWithConstructor(org.carrot2.util.ExceptionUtilsTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773331584,
      "startTimestampDate": "2012-01-05T15:22:11.584",
      "executionTime": 80,
      "description": {
        "id": "id#org.carrot2.source.microsoft.Bing2WebDocumentSourceTest[3]",
        "displayName": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
        "annotations": [
          {
            "org.carrot2.util.tests.UsesExternalServices": {}
          },
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testURLsUnique(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
            "displayName": "testURLsUnique(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
            "methodName": "testURLsUnique",
            "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testUtfCharacters(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
            "displayName": "testUtfCharacters(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
            "methodName": "testUtfCharacters",
            "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFileTypeOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
            "displayName": "testFileTypeOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
            "methodName": "testFileTypeOption",
            "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testResultsTotal(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
            "displayName": "testResultsTotal(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
            "methodName": "testResultsTotal",
            "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSpeculativeMode(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
            "displayName": "testSpeculativeMode(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
            "methodName": "testSpeculativeMode",
            "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMetadataAvailable(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
            "displayName": "testMetadataAvailable(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
            "methodName": "testMetadataAvailable",
            "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testQueryLargerThanPage(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
            "displayName": "testQueryLargerThanPage(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
            "methodName": "testQueryLargerThanPage",
            "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSmallQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
            "displayName": "testSmallQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
            "methodName": "testSmallQuery",
            "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testConservativeMode(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
            "displayName": "testConservativeMode(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
            "methodName": "testConservativeMode",
            "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoResultsQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
            "displayName": "testNoResultsQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
            "methodName": "testNoResultsQuery",
            "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSiteOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
            "displayName": "testSiteOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
            "methodName": "testSiteOption",
            "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHtmlUnescaping(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
            "displayName": "testHtmlUnescaping(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
            "methodName": "testHtmlUnescaping",
            "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMarketOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
            "displayName": "testMarketOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
            "methodName": "testMarketOption",
            "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLargeQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
            "displayName": "testLargeQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
            "methodName": "testLargeQuery",
            "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInCachingController(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
            "displayName": "testInCachingController(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)",
            "methodName": "testInCachingController",
            "className": "org.carrot2.source.microsoft.Bing2WebDocumentSourceTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773331590,
          "startTimestampDate": "2012-01-05T15:22:11.590",
          "executionTime": 0,
          "description": "id#testURLsUnique(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331591,
          "startTimestampDate": "2012-01-05T15:22:11.591",
          "executionTime": 0,
          "description": "id#testUtfCharacters(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331592,
          "startTimestampDate": "2012-01-05T15:22:11.592",
          "executionTime": 0,
          "description": "id#testFileTypeOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331593,
          "startTimestampDate": "2012-01-05T15:22:11.593",
          "executionTime": 0,
          "description": "id#testResultsTotal(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331594,
          "startTimestampDate": "2012-01-05T15:22:11.594",
          "executionTime": 1,
          "description": "id#testSpeculativeMode(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331595,
          "startTimestampDate": "2012-01-05T15:22:11.595",
          "executionTime": 1,
          "description": "id#testMetadataAvailable(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331597,
          "startTimestampDate": "2012-01-05T15:22:11.597",
          "executionTime": 0,
          "description": "id#testQueryLargerThanPage(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331597,
          "startTimestampDate": "2012-01-05T15:22:11.597",
          "executionTime": 1,
          "description": "id#testSmallQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331598,
          "startTimestampDate": "2012-01-05T15:22:11.598",
          "executionTime": 0,
          "description": "id#testConservativeMode(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331599,
          "startTimestampDate": "2012-01-05T15:22:11.599",
          "executionTime": 0,
          "description": "id#testNoResultsQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331600,
          "startTimestampDate": "2012-01-05T15:22:11.600",
          "executionTime": 0,
          "description": "id#testSiteOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331600,
          "startTimestampDate": "2012-01-05T15:22:11.600",
          "executionTime": 1,
          "description": "id#testHtmlUnescaping(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331601,
          "startTimestampDate": "2012-01-05T15:22:11.601",
          "executionTime": 50,
          "description": "id#testMarketOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331659,
          "startTimestampDate": "2012-01-05T15:22:11.659",
          "executionTime": 1,
          "description": "id#testLargeQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331663,
          "startTimestampDate": "2012-01-05T15:22:11.663",
          "executionTime": 0,
          "description": "id#testInCachingController(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testURLsUnique(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testURLsUnique(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUtfCharacters(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUtfCharacters(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFileTypeOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFileTypeOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testResultsTotal(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testResultsTotal(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSpeculativeMode(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSpeculativeMode(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMetadataAvailable(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMetadataAvailable(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testQueryLargerThanPage(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testQueryLargerThanPage(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSmallQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSmallQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testConservativeMode(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testConservativeMode(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoResultsQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoResultsQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSiteOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSiteOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHtmlUnescaping(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHtmlUnescaping(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMarketOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMarketOption(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLargeQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLargeQuery(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInCachingController(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInCachingController(org.carrot2.source.microsoft.Bing2WebDocumentSourceTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773331667,
      "startTimestampDate": "2012-01-05T15:22:11.667",
      "executionTime": 51,
      "description": {
        "id": "id#org.carrot2.util.attribute.constraint.NotBlankConstraintTest[2]",
        "displayName": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
        "className": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testValidCharSequence(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)[0]",
            "displayName": "testValidCharSequence(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
            "methodName": "testValidCharSequence",
            "className": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInvalidString(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)[0]",
            "displayName": "testInvalidString(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
            "methodName": "testInvalidString",
            "className": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInvalidType(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)[0]",
            "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
            "methodName": "testInvalidType",
            "className": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNull(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)[0]",
            "displayName": "testNull(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
            "methodName": "testNull",
            "className": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInvalidCharSequence(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)[0]",
            "displayName": "testInvalidCharSequence(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
            "methodName": "testInvalidCharSequence",
            "className": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testValidString(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)[0]",
            "displayName": "testValidString(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)",
            "methodName": "testValidString",
            "className": "org.carrot2.util.attribute.constraint.NotBlankConstraintTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773331675,
          "startTimestampDate": "2012-01-05T15:22:11.675",
          "executionTime": 9,
          "description": "id#testValidCharSequence(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331685,
          "startTimestampDate": "2012-01-05T15:22:11.685",
          "executionTime": 8,
          "description": "id#testInvalidString(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331695,
          "startTimestampDate": "2012-01-05T15:22:11.695",
          "executionTime": 7,
          "description": "id#testInvalidType(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331702,
          "startTimestampDate": "2012-01-05T15:22:11.702",
          "executionTime": 4,
          "description": "id#testNull(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331707,
          "startTimestampDate": "2012-01-05T15:22:11.707",
          "executionTime": 6,
          "description": "id#testInvalidCharSequence(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331714,
          "startTimestampDate": "2012-01-05T15:22:11.714",
          "executionTime": 4,
          "description": "id#testValidString(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testValidCharSequence(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testValidCharSequence(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInvalidString(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInvalidString(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInvalidType(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInvalidType(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNull(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNull(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInvalidCharSequence(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInvalidCharSequence(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testValidString(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testValidString(org.carrot2.util.attribute.constraint.NotBlankConstraintTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773330614,
      "startTimestampDate": "2012-01-05T15:22:10.614",
      "executionTime": 88,
      "description": {
        "id": "id#org.carrot2.util.attribute.AttributeTransformerFromStringTest[2]",
        "displayName": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testStringNotAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
            "displayName": "testStringNotAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
            "methodName": "testStringNotAssignable",
            "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testExistingValueOfInteger(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
            "displayName": "testExistingValueOfInteger(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
            "methodName": "testExistingValueOfInteger",
            "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStringField(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
            "displayName": "testStringField(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
            "methodName": "testStringField",
            "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNonLoadableClass(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
            "displayName": "testNonLoadableClass(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
            "methodName": "testNonLoadableClass",
            "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLoadableClass(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
            "displayName": "testLoadableClass(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
            "methodName": "testLoadableClass",
            "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStringStrictlyAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
            "displayName": "testStringStrictlyAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
            "methodName": "testStringStrictlyAssignable",
            "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFileResourceUrlWithParameters(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
            "displayName": "testFileResourceUrlWithParameters(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
            "methodName": "testFileResourceUrlWithParameters",
            "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStringNonStrictlyAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
            "displayName": "testStringNonStrictlyAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
            "methodName": "testStringNonStrictlyAssignable",
            "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFileResourceFile(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
            "displayName": "testFileResourceFile(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
            "methodName": "testFileResourceFile",
            "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testExistingValueOfEnum(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
            "displayName": "testExistingValueOfEnum(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
            "methodName": "testExistingValueOfEnum",
            "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNonStringValue(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
            "displayName": "testNonStringValue(org.carrot2.util.attribute.AttributeTransformerFromStringTest)",
            "methodName": "testNonStringValue",
            "className": "org.carrot2.util.attribute.AttributeTransformerFromStringTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773330623,
          "startTimestampDate": "2012-01-05T15:22:10.623",
          "executionTime": 10,
          "description": "id#testStringNotAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773330635,
          "startTimestampDate": "2012-01-05T15:22:10.635",
          "executionTime": 6,
          "description": "id#testExistingValueOfInteger(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773330641,
          "startTimestampDate": "2012-01-05T15:22:10.641",
          "executionTime": 6,
          "description": "id#testStringField(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773330648,
          "startTimestampDate": "2012-01-05T15:22:10.648",
          "executionTime": 8,
          "description": "id#testNonLoadableClass(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773330657,
          "startTimestampDate": "2012-01-05T15:22:10.657",
          "executionTime": 6,
          "description": "id#testLoadableClass(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773330664,
          "startTimestampDate": "2012-01-05T15:22:10.664",
          "executionTime": 6,
          "description": "id#testStringStrictlyAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773330671,
          "startTimestampDate": "2012-01-05T15:22:10.671",
          "executionTime": 6,
          "description": "id#testFileResourceUrlWithParameters(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773330678,
          "startTimestampDate": "2012-01-05T15:22:10.678",
          "executionTime": 7,
          "description": "id#testStringNonStrictlyAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773330686,
          "startTimestampDate": "2012-01-05T15:22:10.686",
          "executionTime": 6,
          "description": "id#testFileResourceFile(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773330692,
          "startTimestampDate": "2012-01-05T15:22:10.692",
          "executionTime": 5,
          "description": "id#testExistingValueOfEnum(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773330697,
          "startTimestampDate": "2012-01-05T15:22:10.697",
          "executionTime": 5,
          "description": "id#testNonStringValue(org.carrot2.util.attribute.AttributeTransformerFromStringTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testStringNotAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStringNotAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExistingValueOfInteger(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExistingValueOfInteger(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStringField(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStringField(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNonLoadableClass(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "2012-01-05 15:22:10,651 WARN  org.carrot2.util.ReflectionUtils: Could not load class: xorg.carrot2.util.attribute.AttributeTransformerFromStringTest (xorg.carrot2.util.attribute.AttributeTransformerFromStringTest).\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNonLoadableClass(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLoadableClass(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLoadableClass(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStringStrictlyAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStringStrictlyAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFileResourceUrlWithParameters(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFileResourceUrlWithParameters(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStringNonStrictlyAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStringNonStrictlyAssignable(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFileResourceFile(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFileResourceFile(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExistingValueOfEnum(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExistingValueOfEnum(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNonStringValue(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNonStringValue(org.carrot2.util.attribute.AttributeTransformerFromStringTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773330708,
      "startTimestampDate": "2012-01-05T15:22:10.708",
      "executionTime": 4,
      "description": {
        "id": "id#org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest[3]",
        "displayName": "org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest",
        "className": "org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.carrot2.util.tests.UsesExternalServices": {}
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testMetadataAvailable(org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest)[0]",
            "displayName": "testMetadataAvailable(org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest)",
            "methodName": "testMetadataAvailable",
            "className": "org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCatsQuery(org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest)[0]",
            "displayName": "testCatsQuery(org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest)",
            "methodName": "testCatsQuery",
            "className": "org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773330711,
          "startTimestampDate": "2012-01-05T15:22:10.711",
          "executionTime": 0,
          "description": "id#testMetadataAvailable(org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773330712,
          "startTimestampDate": "2012-01-05T15:22:10.712",
          "executionTime": 0,
          "description": "id#testCatsQuery(org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testMetadataAvailable(org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMetadataAvailable(org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCatsQuery(org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCatsQuery(org.carrot2.source.microsoft.Bing2ImageDocumentSourceTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773330715,
      "startTimestampDate": "2012-01-05T15:22:10.715",
      "executionTime": 1921,
      "description": {
        "id": "id#org.carrot2.core.ComponentSuitesTest[2]",
        "displayName": "org.carrot2.core.ComponentSuitesTest",
        "className": "org.carrot2.core.ComponentSuitesTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testIncludes(org.carrot2.core.ComponentSuitesTest)[0]",
            "displayName": "testIncludes(org.carrot2.core.ComponentSuitesTest)",
            "methodName": "testIncludes",
            "className": "org.carrot2.core.ComponentSuitesTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCarrot2DefaultComponentSuite(org.carrot2.core.ComponentSuitesTest)[0]",
            "displayName": "testCarrot2DefaultComponentSuite(org.carrot2.core.ComponentSuitesTest)",
            "methodName": "testCarrot2DefaultComponentSuite",
            "className": "org.carrot2.core.ComponentSuitesTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773330744,
          "startTimestampDate": "2012-01-05T15:22:10.744",
          "executionTime": 118,
          "description": "id#testIncludes(org.carrot2.core.ComponentSuitesTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773330863,
          "startTimestampDate": "2012-01-05T15:22:10.863",
          "executionTime": 1773,
          "description": "id#testCarrot2DefaultComponentSuite(org.carrot2.core.ComponentSuitesTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testIncludes(org.carrot2.core.ComponentSuitesTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIncludes(org.carrot2.core.ComponentSuitesTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCarrot2DefaultComponentSuite(org.carrot2.core.ComponentSuitesTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCarrot2DefaultComponentSuite(org.carrot2.core.ComponentSuitesTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773332639,
      "startTimestampDate": "2012-01-05T15:22:12.639",
      "executionTime": 45,
      "description": {
        "id": "id#org.carrot2.text.linguistic.DefaultStemmerFactoryTest[2]",
        "displayName": "org.carrot2.text.linguistic.DefaultStemmerFactoryTest",
        "className": "org.carrot2.text.linguistic.DefaultStemmerFactoryTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testPolishHasMorfologikStemmer(org.carrot2.text.linguistic.DefaultStemmerFactoryTest)[0]",
            "displayName": "testPolishHasMorfologikStemmer(org.carrot2.text.linguistic.DefaultStemmerFactoryTest)",
            "methodName": "testPolishHasMorfologikStemmer",
            "className": "org.carrot2.text.linguistic.DefaultStemmerFactoryTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEnglishHasSnowballStemmer(org.carrot2.text.linguistic.DefaultStemmerFactoryTest)[0]",
            "displayName": "testEnglishHasSnowballStemmer(org.carrot2.text.linguistic.DefaultStemmerFactoryTest)",
            "methodName": "testEnglishHasSnowballStemmer",
            "className": "org.carrot2.text.linguistic.DefaultStemmerFactoryTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773332641,
          "startTimestampDate": "2012-01-05T15:22:12.641",
          "executionTime": 39,
          "description": "id#testPolishHasMorfologikStemmer(org.carrot2.text.linguistic.DefaultStemmerFactoryTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773332681,
          "startTimestampDate": "2012-01-05T15:22:12.681",
          "executionTime": 3,
          "description": "id#testEnglishHasSnowballStemmer(org.carrot2.text.linguistic.DefaultStemmerFactoryTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testPolishHasMorfologikStemmer(org.carrot2.text.linguistic.DefaultStemmerFactoryTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPolishHasMorfologikStemmer(org.carrot2.text.linguistic.DefaultStemmerFactoryTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEnglishHasSnowballStemmer(org.carrot2.text.linguistic.DefaultStemmerFactoryTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEnglishHasSnowballStemmer(org.carrot2.text.linguistic.DefaultStemmerFactoryTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773332687,
      "startTimestampDate": "2012-01-05T15:22:12.687",
      "executionTime": 22,
      "description": {
        "id": "id#org.carrot2.util.attribute.constraint.ValueHintConstraintTest[2]",
        "displayName": "org.carrot2.util.attribute.constraint.ValueHintConstraintTest",
        "className": "org.carrot2.util.attribute.constraint.ValueHintConstraintTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testHintValue(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)[0]",
            "displayName": "testHintValue(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)",
            "methodName": "testHintValue",
            "className": "org.carrot2.util.attribute.constraint.ValueHintConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOtherValues(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)[0]",
            "displayName": "testOtherValues(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)",
            "methodName": "testOtherValues",
            "className": "org.carrot2.util.attribute.constraint.ValueHintConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInvalidType(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)[0]",
            "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)",
            "methodName": "testInvalidType",
            "className": "org.carrot2.util.attribute.constraint.ValueHintConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNull(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)[0]",
            "displayName": "testNull(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)",
            "methodName": "testNull",
            "className": "org.carrot2.util.attribute.constraint.ValueHintConstraintTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773332689,
          "startTimestampDate": "2012-01-05T15:22:12.689",
          "executionTime": 7,
          "description": "id#testHintValue(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773332697,
          "startTimestampDate": "2012-01-05T15:22:12.697",
          "executionTime": 3,
          "description": "id#testOtherValues(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773332701,
          "startTimestampDate": "2012-01-05T15:22:12.701",
          "executionTime": 3,
          "description": "id#testInvalidType(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773332705,
          "startTimestampDate": "2012-01-05T15:22:12.705",
          "executionTime": 4,
          "description": "id#testNull(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testHintValue(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHintValue(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOtherValues(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOtherValues(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInvalidType(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInvalidType(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNull(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNull(org.carrot2.util.attribute.constraint.ValueHintConstraintTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773332712,
      "startTimestampDate": "2012-01-05T15:22:12.712",
      "executionTime": 44,
      "description": {
        "id": "id#org.carrot2.util.attribute.BindableDescriptorGeneratorTest[2]",
        "displayName": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
        "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testAttributeBuilderC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)[0]",
            "displayName": "testAttributeBuilderC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
            "methodName": "testAttributeBuilderC",
            "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInputOutputGettersSetters(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)[0]",
            "displayName": "testInputOutputGettersSetters(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
            "methodName": "testInputOutputGettersSetters",
            "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAttributesC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)[0]",
            "displayName": "testAttributesC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
            "methodName": "testAttributesC",
            "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testKeysC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)[0]",
            "displayName": "testKeysC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
            "methodName": "testKeysC",
            "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAttributeDescriptorsC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)[0]",
            "displayName": "testAttributeDescriptorsC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
            "methodName": "testAttributeDescriptorsC",
            "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testKeyInKeyCheck(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)[0]",
            "displayName": "testKeyInKeyCheck(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
            "methodName": "testKeyInKeyCheck",
            "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOwnAttributesC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)[0]",
            "displayName": "testOwnAttributesC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)",
            "methodName": "testOwnAttributesC",
            "className": "org.carrot2.util.attribute.BindableDescriptorGeneratorTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773332716,
          "startTimestampDate": "2012-01-05T15:22:12.716",
          "executionTime": 13,
          "description": "id#testAttributeBuilderC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773332729,
          "startTimestampDate": "2012-01-05T15:22:12.729",
          "executionTime": 7,
          "description": "id#testInputOutputGettersSetters(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773332737,
          "startTimestampDate": "2012-01-05T15:22:12.737",
          "executionTime": 3,
          "description": "id#testAttributesC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773332741,
          "startTimestampDate": "2012-01-05T15:22:12.741",
          "executionTime": 2,
          "description": "id#testKeysC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773332744,
          "startTimestampDate": "2012-01-05T15:22:12.744",
          "executionTime": 3,
          "description": "id#testAttributeDescriptorsC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773332747,
          "startTimestampDate": "2012-01-05T15:22:12.747",
          "executionTime": 5,
          "description": "id#testKeyInKeyCheck(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773332753,
          "startTimestampDate": "2012-01-05T15:22:12.753",
          "executionTime": 3,
          "description": "id#testOwnAttributesC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testAttributeBuilderC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAttributeBuilderC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInputOutputGettersSetters(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInputOutputGettersSetters(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAttributesC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAttributesC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testKeysC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testKeysC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAttributeDescriptorsC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAttributeDescriptorsC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testKeyInKeyCheck(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testKeyInKeyCheck(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOwnAttributesC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOwnAttributesC(org.carrot2.util.attribute.BindableDescriptorGeneratorTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773332764,
      "startTimestampDate": "2012-01-05T15:22:12.764",
      "executionTime": 486,
      "description": {
        "id": "id#org.carrot2.util.attribute.BindableMetadataBuilderTest[2]",
        "displayName": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testNoTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testNoTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testNoTitle",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOneWordGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testOneWordGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testOneWordGroup",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNamedAttributeLabelOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testNamedAttributeLabelOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testNamedAttributeLabelOverride",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTitleWithExtraPeriods(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testTitleWithExtraPeriods(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testTitleWithExtraPeriods",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoDescriptionNoTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testNoDescriptionNoTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testNoDescriptionNoTitle",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testBasicLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testBasicLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testBasicLevel",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLabelDefined(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testLabelDefined(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testLabelDefined",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNamedAttributeNoDotInKey(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testNamedAttributeNoDotInKey(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testNamedAttributeNoDotInKey",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNamedAttributeTitleDescriptionOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testNamedAttributeTitleDescriptionOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testNamedAttributeTitleDescriptionOverride",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDescriptionWithNumericEntities(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testDescriptionWithNumericEntities(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testDescriptionWithNumericEntities",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTitleWithLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testTitleWithLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testTitleWithLabel",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMultiWordGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testMultiWordGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testMultiWordGroup",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNamedAttributeNoJavadoc(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testNamedAttributeNoJavadoc(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testNamedAttributeNoJavadoc",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLabelWithComment(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testLabelWithComment(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testLabelWithComment",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSingleSentenceDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testSingleSentenceDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testSingleSentenceDescription",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNamedAttributeTitleOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testNamedAttributeTitleOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testNamedAttributeTitleOverride",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDescriptionWithLinks(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testDescriptionWithLinks(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testDescriptionWithLinks",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTitleWithDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testTitleWithDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testTitleWithDescription",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testNoLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testNoLevel",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTitleAtTheBottomNotSupported(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testTitleAtTheBottomNotSupported(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testTitleAtTheBottomNotSupported",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testBindableMetadata(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testBindableMetadata(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testBindableMetadata",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmptyTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testEmptyTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testEmptyTitle",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testNoDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testNoDescription",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTitleWithLink(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testTitleWithLink(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testTitleWithLink",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTitleWithExtraSpace(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testTitleWithExtraSpace(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testTitleWithExtraSpace",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMediumLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testMediumLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testMediumLevel",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTitleWithoutPeriod(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testTitleWithoutPeriod(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testTitleWithoutPeriod",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTitleWithPeriod(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testTitleWithPeriod(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testTitleWithPeriod",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMultiSentenceLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testMultiSentenceLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testMultiSentenceLabel",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testUnknownLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testUnknownLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testUnknownLevel",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMultiWordLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testMultiWordLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testMultiWordLabel",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSingleWordLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testSingleWordLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testSingleWordLabel",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTwoSentenceDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testTwoSentenceDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testTwoSentenceDescription",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLabelNotDefined(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testLabelNotDefined(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testLabelNotDefined",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDescriptionWithExtraSpace(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testDescriptionWithExtraSpace(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testDescriptionWithExtraSpace",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTitleWithExclamationMark(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testTitleWithExclamationMark(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testTitleWithExclamationMark",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAdvancedLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testAdvancedLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testAdvancedLevel",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmptyJavadoc(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testEmptyJavadoc(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testEmptyJavadoc",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
            "displayName": "testNoGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)",
            "methodName": "testNoGroup",
            "className": "org.carrot2.util.attribute.BindableMetadataBuilderTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773332844,
          "startTimestampDate": "2012-01-05T15:22:12.844",
          "executionTime": 23,
          "description": "id#testNoTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773332957,
          "startTimestampDate": "2012-01-05T15:22:12.957",
          "executionTime": 9,
          "description": "id#testOneWordGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773332967,
          "startTimestampDate": "2012-01-05T15:22:12.967",
          "executionTime": 12,
          "description": "id#testNamedAttributeLabelOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773332981,
          "startTimestampDate": "2012-01-05T15:22:12.981",
          "executionTime": 10,
          "description": "id#testTitleWithExtraPeriods(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773332992,
          "startTimestampDate": "2012-01-05T15:22:12.992",
          "executionTime": 16,
          "description": "id#testNoDescriptionNoTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333009,
          "startTimestampDate": "2012-01-05T15:22:13.009",
          "executionTime": 11,
          "description": "id#testBasicLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333022,
          "startTimestampDate": "2012-01-05T15:22:13.022",
          "executionTime": 5,
          "description": "id#testLabelDefined(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333028,
          "startTimestampDate": "2012-01-05T15:22:13.028",
          "executionTime": 6,
          "description": "id#testNamedAttributeNoDotInKey(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333035,
          "startTimestampDate": "2012-01-05T15:22:13.035",
          "executionTime": 8,
          "description": "id#testNamedAttributeTitleDescriptionOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333044,
          "startTimestampDate": "2012-01-05T15:22:13.044",
          "executionTime": 7,
          "description": "id#testDescriptionWithNumericEntities(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333052,
          "startTimestampDate": "2012-01-05T15:22:13.052",
          "executionTime": 5,
          "description": "id#testTitleWithLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333071,
          "startTimestampDate": "2012-01-05T15:22:13.071",
          "executionTime": 6,
          "description": "id#testMultiWordGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333077,
          "startTimestampDate": "2012-01-05T15:22:13.077",
          "executionTime": 6,
          "description": "id#testNamedAttributeNoJavadoc(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333084,
          "startTimestampDate": "2012-01-05T15:22:13.084",
          "executionTime": 7,
          "description": "id#testLabelWithComment(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333091,
          "startTimestampDate": "2012-01-05T15:22:13.091",
          "executionTime": 6,
          "description": "id#testSingleSentenceDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333097,
          "startTimestampDate": "2012-01-05T15:22:13.097",
          "executionTime": 6,
          "description": "id#testNamedAttributeTitleOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333104,
          "startTimestampDate": "2012-01-05T15:22:13.104",
          "executionTime": 6,
          "description": "id#testDescriptionWithLinks(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333111,
          "startTimestampDate": "2012-01-05T15:22:13.111",
          "executionTime": 5,
          "description": "id#testTitleWithDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333117,
          "startTimestampDate": "2012-01-05T15:22:13.117",
          "executionTime": 4,
          "description": "id#testNoLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333121,
          "startTimestampDate": "2012-01-05T15:22:13.121",
          "executionTime": 6,
          "description": "id#testTitleAtTheBottomNotSupported(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333128,
          "startTimestampDate": "2012-01-05T15:22:13.128",
          "executionTime": 6,
          "description": "id#testBindableMetadata(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333135,
          "startTimestampDate": "2012-01-05T15:22:13.135",
          "executionTime": 5,
          "description": "id#testEmptyTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333141,
          "startTimestampDate": "2012-01-05T15:22:13.141",
          "executionTime": 5,
          "description": "id#testNoDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333147,
          "startTimestampDate": "2012-01-05T15:22:13.147",
          "executionTime": 6,
          "description": "id#testTitleWithLink(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333154,
          "startTimestampDate": "2012-01-05T15:22:13.154",
          "executionTime": 5,
          "description": "id#testTitleWithExtraSpace(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333159,
          "startTimestampDate": "2012-01-05T15:22:13.159",
          "executionTime": 5,
          "description": "id#testMediumLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333165,
          "startTimestampDate": "2012-01-05T15:22:13.165",
          "executionTime": 5,
          "description": "id#testTitleWithoutPeriod(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333171,
          "startTimestampDate": "2012-01-05T15:22:13.171",
          "executionTime": 17,
          "description": "id#testTitleWithPeriod(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333189,
          "startTimestampDate": "2012-01-05T15:22:13.189",
          "executionTime": 5,
          "description": "id#testMultiSentenceLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333195,
          "startTimestampDate": "2012-01-05T15:22:13.195",
          "executionTime": 5,
          "description": "id#testUnknownLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333202,
          "startTimestampDate": "2012-01-05T15:22:13.202",
          "executionTime": 5,
          "description": "id#testMultiWordLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333207,
          "startTimestampDate": "2012-01-05T15:22:13.207",
          "executionTime": 5,
          "description": "id#testSingleWordLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333212,
          "startTimestampDate": "2012-01-05T15:22:13.212",
          "executionTime": 5,
          "description": "id#testTwoSentenceDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333218,
          "startTimestampDate": "2012-01-05T15:22:13.218",
          "executionTime": 5,
          "description": "id#testLabelNotDefined(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333223,
          "startTimestampDate": "2012-01-05T15:22:13.223",
          "executionTime": 4,
          "description": "id#testDescriptionWithExtraSpace(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333227,
          "startTimestampDate": "2012-01-05T15:22:13.227",
          "executionTime": 5,
          "description": "id#testTitleWithExclamationMark(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333233,
          "startTimestampDate": "2012-01-05T15:22:13.233",
          "executionTime": 5,
          "description": "id#testAdvancedLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333238,
          "startTimestampDate": "2012-01-05T15:22:13.238",
          "executionTime": 7,
          "description": "id#testEmptyJavadoc(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333245,
          "startTimestampDate": "2012-01-05T15:22:13.245",
          "executionTime": 5,
          "description": "id#testNoGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testNoTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOneWordGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOneWordGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNamedAttributeLabelOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNamedAttributeLabelOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTitleWithExtraPeriods(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTitleWithExtraPeriods(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoDescriptionNoTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoDescriptionNoTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testBasicLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testBasicLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLabelDefined(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLabelDefined(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNamedAttributeNoDotInKey(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNamedAttributeNoDotInKey(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNamedAttributeTitleDescriptionOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNamedAttributeTitleDescriptionOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDescriptionWithNumericEntities(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDescriptionWithNumericEntities(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTitleWithLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTitleWithLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMultiWordGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMultiWordGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNamedAttributeNoJavadoc(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNamedAttributeNoJavadoc(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLabelWithComment(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLabelWithComment(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSingleSentenceDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSingleSentenceDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNamedAttributeTitleOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNamedAttributeTitleOverride(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDescriptionWithLinks(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDescriptionWithLinks(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTitleWithDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTitleWithDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTitleAtTheBottomNotSupported(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTitleAtTheBottomNotSupported(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testBindableMetadata(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testBindableMetadata(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyTitle(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTitleWithLink(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTitleWithLink(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTitleWithExtraSpace(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTitleWithExtraSpace(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMediumLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMediumLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTitleWithoutPeriod(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTitleWithoutPeriod(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTitleWithPeriod(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTitleWithPeriod(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMultiSentenceLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMultiSentenceLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUnknownLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUnknownLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMultiWordLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMultiWordLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSingleWordLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSingleWordLabel(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTwoSentenceDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTwoSentenceDescription(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLabelNotDefined(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLabelNotDefined(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDescriptionWithExtraSpace(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDescriptionWithExtraSpace(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTitleWithExclamationMark(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTitleWithExclamationMark(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAdvancedLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAdvancedLevel(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyJavadoc(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyJavadoc(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoGroup(org.carrot2.util.attribute.BindableMetadataBuilderTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773331547,
      "startTimestampDate": "2012-01-05T15:22:11.547",
      "executionTime": 52,
      "description": {
        "id": "id#org.carrot2.util.attribute.AttributeBinderInjectorTest[2]",
        "displayName": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
        "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#staticFieldsInInjectionReceiverNotBound(org.carrot2.util.attribute.AttributeBinderInjectorTest)[0]",
            "displayName": "staticFieldsInInjectionReceiverNotBound(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
            "methodName": "staticFieldsInInjectionReceiverNotBound",
            "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInjectionOfNullValues(org.carrot2.util.attribute.AttributeBinderInjectorTest)[0]",
            "displayName": "testInjectionOfNullValues(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
            "methodName": "testInjectionOfNullValues",
            "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInjectionOfNonNullValues(org.carrot2.util.attribute.AttributeBinderInjectorTest)[0]",
            "displayName": "testInjectionOfNonNullValues(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
            "methodName": "testInjectionOfNonNullValues",
            "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoValuesToInject(org.carrot2.util.attribute.AttributeBinderInjectorTest)[0]",
            "displayName": "testNoValuesToInject(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
            "methodName": "testNoValuesToInject",
            "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCompositeInjectionReceiver(org.carrot2.util.attribute.AttributeBinderInjectorTest)[0]",
            "displayName": "testCompositeInjectionReceiver(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
            "methodName": "testCompositeInjectionReceiver",
            "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoFieldsToReceiveInjection(org.carrot2.util.attribute.AttributeBinderInjectorTest)[0]",
            "displayName": "testNoFieldsToReceiveInjection(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
            "methodName": "testNoFieldsToReceiveInjection",
            "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNullInjectionReceiver(org.carrot2.util.attribute.AttributeBinderInjectorTest)[0]",
            "displayName": "testNullInjectionReceiver(org.carrot2.util.attribute.AttributeBinderInjectorTest)",
            "methodName": "testNullInjectionReceiver",
            "className": "org.carrot2.util.attribute.AttributeBinderInjectorTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773331556,
          "startTimestampDate": "2012-01-05T15:22:11.556",
          "executionTime": 13,
          "description": "id#staticFieldsInInjectionReceiverNotBound(org.carrot2.util.attribute.AttributeBinderInjectorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331569,
          "startTimestampDate": "2012-01-05T15:22:11.569",
          "executionTime": 5,
          "description": "id#testInjectionOfNullValues(org.carrot2.util.attribute.AttributeBinderInjectorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331575,
          "startTimestampDate": "2012-01-05T15:22:11.575",
          "executionTime": 3,
          "description": "id#testInjectionOfNonNullValues(org.carrot2.util.attribute.AttributeBinderInjectorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331579,
          "startTimestampDate": "2012-01-05T15:22:11.579",
          "executionTime": 3,
          "description": "id#testNoValuesToInject(org.carrot2.util.attribute.AttributeBinderInjectorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331582,
          "startTimestampDate": "2012-01-05T15:22:11.582",
          "executionTime": 6,
          "description": "id#testCompositeInjectionReceiver(org.carrot2.util.attribute.AttributeBinderInjectorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331588,
          "startTimestampDate": "2012-01-05T15:22:11.588",
          "executionTime": 6,
          "description": "id#testNoFieldsToReceiveInjection(org.carrot2.util.attribute.AttributeBinderInjectorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331594,
          "startTimestampDate": "2012-01-05T15:22:11.594",
          "executionTime": 5,
          "description": "id#testNullInjectionReceiver(org.carrot2.util.attribute.AttributeBinderInjectorTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "staticFieldsInInjectionReceiverNotBound(org.carrot2.util.attribute.AttributeBinderInjectorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "staticFieldsInInjectionReceiverNotBound(org.carrot2.util.attribute.AttributeBinderInjectorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInjectionOfNullValues(org.carrot2.util.attribute.AttributeBinderInjectorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInjectionOfNullValues(org.carrot2.util.attribute.AttributeBinderInjectorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInjectionOfNonNullValues(org.carrot2.util.attribute.AttributeBinderInjectorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInjectionOfNonNullValues(org.carrot2.util.attribute.AttributeBinderInjectorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoValuesToInject(org.carrot2.util.attribute.AttributeBinderInjectorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoValuesToInject(org.carrot2.util.attribute.AttributeBinderInjectorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCompositeInjectionReceiver(org.carrot2.util.attribute.AttributeBinderInjectorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCompositeInjectionReceiver(org.carrot2.util.attribute.AttributeBinderInjectorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoFieldsToReceiveInjection(org.carrot2.util.attribute.AttributeBinderInjectorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoFieldsToReceiveInjection(org.carrot2.util.attribute.AttributeBinderInjectorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNullInjectionReceiver(org.carrot2.util.attribute.AttributeBinderInjectorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNullInjectionReceiver(org.carrot2.util.attribute.AttributeBinderInjectorTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773333252,
      "startTimestampDate": "2012-01-05T15:22:13.252",
      "executionTime": 13,
      "description": {
        "id": "id#org.carrot2.text.preprocessing.WordMarkerTest[2]",
        "displayName": "org.carrot2.text.preprocessing.WordMarkerTest",
        "className": "org.carrot2.text.preprocessing.WordMarkerTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testStopWords(org.carrot2.text.preprocessing.WordMarkerTest)[0]",
            "displayName": "testStopWords(org.carrot2.text.preprocessing.WordMarkerTest)",
            "methodName": "testStopWords",
            "className": "org.carrot2.text.preprocessing.WordMarkerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNonStopWords(org.carrot2.text.preprocessing.WordMarkerTest)[0]",
            "displayName": "testNonStopWords(org.carrot2.text.preprocessing.WordMarkerTest)",
            "methodName": "testNonStopWords",
            "className": "org.carrot2.text.preprocessing.WordMarkerTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773333254,
          "startTimestampDate": "2012-01-05T15:22:13.254",
          "executionTime": 6,
          "description": "id#testStopWords(org.carrot2.text.preprocessing.WordMarkerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333261,
          "startTimestampDate": "2012-01-05T15:22:13.261",
          "executionTime": 4,
          "description": "id#testNonStopWords(org.carrot2.text.preprocessing.WordMarkerTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testStopWords(org.carrot2.text.preprocessing.WordMarkerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStopWords(org.carrot2.text.preprocessing.WordMarkerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNonStopWords(org.carrot2.text.preprocessing.WordMarkerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNonStopWords(org.carrot2.text.preprocessing.WordMarkerTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773333268,
      "startTimestampDate": "2012-01-05T15:22:13.268",
      "executionTime": 9,
      "description": {
        "id": "id#org.carrot2.output.metrics.IdealPartitioningBasedMetricTest[2]",
        "displayName": "org.carrot2.output.metrics.IdealPartitioningBasedMetricTest",
        "className": "org.carrot2.output.metrics.IdealPartitioningBasedMetricTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testNoPartitionInformation(org.carrot2.output.metrics.IdealPartitioningBasedMetricTest)[0]",
            "displayName": "testNoPartitionInformation(org.carrot2.output.metrics.IdealPartitioningBasedMetricTest)",
            "methodName": "testNoPartitionInformation",
            "className": "org.carrot2.output.metrics.IdealPartitioningBasedMetricTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773333270,
          "startTimestampDate": "2012-01-05T15:22:13.270",
          "executionTime": 7,
          "description": "id#testNoPartitionInformation(org.carrot2.output.metrics.IdealPartitioningBasedMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testNoPartitionInformation(org.carrot2.output.metrics.IdealPartitioningBasedMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoPartitionInformation(org.carrot2.output.metrics.IdealPartitioningBasedMetricTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773333281,
      "startTimestampDate": "2012-01-05T15:22:13.281",
      "executionTime": 124,
      "description": {
        "id": "id#org.carrot2.text.clustering.MultilingualClusteringTest[2]",
        "displayName": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testNoLanguageFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
            "displayName": "testNoLanguageFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
            "methodName": "testNoLanguageFlattenMajorLanguage",
            "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoLanguageFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
            "displayName": "testNoLanguageFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
            "methodName": "testNoLanguageFlattenAll",
            "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOneLanguageOtherTopicsClusterFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
            "displayName": "testOneLanguageOtherTopicsClusterFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
            "methodName": "testOneLanguageOtherTopicsClusterFlattenNone",
            "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMoreLanguagesTrivialOrNoClusters(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
            "displayName": "testMoreLanguagesTrivialOrNoClusters(org.carrot2.text.clustering.MultilingualClusteringTest)",
            "methodName": "testMoreLanguagesTrivialOrNoClusters",
            "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmptyFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
            "displayName": "testEmptyFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
            "methodName": "testEmptyFlattenMajorLanguage",
            "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmptyFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
            "displayName": "testEmptyFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
            "methodName": "testEmptyFlattenAll",
            "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOneLanguageOtherTopicsClusterFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
            "displayName": "testOneLanguageOtherTopicsClusterFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
            "methodName": "testOneLanguageOtherTopicsClusterFlattenAll",
            "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOneLanguageOtherTopicsClusterFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
            "displayName": "testOneLanguageOtherTopicsClusterFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
            "methodName": "testOneLanguageOtherTopicsClusterFlattenMajorLanguage",
            "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMoreLanguagesFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
            "displayName": "testMoreLanguagesFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
            "methodName": "testMoreLanguagesFlattenMajorLanguage",
            "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoLanguageFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
            "displayName": "testNoLanguageFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
            "methodName": "testNoLanguageFlattenNone",
            "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMoreLanguagesFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
            "displayName": "testMoreLanguagesFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
            "methodName": "testMoreLanguagesFlattenAll",
            "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOneLanguageNontrivialClustersFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
            "displayName": "testOneLanguageNontrivialClustersFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)",
            "methodName": "testOneLanguageNontrivialClustersFlattenMajorLanguage",
            "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmptyFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
            "displayName": "testEmptyFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
            "methodName": "testEmptyFlattenNone",
            "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOneLanguageNontrivialClustersFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
            "displayName": "testOneLanguageNontrivialClustersFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
            "methodName": "testOneLanguageNontrivialClustersFlattenNone",
            "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOneLanguageNontrivialClustersFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
            "displayName": "testOneLanguageNontrivialClustersFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)",
            "methodName": "testOneLanguageNontrivialClustersFlattenAll",
            "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMoreLanguagesFlattenMajorNone(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
            "displayName": "testMoreLanguagesFlattenMajorNone(org.carrot2.text.clustering.MultilingualClusteringTest)",
            "methodName": "testMoreLanguagesFlattenMajorNone",
            "className": "org.carrot2.text.clustering.MultilingualClusteringTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773333287,
          "startTimestampDate": "2012-01-05T15:22:13.287",
          "executionTime": 13,
          "description": "id#testNoLanguageFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333300,
          "startTimestampDate": "2012-01-05T15:22:13.300",
          "executionTime": 4,
          "description": "id#testNoLanguageFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333305,
          "startTimestampDate": "2012-01-05T15:22:13.305",
          "executionTime": 4,
          "description": "id#testOneLanguageOtherTopicsClusterFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333310,
          "startTimestampDate": "2012-01-05T15:22:13.310",
          "executionTime": 8,
          "description": "id#testMoreLanguagesTrivialOrNoClusters(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333318,
          "startTimestampDate": "2012-01-05T15:22:13.318",
          "executionTime": 4,
          "description": "id#testEmptyFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333323,
          "startTimestampDate": "2012-01-05T15:22:13.323",
          "executionTime": 3,
          "description": "id#testEmptyFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333327,
          "startTimestampDate": "2012-01-05T15:22:13.327",
          "executionTime": 4,
          "description": "id#testOneLanguageOtherTopicsClusterFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333332,
          "startTimestampDate": "2012-01-05T15:22:13.332",
          "executionTime": 4,
          "description": "id#testOneLanguageOtherTopicsClusterFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333337,
          "startTimestampDate": "2012-01-05T15:22:13.337",
          "executionTime": 4,
          "description": "id#testMoreLanguagesFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333342,
          "startTimestampDate": "2012-01-05T15:22:13.342",
          "executionTime": 5,
          "description": "id#testNoLanguageFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333356,
          "startTimestampDate": "2012-01-05T15:22:13.356",
          "executionTime": 5,
          "description": "id#testMoreLanguagesFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333361,
          "startTimestampDate": "2012-01-05T15:22:13.361",
          "executionTime": 5,
          "description": "id#testOneLanguageNontrivialClustersFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333367,
          "startTimestampDate": "2012-01-05T15:22:13.367",
          "executionTime": 4,
          "description": "id#testEmptyFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333371,
          "startTimestampDate": "2012-01-05T15:22:13.371",
          "executionTime": 5,
          "description": "id#testOneLanguageNontrivialClustersFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333376,
          "startTimestampDate": "2012-01-05T15:22:13.376",
          "executionTime": 18,
          "description": "id#testOneLanguageNontrivialClustersFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333395,
          "startTimestampDate": "2012-01-05T15:22:13.395",
          "executionTime": 10,
          "description": "id#testMoreLanguagesFlattenMajorNone(org.carrot2.text.clustering.MultilingualClusteringTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testNoLanguageFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoLanguageFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoLanguageFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoLanguageFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOneLanguageOtherTopicsClusterFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOneLanguageOtherTopicsClusterFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMoreLanguagesTrivialOrNoClusters(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMoreLanguagesTrivialOrNoClusters(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOneLanguageOtherTopicsClusterFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOneLanguageOtherTopicsClusterFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOneLanguageOtherTopicsClusterFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOneLanguageOtherTopicsClusterFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMoreLanguagesFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMoreLanguagesFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoLanguageFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoLanguageFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMoreLanguagesFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMoreLanguagesFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOneLanguageNontrivialClustersFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOneLanguageNontrivialClustersFlattenMajorLanguage(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOneLanguageNontrivialClustersFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOneLanguageNontrivialClustersFlattenNone(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOneLanguageNontrivialClustersFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOneLanguageNontrivialClustersFlattenAll(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMoreLanguagesFlattenMajorNone(org.carrot2.text.clustering.MultilingualClusteringTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMoreLanguagesFlattenMajorNone(org.carrot2.text.clustering.MultilingualClusteringTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773333467,
      "startTimestampDate": "2012-01-05T15:22:13.467",
      "executionTime": 25,
      "description": {
        "id": "id#org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest[2]",
        "displayName": "org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest",
        "className": "org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testHintValue(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)[0]",
            "displayName": "testHintValue(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)",
            "methodName": "testHintValue",
            "className": "org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNull(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)[0]",
            "displayName": "testNull(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)",
            "methodName": "testNull",
            "className": "org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInvalidType(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)[0]",
            "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)",
            "methodName": "testInvalidType",
            "className": "org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNotHintValue(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)[0]",
            "displayName": "testNotHintValue(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)",
            "methodName": "testNotHintValue",
            "className": "org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773333470,
          "startTimestampDate": "2012-01-05T15:22:13.470",
          "executionTime": 7,
          "description": "id#testHintValue(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333479,
          "startTimestampDate": "2012-01-05T15:22:13.479",
          "executionTime": 4,
          "description": "id#testNull(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333483,
          "startTimestampDate": "2012-01-05T15:22:13.483",
          "executionTime": 4,
          "description": "id#testInvalidType(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333488,
          "startTimestampDate": "2012-01-05T15:22:13.488",
          "executionTime": 4,
          "description": "id#testNotHintValue(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testHintValue(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHintValue(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNull(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNull(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInvalidType(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInvalidType(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNotHintValue(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNotHintValue(org.carrot2.util.attribute.constraint.ValueHintWithMappedValuesConstraintTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773333514,
      "startTimestampDate": "2012-01-05T15:22:13.514",
      "executionTime": 89,
      "description": {
        "id": "id#org.carrot2.util.attribute.BindableDescriptorTest[2]",
        "displayName": "org.carrot2.util.attribute.BindableDescriptorTest",
        "className": "org.carrot2.util.attribute.BindableDescriptorTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testProcessingByGroup(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
            "displayName": "testProcessingByGroup(org.carrot2.util.attribute.BindableDescriptorTest)",
            "methodName": "testProcessingByGroup",
            "className": "org.carrot2.util.attribute.BindableDescriptorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAllByGroup(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
            "displayName": "testAllByGroup(org.carrot2.util.attribute.BindableDescriptorTest)",
            "methodName": "testAllByGroup",
            "className": "org.carrot2.util.attribute.BindableDescriptorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNotInput(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
            "displayName": "testNotInput(org.carrot2.util.attribute.BindableDescriptorTest)",
            "methodName": "testNotInput",
            "className": "org.carrot2.util.attribute.BindableDescriptorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOnlyInitProcessing(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
            "displayName": "testOnlyInitProcessing(org.carrot2.util.attribute.BindableDescriptorTest)",
            "methodName": "testOnlyInitProcessing",
            "className": "org.carrot2.util.attribute.BindableDescriptorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAllByLevel(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
            "displayName": "testAllByLevel(org.carrot2.util.attribute.BindableDescriptorTest)",
            "methodName": "testAllByLevel",
            "className": "org.carrot2.util.attribute.BindableDescriptorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNotInputProcessing(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
            "displayName": "testNotInputProcessing(org.carrot2.util.attribute.BindableDescriptorTest)",
            "methodName": "testNotInputProcessing",
            "className": "org.carrot2.util.attribute.BindableDescriptorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmptyGroupsAfterFiltering(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
            "displayName": "testEmptyGroupsAfterFiltering(org.carrot2.util.attribute.BindableDescriptorTest)",
            "methodName": "testEmptyGroupsAfterFiltering",
            "className": "org.carrot2.util.attribute.BindableDescriptorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOnlyInput(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
            "displayName": "testOnlyInput(org.carrot2.util.attribute.BindableDescriptorTest)",
            "methodName": "testOnlyInput",
            "className": "org.carrot2.util.attribute.BindableDescriptorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAllByStructure(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
            "displayName": "testAllByStructure(org.carrot2.util.attribute.BindableDescriptorTest)",
            "methodName": "testAllByStructure",
            "className": "org.carrot2.util.attribute.BindableDescriptorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOnlyInputProcessing(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
            "displayName": "testOnlyInputProcessing(org.carrot2.util.attribute.BindableDescriptorTest)",
            "methodName": "testOnlyInputProcessing",
            "className": "org.carrot2.util.attribute.BindableDescriptorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInputByLevel(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
            "displayName": "testInputByLevel(org.carrot2.util.attribute.BindableDescriptorTest)",
            "methodName": "testInputByLevel",
            "className": "org.carrot2.util.attribute.BindableDescriptorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDefaultValues(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
            "displayName": "testDefaultValues(org.carrot2.util.attribute.BindableDescriptorTest)",
            "methodName": "testDefaultValues",
            "className": "org.carrot2.util.attribute.BindableDescriptorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFlatten(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
            "displayName": "testFlatten(org.carrot2.util.attribute.BindableDescriptorTest)",
            "methodName": "testFlatten",
            "className": "org.carrot2.util.attribute.BindableDescriptorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOnlyInputOutputInitProcessing(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
            "displayName": "testOnlyInputOutputInitProcessing(org.carrot2.util.attribute.BindableDescriptorTest)",
            "methodName": "testOnlyInputOutputInitProcessing",
            "className": "org.carrot2.util.attribute.BindableDescriptorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOnlyInputOutput(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
            "displayName": "testOnlyInputOutput(org.carrot2.util.attribute.BindableDescriptorTest)",
            "methodName": "testOnlyInputOutput",
            "className": "org.carrot2.util.attribute.BindableDescriptorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOnlyWithNoCriteria(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
            "displayName": "testOnlyWithNoCriteria(org.carrot2.util.attribute.BindableDescriptorTest)",
            "methodName": "testOnlyWithNoCriteria",
            "className": "org.carrot2.util.attribute.BindableDescriptorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testRepeatedGrouping(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
            "displayName": "testRepeatedGrouping(org.carrot2.util.attribute.BindableDescriptorTest)",
            "methodName": "testRepeatedGrouping",
            "className": "org.carrot2.util.attribute.BindableDescriptorTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773333520,
          "startTimestampDate": "2012-01-05T15:22:13.520",
          "executionTime": 7,
          "description": "id#testProcessingByGroup(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333527,
          "startTimestampDate": "2012-01-05T15:22:13.527",
          "executionTime": 4,
          "description": "id#testAllByGroup(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333532,
          "startTimestampDate": "2012-01-05T15:22:13.532",
          "executionTime": 5,
          "description": "id#testNotInput(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333537,
          "startTimestampDate": "2012-01-05T15:22:13.537",
          "executionTime": 4,
          "description": "id#testOnlyInitProcessing(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333542,
          "startTimestampDate": "2012-01-05T15:22:13.542",
          "executionTime": 4,
          "description": "id#testAllByLevel(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333547,
          "startTimestampDate": "2012-01-05T15:22:13.547",
          "executionTime": 3,
          "description": "id#testNotInputProcessing(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333551,
          "startTimestampDate": "2012-01-05T15:22:13.551",
          "executionTime": 4,
          "description": "id#testEmptyGroupsAfterFiltering(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333555,
          "startTimestampDate": "2012-01-05T15:22:13.555",
          "executionTime": 5,
          "description": "id#testOnlyInput(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333561,
          "startTimestampDate": "2012-01-05T15:22:13.561",
          "executionTime": 4,
          "description": "id#testAllByStructure(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333566,
          "startTimestampDate": "2012-01-05T15:22:13.566",
          "executionTime": 2,
          "description": "id#testOnlyInputProcessing(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333569,
          "startTimestampDate": "2012-01-05T15:22:13.569",
          "executionTime": 3,
          "description": "id#testInputByLevel(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333573,
          "startTimestampDate": "2012-01-05T15:22:13.573",
          "executionTime": 4,
          "description": "id#testDefaultValues(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333584,
          "startTimestampDate": "2012-01-05T15:22:13.584",
          "executionTime": 4,
          "description": "id#testFlatten(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333589,
          "startTimestampDate": "2012-01-05T15:22:13.589",
          "executionTime": 2,
          "description": "id#testOnlyInputOutputInitProcessing(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333592,
          "startTimestampDate": "2012-01-05T15:22:13.592",
          "executionTime": 4,
          "description": "id#testOnlyInputOutput(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333596,
          "startTimestampDate": "2012-01-05T15:22:13.596",
          "executionTime": 4,
          "description": "id#testOnlyWithNoCriteria(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333601,
          "startTimestampDate": "2012-01-05T15:22:13.601",
          "executionTime": 2,
          "description": "id#testRepeatedGrouping(org.carrot2.util.attribute.BindableDescriptorTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testProcessingByGroup(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testProcessingByGroup(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAllByGroup(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAllByGroup(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNotInput(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNotInput(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOnlyInitProcessing(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOnlyInitProcessing(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAllByLevel(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAllByLevel(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNotInputProcessing(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNotInputProcessing(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyGroupsAfterFiltering(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyGroupsAfterFiltering(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOnlyInput(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOnlyInput(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAllByStructure(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAllByStructure(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOnlyInputProcessing(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOnlyInputProcessing(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInputByLevel(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInputByLevel(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDefaultValues(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDefaultValues(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFlatten(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFlatten(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOnlyInputOutputInitProcessing(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOnlyInputOutputInitProcessing(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOnlyInputOutput(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOnlyInputOutput(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOnlyWithNoCriteria(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOnlyWithNoCriteria(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testRepeatedGrouping(org.carrot2.util.attribute.BindableDescriptorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRepeatedGrouping(org.carrot2.util.attribute.BindableDescriptorTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773333605,
      "startTimestampDate": "2012-01-05T15:22:13.605",
      "executionTime": 20,
      "description": {
        "id": "id#org.carrot2.text.preprocessing.StemmerEnglishTest[2]",
        "displayName": "org.carrot2.text.preprocessing.StemmerEnglishTest",
        "className": "org.carrot2.text.preprocessing.StemmerEnglishTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testLowerCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)[0]",
            "displayName": "testLowerCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)",
            "methodName": "testLowerCaseWords",
            "className": "org.carrot2.text.preprocessing.StemmerEnglishTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testUpperCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)[0]",
            "displayName": "testUpperCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)",
            "methodName": "testUpperCaseWords",
            "className": "org.carrot2.text.preprocessing.StemmerEnglishTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMixedCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)[0]",
            "displayName": "testMixedCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)",
            "methodName": "testMixedCaseWords",
            "className": "org.carrot2.text.preprocessing.StemmerEnglishTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773333607,
          "startTimestampDate": "2012-01-05T15:22:13.607",
          "executionTime": 5,
          "description": "id#testLowerCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333613,
          "startTimestampDate": "2012-01-05T15:22:13.613",
          "executionTime": 4,
          "description": "id#testUpperCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333618,
          "startTimestampDate": "2012-01-05T15:22:13.618",
          "executionTime": 6,
          "description": "id#testMixedCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testLowerCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLowerCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUpperCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUpperCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMixedCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMixedCaseWords(org.carrot2.text.preprocessing.StemmerEnglishTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773331604,
      "startTimestampDate": "2012-01-05T15:22:11.604",
      "executionTime": 1840,
      "description": {
        "id": "id#org.carrot2.text.preprocessing.PhraseExtractorTest[2]",
        "displayName": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testGeneralizedPhrasesWithSingleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
            "displayName": "testGeneralizedPhrasesWithSingleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)",
            "methodName": "testGeneralizedPhrasesWithSingleOriginals",
            "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmpty(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
            "displayName": "testEmpty(org.carrot2.text.preprocessing.PhraseExtractorTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSinglePhrase(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
            "displayName": "testSinglePhrase(org.carrot2.text.preprocessing.PhraseExtractorTest)",
            "methodName": "testSinglePhrase",
            "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTwoExtendedPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
            "displayName": "testTwoExtendedPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)",
            "methodName": "testTwoExtendedPhrases",
            "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#minMaxPhraseLength(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
            "displayName": "minMaxPhraseLength(org.carrot2.text.preprocessing.PhraseExtractorTest)",
            "methodName": "minMaxPhraseLength",
            "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDfThreshold(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
            "displayName": "testDfThreshold(org.carrot2.text.preprocessing.PhraseExtractorTest)",
            "methodName": "testDfThreshold",
            "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSubphrasesAcrossFields(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
            "displayName": "testSubphrasesAcrossFields(org.carrot2.text.preprocessing.PhraseExtractorTest)",
            "methodName": "testSubphrasesAcrossFields",
            "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testComposition(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
            "displayName": "testComposition(org.carrot2.text.preprocessing.PhraseExtractorTest)",
            "methodName": "testComposition",
            "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTwoPhrasesOneDocument(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
            "displayName": "testTwoPhrasesOneDocument(org.carrot2.text.preprocessing.PhraseExtractorTest)",
            "methodName": "testTwoPhrasesOneDocument",
            "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSubphrasesOneField(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
            "displayName": "testSubphrasesOneField(org.carrot2.text.preprocessing.PhraseExtractorTest)",
            "methodName": "testSubphrasesOneField",
            "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoFrequentPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
            "displayName": "testNoFrequentPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)",
            "methodName": "testNoFrequentPhrases",
            "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTermFrequencyAcrossDocuments(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
            "displayName": "testTermFrequencyAcrossDocuments(org.carrot2.text.preprocessing.PhraseExtractorTest)",
            "methodName": "testTermFrequencyAcrossDocuments",
            "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNestedPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
            "displayName": "testNestedPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)",
            "methodName": "testNestedPhrases",
            "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testGeneralizedPhraseFrequencyAggregation(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
            "displayName": "testGeneralizedPhraseFrequencyAggregation(org.carrot2.text.preprocessing.PhraseExtractorTest)",
            "methodName": "testGeneralizedPhraseFrequencyAggregation",
            "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMaxPhraseLength(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
            "displayName": "testMaxPhraseLength(org.carrot2.text.preprocessing.PhraseExtractorTest)",
            "methodName": "testMaxPhraseLength",
            "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#tfByDocumentAndTfSanity(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
            "displayName": "tfByDocumentAndTfSanity(org.carrot2.text.preprocessing.PhraseExtractorTest)",
            "methodName": "tfByDocumentAndTfSanity",
            "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testGeneralizedPhraseWithMultipleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
            "displayName": "testGeneralizedPhraseWithMultipleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)",
            "methodName": "testGeneralizedPhraseWithMultipleOriginals",
            "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNullTitleSnippet(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
            "displayName": "testNullTitleSnippet(org.carrot2.text.preprocessing.PhraseExtractorTest)",
            "methodName": "testNullTitleSnippet",
            "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testGeneralizedPhraseWithSingleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
            "displayName": "testGeneralizedPhraseWithSingleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)",
            "methodName": "testGeneralizedPhraseWithSingleOriginals",
            "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#minMaxPhraseLengthReverseOrder(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
            "displayName": "minMaxPhraseLengthReverseOrder(org.carrot2.text.preprocessing.PhraseExtractorTest)",
            "methodName": "minMaxPhraseLengthReverseOrder",
            "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOverlappingGeneralizedPhrase(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
            "displayName": "testOverlappingGeneralizedPhrase(org.carrot2.text.preprocessing.PhraseExtractorTest)",
            "methodName": "testOverlappingGeneralizedPhrase",
            "className": "org.carrot2.text.preprocessing.PhraseExtractorTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773331667,
          "startTimestampDate": "2012-01-05T15:22:11.667",
          "executionTime": 15,
          "description": "id#testGeneralizedPhrasesWithSingleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331682,
          "startTimestampDate": "2012-01-05T15:22:11.682",
          "executionTime": 13,
          "description": "id#testEmpty(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331696,
          "startTimestampDate": "2012-01-05T15:22:11.696",
          "executionTime": 10,
          "description": "id#testSinglePhrase(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331706,
          "startTimestampDate": "2012-01-05T15:22:11.706",
          "executionTime": 8,
          "description": "id#testTwoExtendedPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331715,
          "startTimestampDate": "2012-01-05T15:22:11.715",
          "executionTime": 10,
          "description": "id#minMaxPhraseLength(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331726,
          "startTimestampDate": "2012-01-05T15:22:11.726",
          "executionTime": 6,
          "description": "id#testDfThreshold(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331732,
          "startTimestampDate": "2012-01-05T15:22:11.732",
          "executionTime": 22,
          "description": "id#testSubphrasesAcrossFields(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331755,
          "startTimestampDate": "2012-01-05T15:22:11.755",
          "executionTime": 10,
          "description": "id#testComposition(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331766,
          "startTimestampDate": "2012-01-05T15:22:11.766",
          "executionTime": 7,
          "description": "id#testTwoPhrasesOneDocument(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331774,
          "startTimestampDate": "2012-01-05T15:22:11.774",
          "executionTime": 8,
          "description": "id#testSubphrasesOneField(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331783,
          "startTimestampDate": "2012-01-05T15:22:11.783",
          "executionTime": 8,
          "description": "id#testNoFrequentPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331792,
          "startTimestampDate": "2012-01-05T15:22:11.792",
          "executionTime": 9,
          "description": "id#testTermFrequencyAcrossDocuments(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331801,
          "startTimestampDate": "2012-01-05T15:22:11.801",
          "executionTime": 54,
          "description": "id#testNestedPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331856,
          "startTimestampDate": "2012-01-05T15:22:11.856",
          "executionTime": 11,
          "description": "id#testGeneralizedPhraseFrequencyAggregation(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331868,
          "startTimestampDate": "2012-01-05T15:22:11.868",
          "executionTime": 12,
          "description": "id#testMaxPhraseLength(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773331881,
          "startTimestampDate": "2012-01-05T15:22:11.881",
          "executionTime": 1502,
          "description": "id#tfByDocumentAndTfSanity(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773333384,
          "startTimestampDate": "2012-01-05T15:22:13.384",
          "executionTime": 8,
          "description": "id#testGeneralizedPhraseWithMultipleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773333407,
          "startTimestampDate": "2012-01-05T15:22:13.407",
          "executionTime": 6,
          "description": "id#testNullTitleSnippet(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773333414,
          "startTimestampDate": "2012-01-05T15:22:13.414",
          "executionTime": 8,
          "description": "id#testGeneralizedPhraseWithSingleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773333423,
          "startTimestampDate": "2012-01-05T15:22:13.423",
          "executionTime": 7,
          "description": "id#minMaxPhraseLengthReverseOrder(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773333431,
          "startTimestampDate": "2012-01-05T15:22:13.431",
          "executionTime": 12,
          "description": "id#testOverlappingGeneralizedPhrase(org.carrot2.text.preprocessing.PhraseExtractorTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testGeneralizedPhrasesWithSingleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testGeneralizedPhrasesWithSingleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSinglePhrase(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSinglePhrase(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTwoExtendedPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTwoExtendedPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "minMaxPhraseLength(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "minMaxPhraseLength(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDfThreshold(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDfThreshold(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSubphrasesAcrossFields(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSubphrasesAcrossFields(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComposition(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComposition(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTwoPhrasesOneDocument(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTwoPhrasesOneDocument(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSubphrasesOneField(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSubphrasesOneField(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoFrequentPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoFrequentPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTermFrequencyAcrossDocuments(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTermFrequencyAcrossDocuments(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNestedPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNestedPhrases(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testGeneralizedPhraseFrequencyAggregation(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testGeneralizedPhraseFrequencyAggregation(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMaxPhraseLength(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMaxPhraseLength(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "tfByDocumentAndTfSanity(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "tfByDocumentAndTfSanity(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testGeneralizedPhraseWithMultipleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testGeneralizedPhraseWithMultipleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNullTitleSnippet(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNullTitleSnippet(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testGeneralizedPhraseWithSingleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testGeneralizedPhraseWithSingleOriginals(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "minMaxPhraseLengthReverseOrder(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "minMaxPhraseLengthReverseOrder(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOverlappingGeneralizedPhrase(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOverlappingGeneralizedPhrase(org.carrot2.text.preprocessing.PhraseExtractorTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773333449,
      "startTimestampDate": "2012-01-05T15:22:13.449",
      "executionTime": 106,
      "description": {
        "id": "id#org.carrot2.output.metrics.PrecisionRecallMetricTest[2]",
        "displayName": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testTrivialCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
            "displayName": "testTrivialCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
            "methodName": "testTrivialCluster",
            "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmptyCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
            "displayName": "testEmptyCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
            "methodName": "testEmptyCluster",
            "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPartiallyContaminatedCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
            "displayName": "testPartiallyContaminatedCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
            "methodName": "testPartiallyContaminatedCluster",
            "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testIdealClustering(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
            "displayName": "testIdealClustering(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
            "methodName": "testIdealClustering",
            "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
            "displayName": "testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
            "methodName": "testHardPartitionsOverlappingClusters",
            "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoPartitionInformation(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
            "displayName": "testNoPartitionInformation(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
            "methodName": "testNoPartitionInformation",
            "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
            "displayName": "testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
            "methodName": "testHardClustersWithOverlappingPartitions",
            "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPureCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
            "displayName": "testPureCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
            "methodName": "testPureCluster",
            "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFullyContaminatedCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
            "displayName": "testFullyContaminatedCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
            "methodName": "testFullyContaminatedCluster",
            "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAllDocumentsInOtherTopics(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
            "displayName": "testAllDocumentsInOtherTopics(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
            "methodName": "testAllDocumentsInOtherTopics",
            "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
            "displayName": "testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.PrecisionRecallMetricTest)",
            "methodName": "testOverlappingPartitionsOverlappingClusters",
            "className": "org.carrot2.output.metrics.PrecisionRecallMetricTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773333488,
          "startTimestampDate": "2012-01-05T15:22:13.488",
          "executionTime": 17,
          "description": "id#testTrivialCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773333506,
          "startTimestampDate": "2012-01-05T15:22:13.506",
          "executionTime": 3,
          "description": "id#testEmptyCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773333510,
          "startTimestampDate": "2012-01-05T15:22:13.510",
          "executionTime": 4,
          "description": "id#testPartiallyContaminatedCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773333515,
          "startTimestampDate": "2012-01-05T15:22:13.515",
          "executionTime": 5,
          "description": "id#testIdealClustering(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773333521,
          "startTimestampDate": "2012-01-05T15:22:13.521",
          "executionTime": 4,
          "description": "id#testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773333526,
          "startTimestampDate": "2012-01-05T15:22:13.526",
          "executionTime": 6,
          "description": "id#testNoPartitionInformation(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773333533,
          "startTimestampDate": "2012-01-05T15:22:13.533",
          "executionTime": 4,
          "description": "id#testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773333537,
          "startTimestampDate": "2012-01-05T15:22:13.537",
          "executionTime": 4,
          "description": "id#testPureCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773333542,
          "startTimestampDate": "2012-01-05T15:22:13.542",
          "executionTime": 4,
          "description": "id#testFullyContaminatedCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773333547,
          "startTimestampDate": "2012-01-05T15:22:13.547",
          "executionTime": 3,
          "description": "id#testAllDocumentsInOtherTopics(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773333551,
          "startTimestampDate": "2012-01-05T15:22:13.551",
          "executionTime": 4,
          "description": "id#testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.PrecisionRecallMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testTrivialCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTrivialCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPartiallyContaminatedCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPartiallyContaminatedCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testIdealClustering(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIdealClustering(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoPartitionInformation(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoPartitionInformation(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPureCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPureCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFullyContaminatedCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFullyContaminatedCluster(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAllDocumentsInOtherTopics(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAllDocumentsInOtherTopics(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.PrecisionRecallMetricTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773333558,
      "startTimestampDate": "2012-01-05T15:22:13.558",
      "executionTime": 410,
      "description": {
        "id": "id#org.carrot2.source.lucene.FSDirectoryWrapperTest[2]",
        "displayName": "org.carrot2.source.lucene.FSDirectoryWrapperTest",
        "className": "org.carrot2.source.lucene.FSDirectoryWrapperTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testFSDirectorySerialization(org.carrot2.source.lucene.FSDirectoryWrapperTest)[0]",
            "displayName": "testFSDirectorySerialization(org.carrot2.source.lucene.FSDirectoryWrapperTest)",
            "methodName": "testFSDirectorySerialization",
            "className": "org.carrot2.source.lucene.FSDirectoryWrapperTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773333862,
          "startTimestampDate": "2012-01-05T15:22:13.862",
          "executionTime": 97,
          "description": "id#testFSDirectorySerialization(org.carrot2.source.lucene.FSDirectoryWrapperTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testFSDirectorySerialization(org.carrot2.source.lucene.FSDirectoryWrapperTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFSDirectorySerialization(org.carrot2.source.lucene.FSDirectoryWrapperTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773331721,
      "startTimestampDate": "2012-01-05T15:22:11.721",
      "executionTime": 15,
      "description": {
        "id": "id#org.carrot2.util.attribute.AttributeValueSetTest[2]",
        "displayName": "org.carrot2.util.attribute.AttributeValueSetTest",
        "className": "org.carrot2.util.attribute.AttributeValueSetTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testMultiLevelBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)[0]",
            "displayName": "testMultiLevelBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)",
            "methodName": "testMultiLevelBaseAttributeValueSet",
            "className": "org.carrot2.util.attribute.AttributeValueSetTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOneLevelBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)[0]",
            "displayName": "testOneLevelBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)",
            "methodName": "testOneLevelBaseAttributeValueSet",
            "className": "org.carrot2.util.attribute.AttributeValueSetTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNullBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)[0]",
            "displayName": "testNullBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)",
            "methodName": "testNullBaseAttributeValueSet",
            "className": "org.carrot2.util.attribute.AttributeValueSetTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773331723,
          "startTimestampDate": "2012-01-05T15:22:11.723",
          "executionTime": 4,
          "description": "id#testMultiLevelBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331728,
          "startTimestampDate": "2012-01-05T15:22:11.728",
          "executionTime": 3,
          "description": "id#testOneLevelBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331732,
          "startTimestampDate": "2012-01-05T15:22:11.732",
          "executionTime": 4,
          "description": "id#testNullBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testMultiLevelBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMultiLevelBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOneLevelBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOneLevelBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNullBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNullBaseAttributeValueSet(org.carrot2.util.attribute.AttributeValueSetTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773331740,
      "startTimestampDate": "2012-01-05T15:22:11.740",
      "executionTime": 142,
      "description": {
        "id": "id#org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest[2]",
        "displayName": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
        "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testEmailTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)[0]",
            "displayName": "testEmailTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
            "methodName": "testEmailTokens",
            "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAcronymTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)[0]",
            "displayName": "testAcronymTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
            "methodName": "testAcronymTokens",
            "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSymbolTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)[0]",
            "displayName": "testSymbolTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
            "methodName": "testSymbolTokens",
            "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testUrlTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)[0]",
            "displayName": "testUrlTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
            "methodName": "testUrlTokens",
            "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testKoreanWordSplit(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)[0]",
            "displayName": "testKoreanWordSplit(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
            "methodName": "testKoreanWordSplit",
            "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#punctuationAndSentenceMarkers(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)[0]",
            "displayName": "punctuationAndSentenceMarkers(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
            "methodName": "punctuationAndSentenceMarkers",
            "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNumericTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)[0]",
            "displayName": "testNumericTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
            "methodName": "testNumericTokens",
            "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTermTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)[0]",
            "displayName": "testTermTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
            "methodName": "testTermTokens",
            "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNastyUrlTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)[0]",
            "displayName": "testNastyUrlTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)",
            "methodName": "testNastyUrlTokens",
            "className": "org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773331746,
          "startTimestampDate": "2012-01-05T15:22:11.746",
          "executionTime": 5,
          "description": "id#testEmailTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331752,
          "startTimestampDate": "2012-01-05T15:22:11.752",
          "executionTime": 5,
          "description": "id#testAcronymTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331772,
          "startTimestampDate": "2012-01-05T15:22:11.772",
          "executionTime": 4,
          "description": "id#testSymbolTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331776,
          "startTimestampDate": "2012-01-05T15:22:11.776",
          "executionTime": 7,
          "description": "id#testUrlTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331844,
          "startTimestampDate": "2012-01-05T15:22:11.844",
          "executionTime": 6,
          "description": "id#testKoreanWordSplit(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331852,
          "startTimestampDate": "2012-01-05T15:22:11.852",
          "executionTime": 6,
          "description": "id#punctuationAndSentenceMarkers(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331863,
          "startTimestampDate": "2012-01-05T15:22:11.863",
          "executionTime": 6,
          "description": "id#testNumericTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331870,
          "startTimestampDate": "2012-01-05T15:22:11.870",
          "executionTime": 5,
          "description": "id#testTermTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773331877,
          "startTimestampDate": "2012-01-05T15:22:11.877",
          "executionTime": 4,
          "description": "id#testNastyUrlTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testEmailTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmailTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAcronymTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAcronymTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSymbolTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSymbolTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUrlTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUrlTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testKoreanWordSplit(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testKoreanWordSplit(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "punctuationAndSentenceMarkers(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "punctuationAndSentenceMarkers(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNumericTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNumericTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTermTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTermTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNastyUrlTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNastyUrlTokens(org.carrot2.text.linguistic.ExtendedWhitespaceTokenizerTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773331886,
      "startTimestampDate": "2012-01-05T15:22:11.886",
      "executionTime": 1594,
      "description": {
        "id": "id#org.carrot2.source.ambient.Odp239DocumentSourceTest[2]",
        "displayName": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
        "className": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testData(org.carrot2.source.ambient.Odp239DocumentSourceTest)[0]",
            "displayName": "testData(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
            "methodName": "testData",
            "className": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAllTopicsWithMinTopicSize(org.carrot2.source.ambient.Odp239DocumentSourceTest)[0]",
            "displayName": "testAllTopicsWithMinTopicSize(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
            "methodName": "testAllTopicsWithMinTopicSize",
            "className": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMetadataAvailable(org.carrot2.source.ambient.Odp239DocumentSourceTest)[0]",
            "displayName": "testMetadataAvailable(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
            "methodName": "testMetadataAvailable",
            "className": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAllTopicsWithoutDocumentsWithoutTopic(org.carrot2.source.ambient.Odp239DocumentSourceTest)[0]",
            "displayName": "testAllTopicsWithoutDocumentsWithoutTopic(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
            "methodName": "testAllTopicsWithoutDocumentsWithoutTopic",
            "className": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAllTopicsWithDocumentsWithoutTopic(org.carrot2.source.ambient.Odp239DocumentSourceTest)[0]",
            "displayName": "testAllTopicsWithDocumentsWithoutTopic(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
            "methodName": "testAllTopicsWithDocumentsWithoutTopic",
            "className": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testResultsNumber(org.carrot2.source.ambient.Odp239DocumentSourceTest)[0]",
            "displayName": "testResultsNumber(org.carrot2.source.ambient.Odp239DocumentSourceTest)",
            "methodName": "testResultsNumber",
            "className": "org.carrot2.source.ambient.Odp239DocumentSourceTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773331890,
          "startTimestampDate": "2012-01-05T15:22:11.890",
          "executionTime": 540,
          "description": "id#testData(org.carrot2.source.ambient.Odp239DocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773332431,
          "startTimestampDate": "2012-01-05T15:22:12.431",
          "executionTime": 503,
          "description": "id#testAllTopicsWithMinTopicSize(org.carrot2.source.ambient.Odp239DocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773332935,
          "startTimestampDate": "2012-01-05T15:22:12.935",
          "executionTime": 8,
          "description": "id#testMetadataAvailable(org.carrot2.source.ambient.Odp239DocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773332944,
          "startTimestampDate": "2012-01-05T15:22:12.944",
          "executionTime": 302,
          "description": "id#testAllTopicsWithoutDocumentsWithoutTopic(org.carrot2.source.ambient.Odp239DocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773333247,
          "startTimestampDate": "2012-01-05T15:22:13.247",
          "executionTime": 226,
          "description": "id#testAllTopicsWithDocumentsWithoutTopic(org.carrot2.source.ambient.Odp239DocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773333475,
          "startTimestampDate": "2012-01-05T15:22:13.475",
          "executionTime": 5,
          "description": "id#testResultsNumber(org.carrot2.source.ambient.Odp239DocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testData(org.carrot2.source.ambient.Odp239DocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testData(org.carrot2.source.ambient.Odp239DocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAllTopicsWithMinTopicSize(org.carrot2.source.ambient.Odp239DocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAllTopicsWithMinTopicSize(org.carrot2.source.ambient.Odp239DocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMetadataAvailable(org.carrot2.source.ambient.Odp239DocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMetadataAvailable(org.carrot2.source.ambient.Odp239DocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAllTopicsWithoutDocumentsWithoutTopic(org.carrot2.source.ambient.Odp239DocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAllTopicsWithoutDocumentsWithoutTopic(org.carrot2.source.ambient.Odp239DocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAllTopicsWithDocumentsWithoutTopic(org.carrot2.source.ambient.Odp239DocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAllTopicsWithDocumentsWithoutTopic(org.carrot2.source.ambient.Odp239DocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testResultsNumber(org.carrot2.source.ambient.Odp239DocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testResultsNumber(org.carrot2.source.ambient.Odp239DocumentSourceTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773329431,
      "startTimestampDate": "2012-01-05T15:22:09.431",
      "executionTime": 4849,
      "description": {
        "id": "id#org.carrot2.core.ControllerTest[2]",
        "displayName": "org.carrot2.core.ControllerTest",
        "className": "org.carrot2.core.ControllerTest",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "org.junit.runners.Suite"
            }
          },
          {
            "org.junit.runners.Suite$SuiteClasses": {
              "value": [
                "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
                "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
                "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
                "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
                "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
                "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests"
              ]
            }
          }
        ],
        "children": [
          {
            "id": "id#org.carrot2.core.ControllerTest$ComponentManagerIndependentTests[3]",
            "displayName": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
            "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
            "annotations": [
              {
                "com.carrotsearch.randomizedtesting.annotations.Timeout": {
                  "millis": 60000
                }
              },
              {
                "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
                  "stackSamples": 10,
                  "linger": 2000,
                  "leakedThreadsBelongToSuite": false,
                  "failTestIfLeaking": true
                }
              },
              {
                "org.junit.runner.RunWith": {
                  "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
                }
              }
            ],
            "children": [
              {
                "id": "id#testMultipleInitialization(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)[0]",
                "displayName": "testMultipleInitialization(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
                "methodName": "testMultipleInitialization",
                "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testMultipleDisposal(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)[0]",
                "displayName": "testMultipleDisposal(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
                "methodName": "testMultipleDisposal",
                "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testUsingCachingManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)[0]",
                "displayName": "testUsingCachingManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
                "methodName": "testUsingCachingManagerWithMoreThanOneController",
                "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testUsingSimpleManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)[0]",
                "displayName": "testUsingSimpleManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
                "methodName": "testUsingSimpleManagerWithMoreThanOneController",
                "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testUnexpectedComponentClass(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)[0]",
                "displayName": "testUnexpectedComponentClass(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
                "methodName": "testUnexpectedComponentClass",
                "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testAutomaticInitialization(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)[0]",
                "displayName": "testAutomaticInitialization(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
                "methodName": "testAutomaticInitialization",
                "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testUnknownComponentId(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)[0]",
                "displayName": "testUnknownComponentId(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
                "methodName": "testUnknownComponentId",
                "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testUsingPoolingManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)[0]",
                "displayName": "testUsingPoolingManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
                "methodName": "testUsingPoolingManagerWithMoreThanOneController",
                "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testUnexpectedComponentDesignatorType(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)[0]",
                "displayName": "testUnexpectedComponentDesignatorType(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)",
                "methodName": "testUnexpectedComponentDesignatorType",
                "className": "org.carrot2.core.ControllerTest$ComponentManagerIndependentTests",
                "annotations": [],
                "children": []
              }
            ]
          },
          {
            "id": "id#org.carrot2.core.ControllerTest$SimpleControllerCommonTests[3]",
            "displayName": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
            "annotations": [
              {
                "com.carrotsearch.randomizedtesting.annotations.Timeout": {
                  "millis": 60000
                }
              },
              {
                "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
                  "stackSamples": 10,
                  "linger": 5000,
                  "leakedThreadsBelongToSuite": false,
                  "failTestIfLeaking": true
                }
              },
              {
                "org.junit.runner.RunWith": {
                  "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
                }
              }
            ],
            "children": [
              {
                "id": "id#testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testStatsTwoGoodQueriesCached",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testUnrelatedProcessingAttributesCopiedOnOutput",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testNormalExecutionTimeMeasurement",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionWhileInit(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testExceptionWhileInit(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testExceptionWhileInit",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testStatsOneGoodQuery(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testStatsOneGoodQuery",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testExceptionWhileCreatingInstances",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testComponentConfigurationDifferentInitAttributes",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testStress(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testStress(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testStress",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testEmptyStatsInNewController(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testEmptyStatsInNewController",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testNormalExecution1Component(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testNormalExecution1Component(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testNormalExecution1Component",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testExceptionBeforeProcessing",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testComponentConfigurationDuplicateComponentId",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testCollectionOfInitOutputAttributes",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#settingInitAttributeToNull(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "settingInitAttributeToNull",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionDuringProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testExceptionDuringProcessing",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testPassingRequiredProcessingAttribute",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testContextDisposal(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testContextDisposal(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testContextDisposal",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testInputAttributesCopiedOnOutput",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testStatsOneGoodQueryOneErrorQuery",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testProcessingInvocationMethods(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testProcessingInvocationMethods",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testOutputAttributesWithNullValues",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testNormalExecution3Components(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testNormalExecution3Components(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testNormalExecution3Components",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testComponentConfigurationProcessingAttributeAtInitTime",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionAfterProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
                "displayName": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)",
                "methodName": "testExceptionAfterProcessing",
                "className": "org.carrot2.core.ControllerTest$SimpleControllerCommonTests",
                "annotations": [],
                "children": []
              }
            ]
          },
          {
            "id": "id#org.carrot2.core.ControllerTest$PoolingControllerCommonTests[3]",
            "displayName": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
            "annotations": [
              {
                "com.carrotsearch.randomizedtesting.annotations.Timeout": {
                  "millis": 60000
                }
              },
              {
                "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
                  "stackSamples": 10,
                  "linger": 5000,
                  "leakedThreadsBelongToSuite": false,
                  "failTestIfLeaking": true
                }
              },
              {
                "org.junit.runner.RunWith": {
                  "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
                }
              }
            ],
            "children": [
              {
                "id": "id#testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testStatsTwoGoodQueriesCached",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testUnrelatedProcessingAttributesCopiedOnOutput",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testNormalExecutionTimeMeasurement",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionWhileInit(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testExceptionWhileInit(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testExceptionWhileInit",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testStatsOneGoodQuery(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testStatsOneGoodQuery",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testExceptionWhileCreatingInstances",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testComponentConfigurationDifferentInitAttributes",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testStress(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testStress(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testStress",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testEmptyStatsInNewController(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testEmptyStatsInNewController",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testNormalExecution1Component(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testNormalExecution1Component(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testNormalExecution1Component",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testExceptionBeforeProcessing",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testComponentConfigurationDuplicateComponentId",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testCollectionOfInitOutputAttributes",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#settingInitAttributeToNull(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "settingInitAttributeToNull",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionDuringProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testExceptionDuringProcessing",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testPassingRequiredProcessingAttribute",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testContextDisposal(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testContextDisposal(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testContextDisposal",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testInputAttributesCopiedOnOutput",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testStatsOneGoodQueryOneErrorQuery",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testProcessingInvocationMethods(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testProcessingInvocationMethods",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testOutputAttributesWithNullValues",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testNormalExecution3Components(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testNormalExecution3Components(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testNormalExecution3Components",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testComponentConfigurationProcessingAttributeAtInitTime",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionAfterProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
                "displayName": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)",
                "methodName": "testExceptionAfterProcessing",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerCommonTests",
                "annotations": [],
                "children": []
              }
            ]
          },
          {
            "id": "id#org.carrot2.core.ControllerTest$PoolingControllerPoolingTests[3]",
            "displayName": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
            "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
            "annotations": [
              {
                "com.carrotsearch.randomizedtesting.annotations.Timeout": {
                  "millis": 60000
                }
              },
              {
                "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
                  "stackSamples": 10,
                  "linger": 5000,
                  "leakedThreadsBelongToSuite": false,
                  "failTestIfLeaking": true
                }
              },
              {
                "org.junit.runner.RunWith": {
                  "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
                }
              }
            ],
            "children": [
              {
                "id": "id#warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)[0]",
                "displayName": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
                "methodName": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)[0]",
                "displayName": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
                "methodName": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testResettingReferenceAttribute(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)[0]",
                "displayName": "testResettingReferenceAttribute(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
                "methodName": "testResettingReferenceAttribute",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)[0]",
                "displayName": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
                "methodName": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testRepeatedExecution3Components(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)[0]",
                "displayName": "testRepeatedExecution3Components(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
                "methodName": "testRepeatedExecution3Components",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)[0]",
                "displayName": "testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
                "methodName": "testResettingRequiredProcessingAttributeToNull",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentInstanceReused(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)[0]",
                "displayName": "testComponentInstanceReused(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
                "methodName": "testComponentInstanceReused",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)[0]",
                "displayName": "testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
                "methodName": "testResettingPrimitiveAttribute",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)[0]",
                "displayName": "noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
                "methodName": "noWarningOnNonThreadSafeInputInstanceFieldDefault",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)[0]",
                "displayName": "testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)",
                "methodName": "testComponentConfigurationInitProcessingAttributeCreation",
                "className": "org.carrot2.core.ControllerTest$PoolingControllerPoolingTests",
                "annotations": [],
                "children": []
              }
            ]
          },
          {
            "id": "id#org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests[3]",
            "displayName": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
            "annotations": [
              {
                "com.carrotsearch.randomizedtesting.annotations.Timeout": {
                  "millis": 60000
                }
              },
              {
                "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
                  "stackSamples": 10,
                  "linger": 5000,
                  "leakedThreadsBelongToSuite": false,
                  "failTestIfLeaking": true
                }
              },
              {
                "org.junit.runner.RunWith": {
                  "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
                }
              }
            ],
            "children": [
              {
                "id": "id#testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testStatsTwoGoodQueriesCached",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testUnrelatedProcessingAttributesCopiedOnOutput",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testNormalExecutionTimeMeasurement",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testExceptionWhileInit",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testStatsOneGoodQuery",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testExceptionWhileCreatingInstances",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testComponentConfigurationDifferentInitAttributes",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testStress(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testStress(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testStress",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testEmptyStatsInNewController",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testNormalExecution1Component",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testExceptionBeforeProcessing",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testComponentConfigurationDuplicateComponentId",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testCollectionOfInitOutputAttributes",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "settingInitAttributeToNull",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testExceptionDuringProcessing",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testPassingRequiredProcessingAttribute",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testContextDisposal(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testContextDisposal(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testContextDisposal",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testInputAttributesCopiedOnOutput",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testStatsOneGoodQueryOneErrorQuery",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testProcessingInvocationMethods",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testOutputAttributesWithNullValues",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testNormalExecution3Components",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testComponentConfigurationProcessingAttributeAtInitTime",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
                "displayName": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)",
                "methodName": "testExceptionAfterProcessing",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              }
            ]
          },
          {
            "id": "id#org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests[3]",
            "displayName": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
            "annotations": [
              {
                "com.carrotsearch.randomizedtesting.annotations.Timeout": {
                  "millis": 60000
                }
              },
              {
                "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
                  "stackSamples": 10,
                  "linger": 5000,
                  "leakedThreadsBelongToSuite": false,
                  "failTestIfLeaking": true
                }
              },
              {
                "org.junit.runner.RunWith": {
                  "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
                }
              }
            ],
            "children": [
              {
                "id": "id#warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)[0]",
                "displayName": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
                "methodName": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)[0]",
                "displayName": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
                "methodName": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testResettingReferenceAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)[0]",
                "displayName": "testResettingReferenceAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
                "methodName": "testResettingReferenceAttribute",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)[0]",
                "displayName": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
                "methodName": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testRepeatedExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)[0]",
                "displayName": "testRepeatedExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
                "methodName": "testRepeatedExecution3Components",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)[0]",
                "displayName": "testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
                "methodName": "testResettingRequiredProcessingAttributeToNull",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentInstanceReused(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)[0]",
                "displayName": "testComponentInstanceReused(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
                "methodName": "testComponentInstanceReused",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)[0]",
                "displayName": "testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
                "methodName": "testResettingPrimitiveAttribute",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)[0]",
                "displayName": "noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
                "methodName": "noWarningOnNonThreadSafeInputInstanceFieldDefault",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)[0]",
                "displayName": "testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)",
                "methodName": "testComponentConfigurationInitProcessingAttributeCreation",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests",
                "annotations": [],
                "children": []
              }
            ]
          },
          {
            "id": "id#org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests[3]",
            "displayName": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
            "annotations": [
              {
                "com.carrotsearch.randomizedtesting.annotations.Timeout": {
                  "millis": 60000
                }
              },
              {
                "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
                  "stackSamples": 10,
                  "linger": 5000,
                  "leakedThreadsBelongToSuite": false,
                  "failTestIfLeaking": true
                }
              },
              {
                "org.junit.runner.RunWith": {
                  "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
                }
              }
            ],
            "children": [
              {
                "id": "id#testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testStatsTwoGoodQueriesCached",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testUnrelatedProcessingAttributesCopiedOnOutput",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testNormalExecutionTimeMeasurement",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testExceptionWhileInit",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testStatsOneGoodQuery",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testExceptionWhileCreatingInstances",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testComponentConfigurationDifferentInitAttributes",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testStress(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testStress(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testStress",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testEmptyStatsInNewController",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testNormalExecution1Component",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testExceptionBeforeProcessing",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testComponentConfigurationDuplicateComponentId",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testCollectionOfInitOutputAttributes",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "settingInitAttributeToNull",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testExceptionDuringProcessing",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testPassingRequiredProcessingAttribute",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testContextDisposal(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testContextDisposal(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testContextDisposal",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testInputAttributesCopiedOnOutput",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testStatsOneGoodQueryOneErrorQuery",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testProcessingInvocationMethods",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testOutputAttributesWithNullValues",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testNormalExecution3Components",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testComponentConfigurationProcessingAttributeAtInitTime",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
                "displayName": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)",
                "methodName": "testExceptionAfterProcessing",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              }
            ]
          },
          {
            "id": "id#org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests[3]",
            "displayName": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
            "annotations": [
              {
                "com.carrotsearch.randomizedtesting.annotations.Timeout": {
                  "millis": 60000
                }
              },
              {
                "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
                  "stackSamples": 10,
                  "linger": 5000,
                  "leakedThreadsBelongToSuite": false,
                  "failTestIfLeaking": true
                }
              },
              {
                "org.junit.runner.RunWith": {
                  "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
                }
              }
            ],
            "children": [
              {
                "id": "id#warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)[0]",
                "displayName": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
                "methodName": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)[0]",
                "displayName": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
                "methodName": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testResettingReferenceAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)[0]",
                "displayName": "testResettingReferenceAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
                "methodName": "testResettingReferenceAttribute",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)[0]",
                "displayName": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
                "methodName": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testRepeatedExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)[0]",
                "displayName": "testRepeatedExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
                "methodName": "testRepeatedExecution3Components",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)[0]",
                "displayName": "testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
                "methodName": "testResettingRequiredProcessingAttributeToNull",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentInstanceReused(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)[0]",
                "displayName": "testComponentInstanceReused(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
                "methodName": "testComponentInstanceReused",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)[0]",
                "displayName": "testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
                "methodName": "testResettingPrimitiveAttribute",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)[0]",
                "displayName": "noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
                "methodName": "noWarningOnNonThreadSafeInputInstanceFieldDefault",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)[0]",
                "displayName": "testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)",
                "methodName": "testComponentConfigurationInitProcessingAttributeCreation",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests",
                "annotations": [],
                "children": []
              }
            ]
          },
          {
            "id": "id#org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests[3]",
            "displayName": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
            "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
            "annotations": [
              {
                "com.carrotsearch.randomizedtesting.annotations.Timeout": {
                  "millis": 60000
                }
              },
              {
                "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
                  "stackSamples": 10,
                  "linger": 5000,
                  "leakedThreadsBelongToSuite": false,
                  "failTestIfLeaking": true
                }
              },
              {
                "org.junit.runner.RunWith": {
                  "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
                }
              }
            ],
            "children": [
              {
                "id": "id#testCachingReuseResultsInDifferentComponentPipeline(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)[0]",
                "displayName": "testCachingReuseResultsInDifferentComponentPipeline(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
                "methodName": "testCachingReuseResultsInDifferentComponentPipeline",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testCachingEqualCacheKeys(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)[0]",
                "displayName": "testCachingEqualCacheKeys(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
                "methodName": "testCachingEqualCacheKeys",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testOutputAttributesWithNullValuesOneComponentCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)[0]",
                "displayName": "testOutputAttributesWithNullValuesOneComponentCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
                "methodName": "testOutputAttributesWithNullValuesOneComponentCached",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testCachingInitAttributesIgnoredInCacheKey(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)[0]",
                "displayName": "testCachingInitAttributesIgnoredInCacheKey(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
                "methodName": "testCachingInitAttributesIgnoredInCacheKey",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testCachingDifferentCacheKeys(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)[0]",
                "displayName": "testCachingDifferentCacheKeys(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
                "methodName": "testCachingDifferentCacheKeys",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testConcurrentDocumentModifications(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)[0]",
                "displayName": "testConcurrentDocumentModifications(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)",
                "methodName": "testConcurrentDocumentModifications",
                "className": "org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests",
                "annotations": [],
                "children": []
              }
            ]
          },
          {
            "id": "id#org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests[3]",
            "displayName": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
            "annotations": [
              {
                "com.carrotsearch.randomizedtesting.annotations.Timeout": {
                  "millis": 60000
                }
              },
              {
                "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
                  "stackSamples": 10,
                  "linger": 5000,
                  "leakedThreadsBelongToSuite": false,
                  "failTestIfLeaking": true
                }
              },
              {
                "org.junit.runner.RunWith": {
                  "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
                }
              }
            ],
            "children": [
              {
                "id": "id#testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testStatsTwoGoodQueriesCached",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testUnrelatedProcessingAttributesCopiedOnOutput",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testNormalExecutionTimeMeasurement",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testExceptionWhileInit",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testStatsOneGoodQuery",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testExceptionWhileCreatingInstances",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testComponentConfigurationDifferentInitAttributes",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testStress(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testStress(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testStress",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testEmptyStatsInNewController",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testNormalExecution1Component",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testExceptionBeforeProcessing",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testComponentConfigurationDuplicateComponentId",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testCollectionOfInitOutputAttributes",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "settingInitAttributeToNull",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testExceptionDuringProcessing",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testPassingRequiredProcessingAttribute",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testContextDisposal(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testContextDisposal(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testContextDisposal",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testInputAttributesCopiedOnOutput",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testStatsOneGoodQueryOneErrorQuery",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testProcessingInvocationMethods",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testOutputAttributesWithNullValues",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testNormalExecution3Components",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testComponentConfigurationProcessingAttributeAtInitTime",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
                "displayName": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)",
                "methodName": "testExceptionAfterProcessing",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests",
                "annotations": [],
                "children": []
              }
            ]
          },
          {
            "id": "id#org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests[3]",
            "displayName": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
            "annotations": [
              {
                "com.carrotsearch.randomizedtesting.annotations.Timeout": {
                  "millis": 60000
                }
              },
              {
                "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
                  "stackSamples": 10,
                  "linger": 5000,
                  "leakedThreadsBelongToSuite": false,
                  "failTestIfLeaking": true
                }
              },
              {
                "org.junit.runner.RunWith": {
                  "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
                }
              }
            ],
            "children": [
              {
                "id": "id#testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testStatsTwoGoodQueriesCached",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testUnrelatedProcessingAttributesCopiedOnOutput",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testNormalExecutionTimeMeasurement",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testExceptionWhileInit",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testStatsOneGoodQuery",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testExceptionWhileCreatingInstances",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testComponentConfigurationDifferentInitAttributes",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testStress(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testStress(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testStress",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testEmptyStatsInNewController",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testNormalExecution1Component",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testExceptionBeforeProcessing",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testComponentConfigurationDuplicateComponentId",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testCollectionOfInitOutputAttributes",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "settingInitAttributeToNull",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testExceptionDuringProcessing",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testPassingRequiredProcessingAttribute",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testContextDisposal(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testContextDisposal(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testContextDisposal",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testInputAttributesCopiedOnOutput",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testStatsOneGoodQueryOneErrorQuery",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testProcessingInvocationMethods",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testOutputAttributesWithNullValues",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testNormalExecution3Components",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testComponentConfigurationProcessingAttributeAtInitTime",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
                "displayName": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)",
                "methodName": "testExceptionAfterProcessing",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests",
                "annotations": [],
                "children": []
              }
            ]
          },
          {
            "id": "id#org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests[3]",
            "displayName": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
            "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
            "annotations": [
              {
                "com.carrotsearch.randomizedtesting.annotations.Timeout": {
                  "millis": 60000
                }
              },
              {
                "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
                  "stackSamples": 10,
                  "linger": 5000,
                  "leakedThreadsBelongToSuite": false,
                  "failTestIfLeaking": true
                }
              },
              {
                "org.junit.runner.RunWith": {
                  "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
                }
              }
            ],
            "children": [
              {
                "id": "id#testCachingReuseResultsInDifferentComponentPipeline(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)[0]",
                "displayName": "testCachingReuseResultsInDifferentComponentPipeline(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
                "methodName": "testCachingReuseResultsInDifferentComponentPipeline",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testCachingEqualCacheKeys(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)[0]",
                "displayName": "testCachingEqualCacheKeys(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
                "methodName": "testCachingEqualCacheKeys",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testOutputAttributesWithNullValuesOneComponentCached(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)[0]",
                "displayName": "testOutputAttributesWithNullValuesOneComponentCached(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
                "methodName": "testOutputAttributesWithNullValuesOneComponentCached",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testCachingInitAttributesIgnoredInCacheKey(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)[0]",
                "displayName": "testCachingInitAttributesIgnoredInCacheKey(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
                "methodName": "testCachingInitAttributesIgnoredInCacheKey",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testCachingDifferentCacheKeys(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)[0]",
                "displayName": "testCachingDifferentCacheKeys(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
                "methodName": "testCachingDifferentCacheKeys",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#testConcurrentDocumentModifications(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)[0]",
                "displayName": "testConcurrentDocumentModifications(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)",
                "methodName": "testConcurrentDocumentModifications",
                "className": "org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests",
                "annotations": [],
                "children": []
              }
            ]
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773329722,
          "startTimestampDate": "2012-01-05T15:22:09.722",
          "executionTime": 49,
          "description": "id#testMultipleInitialization(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773329772,
          "startTimestampDate": "2012-01-05T15:22:09.772",
          "executionTime": 15,
          "description": "id#testMultipleDisposal(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773329788,
          "startTimestampDate": "2012-01-05T15:22:09.788",
          "executionTime": 36,
          "description": "id#testUsingCachingManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773329826,
          "startTimestampDate": "2012-01-05T15:22:09.826",
          "executionTime": 117,
          "description": "id#testUsingSimpleManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773329954,
          "startTimestampDate": "2012-01-05T15:22:09.954",
          "executionTime": 30,
          "description": "id#testUnexpectedComponentClass(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773329990,
          "startTimestampDate": "2012-01-05T15:22:09.990",
          "executionTime": 26,
          "description": "id#testAutomaticInitialization(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330017,
          "startTimestampDate": "2012-01-05T15:22:10.017",
          "executionTime": 7,
          "description": "id#testUnknownComponentId(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330025,
          "startTimestampDate": "2012-01-05T15:22:10.025",
          "executionTime": 8,
          "description": "id#testUsingPoolingManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330174,
          "startTimestampDate": "2012-01-05T15:22:10.174",
          "executionTime": 5,
          "description": "id#testUnexpectedComponentDesignatorType(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330180,
          "startTimestampDate": "2012-01-05T15:22:10.180",
          "executionTime": 33,
          "description": "id#testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330215,
          "startTimestampDate": "2012-01-05T15:22:10.215",
          "executionTime": 12,
          "description": "id#testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330228,
          "startTimestampDate": "2012-01-05T15:22:10.228",
          "executionTime": 0,
          "description": "id#testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330229,
          "startTimestampDate": "2012-01-05T15:22:10.229",
          "executionTime": 10,
          "description": "id#testExceptionWhileInit(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330240,
          "startTimestampDate": "2012-01-05T15:22:10.240",
          "executionTime": 211,
          "description": "id#testStatsOneGoodQuery(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330451,
          "startTimestampDate": "2012-01-05T15:22:10.451",
          "executionTime": 10,
          "description": "id#testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330467,
          "startTimestampDate": "2012-01-05T15:22:10.467",
          "executionTime": 9,
          "description": "id#testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330480,
          "startTimestampDate": "2012-01-05T15:22:10.480",
          "executionTime": 0,
          "description": "id#testStress(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330481,
          "startTimestampDate": "2012-01-05T15:22:10.481",
          "executionTime": 8,
          "description": "id#testEmptyStatsInNewController(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330491,
          "startTimestampDate": "2012-01-05T15:22:10.491",
          "executionTime": 7,
          "description": "id#testNormalExecution1Component(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330499,
          "startTimestampDate": "2012-01-05T15:22:10.499",
          "executionTime": 8,
          "description": "id#testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330508,
          "startTimestampDate": "2012-01-05T15:22:10.508",
          "executionTime": 6,
          "description": "id#testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330515,
          "startTimestampDate": "2012-01-05T15:22:10.515",
          "executionTime": 25,
          "description": "id#testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330541,
          "startTimestampDate": "2012-01-05T15:22:10.541",
          "executionTime": 31,
          "description": "id#settingInitAttributeToNull(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330577,
          "startTimestampDate": "2012-01-05T15:22:10.577",
          "executionTime": 7,
          "description": "id#testExceptionDuringProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330585,
          "startTimestampDate": "2012-01-05T15:22:10.585",
          "executionTime": 14,
          "description": "id#testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330600,
          "startTimestampDate": "2012-01-05T15:22:10.600",
          "executionTime": 20,
          "description": "id#testContextDisposal(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330621,
          "startTimestampDate": "2012-01-05T15:22:10.621",
          "executionTime": 8,
          "description": "id#testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330630,
          "startTimestampDate": "2012-01-05T15:22:10.630",
          "executionTime": 7,
          "description": "id#testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330638,
          "startTimestampDate": "2012-01-05T15:22:10.638",
          "executionTime": 7,
          "description": "id#testProcessingInvocationMethods(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330646,
          "startTimestampDate": "2012-01-05T15:22:10.646",
          "executionTime": 8,
          "description": "id#testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330655,
          "startTimestampDate": "2012-01-05T15:22:10.655",
          "executionTime": 8,
          "description": "id#testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330663,
          "startTimestampDate": "2012-01-05T15:22:10.663",
          "executionTime": 9,
          "description": "id#testNormalExecution3Components(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330673,
          "startTimestampDate": "2012-01-05T15:22:10.673",
          "executionTime": 8,
          "description": "id#testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330682,
          "startTimestampDate": "2012-01-05T15:22:10.682",
          "executionTime": 8,
          "description": "id#testExceptionAfterProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330691,
          "startTimestampDate": "2012-01-05T15:22:10.691",
          "executionTime": 5,
          "description": "id#testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330697,
          "startTimestampDate": "2012-01-05T15:22:10.697",
          "executionTime": 6,
          "description": "id#testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330704,
          "startTimestampDate": "2012-01-05T15:22:10.704",
          "executionTime": 0,
          "description": "id#testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330704,
          "startTimestampDate": "2012-01-05T15:22:10.704",
          "executionTime": 8,
          "description": "id#testExceptionWhileInit(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330713,
          "startTimestampDate": "2012-01-05T15:22:10.713",
          "executionTime": 204,
          "description": "id#testStatsOneGoodQuery(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330918,
          "startTimestampDate": "2012-01-05T15:22:10.918",
          "executionTime": 4,
          "description": "id#testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330923,
          "startTimestampDate": "2012-01-05T15:22:10.923",
          "executionTime": 5,
          "description": "id#testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330929,
          "startTimestampDate": "2012-01-05T15:22:10.929",
          "executionTime": 0,
          "description": "id#testStress(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330930,
          "startTimestampDate": "2012-01-05T15:22:10.930",
          "executionTime": 4,
          "description": "id#testEmptyStatsInNewController(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330935,
          "startTimestampDate": "2012-01-05T15:22:10.935",
          "executionTime": 4,
          "description": "id#testNormalExecution1Component(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330940,
          "startTimestampDate": "2012-01-05T15:22:10.940",
          "executionTime": 5,
          "description": "id#testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330946,
          "startTimestampDate": "2012-01-05T15:22:10.946",
          "executionTime": 4,
          "description": "id#testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330951,
          "startTimestampDate": "2012-01-05T15:22:10.951",
          "executionTime": 4,
          "description": "id#testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330956,
          "startTimestampDate": "2012-01-05T15:22:10.956",
          "executionTime": 4,
          "description": "id#settingInitAttributeToNull(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330961,
          "startTimestampDate": "2012-01-05T15:22:10.961",
          "executionTime": 5,
          "description": "id#testExceptionDuringProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330966,
          "startTimestampDate": "2012-01-05T15:22:10.966",
          "executionTime": 4,
          "description": "id#testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330971,
          "startTimestampDate": "2012-01-05T15:22:10.971",
          "executionTime": 5,
          "description": "id#testContextDisposal(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330977,
          "startTimestampDate": "2012-01-05T15:22:10.977",
          "executionTime": 5,
          "description": "id#testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330983,
          "startTimestampDate": "2012-01-05T15:22:10.983",
          "executionTime": 6,
          "description": "id#testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330989,
          "startTimestampDate": "2012-01-05T15:22:10.989",
          "executionTime": 4,
          "description": "id#testProcessingInvocationMethods(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773330994,
          "startTimestampDate": "2012-01-05T15:22:10.994",
          "executionTime": 6,
          "description": "id#testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331000,
          "startTimestampDate": "2012-01-05T15:22:11.000",
          "executionTime": 4,
          "description": "id#testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331041,
          "startTimestampDate": "2012-01-05T15:22:11.041",
          "executionTime": 8,
          "description": "id#testNormalExecution3Components(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331049,
          "startTimestampDate": "2012-01-05T15:22:11.049",
          "executionTime": 6,
          "description": "id#testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331056,
          "startTimestampDate": "2012-01-05T15:22:11.056",
          "executionTime": 7,
          "description": "id#testExceptionAfterProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331065,
          "startTimestampDate": "2012-01-05T15:22:11.065",
          "executionTime": 8,
          "description": "id#warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331074,
          "startTimestampDate": "2012-01-05T15:22:11.074",
          "executionTime": 6,
          "description": "id#noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331090,
          "startTimestampDate": "2012-01-05T15:22:11.090",
          "executionTime": 24,
          "description": "id#testResettingReferenceAttribute(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331115,
          "startTimestampDate": "2012-01-05T15:22:11.115",
          "executionTime": 12,
          "description": "id#warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331129,
          "startTimestampDate": "2012-01-05T15:22:11.129",
          "executionTime": 8,
          "description": "id#testRepeatedExecution3Components(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331137,
          "startTimestampDate": "2012-01-05T15:22:11.137",
          "executionTime": 34,
          "description": "id#testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331203,
          "startTimestampDate": "2012-01-05T15:22:11.203",
          "executionTime": 27,
          "description": "id#testComponentInstanceReused(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331233,
          "startTimestampDate": "2012-01-05T15:22:11.233",
          "executionTime": 8,
          "description": "id#testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331242,
          "startTimestampDate": "2012-01-05T15:22:11.242",
          "executionTime": 5,
          "description": "id#noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331248,
          "startTimestampDate": "2012-01-05T15:22:11.248",
          "executionTime": 9,
          "description": "id#testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331273,
          "startTimestampDate": "2012-01-05T15:22:11.273",
          "executionTime": 10,
          "description": "id#testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331287,
          "startTimestampDate": "2012-01-05T15:22:11.287",
          "executionTime": 12,
          "description": "id#testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331302,
          "startTimestampDate": "2012-01-05T15:22:11.302",
          "executionTime": 0,
          "description": "id#testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331316,
          "startTimestampDate": "2012-01-05T15:22:11.316",
          "executionTime": 48,
          "description": "id#testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331367,
          "startTimestampDate": "2012-01-05T15:22:11.367",
          "executionTime": 245,
          "description": "id#testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331613,
          "startTimestampDate": "2012-01-05T15:22:11.613",
          "executionTime": 5,
          "description": "id#testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331619,
          "startTimestampDate": "2012-01-05T15:22:11.619",
          "executionTime": 27,
          "description": "id#testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331647,
          "startTimestampDate": "2012-01-05T15:22:11.647",
          "executionTime": 1,
          "description": "id#testStress(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331648,
          "startTimestampDate": "2012-01-05T15:22:11.648",
          "executionTime": 9,
          "description": "id#testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331659,
          "startTimestampDate": "2012-01-05T15:22:11.659",
          "executionTime": 7,
          "description": "id#testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331668,
          "startTimestampDate": "2012-01-05T15:22:11.668",
          "executionTime": 11,
          "description": "id#testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331680,
          "startTimestampDate": "2012-01-05T15:22:11.680",
          "executionTime": 4,
          "description": "id#testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331685,
          "startTimestampDate": "2012-01-05T15:22:11.685",
          "executionTime": 10,
          "description": "id#testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331696,
          "startTimestampDate": "2012-01-05T15:22:11.696",
          "executionTime": 6,
          "description": "id#settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331703,
          "startTimestampDate": "2012-01-05T15:22:11.703",
          "executionTime": 11,
          "description": "id#testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331716,
          "startTimestampDate": "2012-01-05T15:22:11.716",
          "executionTime": 12,
          "description": "id#testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331729,
          "startTimestampDate": "2012-01-05T15:22:11.729",
          "executionTime": 21,
          "description": "id#testContextDisposal(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331750,
          "startTimestampDate": "2012-01-05T15:22:11.750",
          "executionTime": 16,
          "description": "id#testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331767,
          "startTimestampDate": "2012-01-05T15:22:11.767",
          "executionTime": 8,
          "description": "id#testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331777,
          "startTimestampDate": "2012-01-05T15:22:11.777",
          "executionTime": 10,
          "description": "id#testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331789,
          "startTimestampDate": "2012-01-05T15:22:11.789",
          "executionTime": 13,
          "description": "id#testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331820,
          "startTimestampDate": "2012-01-05T15:22:11.820",
          "executionTime": 13,
          "description": "id#testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331838,
          "startTimestampDate": "2012-01-05T15:22:11.838",
          "executionTime": 13,
          "description": "id#testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331855,
          "startTimestampDate": "2012-01-05T15:22:11.855",
          "executionTime": 8,
          "description": "id#testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331866,
          "startTimestampDate": "2012-01-05T15:22:11.866",
          "executionTime": 14,
          "description": "id#testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331882,
          "startTimestampDate": "2012-01-05T15:22:11.882",
          "executionTime": 9,
          "description": "id#warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331892,
          "startTimestampDate": "2012-01-05T15:22:11.892",
          "executionTime": 6,
          "description": "id#noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331899,
          "startTimestampDate": "2012-01-05T15:22:11.899",
          "executionTime": 7,
          "description": "id#testResettingReferenceAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331907,
          "startTimestampDate": "2012-01-05T15:22:11.907",
          "executionTime": 6,
          "description": "id#warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773331914,
          "startTimestampDate": "2012-01-05T15:22:11.914",
          "executionTime": 21,
          "description": "id#testRepeatedExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332152,
          "startTimestampDate": "2012-01-05T15:22:12.152",
          "executionTime": 67,
          "description": "id#testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332220,
          "startTimestampDate": "2012-01-05T15:22:12.220",
          "executionTime": 7,
          "description": "id#testComponentInstanceReused(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332228,
          "startTimestampDate": "2012-01-05T15:22:12.228",
          "executionTime": 115,
          "description": "id#testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332343,
          "startTimestampDate": "2012-01-05T15:22:12.343",
          "executionTime": 39,
          "description": "id#noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332383,
          "startTimestampDate": "2012-01-05T15:22:12.383",
          "executionTime": 13,
          "description": "id#testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332397,
          "startTimestampDate": "2012-01-05T15:22:12.397",
          "executionTime": 37,
          "description": "id#testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332434,
          "startTimestampDate": "2012-01-05T15:22:12.434",
          "executionTime": 9,
          "description": "id#testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332445,
          "startTimestampDate": "2012-01-05T15:22:12.445",
          "executionTime": 0,
          "description": "id#testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332445,
          "startTimestampDate": "2012-01-05T15:22:12.445",
          "executionTime": 10,
          "description": "id#testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332456,
          "startTimestampDate": "2012-01-05T15:22:12.456",
          "executionTime": 211,
          "description": "id#testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332668,
          "startTimestampDate": "2012-01-05T15:22:12.668",
          "executionTime": 12,
          "description": "id#testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332680,
          "startTimestampDate": "2012-01-05T15:22:12.680",
          "executionTime": 9,
          "description": "id#testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332690,
          "startTimestampDate": "2012-01-05T15:22:12.690",
          "executionTime": 0,
          "description": "id#testStress(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332691,
          "startTimestampDate": "2012-01-05T15:22:12.691",
          "executionTime": 6,
          "description": "id#testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332698,
          "startTimestampDate": "2012-01-05T15:22:12.698",
          "executionTime": 8,
          "description": "id#testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332706,
          "startTimestampDate": "2012-01-05T15:22:12.706",
          "executionTime": 9,
          "description": "id#testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332716,
          "startTimestampDate": "2012-01-05T15:22:12.716",
          "executionTime": 7,
          "description": "id#testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332724,
          "startTimestampDate": "2012-01-05T15:22:12.724",
          "executionTime": 9,
          "description": "id#testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332734,
          "startTimestampDate": "2012-01-05T15:22:12.734",
          "executionTime": 8,
          "description": "id#settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332742,
          "startTimestampDate": "2012-01-05T15:22:12.742",
          "executionTime": 9,
          "description": "id#testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332752,
          "startTimestampDate": "2012-01-05T15:22:12.752",
          "executionTime": 11,
          "description": "id#testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332763,
          "startTimestampDate": "2012-01-05T15:22:12.763",
          "executionTime": 12,
          "description": "id#testContextDisposal(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332775,
          "startTimestampDate": "2012-01-05T15:22:12.775",
          "executionTime": 11,
          "description": "id#testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332787,
          "startTimestampDate": "2012-01-05T15:22:12.787",
          "executionTime": 13,
          "description": "id#testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332831,
          "startTimestampDate": "2012-01-05T15:22:12.831",
          "executionTime": 10,
          "description": "id#testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332841,
          "startTimestampDate": "2012-01-05T15:22:12.841",
          "executionTime": 24,
          "description": "id#testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332865,
          "startTimestampDate": "2012-01-05T15:22:12.865",
          "executionTime": 10,
          "description": "id#testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332876,
          "startTimestampDate": "2012-01-05T15:22:12.876",
          "executionTime": 16,
          "description": "id#testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332893,
          "startTimestampDate": "2012-01-05T15:22:12.893",
          "executionTime": 13,
          "description": "id#testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332907,
          "startTimestampDate": "2012-01-05T15:22:12.907",
          "executionTime": 11,
          "description": "id#testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332920,
          "startTimestampDate": "2012-01-05T15:22:12.920",
          "executionTime": 9,
          "description": "id#warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332930,
          "startTimestampDate": "2012-01-05T15:22:12.930",
          "executionTime": 12,
          "description": "id#noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332943,
          "startTimestampDate": "2012-01-05T15:22:12.943",
          "executionTime": 19,
          "description": "id#testResettingReferenceAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332962,
          "startTimestampDate": "2012-01-05T15:22:12.962",
          "executionTime": 10,
          "description": "id#warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773332973,
          "startTimestampDate": "2012-01-05T15:22:12.973",
          "executionTime": 26,
          "description": "id#testRepeatedExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333002,
          "startTimestampDate": "2012-01-05T15:22:13.002",
          "executionTime": 11,
          "description": "id#testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333014,
          "startTimestampDate": "2012-01-05T15:22:13.014",
          "executionTime": 9,
          "description": "id#testComponentInstanceReused(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333023,
          "startTimestampDate": "2012-01-05T15:22:13.023",
          "executionTime": 9,
          "description": "id#testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333033,
          "startTimestampDate": "2012-01-05T15:22:13.033",
          "executionTime": 7,
          "description": "id#noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333041,
          "startTimestampDate": "2012-01-05T15:22:13.041",
          "executionTime": 9,
          "description": "id#testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333051,
          "startTimestampDate": "2012-01-05T15:22:13.051",
          "executionTime": 19,
          "description": "id#testCachingReuseResultsInDifferentComponentPipeline(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333071,
          "startTimestampDate": "2012-01-05T15:22:13.071",
          "executionTime": 7,
          "description": "id#testCachingEqualCacheKeys(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333079,
          "startTimestampDate": "2012-01-05T15:22:13.079",
          "executionTime": 8,
          "description": "id#testOutputAttributesWithNullValuesOneComponentCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333087,
          "startTimestampDate": "2012-01-05T15:22:13.087",
          "executionTime": 8,
          "description": "id#testCachingInitAttributesIgnoredInCacheKey(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333096,
          "startTimestampDate": "2012-01-05T15:22:13.096",
          "executionTime": 8,
          "description": "id#testCachingDifferentCacheKeys(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333105,
          "startTimestampDate": "2012-01-05T15:22:13.105",
          "executionTime": 0,
          "description": "id#testConcurrentDocumentModifications(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333106,
          "startTimestampDate": "2012-01-05T15:22:13.106",
          "executionTime": 7,
          "description": "id#testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333114,
          "startTimestampDate": "2012-01-05T15:22:13.114",
          "executionTime": 4,
          "description": "id#testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333119,
          "startTimestampDate": "2012-01-05T15:22:13.119",
          "executionTime": 0,
          "description": "id#testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333119,
          "startTimestampDate": "2012-01-05T15:22:13.119",
          "executionTime": 5,
          "description": "id#testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333125,
          "startTimestampDate": "2012-01-05T15:22:13.125",
          "executionTime": 204,
          "description": "id#testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333329,
          "startTimestampDate": "2012-01-05T15:22:13.329",
          "executionTime": 5,
          "description": "id#testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333334,
          "startTimestampDate": "2012-01-05T15:22:13.334",
          "executionTime": 5,
          "description": "id#testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333339,
          "startTimestampDate": "2012-01-05T15:22:13.339",
          "executionTime": 0,
          "description": "id#testStress(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333340,
          "startTimestampDate": "2012-01-05T15:22:13.340",
          "executionTime": 4,
          "description": "id#testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333344,
          "startTimestampDate": "2012-01-05T15:22:13.344",
          "executionTime": 6,
          "description": "id#testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333350,
          "startTimestampDate": "2012-01-05T15:22:13.350",
          "executionTime": 9,
          "description": "id#testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333378,
          "startTimestampDate": "2012-01-05T15:22:13.378",
          "executionTime": 16,
          "description": "id#testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333397,
          "startTimestampDate": "2012-01-05T15:22:13.397",
          "executionTime": 6,
          "description": "id#testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333404,
          "startTimestampDate": "2012-01-05T15:22:13.404",
          "executionTime": 7,
          "description": "id#settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333411,
          "startTimestampDate": "2012-01-05T15:22:13.411",
          "executionTime": 6,
          "description": "id#testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333418,
          "startTimestampDate": "2012-01-05T15:22:13.418",
          "executionTime": 4,
          "description": "id#testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333423,
          "startTimestampDate": "2012-01-05T15:22:13.423",
          "executionTime": 5,
          "description": "id#testContextDisposal(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333429,
          "startTimestampDate": "2012-01-05T15:22:13.429",
          "executionTime": 11,
          "description": "id#testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333440,
          "startTimestampDate": "2012-01-05T15:22:13.440",
          "executionTime": 6,
          "description": "id#testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333447,
          "startTimestampDate": "2012-01-05T15:22:13.447",
          "executionTime": 5,
          "description": "id#testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333453,
          "startTimestampDate": "2012-01-05T15:22:13.453",
          "executionTime": 11,
          "description": "id#testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333465,
          "startTimestampDate": "2012-01-05T15:22:13.465",
          "executionTime": 5,
          "description": "id#testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333471,
          "startTimestampDate": "2012-01-05T15:22:13.471",
          "executionTime": 6,
          "description": "id#testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333478,
          "startTimestampDate": "2012-01-05T15:22:13.478",
          "executionTime": 4,
          "description": "id#testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333483,
          "startTimestampDate": "2012-01-05T15:22:13.483",
          "executionTime": 6,
          "description": "id#testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333490,
          "startTimestampDate": "2012-01-05T15:22:13.490",
          "executionTime": 10,
          "description": "id#testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333501,
          "startTimestampDate": "2012-01-05T15:22:13.501",
          "executionTime": 9,
          "description": "id#testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333510,
          "startTimestampDate": "2012-01-05T15:22:13.510",
          "executionTime": 1,
          "description": "id#testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333511,
          "startTimestampDate": "2012-01-05T15:22:13.511",
          "executionTime": 11,
          "description": "id#testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333522,
          "startTimestampDate": "2012-01-05T15:22:13.522",
          "executionTime": 247,
          "description": "id#testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333771,
          "startTimestampDate": "2012-01-05T15:22:13.771",
          "executionTime": 133,
          "description": "id#testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333904,
          "startTimestampDate": "2012-01-05T15:22:13.904",
          "executionTime": 9,
          "description": "id#testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333914,
          "startTimestampDate": "2012-01-05T15:22:13.914",
          "executionTime": 0,
          "description": "id#testStress(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333915,
          "startTimestampDate": "2012-01-05T15:22:13.915",
          "executionTime": 7,
          "description": "id#testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333922,
          "startTimestampDate": "2012-01-05T15:22:13.922",
          "executionTime": 9,
          "description": "id#testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333932,
          "startTimestampDate": "2012-01-05T15:22:13.932",
          "executionTime": 13,
          "description": "id#testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333945,
          "startTimestampDate": "2012-01-05T15:22:13.945",
          "executionTime": 7,
          "description": "id#testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333953,
          "startTimestampDate": "2012-01-05T15:22:13.953",
          "executionTime": 7,
          "description": "id#testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333961,
          "startTimestampDate": "2012-01-05T15:22:13.961",
          "executionTime": 8,
          "description": "id#settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333970,
          "startTimestampDate": "2012-01-05T15:22:13.970",
          "executionTime": 11,
          "description": "id#testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333982,
          "startTimestampDate": "2012-01-05T15:22:13.982",
          "executionTime": 8,
          "description": "id#testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773333991,
          "startTimestampDate": "2012-01-05T15:22:13.991",
          "executionTime": 10,
          "description": "id#testContextDisposal(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334001,
          "startTimestampDate": "2012-01-05T15:22:14.001",
          "executionTime": 11,
          "description": "id#testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334014,
          "startTimestampDate": "2012-01-05T15:22:14.014",
          "executionTime": 10,
          "description": "id#testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334025,
          "startTimestampDate": "2012-01-05T15:22:14.025",
          "executionTime": 11,
          "description": "id#testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334036,
          "startTimestampDate": "2012-01-05T15:22:14.036",
          "executionTime": 9,
          "description": "id#testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334048,
          "startTimestampDate": "2012-01-05T15:22:14.048",
          "executionTime": 9,
          "description": "id#testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334058,
          "startTimestampDate": "2012-01-05T15:22:14.058",
          "executionTime": 15,
          "description": "id#testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334074,
          "startTimestampDate": "2012-01-05T15:22:14.074",
          "executionTime": 21,
          "description": "id#testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334112,
          "startTimestampDate": "2012-01-05T15:22:14.112",
          "executionTime": 116,
          "description": "id#testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334229,
          "startTimestampDate": "2012-01-05T15:22:14.229",
          "executionTime": 11,
          "description": "id#testCachingReuseResultsInDifferentComponentPipeline(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334244,
          "startTimestampDate": "2012-01-05T15:22:14.244",
          "executionTime": 9,
          "description": "id#testCachingEqualCacheKeys(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334253,
          "startTimestampDate": "2012-01-05T15:22:14.253",
          "executionTime": 9,
          "description": "id#testOutputAttributesWithNullValuesOneComponentCached(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334262,
          "startTimestampDate": "2012-01-05T15:22:14.262",
          "executionTime": 9,
          "description": "id#testCachingInitAttributesIgnoredInCacheKey(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334272,
          "startTimestampDate": "2012-01-05T15:22:14.272",
          "executionTime": 7,
          "description": "id#testCachingDifferentCacheKeys(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334279,
          "startTimestampDate": "2012-01-05T15:22:14.279",
          "executionTime": 0,
          "description": "id#testConcurrentDocumentModifications(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)[0]",
          "status": "IGNORED",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testMultipleInitialization(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMultipleInitialization(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMultipleDisposal(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMultipleDisposal(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUsingCachingManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUsingCachingManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUsingSimpleManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUsingSimpleManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUnexpectedComponentClass(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUnexpectedComponentClass(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAutomaticInitialization(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAutomaticInitialization(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUnknownComponentId(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "2012-01-05 15:22:10,020 WARN  org.carrot2.util.ReflectionUtils: Could not load class: nonexistent-component (nonexistent-component).\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUnknownComponentId(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUsingPoolingManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUsingPoolingManagerWithMoreThanOneController(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUnexpectedComponentDesignatorType(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUnexpectedComponentDesignatorType(org.carrot2.core.ControllerTest$ComponentManagerIndependentTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStress(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStress(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testContextDisposal(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testContextDisposal(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$SimpleControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStress(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStress(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testContextDisposal(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testContextDisposal(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$PoolingControllerCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "2012-01-05 15:22:11,070 INFO  org.carrot2.core.PoolingProcessingComponentManager$NonPrimitiveInputAttributesCheck: An object of a non-@ThreadSafe class org.carrot2.core.ControllerTestsPooling$NonThreadSafeClass bound at initialization-time to attribute nonThreadSafeProcessing. Make sure this is intended.\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testResettingReferenceAttribute(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testResettingReferenceAttribute(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "2012-01-05 15:22:11,117 INFO  org.carrot2.core.PoolingProcessingComponentManager$NonPrimitiveInputAttributesCheck: An object of a non-@ThreadSafe class org.carrot2.core.ControllerTestsPooling$NonThreadSafeClass bound at initialization-time to attribute nonThreadSafeInit. Make sure this is intended.\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testRepeatedExecution3Components(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRepeatedExecution3Components(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentInstanceReused(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentInstanceReused(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$PoolingControllerPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStress(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStress(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testContextDisposal(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testContextDisposal(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "2012-01-05 15:22:11,884 INFO  org.carrot2.core.PoolingProcessingComponentManager$NonPrimitiveInputAttributesCheck: An object of a non-@ThreadSafe class org.carrot2.core.ControllerTestsPooling$NonThreadSafeClass bound at initialization-time to attribute nonThreadSafeProcessing. Make sure this is intended.\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testResettingReferenceAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testResettingReferenceAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "2012-01-05 15:22:11,910 INFO  org.carrot2.core.PoolingProcessingComponentManager$NonPrimitiveInputAttributesCheck: An object of a non-@ThreadSafe class org.carrot2.core.ControllerTestsPooling$NonThreadSafeClass bound at initialization-time to attribute nonThreadSafeInit. Make sure this is intended.\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testRepeatedExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRepeatedExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentInstanceReused(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentInstanceReused(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOffPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStress(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStress(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testContextDisposal(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testContextDisposal(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "2012-01-05 15:22:12,924 INFO  org.carrot2.core.PoolingProcessingComponentManager$NonPrimitiveInputAttributesCheck: An object of a non-@ThreadSafe class org.carrot2.core.ControllerTestsPooling$NonThreadSafeClass bound at initialization-time to attribute nonThreadSafeProcessing. Make sure this is intended.\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "warningOnNonThreadSafeProcessingInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "noWarningOnNonThreadSafeInputClassAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testResettingReferenceAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testResettingReferenceAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "2012-01-05 15:22:12,966 INFO  org.carrot2.core.PoolingProcessingComponentManager$NonPrimitiveInputAttributesCheck: An object of a non-@ThreadSafe class org.carrot2.core.ControllerTestsPooling$NonThreadSafeClass bound at initialization-time to attribute nonThreadSafeInit. Make sure this is intended.\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "warningOnNonThreadSafeInitInputInstanceAttributeProvidedOnInit(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testRepeatedExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRepeatedExecution3Components(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testResettingRequiredProcessingAttributeToNull(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentInstanceReused(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentInstanceReused(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testResettingPrimitiveAttribute(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "noWarningOnNonThreadSafeInputInstanceFieldDefault(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentConfigurationInitProcessingAttributeCreation(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnPoolingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCachingReuseResultsInDifferentComponentPipeline(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCachingReuseResultsInDifferentComponentPipeline(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCachingEqualCacheKeys(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCachingEqualCacheKeys(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOutputAttributesWithNullValuesOneComponentCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOutputAttributesWithNullValuesOneComponentCached(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCachingInitAttributesIgnoredInCacheKey(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCachingInitAttributesIgnoredInCacheKey(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCachingDifferentCacheKeys(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCachingDifferentCacheKeys(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testConcurrentDocumentModifications(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testConcurrentDocumentModifications(org.carrot2.core.ControllerTest$CachingPoolingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStress(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStress(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testContextDisposal(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testContextDisposal(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOffCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStatsTwoGoodQueriesCached(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUnrelatedProcessingAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalExecutionTimeMeasurement(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionWhileInit(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStatsOneGoodQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionWhileCreatingInstances(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentConfigurationDifferentInitAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStress(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStress(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyStatsInNewController(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalExecution1Component(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionBeforeProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentConfigurationDuplicateComponentId(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCollectionOfInitOutputAttributes(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "settingInitAttributeToNull(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPassingRequiredProcessingAttribute(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testContextDisposal(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testContextDisposal(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInputAttributesCopiedOnOutput(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStatsOneGoodQueryOneErrorQuery(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testProcessingInvocationMethods(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOutputAttributesWithNullValues(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInitProcessingInputRequiredAttributeProvidedDuringProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalExecution3Components(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComponentConfigurationProcessingAttributeAtInitTime(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExceptionAfterProcessing(org.carrot2.core.ControllerTest$CachingControllerCachingOnCommonTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCachingReuseResultsInDifferentComponentPipeline(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCachingReuseResultsInDifferentComponentPipeline(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCachingEqualCacheKeys(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCachingEqualCacheKeys(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOutputAttributesWithNullValuesOneComponentCached(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOutputAttributesWithNullValuesOneComponentCached(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCachingInitAttributesIgnoredInCacheKey(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCachingInitAttributesIgnoredInCacheKey(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCachingDifferentCacheKeys(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCachingDifferentCacheKeys(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testConcurrentDocumentModifications(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testConcurrentDocumentModifications(org.carrot2.core.ControllerTest$CachingControllerCachingOnCachingTests)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773333497,
      "startTimestampDate": "2012-01-05T15:22:13.497",
      "executionTime": 860,
      "description": {
        "id": "id#org.carrot2.dcs.DcsAppTest[4]",
        "displayName": "org.carrot2.dcs.DcsAppTest",
        "className": "org.carrot2.dcs.DcsAppTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          },
          {
            "com.carrotsearch.randomizedtesting.annotations.Nightly": {
              "value": ""
            }
          },
          {
            "com.carrotsearch.randomizedtesting.annotations.ThreadLeaks": {
              "stackSamples": 10,
              "linger": 1000,
              "leakedThreadsBelongToSuite": true,
              "failTestIfLeaking": true
            }
          }
        ],
        "children": [
          {
            "id": "id#testOnlyClusters(org.carrot2.dcs.DcsAppTest)[0]",
            "displayName": "testOnlyClusters(org.carrot2.dcs.DcsAppTest)",
            "methodName": "testOnlyClusters",
            "className": "org.carrot2.dcs.DcsAppTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testJsonOutput(org.carrot2.dcs.DcsAppTest)[0]",
            "displayName": "testJsonOutput(org.carrot2.dcs.DcsAppTest)",
            "methodName": "testJsonOutput",
            "className": "org.carrot2.dcs.DcsAppTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTextarea(org.carrot2.dcs.DcsAppTest)[0]",
            "displayName": "testTextarea(org.carrot2.dcs.DcsAppTest)",
            "methodName": "testTextarea",
            "className": "org.carrot2.dcs.DcsAppTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testJsonCallback(org.carrot2.dcs.DcsAppTest)[0]",
            "displayName": "testJsonCallback(org.carrot2.dcs.DcsAppTest)",
            "methodName": "testJsonCallback",
            "className": "org.carrot2.dcs.DcsAppTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDcsConfigLocation(org.carrot2.dcs.DcsAppTest)[0]",
            "displayName": "testDcsConfigLocation(org.carrot2.dcs.DcsAppTest)",
            "methodName": "testDcsConfigLocation",
            "className": "org.carrot2.dcs.DcsAppTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#directFeedAttributeOverriding(org.carrot2.dcs.DcsAppTest)[0]",
            "displayName": "directFeedAttributeOverriding(org.carrot2.dcs.DcsAppTest)",
            "methodName": "directFeedAttributeOverriding",
            "className": "org.carrot2.dcs.DcsAppTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPostWithVariousC2StreamXmlEncoding(org.carrot2.dcs.DcsAppTest)[0]",
            "displayName": "testPostWithVariousC2StreamXmlEncoding(org.carrot2.dcs.DcsAppTest)",
            "methodName": "testPostWithVariousC2StreamXmlEncoding",
            "className": "org.carrot2.dcs.DcsAppTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStartPage(org.carrot2.dcs.DcsAppTest)[0]",
            "displayName": "testStartPage(org.carrot2.dcs.DcsAppTest)",
            "methodName": "testStartPage",
            "className": "org.carrot2.dcs.DcsAppTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testGetWithExternalSource(org.carrot2.dcs.DcsAppTest)[0]",
            "displayName": "testGetWithExternalSource(org.carrot2.dcs.DcsAppTest)",
            "methodName": "testGetWithExternalSource",
            "className": "org.carrot2.dcs.DcsAppTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOutputPage(org.carrot2.dcs.DcsAppTest)[0]",
            "displayName": "testOutputPage(org.carrot2.dcs.DcsAppTest)",
            "methodName": "testOutputPage",
            "className": "org.carrot2.dcs.DcsAppTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFileUpload(org.carrot2.dcs.DcsAppTest)[0]",
            "displayName": "testFileUpload(org.carrot2.dcs.DcsAppTest)",
            "methodName": "testFileUpload",
            "className": "org.carrot2.dcs.DcsAppTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPostUrlEncodedWithC2Stream(org.carrot2.dcs.DcsAppTest)[0]",
            "displayName": "testPostUrlEncodedWithC2Stream(org.carrot2.dcs.DcsAppTest)",
            "methodName": "testPostUrlEncodedWithC2Stream",
            "className": "org.carrot2.dcs.DcsAppTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testExternalSource(org.carrot2.dcs.DcsAppTest)[0]",
            "displayName": "testExternalSource(org.carrot2.dcs.DcsAppTest)",
            "methodName": "testExternalSource",
            "className": "org.carrot2.dcs.DcsAppTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPostUrlEncodedWithExternalSource(org.carrot2.dcs.DcsAppTest)[0]",
            "displayName": "testPostUrlEncodedWithExternalSource(org.carrot2.dcs.DcsAppTest)",
            "methodName": "testPostUrlEncodedWithExternalSource",
            "className": "org.carrot2.dcs.DcsAppTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testParametersPage(org.carrot2.dcs.DcsAppTest)[0]",
            "displayName": "testParametersPage(org.carrot2.dcs.DcsAppTest)",
            "methodName": "testParametersPage",
            "className": "org.carrot2.dcs.DcsAppTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInputPage(org.carrot2.dcs.DcsAppTest)[0]",
            "displayName": "testInputPage(org.carrot2.dcs.DcsAppTest)",
            "methodName": "testInputPage",
            "className": "org.carrot2.dcs.DcsAppTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773334185,
          "startTimestampDate": "2012-01-05T15:22:14.185",
          "executionTime": 1,
          "description": "id#testOnlyClusters(org.carrot2.dcs.DcsAppTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334188,
          "startTimestampDate": "2012-01-05T15:22:14.188",
          "executionTime": 1,
          "description": "id#testJsonOutput(org.carrot2.dcs.DcsAppTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334190,
          "startTimestampDate": "2012-01-05T15:22:14.190",
          "executionTime": 1,
          "description": "id#testTextarea(org.carrot2.dcs.DcsAppTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334193,
          "startTimestampDate": "2012-01-05T15:22:14.193",
          "executionTime": 0,
          "description": "id#testJsonCallback(org.carrot2.dcs.DcsAppTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334214,
          "startTimestampDate": "2012-01-05T15:22:14.214",
          "executionTime": 1,
          "description": "id#testDcsConfigLocation(org.carrot2.dcs.DcsAppTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334216,
          "startTimestampDate": "2012-01-05T15:22:14.216",
          "executionTime": 0,
          "description": "id#directFeedAttributeOverriding(org.carrot2.dcs.DcsAppTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334217,
          "startTimestampDate": "2012-01-05T15:22:14.217",
          "executionTime": 0,
          "description": "id#testPostWithVariousC2StreamXmlEncoding(org.carrot2.dcs.DcsAppTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334218,
          "startTimestampDate": "2012-01-05T15:22:14.218",
          "executionTime": 0,
          "description": "id#testStartPage(org.carrot2.dcs.DcsAppTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334219,
          "startTimestampDate": "2012-01-05T15:22:14.219",
          "executionTime": 0,
          "description": "id#testGetWithExternalSource(org.carrot2.dcs.DcsAppTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334220,
          "startTimestampDate": "2012-01-05T15:22:14.220",
          "executionTime": 0,
          "description": "id#testOutputPage(org.carrot2.dcs.DcsAppTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334221,
          "startTimestampDate": "2012-01-05T15:22:14.221",
          "executionTime": 1,
          "description": "id#testFileUpload(org.carrot2.dcs.DcsAppTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334230,
          "startTimestampDate": "2012-01-05T15:22:14.230",
          "executionTime": 1,
          "description": "id#testPostUrlEncodedWithC2Stream(org.carrot2.dcs.DcsAppTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334238,
          "startTimestampDate": "2012-01-05T15:22:14.238",
          "executionTime": 1,
          "description": "id#testExternalSource(org.carrot2.dcs.DcsAppTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334241,
          "startTimestampDate": "2012-01-05T15:22:14.241",
          "executionTime": 1,
          "description": "id#testPostUrlEncodedWithExternalSource(org.carrot2.dcs.DcsAppTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334243,
          "startTimestampDate": "2012-01-05T15:22:14.243",
          "executionTime": 0,
          "description": "id#testParametersPage(org.carrot2.dcs.DcsAppTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334246,
          "startTimestampDate": "2012-01-05T15:22:14.246",
          "executionTime": 1,
          "description": "id#testInputPage(org.carrot2.dcs.DcsAppTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "APPEND_STDOUT",
          "content": "2012-01-05 15:22:13,514 INFO  dcs: Starting DCS...\r\n2012-01-05 15:22:14,154 INFO  dcs: DCS started on port: 57913\r\n"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOnlyClusters(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOnlyClusters(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testJsonOutput(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testJsonOutput(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTextarea(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTextarea(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testJsonCallback(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testJsonCallback(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDcsConfigLocation(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDcsConfigLocation(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "directFeedAttributeOverriding(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "directFeedAttributeOverriding(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPostWithVariousC2StreamXmlEncoding(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPostWithVariousC2StreamXmlEncoding(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStartPage(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStartPage(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testGetWithExternalSource(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testGetWithExternalSource(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOutputPage(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOutputPage(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFileUpload(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFileUpload(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPostUrlEncodedWithC2Stream(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPostUrlEncodedWithC2Stream(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testExternalSource(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testExternalSource(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPostUrlEncodedWithExternalSource(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPostUrlEncodedWithExternalSource(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testParametersPage(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testParametersPage(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInputPage(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInputPage(org.carrot2.dcs.DcsAppTest)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "2012-01-05 15:22:14,357 INFO  dcs: DCS stopped.\r\n"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773334361,
      "startTimestampDate": "2012-01-05T15:22:14.361",
      "executionTime": 161,
      "description": {
        "id": "id#org.carrot2.text.preprocessing.CaseNormalizerTest[2]",
        "displayName": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testDemos(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
            "displayName": "testDemos(org.carrot2.text.preprocessing.CaseNormalizerTest)",
            "methodName": "testDemos",
            "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMoreRepeatedDifferentTokens(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
            "displayName": "testMoreRepeatedDifferentTokens(org.carrot2.text.preprocessing.CaseNormalizerTest)",
            "methodName": "testMoreRepeatedDifferentTokens",
            "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTokenFiltering(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
            "displayName": "testTokenFiltering(org.carrot2.text.preprocessing.CaseNormalizerTest)",
            "methodName": "testTokenFiltering",
            "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOneTokenVariantNonequalFrequencies(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
            "displayName": "testOneTokenVariantNonequalFrequencies(org.carrot2.text.preprocessing.CaseNormalizerTest)",
            "methodName": "testOneTokenVariantNonequalFrequencies",
            "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTokenTypes(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
            "displayName": "testTokenTypes(org.carrot2.text.preprocessing.CaseNormalizerTest)",
            "methodName": "testTokenTypes",
            "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOneTokenVariantEqualFrequencies(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
            "displayName": "testOneTokenVariantEqualFrequencies(org.carrot2.text.preprocessing.CaseNormalizerTest)",
            "methodName": "testOneTokenVariantEqualFrequencies",
            "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMoreSingleDifferentTokens(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
            "displayName": "testMoreSingleDifferentTokens(org.carrot2.text.preprocessing.CaseNormalizerTest)",
            "methodName": "testMoreSingleDifferentTokens",
            "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPunctuation(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
            "displayName": "testPunctuation(org.carrot2.text.preprocessing.CaseNormalizerTest)",
            "methodName": "testPunctuation",
            "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOneToken(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
            "displayName": "testOneToken(org.carrot2.text.preprocessing.CaseNormalizerTest)",
            "methodName": "testOneToken",
            "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMoreDocuments(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
            "displayName": "testMoreDocuments(org.carrot2.text.preprocessing.CaseNormalizerTest)",
            "methodName": "testMoreDocuments",
            "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDfThresholding(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
            "displayName": "testDfThresholding(org.carrot2.text.preprocessing.CaseNormalizerTest)",
            "methodName": "testDfThresholding",
            "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmpty(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
            "displayName": "testEmpty(org.carrot2.text.preprocessing.CaseNormalizerTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPunctuationTokenFirst(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
            "displayName": "testPunctuationTokenFirst(org.carrot2.text.preprocessing.CaseNormalizerTest)",
            "methodName": "testPunctuationTokenFirst",
            "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMoreTokenVariants(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
            "displayName": "testMoreTokenVariants(org.carrot2.text.preprocessing.CaseNormalizerTest)",
            "methodName": "testMoreTokenVariants",
            "className": "org.carrot2.text.preprocessing.CaseNormalizerTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773334368,
          "startTimestampDate": "2012-01-05T15:22:14.368",
          "executionTime": 11,
          "description": "id#testDemos(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334380,
          "startTimestampDate": "2012-01-05T15:22:14.380",
          "executionTime": 6,
          "description": "id#testMoreRepeatedDifferentTokens(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334386,
          "startTimestampDate": "2012-01-05T15:22:14.386",
          "executionTime": 9,
          "description": "id#testTokenFiltering(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334396,
          "startTimestampDate": "2012-01-05T15:22:14.396",
          "executionTime": 5,
          "description": "id#testOneTokenVariantNonequalFrequencies(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334413,
          "startTimestampDate": "2012-01-05T15:22:14.413",
          "executionTime": 4,
          "description": "id#testTokenTypes(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334439,
          "startTimestampDate": "2012-01-05T15:22:14.439",
          "executionTime": 9,
          "description": "id#testOneTokenVariantEqualFrequencies(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334449,
          "startTimestampDate": "2012-01-05T15:22:14.449",
          "executionTime": 5,
          "description": "id#testMoreSingleDifferentTokens(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334454,
          "startTimestampDate": "2012-01-05T15:22:14.454",
          "executionTime": 6,
          "description": "id#testPunctuation(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334461,
          "startTimestampDate": "2012-01-05T15:22:14.461",
          "executionTime": 6,
          "description": "id#testOneToken(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334490,
          "startTimestampDate": "2012-01-05T15:22:14.490",
          "executionTime": 6,
          "description": "id#testMoreDocuments(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334496,
          "startTimestampDate": "2012-01-05T15:22:14.496",
          "executionTime": 4,
          "description": "id#testDfThresholding(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334507,
          "startTimestampDate": "2012-01-05T15:22:14.507",
          "executionTime": 4,
          "description": "id#testEmpty(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334512,
          "startTimestampDate": "2012-01-05T15:22:14.512",
          "executionTime": 4,
          "description": "id#testPunctuationTokenFirst(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334517,
          "startTimestampDate": "2012-01-05T15:22:14.517",
          "executionTime": 4,
          "description": "id#testMoreTokenVariants(org.carrot2.text.preprocessing.CaseNormalizerTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testDemos(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDemos(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMoreRepeatedDifferentTokens(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMoreRepeatedDifferentTokens(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTokenFiltering(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTokenFiltering(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOneTokenVariantNonequalFrequencies(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOneTokenVariantNonequalFrequencies(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTokenTypes(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTokenTypes(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOneTokenVariantEqualFrequencies(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOneTokenVariantEqualFrequencies(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMoreSingleDifferentTokens(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMoreSingleDifferentTokens(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPunctuation(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPunctuation(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOneToken(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOneToken(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMoreDocuments(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMoreDocuments(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDfThresholding(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDfThresholding(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPunctuationTokenFirst(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPunctuationTokenFirst(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMoreTokenVariants(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMoreTokenVariants(org.carrot2.text.preprocessing.CaseNormalizerTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773334524,
      "startTimestampDate": "2012-01-05T15:22:14.524",
      "executionTime": 27,
      "description": {
        "id": "id#org.carrot2.util.resource.ResourceLookupTest[2]",
        "displayName": "org.carrot2.util.resource.ResourceLookupTest",
        "className": "org.carrot2.util.resource.ResourceLookupTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testHashCodeEqualsDirLocator(org.carrot2.util.resource.ResourceLookupTest)[0]",
            "displayName": "testHashCodeEqualsDirLocator(org.carrot2.util.resource.ResourceLookupTest)",
            "methodName": "testHashCodeEqualsDirLocator",
            "className": "org.carrot2.util.resource.ResourceLookupTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsClassLocator(org.carrot2.util.resource.ResourceLookupTest)[0]",
            "displayName": "testHashCodeEqualsClassLocator(org.carrot2.util.resource.ResourceLookupTest)",
            "methodName": "testHashCodeEqualsClassLocator",
            "className": "org.carrot2.util.resource.ResourceLookupTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsResourceLookup(org.carrot2.util.resource.ResourceLookupTest)[0]",
            "displayName": "testHashCodeEqualsResourceLookup(org.carrot2.util.resource.ResourceLookupTest)",
            "methodName": "testHashCodeEqualsResourceLookup",
            "className": "org.carrot2.util.resource.ResourceLookupTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsContextClassLoaderLocator(org.carrot2.util.resource.ResourceLookupTest)[0]",
            "displayName": "testHashCodeEqualsContextClassLoaderLocator(org.carrot2.util.resource.ResourceLookupTest)",
            "methodName": "testHashCodeEqualsContextClassLoaderLocator",
            "className": "org.carrot2.util.resource.ResourceLookupTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsClassLoaderLocator(org.carrot2.util.resource.ResourceLookupTest)[0]",
            "displayName": "testHashCodeEqualsClassLoaderLocator(org.carrot2.util.resource.ResourceLookupTest)",
            "methodName": "testHashCodeEqualsClassLoaderLocator",
            "className": "org.carrot2.util.resource.ResourceLookupTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsPrefixDecorator(org.carrot2.util.resource.ResourceLookupTest)[0]",
            "displayName": "testHashCodeEqualsPrefixDecorator(org.carrot2.util.resource.ResourceLookupTest)",
            "methodName": "testHashCodeEqualsPrefixDecorator",
            "className": "org.carrot2.util.resource.ResourceLookupTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773334527,
          "startTimestampDate": "2012-01-05T15:22:14.527",
          "executionTime": 4,
          "description": "id#testHashCodeEqualsDirLocator(org.carrot2.util.resource.ResourceLookupTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334532,
          "startTimestampDate": "2012-01-05T15:22:14.532",
          "executionTime": 5,
          "description": "id#testHashCodeEqualsClassLocator(org.carrot2.util.resource.ResourceLookupTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334537,
          "startTimestampDate": "2012-01-05T15:22:14.537",
          "executionTime": 3,
          "description": "id#testHashCodeEqualsResourceLookup(org.carrot2.util.resource.ResourceLookupTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334541,
          "startTimestampDate": "2012-01-05T15:22:14.541",
          "executionTime": 3,
          "description": "id#testHashCodeEqualsContextClassLoaderLocator(org.carrot2.util.resource.ResourceLookupTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334544,
          "startTimestampDate": "2012-01-05T15:22:14.544",
          "executionTime": 3,
          "description": "id#testHashCodeEqualsClassLoaderLocator(org.carrot2.util.resource.ResourceLookupTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334548,
          "startTimestampDate": "2012-01-05T15:22:14.548",
          "executionTime": 2,
          "description": "id#testHashCodeEqualsPrefixDecorator(org.carrot2.util.resource.ResourceLookupTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testHashCodeEqualsDirLocator(org.carrot2.util.resource.ResourceLookupTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHashCodeEqualsDirLocator(org.carrot2.util.resource.ResourceLookupTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHashCodeEqualsClassLocator(org.carrot2.util.resource.ResourceLookupTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHashCodeEqualsClassLocator(org.carrot2.util.resource.ResourceLookupTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHashCodeEqualsResourceLookup(org.carrot2.util.resource.ResourceLookupTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHashCodeEqualsResourceLookup(org.carrot2.util.resource.ResourceLookupTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHashCodeEqualsContextClassLoaderLocator(org.carrot2.util.resource.ResourceLookupTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHashCodeEqualsContextClassLoaderLocator(org.carrot2.util.resource.ResourceLookupTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHashCodeEqualsClassLoaderLocator(org.carrot2.util.resource.ResourceLookupTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHashCodeEqualsClassLoaderLocator(org.carrot2.util.resource.ResourceLookupTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHashCodeEqualsPrefixDecorator(org.carrot2.util.resource.ResourceLookupTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHashCodeEqualsPrefixDecorator(org.carrot2.util.resource.ResourceLookupTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773333628,
      "startTimestampDate": "2012-01-05T15:22:13.628",
      "executionTime": 60,
      "description": {
        "id": "id#org.carrot2.output.metrics.NormalizedMutualInformationMetricTest[2]",
        "displayName": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testTrivialCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
            "displayName": "testTrivialCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
            "methodName": "testTrivialCluster",
            "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmptyCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
            "displayName": "testEmptyCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
            "methodName": "testEmptyCluster",
            "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPartiallyContaminatedCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
            "displayName": "testPartiallyContaminatedCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
            "methodName": "testPartiallyContaminatedCluster",
            "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testIdealClustering(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
            "displayName": "testIdealClustering(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
            "methodName": "testIdealClustering",
            "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
            "displayName": "testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
            "methodName": "testHardPartitionsOverlappingClusters",
            "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoPartitionInformation(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
            "displayName": "testNoPartitionInformation(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
            "methodName": "testNoPartitionInformation",
            "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
            "displayName": "testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
            "methodName": "testHardClustersWithOverlappingPartitions",
            "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPureCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
            "displayName": "testPureCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
            "methodName": "testPureCluster",
            "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFullyContaminatedCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
            "displayName": "testFullyContaminatedCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
            "methodName": "testFullyContaminatedCluster",
            "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAllDocumentsInOtherTopics(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
            "displayName": "testAllDocumentsInOtherTopics(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
            "methodName": "testAllDocumentsInOtherTopics",
            "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
            "displayName": "testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)",
            "methodName": "testOverlappingPartitionsOverlappingClusters",
            "className": "org.carrot2.output.metrics.NormalizedMutualInformationMetricTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773333632,
          "startTimestampDate": "2012-01-05T15:22:13.632",
          "executionTime": 12,
          "description": "id#testTrivialCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333645,
          "startTimestampDate": "2012-01-05T15:22:13.645",
          "executionTime": 2,
          "description": "id#testEmptyCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333648,
          "startTimestampDate": "2012-01-05T15:22:13.648",
          "executionTime": 5,
          "description": "id#testPartiallyContaminatedCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333654,
          "startTimestampDate": "2012-01-05T15:22:13.654",
          "executionTime": 2,
          "description": "id#testIdealClustering(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333657,
          "startTimestampDate": "2012-01-05T15:22:13.657",
          "executionTime": 2,
          "description": "id#testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333660,
          "startTimestampDate": "2012-01-05T15:22:13.660",
          "executionTime": 3,
          "description": "id#testNoPartitionInformation(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333664,
          "startTimestampDate": "2012-01-05T15:22:13.664",
          "executionTime": 12,
          "description": "id#testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333677,
          "startTimestampDate": "2012-01-05T15:22:13.677",
          "executionTime": 3,
          "description": "id#testPureCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333681,
          "startTimestampDate": "2012-01-05T15:22:13.681",
          "executionTime": 2,
          "description": "id#testFullyContaminatedCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333683,
          "startTimestampDate": "2012-01-05T15:22:13.683",
          "executionTime": 2,
          "description": "id#testAllDocumentsInOtherTopics(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333686,
          "startTimestampDate": "2012-01-05T15:22:13.686",
          "executionTime": 2,
          "description": "id#testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testTrivialCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTrivialCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPartiallyContaminatedCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPartiallyContaminatedCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testIdealClustering(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIdealClustering(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHardPartitionsOverlappingClusters(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoPartitionInformation(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoPartitionInformation(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHardClustersWithOverlappingPartitions(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPureCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPureCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFullyContaminatedCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFullyContaminatedCluster(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAllDocumentsInOtherTopics(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAllDocumentsInOtherTopics(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOverlappingPartitionsOverlappingClusters(org.carrot2.output.metrics.NormalizedMutualInformationMetricTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773334554,
      "startTimestampDate": "2012-01-05T15:22:14.554",
      "executionTime": 19,
      "description": {
        "id": "id#org.carrot2.webapp.source.WebDocumentSourceTest[2]",
        "displayName": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testMetadataAvailable(org.carrot2.webapp.source.WebDocumentSourceTest)[0]",
            "displayName": "testMetadataAvailable(org.carrot2.webapp.source.WebDocumentSourceTest)",
            "methodName": "testMetadataAvailable",
            "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFirstResults(org.carrot2.webapp.source.WebDocumentSourceTest)[0]",
            "displayName": "testFirstResults(org.carrot2.webapp.source.WebDocumentSourceTest)",
            "methodName": "testFirstResults",
            "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSmallQuery(org.carrot2.webapp.source.WebDocumentSourceTest)[0]",
            "displayName": "testSmallQuery(org.carrot2.webapp.source.WebDocumentSourceTest)",
            "methodName": "testSmallQuery",
            "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testUtfCharacters(org.carrot2.webapp.source.WebDocumentSourceTest)[0]",
            "displayName": "testUtfCharacters(org.carrot2.webapp.source.WebDocumentSourceTest)",
            "methodName": "testUtfCharacters",
            "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoResultsQuery(org.carrot2.webapp.source.WebDocumentSourceTest)[0]",
            "displayName": "testNoResultsQuery(org.carrot2.webapp.source.WebDocumentSourceTest)",
            "methodName": "testNoResultsQuery",
            "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testURLsUnique(org.carrot2.webapp.source.WebDocumentSourceTest)[0]",
            "displayName": "testURLsUnique(org.carrot2.webapp.source.WebDocumentSourceTest)",
            "methodName": "testURLsUnique",
            "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLargeQuery(org.carrot2.webapp.source.WebDocumentSourceTest)[0]",
            "displayName": "testLargeQuery(org.carrot2.webapp.source.WebDocumentSourceTest)",
            "methodName": "testLargeQuery",
            "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testResultsTotal(org.carrot2.webapp.source.WebDocumentSourceTest)[0]",
            "displayName": "testResultsTotal(org.carrot2.webapp.source.WebDocumentSourceTest)",
            "methodName": "testResultsTotal",
            "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHtmlUnescaping(org.carrot2.webapp.source.WebDocumentSourceTest)[0]",
            "displayName": "testHtmlUnescaping(org.carrot2.webapp.source.WebDocumentSourceTest)",
            "methodName": "testHtmlUnescaping",
            "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInCachingController(org.carrot2.webapp.source.WebDocumentSourceTest)[0]",
            "displayName": "testInCachingController(org.carrot2.webapp.source.WebDocumentSourceTest)",
            "methodName": "testInCachingController",
            "className": "org.carrot2.webapp.source.WebDocumentSourceTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773334558,
          "startTimestampDate": "2012-01-05T15:22:14.558",
          "executionTime": 5,
          "description": "id#testMetadataAvailable(org.carrot2.webapp.source.WebDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334564,
          "startTimestampDate": "2012-01-05T15:22:14.564",
          "executionTime": 0,
          "description": "id#testFirstResults(org.carrot2.webapp.source.WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334565,
          "startTimestampDate": "2012-01-05T15:22:14.565",
          "executionTime": 0,
          "description": "id#testSmallQuery(org.carrot2.webapp.source.WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334565,
          "startTimestampDate": "2012-01-05T15:22:14.565",
          "executionTime": 0,
          "description": "id#testUtfCharacters(org.carrot2.webapp.source.WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334565,
          "startTimestampDate": "2012-01-05T15:22:14.565",
          "executionTime": 1,
          "description": "id#testNoResultsQuery(org.carrot2.webapp.source.WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334566,
          "startTimestampDate": "2012-01-05T15:22:14.566",
          "executionTime": 0,
          "description": "id#testURLsUnique(org.carrot2.webapp.source.WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334567,
          "startTimestampDate": "2012-01-05T15:22:14.567",
          "executionTime": 0,
          "description": "id#testLargeQuery(org.carrot2.webapp.source.WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334567,
          "startTimestampDate": "2012-01-05T15:22:14.567",
          "executionTime": 0,
          "description": "id#testResultsTotal(org.carrot2.webapp.source.WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334568,
          "startTimestampDate": "2012-01-05T15:22:14.568",
          "executionTime": 0,
          "description": "id#testHtmlUnescaping(org.carrot2.webapp.source.WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334568,
          "startTimestampDate": "2012-01-05T15:22:14.568",
          "executionTime": 0,
          "description": "id#testInCachingController(org.carrot2.webapp.source.WebDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testMetadataAvailable(org.carrot2.webapp.source.WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMetadataAvailable(org.carrot2.webapp.source.WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFirstResults(org.carrot2.webapp.source.WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFirstResults(org.carrot2.webapp.source.WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSmallQuery(org.carrot2.webapp.source.WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSmallQuery(org.carrot2.webapp.source.WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUtfCharacters(org.carrot2.webapp.source.WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUtfCharacters(org.carrot2.webapp.source.WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoResultsQuery(org.carrot2.webapp.source.WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoResultsQuery(org.carrot2.webapp.source.WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testURLsUnique(org.carrot2.webapp.source.WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testURLsUnique(org.carrot2.webapp.source.WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLargeQuery(org.carrot2.webapp.source.WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLargeQuery(org.carrot2.webapp.source.WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testResultsTotal(org.carrot2.webapp.source.WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testResultsTotal(org.carrot2.webapp.source.WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHtmlUnescaping(org.carrot2.webapp.source.WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHtmlUnescaping(org.carrot2.webapp.source.WebDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInCachingController(org.carrot2.webapp.source.WebDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInCachingController(org.carrot2.webapp.source.WebDocumentSourceTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773333690,
      "startTimestampDate": "2012-01-05T15:22:13.690",
      "executionTime": 146,
      "description": {
        "id": "id#org.carrot2.matrix.factorization.MatrixFactorizationTest[2]",
        "displayName": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
        "className": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testOrderedNMFED(org.carrot2.matrix.factorization.MatrixFactorizationTest)[0]",
            "displayName": "testOrderedNMFED(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
            "methodName": "testOrderedNMFED",
            "className": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLNMF(org.carrot2.matrix.factorization.MatrixFactorizationTest)[0]",
            "displayName": "testLNMF(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
            "methodName": "testLNMF",
            "className": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testUnorderedNMFED(org.carrot2.matrix.factorization.MatrixFactorizationTest)[0]",
            "displayName": "testUnorderedNMFED(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
            "methodName": "testUnorderedNMFED",
            "className": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNMFKL(org.carrot2.matrix.factorization.MatrixFactorizationTest)[0]",
            "displayName": "testNMFKL(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
            "methodName": "testNMFKL",
            "className": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testKMeans(org.carrot2.matrix.factorization.MatrixFactorizationTest)[0]",
            "displayName": "testKMeans(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
            "methodName": "testKMeans",
            "className": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSVD(org.carrot2.matrix.factorization.MatrixFactorizationTest)[0]",
            "displayName": "testSVD(org.carrot2.matrix.factorization.MatrixFactorizationTest)",
            "methodName": "testSVD",
            "className": "org.carrot2.matrix.factorization.MatrixFactorizationTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773333698,
          "startTimestampDate": "2012-01-05T15:22:13.698",
          "executionTime": 6,
          "description": "id#testOrderedNMFED(org.carrot2.matrix.factorization.MatrixFactorizationTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333704,
          "startTimestampDate": "2012-01-05T15:22:13.704",
          "executionTime": 12,
          "description": "id#testLNMF(org.carrot2.matrix.factorization.MatrixFactorizationTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333773,
          "startTimestampDate": "2012-01-05T15:22:13.773",
          "executionTime": 31,
          "description": "id#testUnorderedNMFED(org.carrot2.matrix.factorization.MatrixFactorizationTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333805,
          "startTimestampDate": "2012-01-05T15:22:13.805",
          "executionTime": 5,
          "description": "id#testNMFKL(org.carrot2.matrix.factorization.MatrixFactorizationTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333811,
          "startTimestampDate": "2012-01-05T15:22:13.811",
          "executionTime": 10,
          "description": "id#testKMeans(org.carrot2.matrix.factorization.MatrixFactorizationTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333821,
          "startTimestampDate": "2012-01-05T15:22:13.821",
          "executionTime": 15,
          "description": "id#testSVD(org.carrot2.matrix.factorization.MatrixFactorizationTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testOrderedNMFED(org.carrot2.matrix.factorization.MatrixFactorizationTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOrderedNMFED(org.carrot2.matrix.factorization.MatrixFactorizationTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLNMF(org.carrot2.matrix.factorization.MatrixFactorizationTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLNMF(org.carrot2.matrix.factorization.MatrixFactorizationTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUnorderedNMFED(org.carrot2.matrix.factorization.MatrixFactorizationTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUnorderedNMFED(org.carrot2.matrix.factorization.MatrixFactorizationTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNMFKL(org.carrot2.matrix.factorization.MatrixFactorizationTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNMFKL(org.carrot2.matrix.factorization.MatrixFactorizationTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testKMeans(org.carrot2.matrix.factorization.MatrixFactorizationTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testKMeans(org.carrot2.matrix.factorization.MatrixFactorizationTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSVD(org.carrot2.matrix.factorization.MatrixFactorizationTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSVD(org.carrot2.matrix.factorization.MatrixFactorizationTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773333970,
      "startTimestampDate": "2012-01-05T15:22:13.970",
      "executionTime": 36,
      "description": {
        "id": "id#org.carrot2.util.attribute.constraint.IntModuloConstraintTest[2]",
        "displayName": "org.carrot2.util.attribute.constraint.IntModuloConstraintTest",
        "className": "org.carrot2.util.attribute.constraint.IntModuloConstraintTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testNotMet(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)[0]",
            "displayName": "testNotMet(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
            "methodName": "testNotMet",
            "className": "org.carrot2.util.attribute.constraint.IntModuloConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMet(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)[0]",
            "displayName": "testMet(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
            "methodName": "testMet",
            "className": "org.carrot2.util.attribute.constraint.IntModuloConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInvalidType(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)[0]",
            "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
            "methodName": "testInvalidType",
            "className": "org.carrot2.util.attribute.constraint.IntModuloConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOtherAssignableTypes(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)[0]",
            "displayName": "testOtherAssignableTypes(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
            "methodName": "testOtherAssignableTypes",
            "className": "org.carrot2.util.attribute.constraint.IntModuloConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNull(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)[0]",
            "displayName": "testNull(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)",
            "methodName": "testNull",
            "className": "org.carrot2.util.attribute.constraint.IntModuloConstraintTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773333976,
          "startTimestampDate": "2012-01-05T15:22:13.976",
          "executionTime": 7,
          "description": "id#testNotMet(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773333984,
          "startTimestampDate": "2012-01-05T15:22:13.984",
          "executionTime": 5,
          "description": "id#testMet(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773333990,
          "startTimestampDate": "2012-01-05T15:22:13.990",
          "executionTime": 5,
          "description": "id#testInvalidType(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773333995,
          "startTimestampDate": "2012-01-05T15:22:13.995",
          "executionTime": 5,
          "description": "id#testOtherAssignableTypes(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334001,
          "startTimestampDate": "2012-01-05T15:22:14.001",
          "executionTime": 5,
          "description": "id#testNull(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testNotMet(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNotMet(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMet(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMet(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInvalidType(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInvalidType(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOtherAssignableTypes(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOtherAssignableTypes(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNull(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNull(org.carrot2.util.attribute.constraint.IntModuloConstraintTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773333839,
      "startTimestampDate": "2012-01-05T15:22:13.839",
      "executionTime": 30,
      "description": {
        "id": "id#org.carrot2.text.preprocessing.SuffixSorterTest[2]",
        "displayName": "org.carrot2.text.preprocessing.SuffixSorterTest",
        "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testEmptyBody(org.carrot2.text.preprocessing.SuffixSorterTest)[0]",
            "displayName": "testEmptyBody(org.carrot2.text.preprocessing.SuffixSorterTest)",
            "methodName": "testEmptyBody",
            "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmpty(org.carrot2.text.preprocessing.SuffixSorterTest)[0]",
            "displayName": "testEmpty(org.carrot2.text.preprocessing.SuffixSorterTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmptyTitle(org.carrot2.text.preprocessing.SuffixSorterTest)[0]",
            "displayName": "testEmptyTitle(org.carrot2.text.preprocessing.SuffixSorterTest)",
            "methodName": "testEmptyTitle",
            "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOnePhrase(org.carrot2.text.preprocessing.SuffixSorterTest)[0]",
            "displayName": "testOnePhrase(org.carrot2.text.preprocessing.SuffixSorterTest)",
            "methodName": "testOnePhrase",
            "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmptySnippet(org.carrot2.text.preprocessing.SuffixSorterTest)[0]",
            "displayName": "testEmptySnippet(org.carrot2.text.preprocessing.SuffixSorterTest)",
            "methodName": "testEmptySnippet",
            "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMoreTokens(org.carrot2.text.preprocessing.SuffixSorterTest)[0]",
            "displayName": "testMoreTokens(org.carrot2.text.preprocessing.SuffixSorterTest)",
            "methodName": "testMoreTokens",
            "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPunctuation(org.carrot2.text.preprocessing.SuffixSorterTest)[0]",
            "displayName": "testPunctuation(org.carrot2.text.preprocessing.SuffixSorterTest)",
            "methodName": "testPunctuation",
            "className": "org.carrot2.text.preprocessing.SuffixSorterTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773333842,
          "startTimestampDate": "2012-01-05T15:22:13.842",
          "executionTime": 4,
          "description": "id#testEmptyBody(org.carrot2.text.preprocessing.SuffixSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333846,
          "startTimestampDate": "2012-01-05T15:22:13.846",
          "executionTime": 3,
          "description": "id#testEmpty(org.carrot2.text.preprocessing.SuffixSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333849,
          "startTimestampDate": "2012-01-05T15:22:13.849",
          "executionTime": 3,
          "description": "id#testEmptyTitle(org.carrot2.text.preprocessing.SuffixSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333852,
          "startTimestampDate": "2012-01-05T15:22:13.852",
          "executionTime": 3,
          "description": "id#testOnePhrase(org.carrot2.text.preprocessing.SuffixSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333856,
          "startTimestampDate": "2012-01-05T15:22:13.856",
          "executionTime": 3,
          "description": "id#testEmptySnippet(org.carrot2.text.preprocessing.SuffixSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333860,
          "startTimestampDate": "2012-01-05T15:22:13.860",
          "executionTime": 4,
          "description": "id#testMoreTokens(org.carrot2.text.preprocessing.SuffixSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773333864,
          "startTimestampDate": "2012-01-05T15:22:13.864",
          "executionTime": 4,
          "description": "id#testPunctuation(org.carrot2.text.preprocessing.SuffixSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testEmptyBody(org.carrot2.text.preprocessing.SuffixSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyBody(org.carrot2.text.preprocessing.SuffixSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.text.preprocessing.SuffixSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.text.preprocessing.SuffixSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyTitle(org.carrot2.text.preprocessing.SuffixSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyTitle(org.carrot2.text.preprocessing.SuffixSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOnePhrase(org.carrot2.text.preprocessing.SuffixSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOnePhrase(org.carrot2.text.preprocessing.SuffixSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptySnippet(org.carrot2.text.preprocessing.SuffixSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptySnippet(org.carrot2.text.preprocessing.SuffixSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMoreTokens(org.carrot2.text.preprocessing.SuffixSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMoreTokens(org.carrot2.text.preprocessing.SuffixSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPunctuation(org.carrot2.text.preprocessing.SuffixSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPunctuation(org.carrot2.text.preprocessing.SuffixSorterTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773334009,
      "startTimestampDate": "2012-01-05T15:22:14.009",
      "executionTime": 27,
      "description": {
        "id": "id#org.carrot2.util.RollingWindowAverageTest[2]",
        "displayName": "org.carrot2.util.RollingWindowAverageTest",
        "className": "org.carrot2.util.RollingWindowAverageTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testBucketsNumber(org.carrot2.util.RollingWindowAverageTest)[0]",
            "displayName": "testBucketsNumber(org.carrot2.util.RollingWindowAverageTest)",
            "methodName": "testBucketsNumber",
            "className": "org.carrot2.util.RollingWindowAverageTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testRollingAverage(org.carrot2.util.RollingWindowAverageTest)[0]",
            "displayName": "testRollingAverage(org.carrot2.util.RollingWindowAverageTest)",
            "methodName": "testRollingAverage",
            "className": "org.carrot2.util.RollingWindowAverageTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmpty(org.carrot2.util.RollingWindowAverageTest)[0]",
            "displayName": "testEmpty(org.carrot2.util.RollingWindowAverageTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.util.RollingWindowAverageTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773334018,
          "startTimestampDate": "2012-01-05T15:22:14.018",
          "executionTime": 6,
          "description": "id#testBucketsNumber(org.carrot2.util.RollingWindowAverageTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334025,
          "startTimestampDate": "2012-01-05T15:22:14.025",
          "executionTime": 5,
          "description": "id#testRollingAverage(org.carrot2.util.RollingWindowAverageTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334031,
          "startTimestampDate": "2012-01-05T15:22:14.031",
          "executionTime": 4,
          "description": "id#testEmpty(org.carrot2.util.RollingWindowAverageTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testBucketsNumber(org.carrot2.util.RollingWindowAverageTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testBucketsNumber(org.carrot2.util.RollingWindowAverageTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testRollingAverage(org.carrot2.util.RollingWindowAverageTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRollingAverage(org.carrot2.util.RollingWindowAverageTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.util.RollingWindowAverageTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.util.RollingWindowAverageTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773333872,
      "startTimestampDate": "2012-01-05T15:22:13.872",
      "executionTime": 731,
      "description": {
        "id": "id#org.carrot2.util.httpclient.HttpClientFactoryTest[2]",
        "displayName": "org.carrot2.util.httpclient.HttpClientFactoryTest",
        "className": "org.carrot2.util.httpclient.HttpClientFactoryTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testTimeOut(org.carrot2.util.httpclient.HttpClientFactoryTest)[0]",
            "displayName": "testTimeOut(org.carrot2.util.httpclient.HttpClientFactoryTest)",
            "methodName": "testTimeOut",
            "className": "org.carrot2.util.httpclient.HttpClientFactoryTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773333877,
          "startTimestampDate": "2012-01-05T15:22:13.877",
          "executionTime": 726,
          "description": "id#testTimeOut(org.carrot2.util.httpclient.HttpClientFactoryTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testTimeOut(org.carrot2.util.httpclient.HttpClientFactoryTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTimeOut(org.carrot2.util.httpclient.HttpClientFactoryTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773334037,
      "startTimestampDate": "2012-01-05T15:22:14.037",
      "executionTime": 528,
      "description": {
        "id": "id#org.carrot2.text.linguistic.DefaultTokenizerFactoryTest[2]",
        "displayName": "org.carrot2.text.linguistic.DefaultTokenizerFactoryTest",
        "className": "org.carrot2.text.linguistic.DefaultTokenizerFactoryTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testChineseHasSmartChineseTokenizer(org.carrot2.text.linguistic.DefaultTokenizerFactoryTest)[0]",
            "displayName": "testChineseHasSmartChineseTokenizer(org.carrot2.text.linguistic.DefaultTokenizerFactoryTest)",
            "methodName": "testChineseHasSmartChineseTokenizer",
            "className": "org.carrot2.text.linguistic.DefaultTokenizerFactoryTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773334075,
          "startTimestampDate": "2012-01-05T15:22:14.075",
          "executionTime": 489,
          "description": "id#testChineseHasSmartChineseTokenizer(org.carrot2.text.linguistic.DefaultTokenizerFactoryTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testChineseHasSmartChineseTokenizer(org.carrot2.text.linguistic.DefaultTokenizerFactoryTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testChineseHasSmartChineseTokenizer(org.carrot2.text.linguistic.DefaultTokenizerFactoryTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773334606,
      "startTimestampDate": "2012-01-05T15:22:14.606",
      "executionTime": 101,
      "description": {
        "id": "id#org.carrot2.webapp.util.UserAgentUtilsTest[2]",
        "displayName": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testNull(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
            "displayName": "testNull(org.carrot2.webapp.util.UserAgentUtilsTest)",
            "methodName": "testNull",
            "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFirefly(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
            "displayName": "testFirefly(org.carrot2.webapp.util.UserAgentUtilsTest)",
            "methodName": "testFirefly",
            "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testIENoNumber(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
            "displayName": "testIENoNumber(org.carrot2.webapp.util.UserAgentUtilsTest)",
            "methodName": "testIENoNumber",
            "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testIE7MoreDigits(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
            "displayName": "testIE7MoreDigits(org.carrot2.webapp.util.UserAgentUtilsTest)",
            "methodName": "testIE7MoreDigits",
            "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testIE6(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
            "displayName": "testIE6(org.carrot2.webapp.util.UserAgentUtilsTest)",
            "methodName": "testIE6",
            "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOpera(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
            "displayName": "testOpera(org.carrot2.webapp.util.UserAgentUtilsTest)",
            "methodName": "testOpera",
            "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testIE55(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
            "displayName": "testIE55(org.carrot2.webapp.util.UserAgentUtilsTest)",
            "methodName": "testIE55",
            "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLetterInNumber(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
            "displayName": "testLetterInNumber(org.carrot2.webapp.util.UserAgentUtilsTest)",
            "methodName": "testLetterInNumber",
            "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFirefox(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
            "displayName": "testFirefox(org.carrot2.webapp.util.UserAgentUtilsTest)",
            "methodName": "testFirefox",
            "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testBlank(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
            "displayName": "testBlank(org.carrot2.webapp.util.UserAgentUtilsTest)",
            "methodName": "testBlank",
            "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testIE7(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
            "displayName": "testIE7(org.carrot2.webapp.util.UserAgentUtilsTest)",
            "methodName": "testIE7",
            "className": "org.carrot2.webapp.util.UserAgentUtilsTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773334633,
          "startTimestampDate": "2012-01-05T15:22:14.633",
          "executionTime": 6,
          "description": "id#testNull(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773334641,
          "startTimestampDate": "2012-01-05T15:22:14.641",
          "executionTime": 5,
          "description": "id#testFirefly(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773334647,
          "startTimestampDate": "2012-01-05T15:22:14.647",
          "executionTime": 4,
          "description": "id#testIENoNumber(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773334652,
          "startTimestampDate": "2012-01-05T15:22:14.652",
          "executionTime": 5,
          "description": "id#testIE7MoreDigits(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773334661,
          "startTimestampDate": "2012-01-05T15:22:14.661",
          "executionTime": 14,
          "description": "id#testIE6(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773334684,
          "startTimestampDate": "2012-01-05T15:22:14.684",
          "executionTime": 4,
          "description": "id#testOpera(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773334689,
          "startTimestampDate": "2012-01-05T15:22:14.689",
          "executionTime": 4,
          "description": "id#testIE55(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773334694,
          "startTimestampDate": "2012-01-05T15:22:14.694",
          "executionTime": 3,
          "description": "id#testLetterInNumber(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773334698,
          "startTimestampDate": "2012-01-05T15:22:14.698",
          "executionTime": 3,
          "description": "id#testFirefox(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773334701,
          "startTimestampDate": "2012-01-05T15:22:14.701",
          "executionTime": 3,
          "description": "id#testBlank(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773334704,
          "startTimestampDate": "2012-01-05T15:22:14.704",
          "executionTime": 3,
          "description": "id#testIE7(org.carrot2.webapp.util.UserAgentUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testNull(org.carrot2.webapp.util.UserAgentUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNull(org.carrot2.webapp.util.UserAgentUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFirefly(org.carrot2.webapp.util.UserAgentUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFirefly(org.carrot2.webapp.util.UserAgentUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testIENoNumber(org.carrot2.webapp.util.UserAgentUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIENoNumber(org.carrot2.webapp.util.UserAgentUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testIE7MoreDigits(org.carrot2.webapp.util.UserAgentUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIE7MoreDigits(org.carrot2.webapp.util.UserAgentUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testIE6(org.carrot2.webapp.util.UserAgentUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIE6(org.carrot2.webapp.util.UserAgentUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOpera(org.carrot2.webapp.util.UserAgentUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOpera(org.carrot2.webapp.util.UserAgentUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testIE55(org.carrot2.webapp.util.UserAgentUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIE55(org.carrot2.webapp.util.UserAgentUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLetterInNumber(org.carrot2.webapp.util.UserAgentUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLetterInNumber(org.carrot2.webapp.util.UserAgentUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFirefox(org.carrot2.webapp.util.UserAgentUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFirefox(org.carrot2.webapp.util.UserAgentUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testBlank(org.carrot2.webapp.util.UserAgentUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testBlank(org.carrot2.webapp.util.UserAgentUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testIE7(org.carrot2.webapp.util.UserAgentUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIE7(org.carrot2.webapp.util.UserAgentUtilsTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773334710,
      "startTimestampDate": "2012-01-05T15:22:14.710",
      "executionTime": 23,
      "description": {
        "id": "id#org.carrot2.text.linguistic.ArabicTest[2]",
        "displayName": "org.carrot2.text.linguistic.ArabicTest",
        "className": "org.carrot2.text.linguistic.ArabicTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testCommonWords(org.carrot2.text.linguistic.ArabicTest)[0]",
            "displayName": "testCommonWords(org.carrot2.text.linguistic.ArabicTest)",
            "methodName": "testCommonWords",
            "className": "org.carrot2.text.linguistic.ArabicTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStemmerAvailable(org.carrot2.text.linguistic.ArabicTest)[0]",
            "displayName": "testStemmerAvailable(org.carrot2.text.linguistic.ArabicTest)",
            "methodName": "testStemmerAvailable",
            "className": "org.carrot2.text.linguistic.ArabicTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStemming(org.carrot2.text.linguistic.ArabicTest)[0]",
            "displayName": "testStemming(org.carrot2.text.linguistic.ArabicTest)",
            "methodName": "testStemming",
            "className": "org.carrot2.text.linguistic.ArabicTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLanguageCode(org.carrot2.text.linguistic.ArabicTest)[0]",
            "displayName": "testLanguageCode(org.carrot2.text.linguistic.ArabicTest)",
            "methodName": "testLanguageCode",
            "className": "org.carrot2.text.linguistic.ArabicTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773334711,
          "startTimestampDate": "2012-01-05T15:22:14.711",
          "executionTime": 6,
          "description": "id#testCommonWords(org.carrot2.text.linguistic.ArabicTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773334717,
          "startTimestampDate": "2012-01-05T15:22:14.717",
          "executionTime": 7,
          "description": "id#testStemmerAvailable(org.carrot2.text.linguistic.ArabicTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773334724,
          "startTimestampDate": "2012-01-05T15:22:14.724",
          "executionTime": 5,
          "description": "id#testStemming(org.carrot2.text.linguistic.ArabicTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773334729,
          "startTimestampDate": "2012-01-05T15:22:14.729",
          "executionTime": 4,
          "description": "id#testLanguageCode(org.carrot2.text.linguistic.ArabicTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testCommonWords(org.carrot2.text.linguistic.ArabicTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCommonWords(org.carrot2.text.linguistic.ArabicTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStemmerAvailable(org.carrot2.text.linguistic.ArabicTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStemmerAvailable(org.carrot2.text.linguistic.ArabicTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStemming(org.carrot2.text.linguistic.ArabicTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStemming(org.carrot2.text.linguistic.ArabicTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLanguageCode(org.carrot2.text.linguistic.ArabicTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLanguageCode(org.carrot2.text.linguistic.ArabicTest)"
        }
      ]
    },
    {
      "slave": 2,
      "startTimestamp": 1325773334735,
      "startTimestampDate": "2012-01-05T15:22:14.735",
      "executionTime": 15,
      "description": {
        "id": "id#org.carrot2.core.DocumentTest[2]",
        "displayName": "org.carrot2.core.DocumentTest",
        "className": "org.carrot2.core.DocumentTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testNoIdentifiers(org.carrot2.core.DocumentTest)[0]",
            "displayName": "testNoIdentifiers(org.carrot2.core.DocumentTest)",
            "methodName": "testNoIdentifiers",
            "className": "org.carrot2.core.DocumentTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSomeIdentifiers(org.carrot2.core.DocumentTest)[0]",
            "displayName": "testSomeIdentifiers(org.carrot2.core.DocumentTest)",
            "methodName": "testSomeIdentifiers",
            "className": "org.carrot2.core.DocumentTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNonUniqueIdentifiers(org.carrot2.core.DocumentTest)[0]",
            "displayName": "testNonUniqueIdentifiers(org.carrot2.core.DocumentTest)",
            "methodName": "testNonUniqueIdentifiers",
            "className": "org.carrot2.core.DocumentTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 2,
          "startTimestamp": 1325773334737,
          "startTimestampDate": "2012-01-05T15:22:14.737",
          "executionTime": 5,
          "description": "id#testNoIdentifiers(org.carrot2.core.DocumentTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773334742,
          "startTimestampDate": "2012-01-05T15:22:14.742",
          "executionTime": 4,
          "description": "id#testSomeIdentifiers(org.carrot2.core.DocumentTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 2,
          "startTimestamp": 1325773334746,
          "startTimestampDate": "2012-01-05T15:22:14.746",
          "executionTime": 4,
          "description": "id#testNonUniqueIdentifiers(org.carrot2.core.DocumentTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testNoIdentifiers(org.carrot2.core.DocumentTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoIdentifiers(org.carrot2.core.DocumentTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSomeIdentifiers(org.carrot2.core.DocumentTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSomeIdentifiers(org.carrot2.core.DocumentTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNonUniqueIdentifiers(org.carrot2.core.DocumentTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNonUniqueIdentifiers(org.carrot2.core.DocumentTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773334282,
      "startTimestampDate": "2012-01-05T15:22:14.282",
      "executionTime": 43,
      "description": {
        "id": "id#org.carrot2.text.preprocessing.LabelFormatterTest[2]",
        "displayName": "org.carrot2.text.preprocessing.LabelFormatterTest",
        "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testSingleWordCapitalized(org.carrot2.text.preprocessing.LabelFormatterTest)[0]",
            "displayName": "testSingleWordCapitalized(org.carrot2.text.preprocessing.LabelFormatterTest)",
            "methodName": "testSingleWordCapitalized",
            "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSingleStopWord(org.carrot2.text.preprocessing.LabelFormatterTest)[0]",
            "displayName": "testSingleStopWord(org.carrot2.text.preprocessing.LabelFormatterTest)",
            "methodName": "testSingleStopWord",
            "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testChinesePhrases(org.carrot2.text.preprocessing.LabelFormatterTest)[0]",
            "displayName": "testChinesePhrases(org.carrot2.text.preprocessing.LabelFormatterTest)",
            "methodName": "testChinesePhrases",
            "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPhraseWithoutStopWords(org.carrot2.text.preprocessing.LabelFormatterTest)[0]",
            "displayName": "testPhraseWithoutStopWords(org.carrot2.text.preprocessing.LabelFormatterTest)",
            "methodName": "testPhraseWithoutStopWords",
            "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPhraseWithStopWords(org.carrot2.text.preprocessing.LabelFormatterTest)[0]",
            "displayName": "testPhraseWithStopWords(org.carrot2.text.preprocessing.LabelFormatterTest)",
            "methodName": "testPhraseWithStopWords",
            "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSingleWordNotCapitalized(org.carrot2.text.preprocessing.LabelFormatterTest)[0]",
            "displayName": "testSingleWordNotCapitalized(org.carrot2.text.preprocessing.LabelFormatterTest)",
            "methodName": "testSingleWordNotCapitalized",
            "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPhraseWithCapitalizedWords(org.carrot2.text.preprocessing.LabelFormatterTest)[0]",
            "displayName": "testPhraseWithCapitalizedWords(org.carrot2.text.preprocessing.LabelFormatterTest)",
            "methodName": "testPhraseWithCapitalizedWords",
            "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPhraseWithLowerCaseWords(org.carrot2.text.preprocessing.LabelFormatterTest)[0]",
            "displayName": "testPhraseWithLowerCaseWords(org.carrot2.text.preprocessing.LabelFormatterTest)",
            "methodName": "testPhraseWithLowerCaseWords",
            "className": "org.carrot2.text.preprocessing.LabelFormatterTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773334286,
          "startTimestampDate": "2012-01-05T15:22:14.286",
          "executionTime": 8,
          "description": "id#testSingleWordCapitalized(org.carrot2.text.preprocessing.LabelFormatterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334295,
          "startTimestampDate": "2012-01-05T15:22:14.295",
          "executionTime": 4,
          "description": "id#testSingleStopWord(org.carrot2.text.preprocessing.LabelFormatterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334299,
          "startTimestampDate": "2012-01-05T15:22:14.299",
          "executionTime": 4,
          "description": "id#testChinesePhrases(org.carrot2.text.preprocessing.LabelFormatterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334303,
          "startTimestampDate": "2012-01-05T15:22:14.303",
          "executionTime": 3,
          "description": "id#testPhraseWithoutStopWords(org.carrot2.text.preprocessing.LabelFormatterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334307,
          "startTimestampDate": "2012-01-05T15:22:14.307",
          "executionTime": 4,
          "description": "id#testPhraseWithStopWords(org.carrot2.text.preprocessing.LabelFormatterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334312,
          "startTimestampDate": "2012-01-05T15:22:14.312",
          "executionTime": 4,
          "description": "id#testSingleWordNotCapitalized(org.carrot2.text.preprocessing.LabelFormatterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334316,
          "startTimestampDate": "2012-01-05T15:22:14.316",
          "executionTime": 4,
          "description": "id#testPhraseWithCapitalizedWords(org.carrot2.text.preprocessing.LabelFormatterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334321,
          "startTimestampDate": "2012-01-05T15:22:14.321",
          "executionTime": 4,
          "description": "id#testPhraseWithLowerCaseWords(org.carrot2.text.preprocessing.LabelFormatterTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testSingleWordCapitalized(org.carrot2.text.preprocessing.LabelFormatterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSingleWordCapitalized(org.carrot2.text.preprocessing.LabelFormatterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSingleStopWord(org.carrot2.text.preprocessing.LabelFormatterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSingleStopWord(org.carrot2.text.preprocessing.LabelFormatterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testChinesePhrases(org.carrot2.text.preprocessing.LabelFormatterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testChinesePhrases(org.carrot2.text.preprocessing.LabelFormatterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPhraseWithoutStopWords(org.carrot2.text.preprocessing.LabelFormatterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPhraseWithoutStopWords(org.carrot2.text.preprocessing.LabelFormatterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPhraseWithStopWords(org.carrot2.text.preprocessing.LabelFormatterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPhraseWithStopWords(org.carrot2.text.preprocessing.LabelFormatterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSingleWordNotCapitalized(org.carrot2.text.preprocessing.LabelFormatterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSingleWordNotCapitalized(org.carrot2.text.preprocessing.LabelFormatterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPhraseWithCapitalizedWords(org.carrot2.text.preprocessing.LabelFormatterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPhraseWithCapitalizedWords(org.carrot2.text.preprocessing.LabelFormatterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPhraseWithLowerCaseWords(org.carrot2.text.preprocessing.LabelFormatterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPhraseWithLowerCaseWords(org.carrot2.text.preprocessing.LabelFormatterTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773334327,
      "startTimestampDate": "2012-01-05T15:22:14.327",
      "executionTime": 86,
      "description": {
        "id": "id#org.carrot2.webapp.filter.QueryWordHighlighterTest[2]",
        "displayName": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testUtf8Query(org.carrot2.webapp.filter.QueryWordHighlighterTest)[0]",
            "displayName": "testUtf8Query(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
            "methodName": "testUtf8Query",
            "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCaseInsensitivity(org.carrot2.webapp.filter.QueryWordHighlighterTest)[0]",
            "displayName": "testCaseInsensitivity(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
            "methodName": "testCaseInsensitivity",
            "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOneWordQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)[0]",
            "displayName": "testOneWordQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
            "methodName": "testOneWordQuery",
            "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSpecialCharactersQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)[0]",
            "displayName": "testSpecialCharactersQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
            "methodName": "testSpecialCharactersQuery",
            "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMultiWordQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)[0]",
            "displayName": "testMultiWordQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
            "methodName": "testMultiWordQuery",
            "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSpacesInQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)[0]",
            "displayName": "testSpacesInQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
            "methodName": "testSpacesInQuery",
            "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHtmlInSnippet(org.carrot2.webapp.filter.QueryWordHighlighterTest)[0]",
            "displayName": "testHtmlInSnippet(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
            "methodName": "testHtmlInSnippet",
            "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNullQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)[0]",
            "displayName": "testNullQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
            "methodName": "testNullQuery",
            "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDoubleQuotes(org.carrot2.webapp.filter.QueryWordHighlighterTest)[0]",
            "displayName": "testDoubleQuotes(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
            "methodName": "testDoubleQuotes",
            "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHtmlInQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)[0]",
            "displayName": "testHtmlInQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)",
            "methodName": "testHtmlInQuery",
            "className": "org.carrot2.webapp.filter.QueryWordHighlighterTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773334329,
          "startTimestampDate": "2012-01-05T15:22:14.329",
          "executionTime": 5,
          "description": "id#testUtf8Query(org.carrot2.webapp.filter.QueryWordHighlighterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334334,
          "startTimestampDate": "2012-01-05T15:22:14.334",
          "executionTime": 2,
          "description": "id#testCaseInsensitivity(org.carrot2.webapp.filter.QueryWordHighlighterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334337,
          "startTimestampDate": "2012-01-05T15:22:14.337",
          "executionTime": 1,
          "description": "id#testOneWordQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334347,
          "startTimestampDate": "2012-01-05T15:22:14.347",
          "executionTime": 4,
          "description": "id#testSpecialCharactersQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334351,
          "startTimestampDate": "2012-01-05T15:22:14.351",
          "executionTime": 3,
          "description": "id#testMultiWordQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334355,
          "startTimestampDate": "2012-01-05T15:22:14.355",
          "executionTime": 4,
          "description": "id#testSpacesInQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334364,
          "startTimestampDate": "2012-01-05T15:22:14.364",
          "executionTime": 3,
          "description": "id#testHtmlInSnippet(org.carrot2.webapp.filter.QueryWordHighlighterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334367,
          "startTimestampDate": "2012-01-05T15:22:14.367",
          "executionTime": 12,
          "description": "id#testNullQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334387,
          "startTimestampDate": "2012-01-05T15:22:14.387",
          "executionTime": 15,
          "description": "id#testDoubleQuotes(org.carrot2.webapp.filter.QueryWordHighlighterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334403,
          "startTimestampDate": "2012-01-05T15:22:14.403",
          "executionTime": 9,
          "description": "id#testHtmlInQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testUtf8Query(org.carrot2.webapp.filter.QueryWordHighlighterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUtf8Query(org.carrot2.webapp.filter.QueryWordHighlighterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCaseInsensitivity(org.carrot2.webapp.filter.QueryWordHighlighterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCaseInsensitivity(org.carrot2.webapp.filter.QueryWordHighlighterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOneWordQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOneWordQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSpecialCharactersQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSpecialCharactersQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMultiWordQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMultiWordQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSpacesInQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSpacesInQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHtmlInSnippet(org.carrot2.webapp.filter.QueryWordHighlighterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHtmlInSnippet(org.carrot2.webapp.filter.QueryWordHighlighterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNullQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNullQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDoubleQuotes(org.carrot2.webapp.filter.QueryWordHighlighterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDoubleQuotes(org.carrot2.webapp.filter.QueryWordHighlighterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHtmlInQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHtmlInQuery(org.carrot2.webapp.filter.QueryWordHighlighterTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773334567,
      "startTimestampDate": "2012-01-05T15:22:14.567",
      "executionTime": 74,
      "description": {
        "id": "id#org.carrot2.source.SearchRangeTest[2]",
        "displayName": "org.carrot2.source.SearchRangeTest",
        "className": "org.carrot2.source.SearchRangeTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testGetTwoRangesUnderfull(org.carrot2.source.SearchRangeTest)[0]",
            "displayName": "testGetTwoRangesUnderfull(org.carrot2.source.SearchRangeTest)",
            "methodName": "testGetTwoRangesUnderfull",
            "className": "org.carrot2.source.SearchRangeTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testGetTwoRangesFull(org.carrot2.source.SearchRangeTest)[0]",
            "displayName": "testGetTwoRangesFull(org.carrot2.source.SearchRangeTest)",
            "methodName": "testGetTwoRangesFull",
            "className": "org.carrot2.source.SearchRangeTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMoreThanMaxResultsRequested(org.carrot2.source.SearchRangeTest)[0]",
            "displayName": "testMoreThanMaxResultsRequested(org.carrot2.source.SearchRangeTest)",
            "methodName": "testMoreThanMaxResultsRequested",
            "className": "org.carrot2.source.SearchRangeTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPageModeMoreThanMaxResultsRequested(org.carrot2.source.SearchRangeTest)[0]",
            "displayName": "testPageModeMoreThanMaxResultsRequested(org.carrot2.source.SearchRangeTest)",
            "methodName": "testPageModeMoreThanMaxResultsRequested",
            "className": "org.carrot2.source.SearchRangeTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmptyRange(org.carrot2.source.SearchRangeTest)[0]",
            "displayName": "testEmptyRange(org.carrot2.source.SearchRangeTest)",
            "methodName": "testEmptyRange",
            "className": "org.carrot2.source.SearchRangeTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPageModeGetTwoRangesFull(org.carrot2.source.SearchRangeTest)[0]",
            "displayName": "testPageModeGetTwoRangesFull(org.carrot2.source.SearchRangeTest)",
            "methodName": "testPageModeGetTwoRangesFull",
            "className": "org.carrot2.source.SearchRangeTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testGetOneRangeStartAtNonZero(org.carrot2.source.SearchRangeTest)[0]",
            "displayName": "testGetOneRangeStartAtNonZero(org.carrot2.source.SearchRangeTest)",
            "methodName": "testGetOneRangeStartAtNonZero",
            "className": "org.carrot2.source.SearchRangeTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPageModeGetTwoRangesStartAtNonZero(org.carrot2.source.SearchRangeTest)[0]",
            "displayName": "testPageModeGetTwoRangesStartAtNonZero(org.carrot2.source.SearchRangeTest)",
            "methodName": "testPageModeGetTwoRangesStartAtNonZero",
            "className": "org.carrot2.source.SearchRangeTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testGetTwoRangesStartAtNonZero(org.carrot2.source.SearchRangeTest)[0]",
            "displayName": "testGetTwoRangesStartAtNonZero(org.carrot2.source.SearchRangeTest)",
            "methodName": "testGetTwoRangesStartAtNonZero",
            "className": "org.carrot2.source.SearchRangeTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPageModeEmptyRange(org.carrot2.source.SearchRangeTest)[0]",
            "displayName": "testPageModeEmptyRange(org.carrot2.source.SearchRangeTest)",
            "methodName": "testPageModeEmptyRange",
            "className": "org.carrot2.source.SearchRangeTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPageModeGetOneRangeStartAtNonZero(org.carrot2.source.SearchRangeTest)[0]",
            "displayName": "testPageModeGetOneRangeStartAtNonZero(org.carrot2.source.SearchRangeTest)",
            "methodName": "testPageModeGetOneRangeStartAtNonZero",
            "className": "org.carrot2.source.SearchRangeTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPageModeGetTwoRangesUnderfull(org.carrot2.source.SearchRangeTest)[0]",
            "displayName": "testPageModeGetTwoRangesUnderfull(org.carrot2.source.SearchRangeTest)",
            "methodName": "testPageModeGetTwoRangesUnderfull",
            "className": "org.carrot2.source.SearchRangeTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773334572,
          "startTimestampDate": "2012-01-05T15:22:14.572",
          "executionTime": 5,
          "description": "id#testGetTwoRangesUnderfull(org.carrot2.source.SearchRangeTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334578,
          "startTimestampDate": "2012-01-05T15:22:14.578",
          "executionTime": 4,
          "description": "id#testGetTwoRangesFull(org.carrot2.source.SearchRangeTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334583,
          "startTimestampDate": "2012-01-05T15:22:14.583",
          "executionTime": 7,
          "description": "id#testMoreThanMaxResultsRequested(org.carrot2.source.SearchRangeTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334591,
          "startTimestampDate": "2012-01-05T15:22:14.591",
          "executionTime": 4,
          "description": "id#testPageModeMoreThanMaxResultsRequested(org.carrot2.source.SearchRangeTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334597,
          "startTimestampDate": "2012-01-05T15:22:14.597",
          "executionTime": 6,
          "description": "id#testEmptyRange(org.carrot2.source.SearchRangeTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334604,
          "startTimestampDate": "2012-01-05T15:22:14.604",
          "executionTime": 4,
          "description": "id#testPageModeGetTwoRangesFull(org.carrot2.source.SearchRangeTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334609,
          "startTimestampDate": "2012-01-05T15:22:14.609",
          "executionTime": 4,
          "description": "id#testGetOneRangeStartAtNonZero(org.carrot2.source.SearchRangeTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334614,
          "startTimestampDate": "2012-01-05T15:22:14.614",
          "executionTime": 4,
          "description": "id#testPageModeGetTwoRangesStartAtNonZero(org.carrot2.source.SearchRangeTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334619,
          "startTimestampDate": "2012-01-05T15:22:14.619",
          "executionTime": 4,
          "description": "id#testGetTwoRangesStartAtNonZero(org.carrot2.source.SearchRangeTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334624,
          "startTimestampDate": "2012-01-05T15:22:14.624",
          "executionTime": 6,
          "description": "id#testPageModeEmptyRange(org.carrot2.source.SearchRangeTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334630,
          "startTimestampDate": "2012-01-05T15:22:14.630",
          "executionTime": 5,
          "description": "id#testPageModeGetOneRangeStartAtNonZero(org.carrot2.source.SearchRangeTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334635,
          "startTimestampDate": "2012-01-05T15:22:14.635",
          "executionTime": 6,
          "description": "id#testPageModeGetTwoRangesUnderfull(org.carrot2.source.SearchRangeTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testGetTwoRangesUnderfull(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testGetTwoRangesUnderfull(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testGetTwoRangesFull(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testGetTwoRangesFull(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMoreThanMaxResultsRequested(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMoreThanMaxResultsRequested(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPageModeMoreThanMaxResultsRequested(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPageModeMoreThanMaxResultsRequested(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyRange(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyRange(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPageModeGetTwoRangesFull(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPageModeGetTwoRangesFull(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testGetOneRangeStartAtNonZero(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testGetOneRangeStartAtNonZero(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPageModeGetTwoRangesStartAtNonZero(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPageModeGetTwoRangesStartAtNonZero(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testGetTwoRangesStartAtNonZero(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testGetTwoRangesStartAtNonZero(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPageModeEmptyRange(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPageModeEmptyRange(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPageModeGetOneRangeStartAtNonZero(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPageModeGetOneRangeStartAtNonZero(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPageModeGetTwoRangesUnderfull(org.carrot2.source.SearchRangeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPageModeGetTwoRangesUnderfull(org.carrot2.source.SearchRangeTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773334576,
      "startTimestampDate": "2012-01-05T15:22:14.576",
      "executionTime": 16,
      "description": {
        "id": "id#org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest[2]",
        "displayName": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
        "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testLargeQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)[0]",
            "displayName": "testLargeQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
            "methodName": "testLargeQuery",
            "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInCachingController(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)[0]",
            "displayName": "testInCachingController(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
            "methodName": "testInCachingController",
            "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testURLsUnique(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)[0]",
            "displayName": "testURLsUnique(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
            "methodName": "testURLsUnique",
            "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMetadataAvailable(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)[0]",
            "displayName": "testMetadataAvailable(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
            "methodName": "testMetadataAvailable",
            "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoResultsQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)[0]",
            "displayName": "testNoResultsQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
            "methodName": "testNoResultsQuery",
            "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHtmlUnescaping(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)[0]",
            "displayName": "testHtmlUnescaping(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
            "methodName": "testHtmlUnescaping",
            "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSmallQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)[0]",
            "displayName": "testSmallQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
            "methodName": "testSmallQuery",
            "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testUtfCharacters(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)[0]",
            "displayName": "testUtfCharacters(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
            "methodName": "testUtfCharacters",
            "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testResultsTotal(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)[0]",
            "displayName": "testResultsTotal(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)",
            "methodName": "testResultsTotal",
            "className": "org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773334580,
          "startTimestampDate": "2012-01-05T15:22:14.580",
          "executionTime": 0,
          "description": "id#testLargeQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334580,
          "startTimestampDate": "2012-01-05T15:22:14.580",
          "executionTime": 1,
          "description": "id#testInCachingController(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334581,
          "startTimestampDate": "2012-01-05T15:22:14.581",
          "executionTime": 0,
          "description": "id#testURLsUnique(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334582,
          "startTimestampDate": "2012-01-05T15:22:14.582",
          "executionTime": 7,
          "description": "id#testMetadataAvailable(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334589,
          "startTimestampDate": "2012-01-05T15:22:14.589",
          "executionTime": 1,
          "description": "id#testNoResultsQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334590,
          "startTimestampDate": "2012-01-05T15:22:14.590",
          "executionTime": 0,
          "description": "id#testHtmlUnescaping(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334591,
          "startTimestampDate": "2012-01-05T15:22:14.591",
          "executionTime": 0,
          "description": "id#testSmallQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334591,
          "startTimestampDate": "2012-01-05T15:22:14.591",
          "executionTime": 0,
          "description": "id#testUtfCharacters(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334592,
          "startTimestampDate": "2012-01-05T15:22:14.592",
          "executionTime": 0,
          "description": "id#testResultsTotal(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testLargeQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLargeQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInCachingController(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInCachingController(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testURLsUnique(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testURLsUnique(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMetadataAvailable(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMetadataAvailable(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoResultsQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoResultsQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHtmlUnescaping(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHtmlUnescaping(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSmallQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSmallQuery(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUtfCharacters(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUtfCharacters(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testResultsTotal(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testResultsTotal(org.carrot2.source.opensearch.OpenSearchDocumentSourceByResultIncrementTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773334647,
      "startTimestampDate": "2012-01-05T15:22:14.647",
      "executionTime": 302,
      "description": {
        "id": "id#org.carrot2.matrix.MatrixUtilsTest[2]",
        "displayName": "org.carrot2.matrix.MatrixUtilsTest",
        "className": "org.carrot2.matrix.MatrixUtilsTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testMinSparseness(org.carrot2.matrix.MatrixUtilsTest)[0]",
            "displayName": "testMinSparseness(org.carrot2.matrix.MatrixUtilsTest)",
            "methodName": "testMinSparseness",
            "className": "org.carrot2.matrix.MatrixUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMinInColumns(org.carrot2.matrix.MatrixUtilsTest)[0]",
            "displayName": "testMinInColumns(org.carrot2.matrix.MatrixUtilsTest)",
            "methodName": "testMinInColumns",
            "className": "org.carrot2.matrix.MatrixUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSumRows(org.carrot2.matrix.MatrixUtilsTest)[0]",
            "displayName": "testSumRows(org.carrot2.matrix.MatrixUtilsTest)",
            "methodName": "testSumRows",
            "className": "org.carrot2.matrix.MatrixUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMaxSparseness(org.carrot2.matrix.MatrixUtilsTest)[0]",
            "displayName": "testMaxSparseness(org.carrot2.matrix.MatrixUtilsTest)",
            "methodName": "testMaxSparseness",
            "className": "org.carrot2.matrix.MatrixUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#sortedRowsView(org.carrot2.matrix.MatrixUtilsTest)[0]",
            "displayName": "sortedRowsView(org.carrot2.matrix.MatrixUtilsTest)",
            "methodName": "sortedRowsView",
            "className": "org.carrot2.matrix.MatrixUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#frobeniusNorm(org.carrot2.matrix.MatrixUtilsTest)[0]",
            "displayName": "frobeniusNorm(org.carrot2.matrix.MatrixUtilsTest)",
            "methodName": "frobeniusNorm",
            "className": "org.carrot2.matrix.MatrixUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSparseNormalizeColumnsL2Zeros(org.carrot2.matrix.MatrixUtilsTest)[0]",
            "displayName": "testSparseNormalizeColumnsL2Zeros(org.carrot2.matrix.MatrixUtilsTest)",
            "methodName": "testSparseNormalizeColumnsL2Zeros",
            "className": "org.carrot2.matrix.MatrixUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSparseNormalizeColumnsL2(org.carrot2.matrix.MatrixUtilsTest)[0]",
            "displayName": "testSparseNormalizeColumnsL2(org.carrot2.matrix.MatrixUtilsTest)",
            "methodName": "testSparseNormalizeColumnsL2",
            "className": "org.carrot2.matrix.MatrixUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMaxInColumns(org.carrot2.matrix.MatrixUtilsTest)[0]",
            "displayName": "testMaxInColumns(org.carrot2.matrix.MatrixUtilsTest)",
            "methodName": "testMaxInColumns",
            "className": "org.carrot2.matrix.MatrixUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNormalizeColumnsL1Zeros(org.carrot2.matrix.MatrixUtilsTest)[0]",
            "displayName": "testNormalizeColumnsL1Zeros(org.carrot2.matrix.MatrixUtilsTest)",
            "methodName": "testNormalizeColumnsL1Zeros",
            "className": "org.carrot2.matrix.MatrixUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testComputeOrthogonalityOrthogonal(org.carrot2.matrix.MatrixUtilsTest)[0]",
            "displayName": "testComputeOrthogonalityOrthogonal(org.carrot2.matrix.MatrixUtilsTest)",
            "methodName": "testComputeOrthogonalityOrthogonal",
            "className": "org.carrot2.matrix.MatrixUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNormalizeColumnsL2Zeros(org.carrot2.matrix.MatrixUtilsTest)[0]",
            "displayName": "testNormalizeColumnsL2Zeros(org.carrot2.matrix.MatrixUtilsTest)",
            "methodName": "testNormalizeColumnsL2Zeros",
            "className": "org.carrot2.matrix.MatrixUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testComputeOrthogonalityIdenticalColumns(org.carrot2.matrix.MatrixUtilsTest)[0]",
            "displayName": "testComputeOrthogonalityIdenticalColumns(org.carrot2.matrix.MatrixUtilsTest)",
            "methodName": "testComputeOrthogonalityIdenticalColumns",
            "className": "org.carrot2.matrix.MatrixUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNormalizeColumnsL2(org.carrot2.matrix.MatrixUtilsTest)[0]",
            "displayName": "testNormalizeColumnsL2(org.carrot2.matrix.MatrixUtilsTest)",
            "methodName": "testNormalizeColumnsL2",
            "className": "org.carrot2.matrix.MatrixUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNormalizeColumnsL1(org.carrot2.matrix.MatrixUtilsTest)[0]",
            "displayName": "testNormalizeColumnsL1(org.carrot2.matrix.MatrixUtilsTest)",
            "methodName": "testNormalizeColumnsL1",
            "className": "org.carrot2.matrix.MatrixUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMaxInRow(org.carrot2.matrix.MatrixUtilsTest)[0]",
            "displayName": "testMaxInRow(org.carrot2.matrix.MatrixUtilsTest)",
            "methodName": "testMaxInRow",
            "className": "org.carrot2.matrix.MatrixUtilsTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773334848,
          "startTimestampDate": "2012-01-05T15:22:14.848",
          "executionTime": 4,
          "description": "id#testMinSparseness(org.carrot2.matrix.MatrixUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334853,
          "startTimestampDate": "2012-01-05T15:22:14.853",
          "executionTime": 4,
          "description": "id#testMinInColumns(org.carrot2.matrix.MatrixUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334858,
          "startTimestampDate": "2012-01-05T15:22:14.858",
          "executionTime": 5,
          "description": "id#testSumRows(org.carrot2.matrix.MatrixUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334864,
          "startTimestampDate": "2012-01-05T15:22:14.864",
          "executionTime": 5,
          "description": "id#testMaxSparseness(org.carrot2.matrix.MatrixUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334869,
          "startTimestampDate": "2012-01-05T15:22:14.869",
          "executionTime": 26,
          "description": "id#sortedRowsView(org.carrot2.matrix.MatrixUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334896,
          "startTimestampDate": "2012-01-05T15:22:14.896",
          "executionTime": 3,
          "description": "id#frobeniusNorm(org.carrot2.matrix.MatrixUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334900,
          "startTimestampDate": "2012-01-05T15:22:14.900",
          "executionTime": 4,
          "description": "id#testSparseNormalizeColumnsL2Zeros(org.carrot2.matrix.MatrixUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334905,
          "startTimestampDate": "2012-01-05T15:22:14.905",
          "executionTime": 3,
          "description": "id#testSparseNormalizeColumnsL2(org.carrot2.matrix.MatrixUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334909,
          "startTimestampDate": "2012-01-05T15:22:14.909",
          "executionTime": 4,
          "description": "id#testMaxInColumns(org.carrot2.matrix.MatrixUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334914,
          "startTimestampDate": "2012-01-05T15:22:14.914",
          "executionTime": 4,
          "description": "id#testNormalizeColumnsL1Zeros(org.carrot2.matrix.MatrixUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334919,
          "startTimestampDate": "2012-01-05T15:22:14.919",
          "executionTime": 4,
          "description": "id#testComputeOrthogonalityOrthogonal(org.carrot2.matrix.MatrixUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334924,
          "startTimestampDate": "2012-01-05T15:22:14.924",
          "executionTime": 3,
          "description": "id#testNormalizeColumnsL2Zeros(org.carrot2.matrix.MatrixUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334929,
          "startTimestampDate": "2012-01-05T15:22:14.929",
          "executionTime": 4,
          "description": "id#testComputeOrthogonalityIdenticalColumns(org.carrot2.matrix.MatrixUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334933,
          "startTimestampDate": "2012-01-05T15:22:14.933",
          "executionTime": 7,
          "description": "id#testNormalizeColumnsL2(org.carrot2.matrix.MatrixUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334941,
          "startTimestampDate": "2012-01-05T15:22:14.941",
          "executionTime": 4,
          "description": "id#testNormalizeColumnsL1(org.carrot2.matrix.MatrixUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334945,
          "startTimestampDate": "2012-01-05T15:22:14.945",
          "executionTime": 4,
          "description": "id#testMaxInRow(org.carrot2.matrix.MatrixUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testMinSparseness(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMinSparseness(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMinInColumns(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMinInColumns(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSumRows(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSumRows(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMaxSparseness(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMaxSparseness(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "sortedRowsView(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "sortedRowsView(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "frobeniusNorm(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "frobeniusNorm(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSparseNormalizeColumnsL2Zeros(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSparseNormalizeColumnsL2Zeros(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSparseNormalizeColumnsL2(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSparseNormalizeColumnsL2(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMaxInColumns(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMaxInColumns(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalizeColumnsL1Zeros(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalizeColumnsL1Zeros(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComputeOrthogonalityOrthogonal(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComputeOrthogonalityOrthogonal(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalizeColumnsL2Zeros(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalizeColumnsL2Zeros(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testComputeOrthogonalityIdenticalColumns(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testComputeOrthogonalityIdenticalColumns(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalizeColumnsL2(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalizeColumnsL2(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNormalizeColumnsL1(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNormalizeColumnsL1(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMaxInRow(org.carrot2.matrix.MatrixUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMaxInRow(org.carrot2.matrix.MatrixUtilsTest)"
        }
      ]
    },
    {
      "slave": 3,
      "startTimestamp": 1325773334597,
      "startTimestampDate": "2012-01-05T15:22:14.597",
      "executionTime": 450,
      "description": {
        "id": "id#org.carrot2.core.ProcessingResultTest[2]",
        "displayName": "org.carrot2.core.ProcessingResultTest",
        "className": "org.carrot2.core.ProcessingResultTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testClusterDeserializationFromLegacyXml(org.carrot2.core.ProcessingResultTest)[0]",
            "displayName": "testClusterDeserializationFromLegacyXml(org.carrot2.core.ProcessingResultTest)",
            "methodName": "testClusterDeserializationFromLegacyXml",
            "className": "org.carrot2.core.ProcessingResultTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testJsonSerializationAll(org.carrot2.core.ProcessingResultTest)[0]",
            "displayName": "testJsonSerializationAll(org.carrot2.core.ProcessingResultTest)",
            "methodName": "testJsonSerializationAll",
            "className": "org.carrot2.core.ProcessingResultTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSerializationDeserializationClustersOnly(org.carrot2.core.ProcessingResultTest)[0]",
            "displayName": "testSerializationDeserializationClustersOnly(org.carrot2.core.ProcessingResultTest)",
            "methodName": "testSerializationDeserializationClustersOnly",
            "className": "org.carrot2.core.ProcessingResultTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testJsonSerializationWithCallback(org.carrot2.core.ProcessingResultTest)[0]",
            "displayName": "testJsonSerializationWithCallback(org.carrot2.core.ProcessingResultTest)",
            "methodName": "testJsonSerializationWithCallback",
            "className": "org.carrot2.core.ProcessingResultTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSerializationDeserializationDocumentsOnly(org.carrot2.core.ProcessingResultTest)[0]",
            "displayName": "testSerializationDeserializationDocumentsOnly(org.carrot2.core.ProcessingResultTest)",
            "methodName": "testSerializationDeserializationDocumentsOnly",
            "className": "org.carrot2.core.ProcessingResultTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testJsonSerializationDocumentsOnly(org.carrot2.core.ProcessingResultTest)[0]",
            "displayName": "testJsonSerializationDocumentsOnly(org.carrot2.core.ProcessingResultTest)",
            "methodName": "testJsonSerializationDocumentsOnly",
            "className": "org.carrot2.core.ProcessingResultTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testJsonSerializationAttributesOnly(org.carrot2.core.ProcessingResultTest)[0]",
            "displayName": "testJsonSerializationAttributesOnly(org.carrot2.core.ProcessingResultTest)",
            "methodName": "testJsonSerializationAttributesOnly",
            "className": "org.carrot2.core.ProcessingResultTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSerializationDeserializationAttributesOnly(org.carrot2.core.ProcessingResultTest)[0]",
            "displayName": "testSerializationDeserializationAttributesOnly(org.carrot2.core.ProcessingResultTest)",
            "methodName": "testSerializationDeserializationAttributesOnly",
            "className": "org.carrot2.core.ProcessingResultTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoFalseJunkGroupAttribute(org.carrot2.core.ProcessingResultTest)[0]",
            "displayName": "testNoFalseJunkGroupAttribute(org.carrot2.core.ProcessingResultTest)",
            "methodName": "testNoFalseJunkGroupAttribute",
            "className": "org.carrot2.core.ProcessingResultTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDocumentDeserializationLanguageByIsoCode(org.carrot2.core.ProcessingResultTest)[0]",
            "displayName": "testDocumentDeserializationLanguageByIsoCode(org.carrot2.core.ProcessingResultTest)",
            "methodName": "testDocumentDeserializationLanguageByIsoCode",
            "className": "org.carrot2.core.ProcessingResultTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDocumentDeserializationFromLegacyXml(org.carrot2.core.ProcessingResultTest)[0]",
            "displayName": "testDocumentDeserializationFromLegacyXml(org.carrot2.core.ProcessingResultTest)",
            "methodName": "testDocumentDeserializationFromLegacyXml",
            "className": "org.carrot2.core.ProcessingResultTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDocumentDeserializationLanguageByEnumCode(org.carrot2.core.ProcessingResultTest)[0]",
            "displayName": "testDocumentDeserializationLanguageByEnumCode(org.carrot2.core.ProcessingResultTest)",
            "methodName": "testDocumentDeserializationLanguageByEnumCode",
            "className": "org.carrot2.core.ProcessingResultTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSerializationDeserializationAll(org.carrot2.core.ProcessingResultTest)[0]",
            "displayName": "testSerializationDeserializationAll(org.carrot2.core.ProcessingResultTest)",
            "methodName": "testSerializationDeserializationAll",
            "className": "org.carrot2.core.ProcessingResultTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testJsonSerializationClustersOnly(org.carrot2.core.ProcessingResultTest)[0]",
            "displayName": "testJsonSerializationClustersOnly(org.carrot2.core.ProcessingResultTest)",
            "methodName": "testJsonSerializationClustersOnly",
            "className": "org.carrot2.core.ProcessingResultTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 3,
          "startTimestamp": 1325773334624,
          "startTimestampDate": "2012-01-05T15:22:14.624",
          "executionTime": 24,
          "description": "id#testClusterDeserializationFromLegacyXml(org.carrot2.core.ProcessingResultTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334652,
          "startTimestampDate": "2012-01-05T15:22:14.652",
          "executionTime": 208,
          "description": "id#testJsonSerializationAll(org.carrot2.core.ProcessingResultTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334863,
          "startTimestampDate": "2012-01-05T15:22:14.863",
          "executionTime": 36,
          "description": "id#testSerializationDeserializationClustersOnly(org.carrot2.core.ProcessingResultTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334899,
          "startTimestampDate": "2012-01-05T15:22:14.899",
          "executionTime": 14,
          "description": "id#testJsonSerializationWithCallback(org.carrot2.core.ProcessingResultTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334914,
          "startTimestampDate": "2012-01-05T15:22:14.914",
          "executionTime": 26,
          "description": "id#testSerializationDeserializationDocumentsOnly(org.carrot2.core.ProcessingResultTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334941,
          "startTimestampDate": "2012-01-05T15:22:14.941",
          "executionTime": 7,
          "description": "id#testJsonSerializationDocumentsOnly(org.carrot2.core.ProcessingResultTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334949,
          "startTimestampDate": "2012-01-05T15:22:14.949",
          "executionTime": 5,
          "description": "id#testJsonSerializationAttributesOnly(org.carrot2.core.ProcessingResultTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334954,
          "startTimestampDate": "2012-01-05T15:22:14.954",
          "executionTime": 15,
          "description": "id#testSerializationDeserializationAttributesOnly(org.carrot2.core.ProcessingResultTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334970,
          "startTimestampDate": "2012-01-05T15:22:14.970",
          "executionTime": 10,
          "description": "id#testNoFalseJunkGroupAttribute(org.carrot2.core.ProcessingResultTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334981,
          "startTimestampDate": "2012-01-05T15:22:14.981",
          "executionTime": 7,
          "description": "id#testDocumentDeserializationLanguageByIsoCode(org.carrot2.core.ProcessingResultTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334989,
          "startTimestampDate": "2012-01-05T15:22:14.989",
          "executionTime": 8,
          "description": "id#testDocumentDeserializationFromLegacyXml(org.carrot2.core.ProcessingResultTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773334997,
          "startTimestampDate": "2012-01-05T15:22:14.997",
          "executionTime": 6,
          "description": "id#testDocumentDeserializationLanguageByEnumCode(org.carrot2.core.ProcessingResultTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773335004,
          "startTimestampDate": "2012-01-05T15:22:15.004",
          "executionTime": 31,
          "description": "id#testSerializationDeserializationAll(org.carrot2.core.ProcessingResultTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 3,
          "startTimestamp": 1325773335036,
          "startTimestampDate": "2012-01-05T15:22:15.036",
          "executionTime": 11,
          "description": "id#testJsonSerializationClustersOnly(org.carrot2.core.ProcessingResultTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testClusterDeserializationFromLegacyXml(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testClusterDeserializationFromLegacyXml(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testJsonSerializationAll(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testJsonSerializationAll(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSerializationDeserializationClustersOnly(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSerializationDeserializationClustersOnly(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testJsonSerializationWithCallback(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testJsonSerializationWithCallback(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSerializationDeserializationDocumentsOnly(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSerializationDeserializationDocumentsOnly(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testJsonSerializationDocumentsOnly(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testJsonSerializationDocumentsOnly(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testJsonSerializationAttributesOnly(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testJsonSerializationAttributesOnly(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSerializationDeserializationAttributesOnly(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSerializationDeserializationAttributesOnly(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoFalseJunkGroupAttribute(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoFalseJunkGroupAttribute(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDocumentDeserializationLanguageByIsoCode(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDocumentDeserializationLanguageByIsoCode(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDocumentDeserializationFromLegacyXml(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDocumentDeserializationFromLegacyXml(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDocumentDeserializationLanguageByEnumCode(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDocumentDeserializationLanguageByEnumCode(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSerializationDeserializationAll(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSerializationDeserializationAll(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testJsonSerializationClustersOnly(org.carrot2.core.ProcessingResultTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testJsonSerializationClustersOnly(org.carrot2.core.ProcessingResultTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773334414,
      "startTimestampDate": "2012-01-05T15:22:14.414",
      "executionTime": 97,
      "description": {
        "id": "id#org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest[2]",
        "displayName": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
        "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testNull(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)[0]",
            "displayName": "testNull(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
            "methodName": "testNull",
            "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMustExistNotMetNonExisting(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)[0]",
            "displayName": "testMustExistNotMetNonExisting(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
            "methodName": "testMustExistNotMetNonExisting",
            "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDoesNotHaveToExistMetExistingDirectory(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)[0]",
            "displayName": "testDoesNotHaveToExistMetExistingDirectory(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
            "methodName": "testDoesNotHaveToExistMetExistingDirectory",
            "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMustExistNotMetExistingFile(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)[0]",
            "displayName": "testMustExistNotMetExistingFile(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
            "methodName": "testMustExistNotMetExistingFile",
            "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMustExistMet(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)[0]",
            "displayName": "testMustExistMet(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
            "methodName": "testMustExistMet",
            "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInvalidType(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)[0]",
            "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
            "methodName": "testInvalidType",
            "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDoesNotHaveToExistMetNonExisting(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)[0]",
            "displayName": "testDoesNotHaveToExistMetNonExisting(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
            "methodName": "testDoesNotHaveToExistMetNonExisting",
            "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDoesNotHaveToExistNotMetExistingFile(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)[0]",
            "displayName": "testDoesNotHaveToExistNotMetExistingFile(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)",
            "methodName": "testDoesNotHaveToExistNotMetExistingFile",
            "className": "org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773334435,
          "startTimestampDate": "2012-01-05T15:22:14.435",
          "executionTime": 10,
          "description": "id#testNull(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334448,
          "startTimestampDate": "2012-01-05T15:22:14.448",
          "executionTime": 6,
          "description": "id#testMustExistNotMetNonExisting(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334455,
          "startTimestampDate": "2012-01-05T15:22:14.455",
          "executionTime": 7,
          "description": "id#testDoesNotHaveToExistMetExistingDirectory(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334463,
          "startTimestampDate": "2012-01-05T15:22:14.463",
          "executionTime": 5,
          "description": "id#testMustExistNotMetExistingFile(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334469,
          "startTimestampDate": "2012-01-05T15:22:14.469",
          "executionTime": 8,
          "description": "id#testMustExistMet(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334489,
          "startTimestampDate": "2012-01-05T15:22:14.489",
          "executionTime": 8,
          "description": "id#testInvalidType(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334497,
          "startTimestampDate": "2012-01-05T15:22:14.497",
          "executionTime": 6,
          "description": "id#testDoesNotHaveToExistMetNonExisting(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334504,
          "startTimestampDate": "2012-01-05T15:22:14.504",
          "executionTime": 6,
          "description": "id#testDoesNotHaveToExistNotMetExistingFile(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testNull(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNull(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMustExistNotMetNonExisting(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMustExistNotMetNonExisting(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDoesNotHaveToExistMetExistingDirectory(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDoesNotHaveToExistMetExistingDirectory(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMustExistNotMetExistingFile(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMustExistNotMetExistingFile(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMustExistMet(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMustExistMet(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInvalidType(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInvalidType(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDoesNotHaveToExistMetNonExisting(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDoesNotHaveToExistMetNonExisting(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDoesNotHaveToExistNotMetExistingFile(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDoesNotHaveToExistNotMetExistingFile(org.carrot2.util.attribute.constraint.IsDirectoryConstraintTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773334514,
      "startTimestampDate": "2012-01-05T15:22:14.514",
      "executionTime": 443,
      "description": {
        "id": "id#org.carrot2.text.linguistic.ChineseTokenizerTest[2]",
        "displayName": "org.carrot2.text.linguistic.ChineseTokenizerTest",
        "className": "org.carrot2.text.linguistic.ChineseTokenizerTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testJunkTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)[0]",
            "displayName": "testJunkTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
            "methodName": "testJunkTokens",
            "className": "org.carrot2.text.linguistic.ChineseTokenizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testChineseEnglishTermTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)[0]",
            "displayName": "testChineseEnglishTermTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
            "methodName": "testChineseEnglishTermTokens",
            "className": "org.carrot2.text.linguistic.ChineseTokenizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTermTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)[0]",
            "displayName": "testTermTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
            "methodName": "testTermTokens",
            "className": "org.carrot2.text.linguistic.ChineseTokenizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPunctuationTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)[0]",
            "displayName": "testPunctuationTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
            "methodName": "testPunctuationTokens",
            "className": "org.carrot2.text.linguistic.ChineseTokenizerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNumericTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)[0]",
            "displayName": "testNumericTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)",
            "methodName": "testNumericTokens",
            "className": "org.carrot2.text.linguistic.ChineseTokenizerTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773334516,
          "startTimestampDate": "2012-01-05T15:22:14.516",
          "executionTime": 424,
          "description": "id#testJunkTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334941,
          "startTimestampDate": "2012-01-05T15:22:14.941",
          "executionTime": 4,
          "description": "id#testChineseEnglishTermTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334945,
          "startTimestampDate": "2012-01-05T15:22:14.945",
          "executionTime": 4,
          "description": "id#testTermTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334949,
          "startTimestampDate": "2012-01-05T15:22:14.949",
          "executionTime": 4,
          "description": "id#testPunctuationTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334954,
          "startTimestampDate": "2012-01-05T15:22:14.954",
          "executionTime": 3,
          "description": "id#testNumericTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testJunkTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testJunkTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testChineseEnglishTermTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testChineseEnglishTermTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTermTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTermTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPunctuationTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPunctuationTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNumericTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNumericTokens(org.carrot2.text.linguistic.ChineseTokenizerTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773334959,
      "startTimestampDate": "2012-01-05T15:22:14.959",
      "executionTime": 49,
      "description": {
        "id": "id#org.carrot2.clustering.lingo.ClusterMergerTest[2]",
        "displayName": "org.carrot2.clustering.lingo.ClusterMergerTest",
        "className": "org.carrot2.clustering.lingo.ClusterMergerTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testEmpty(org.carrot2.clustering.lingo.ClusterMergerTest)[0]",
            "displayName": "testEmpty(org.carrot2.clustering.lingo.ClusterMergerTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.clustering.lingo.ClusterMergerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoMerge(org.carrot2.clustering.lingo.ClusterMergerTest)[0]",
            "displayName": "testNoMerge(org.carrot2.clustering.lingo.ClusterMergerTest)",
            "methodName": "testNoMerge",
            "className": "org.carrot2.clustering.lingo.ClusterMergerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSimpleMerge(org.carrot2.clustering.lingo.ClusterMergerTest)[0]",
            "displayName": "testSimpleMerge(org.carrot2.clustering.lingo.ClusterMergerTest)",
            "methodName": "testSimpleMerge",
            "className": "org.carrot2.clustering.lingo.ClusterMergerTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMultiMerge(org.carrot2.clustering.lingo.ClusterMergerTest)[0]",
            "displayName": "testMultiMerge(org.carrot2.clustering.lingo.ClusterMergerTest)",
            "methodName": "testMultiMerge",
            "className": "org.carrot2.clustering.lingo.ClusterMergerTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773334979,
          "startTimestampDate": "2012-01-05T15:22:14.979",
          "executionTime": 7,
          "description": "id#testEmpty(org.carrot2.clustering.lingo.ClusterMergerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334987,
          "startTimestampDate": "2012-01-05T15:22:14.987",
          "executionTime": 9,
          "description": "id#testNoMerge(org.carrot2.clustering.lingo.ClusterMergerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773334997,
          "startTimestampDate": "2012-01-05T15:22:14.997",
          "executionTime": 4,
          "description": "id#testSimpleMerge(org.carrot2.clustering.lingo.ClusterMergerTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335002,
          "startTimestampDate": "2012-01-05T15:22:15.002",
          "executionTime": 6,
          "description": "id#testMultiMerge(org.carrot2.clustering.lingo.ClusterMergerTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.clustering.lingo.ClusterMergerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.clustering.lingo.ClusterMergerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoMerge(org.carrot2.clustering.lingo.ClusterMergerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoMerge(org.carrot2.clustering.lingo.ClusterMergerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSimpleMerge(org.carrot2.clustering.lingo.ClusterMergerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSimpleMerge(org.carrot2.clustering.lingo.ClusterMergerTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMultiMerge(org.carrot2.clustering.lingo.ClusterMergerTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMultiMerge(org.carrot2.clustering.lingo.ClusterMergerTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773335011,
      "startTimestampDate": "2012-01-05T15:22:15.011",
      "executionTime": 23,
      "description": {
        "id": "id#org.carrot2.util.IntArrayPredicateIteratorTest[2]",
        "displayName": "org.carrot2.util.IntArrayPredicateIteratorTest",
        "className": "org.carrot2.util.IntArrayPredicateIteratorTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testEmptyArray(org.carrot2.util.IntArrayPredicateIteratorTest)[0]",
            "displayName": "testEmptyArray(org.carrot2.util.IntArrayPredicateIteratorTest)",
            "methodName": "testEmptyArray",
            "className": "org.carrot2.util.IntArrayPredicateIteratorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testBorderCase(org.carrot2.util.IntArrayPredicateIteratorTest)[0]",
            "displayName": "testBorderCase(org.carrot2.util.IntArrayPredicateIteratorTest)",
            "methodName": "testBorderCase",
            "className": "org.carrot2.util.IntArrayPredicateIteratorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSubrange(org.carrot2.util.IntArrayPredicateIteratorTest)[0]",
            "displayName": "testSubrange(org.carrot2.util.IntArrayPredicateIteratorTest)",
            "methodName": "testSubrange",
            "className": "org.carrot2.util.IntArrayPredicateIteratorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSimpleCase(org.carrot2.util.IntArrayPredicateIteratorTest)[0]",
            "displayName": "testSimpleCase(org.carrot2.util.IntArrayPredicateIteratorTest)",
            "methodName": "testSimpleCase",
            "className": "org.carrot2.util.IntArrayPredicateIteratorTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoSeparator(org.carrot2.util.IntArrayPredicateIteratorTest)[0]",
            "displayName": "testNoSeparator(org.carrot2.util.IntArrayPredicateIteratorTest)",
            "methodName": "testNoSeparator",
            "className": "org.carrot2.util.IntArrayPredicateIteratorTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773335014,
          "startTimestampDate": "2012-01-05T15:22:15.014",
          "executionTime": 6,
          "description": "id#testEmptyArray(org.carrot2.util.IntArrayPredicateIteratorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335020,
          "startTimestampDate": "2012-01-05T15:22:15.020",
          "executionTime": 3,
          "description": "id#testBorderCase(org.carrot2.util.IntArrayPredicateIteratorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335024,
          "startTimestampDate": "2012-01-05T15:22:15.024",
          "executionTime": 2,
          "description": "id#testSubrange(org.carrot2.util.IntArrayPredicateIteratorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335027,
          "startTimestampDate": "2012-01-05T15:22:15.027",
          "executionTime": 3,
          "description": "id#testSimpleCase(org.carrot2.util.IntArrayPredicateIteratorTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335030,
          "startTimestampDate": "2012-01-05T15:22:15.030",
          "executionTime": 3,
          "description": "id#testNoSeparator(org.carrot2.util.IntArrayPredicateIteratorTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testEmptyArray(org.carrot2.util.IntArrayPredicateIteratorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyArray(org.carrot2.util.IntArrayPredicateIteratorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testBorderCase(org.carrot2.util.IntArrayPredicateIteratorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testBorderCase(org.carrot2.util.IntArrayPredicateIteratorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSubrange(org.carrot2.util.IntArrayPredicateIteratorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSubrange(org.carrot2.util.IntArrayPredicateIteratorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSimpleCase(org.carrot2.util.IntArrayPredicateIteratorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSimpleCase(org.carrot2.util.IntArrayPredicateIteratorTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoSeparator(org.carrot2.util.IntArrayPredicateIteratorTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoSeparator(org.carrot2.util.IntArrayPredicateIteratorTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773335037,
      "startTimestampDate": "2012-01-05T15:22:15.037",
      "executionTime": 37,
      "description": {
        "id": "id#org.carrot2.text.vsm.TermDocumentMatrixBuilderTest[2]",
        "displayName": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
        "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testEmpty(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)[0]",
            "displayName": "testEmpty(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSinglePhraseWithStopWord(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)[0]",
            "displayName": "testSinglePhraseWithStopWord(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
            "methodName": "testSinglePhraseWithStopWord",
            "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSinglePhraseWithSingleWords(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)[0]",
            "displayName": "testSinglePhraseWithSingleWords(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
            "methodName": "testSinglePhraseWithSingleWords",
            "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSingleWords(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)[0]",
            "displayName": "testSingleWords(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
            "methodName": "testSingleWords",
            "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMatrixSizeLimit(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)[0]",
            "displayName": "testMatrixSizeLimit(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
            "methodName": "testMatrixSizeLimit",
            "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSinglePhrase(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)[0]",
            "displayName": "testSinglePhrase(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
            "methodName": "testSinglePhrase",
            "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTitleWordBoost(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)[0]",
            "displayName": "testTitleWordBoost(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)",
            "methodName": "testTitleWordBoost",
            "className": "org.carrot2.text.vsm.TermDocumentMatrixBuilderTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773335039,
          "startTimestampDate": "2012-01-05T15:22:15.039",
          "executionTime": 8,
          "description": "id#testEmpty(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335047,
          "startTimestampDate": "2012-01-05T15:22:15.047",
          "executionTime": 4,
          "description": "id#testSinglePhraseWithStopWord(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335051,
          "startTimestampDate": "2012-01-05T15:22:15.051",
          "executionTime": 4,
          "description": "id#testSinglePhraseWithSingleWords(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335056,
          "startTimestampDate": "2012-01-05T15:22:15.056",
          "executionTime": 3,
          "description": "id#testSingleWords(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335060,
          "startTimestampDate": "2012-01-05T15:22:15.060",
          "executionTime": 4,
          "description": "id#testMatrixSizeLimit(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335064,
          "startTimestampDate": "2012-01-05T15:22:15.064",
          "executionTime": 5,
          "description": "id#testSinglePhrase(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335070,
          "startTimestampDate": "2012-01-05T15:22:15.070",
          "executionTime": 3,
          "description": "id#testTitleWordBoost(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSinglePhraseWithStopWord(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSinglePhraseWithStopWord(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSinglePhraseWithSingleWords(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSinglePhraseWithSingleWords(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSingleWords(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSingleWords(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMatrixSizeLimit(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMatrixSizeLimit(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSinglePhrase(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSinglePhrase(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTitleWordBoost(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTitleWordBoost(org.carrot2.text.vsm.TermDocumentMatrixBuilderTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773334951,
      "startTimestampDate": "2012-01-05T15:22:14.951",
      "executionTime": 54,
      "description": {
        "id": "id#org.carrot2.text.linguistic.PolishTest[2]",
        "displayName": "org.carrot2.text.linguistic.PolishTest",
        "className": "org.carrot2.text.linguistic.PolishTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testCommonWords(org.carrot2.text.linguistic.PolishTest)[0]",
            "displayName": "testCommonWords(org.carrot2.text.linguistic.PolishTest)",
            "methodName": "testCommonWords",
            "className": "org.carrot2.text.linguistic.PolishTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStemmerAvailable(org.carrot2.text.linguistic.PolishTest)[0]",
            "displayName": "testStemmerAvailable(org.carrot2.text.linguistic.PolishTest)",
            "methodName": "testStemmerAvailable",
            "className": "org.carrot2.text.linguistic.PolishTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStemming(org.carrot2.text.linguistic.PolishTest)[0]",
            "displayName": "testStemming(org.carrot2.text.linguistic.PolishTest)",
            "methodName": "testStemming",
            "className": "org.carrot2.text.linguistic.PolishTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLanguageCode(org.carrot2.text.linguistic.PolishTest)[0]",
            "displayName": "testLanguageCode(org.carrot2.text.linguistic.PolishTest)",
            "methodName": "testLanguageCode",
            "className": "org.carrot2.text.linguistic.PolishTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773334954,
          "startTimestampDate": "2012-01-05T15:22:14.954",
          "executionTime": 5,
          "description": "id#testCommonWords(org.carrot2.text.linguistic.PolishTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334960,
          "startTimestampDate": "2012-01-05T15:22:14.960",
          "executionTime": 35,
          "description": "id#testStemmerAvailable(org.carrot2.text.linguistic.PolishTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773334996,
          "startTimestampDate": "2012-01-05T15:22:14.996",
          "executionTime": 4,
          "description": "id#testStemming(org.carrot2.text.linguistic.PolishTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335001,
          "startTimestampDate": "2012-01-05T15:22:15.001",
          "executionTime": 3,
          "description": "id#testLanguageCode(org.carrot2.text.linguistic.PolishTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testCommonWords(org.carrot2.text.linguistic.PolishTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCommonWords(org.carrot2.text.linguistic.PolishTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStemmerAvailable(org.carrot2.text.linguistic.PolishTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStemmerAvailable(org.carrot2.text.linguistic.PolishTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStemming(org.carrot2.text.linguistic.PolishTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStemming(org.carrot2.text.linguistic.PolishTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLanguageCode(org.carrot2.text.linguistic.PolishTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLanguageCode(org.carrot2.text.linguistic.PolishTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773335007,
      "startTimestampDate": "2012-01-05T15:22:15.007",
      "executionTime": 58,
      "description": {
        "id": "id#org.carrot2.util.attribute.constraint.IntRangeConstraintTest[2]",
        "displayName": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
        "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testWithinRange(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)[0]",
            "displayName": "testWithinRange(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
            "methodName": "testWithinRange",
            "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOtherAssignableTypes(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)[0]",
            "displayName": "testOtherAssignableTypes(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
            "methodName": "testOtherAssignableTypes",
            "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testGreaterThanMax(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)[0]",
            "displayName": "testGreaterThanMax(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
            "methodName": "testGreaterThanMax",
            "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNull(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)[0]",
            "displayName": "testNull(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
            "methodName": "testNull",
            "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMinBound(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)[0]",
            "displayName": "testMinBound(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
            "methodName": "testMinBound",
            "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInvalidType(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)[0]",
            "displayName": "testInvalidType(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
            "methodName": "testInvalidType",
            "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLessThanMin(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)[0]",
            "displayName": "testLessThanMin(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
            "methodName": "testLessThanMin",
            "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMaxBound(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)[0]",
            "displayName": "testMaxBound(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)",
            "methodName": "testMaxBound",
            "className": "org.carrot2.util.attribute.constraint.IntRangeConstraintTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773335013,
          "startTimestampDate": "2012-01-05T15:22:15.013",
          "executionTime": 6,
          "description": "id#testWithinRange(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335019,
          "startTimestampDate": "2012-01-05T15:22:15.019",
          "executionTime": 4,
          "description": "id#testOtherAssignableTypes(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335024,
          "startTimestampDate": "2012-01-05T15:22:15.024",
          "executionTime": 3,
          "description": "id#testGreaterThanMax(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335028,
          "startTimestampDate": "2012-01-05T15:22:15.028",
          "executionTime": 3,
          "description": "id#testNull(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335031,
          "startTimestampDate": "2012-01-05T15:22:15.031",
          "executionTime": 4,
          "description": "id#testMinBound(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335036,
          "startTimestampDate": "2012-01-05T15:22:15.036",
          "executionTime": 4,
          "description": "id#testInvalidType(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335040,
          "startTimestampDate": "2012-01-05T15:22:15.040",
          "executionTime": 3,
          "description": "id#testLessThanMin(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335061,
          "startTimestampDate": "2012-01-05T15:22:15.061",
          "executionTime": 3,
          "description": "id#testMaxBound(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testWithinRange(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testWithinRange(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOtherAssignableTypes(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOtherAssignableTypes(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testGreaterThanMax(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testGreaterThanMax(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNull(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNull(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMinBound(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMinBound(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInvalidType(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInvalidType(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLessThanMin(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLessThanMin(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMaxBound(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMaxBound(org.carrot2.util.attribute.constraint.IntRangeConstraintTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773335066,
      "startTimestampDate": "2012-01-05T15:22:15.066",
      "executionTime": 13,
      "description": {
        "id": "id#org.carrot2.util.resource.URLResourceWithParamsTest[2]",
        "displayName": "org.carrot2.util.resource.URLResourceWithParamsTest",
        "className": "org.carrot2.util.resource.URLResourceWithParamsTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testTwoAttributesToSubstitute(org.carrot2.util.resource.URLResourceWithParamsTest)[0]",
            "displayName": "testTwoAttributesToSubstitute(org.carrot2.util.resource.URLResourceWithParamsTest)",
            "methodName": "testTwoAttributesToSubstitute",
            "className": "org.carrot2.util.resource.URLResourceWithParamsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoAttributesToSubstitute(org.carrot2.util.resource.URLResourceWithParamsTest)[0]",
            "displayName": "testNoAttributesToSubstitute(org.carrot2.util.resource.URLResourceWithParamsTest)",
            "methodName": "testNoAttributesToSubstitute",
            "className": "org.carrot2.util.resource.URLResourceWithParamsTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773335068,
          "startTimestampDate": "2012-01-05T15:22:15.068",
          "executionTime": 7,
          "description": "id#testTwoAttributesToSubstitute(org.carrot2.util.resource.URLResourceWithParamsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335076,
          "startTimestampDate": "2012-01-05T15:22:15.076",
          "executionTime": 3,
          "description": "id#testNoAttributesToSubstitute(org.carrot2.util.resource.URLResourceWithParamsTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testTwoAttributesToSubstitute(org.carrot2.util.resource.URLResourceWithParamsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTwoAttributesToSubstitute(org.carrot2.util.resource.URLResourceWithParamsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoAttributesToSubstitute(org.carrot2.util.resource.URLResourceWithParamsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoAttributesToSubstitute(org.carrot2.util.resource.URLResourceWithParamsTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773335085,
      "startTimestampDate": "2012-01-05T15:22:15.085",
      "executionTime": 533,
      "description": {
        "id": "id#org.carrot2.source.lucene.LuceneDocumentSourceTest[2]",
        "displayName": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testMetadataAvailable(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
            "displayName": "testMetadataAvailable(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
            "methodName": "testMetadataAvailable",
            "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#luceneDocumentPassing(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
            "displayName": "luceneDocumentPassing(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
            "methodName": "luceneDocumentPassing",
            "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLargeQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
            "displayName": "testLargeQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
            "methodName": "testLargeQuery",
            "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCatchAllQueryWithHighlighting(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
            "displayName": "testCatchAllQueryWithHighlighting(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
            "methodName": "testCatchAllQueryWithHighlighting",
            "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoResultsQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
            "displayName": "testNoResultsQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
            "methodName": "testNoResultsQuery",
            "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCustomQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
            "displayName": "testCustomQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
            "methodName": "testCustomQuery",
            "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHtmlUnescaping(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
            "displayName": "testHtmlUnescaping(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
            "methodName": "testHtmlUnescaping",
            "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testCustomFormatter(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
            "displayName": "testCustomFormatter(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
            "methodName": "testCustomFormatter",
            "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#luceneDocumentNotSerialized(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
            "displayName": "luceneDocumentNotSerialized(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
            "methodName": "luceneDocumentNotSerialized",
            "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testURLsUnique(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
            "displayName": "testURLsUnique(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
            "methodName": "testURLsUnique",
            "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#luceneDocumentNotPassedByDefault(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
            "displayName": "luceneDocumentNotPassedByDefault(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
            "methodName": "luceneDocumentNotPassedByDefault",
            "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testUtfCharacters(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
            "displayName": "testUtfCharacters(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
            "methodName": "testUtfCharacters",
            "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMultiEntryField(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
            "displayName": "testMultiEntryField(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
            "methodName": "testMultiEntryField",
            "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSmallQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
            "displayName": "testSmallQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
            "methodName": "testSmallQuery",
            "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#luceneScorePassing(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
            "displayName": "luceneScorePassing(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
            "methodName": "luceneScorePassing",
            "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInCachingController(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
            "displayName": "testInCachingController(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
            "methodName": "testInCachingController",
            "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testResultsTotal(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
            "displayName": "testResultsTotal(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
            "methodName": "testResultsTotal",
            "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testAdvancedQueries(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
            "displayName": "testAdvancedQueries(org.carrot2.source.lucene.LuceneDocumentSourceTest)",
            "methodName": "testAdvancedQueries",
            "className": "org.carrot2.source.lucene.LuceneDocumentSourceTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773335145,
          "startTimestampDate": "2012-01-05T15:22:15.145",
          "executionTime": 8,
          "description": "id#testMetadataAvailable(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335154,
          "startTimestampDate": "2012-01-05T15:22:15.154",
          "executionTime": 109,
          "description": "id#luceneDocumentPassing(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335264,
          "startTimestampDate": "2012-01-05T15:22:15.264",
          "executionTime": 0,
          "description": "id#testLargeQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335264,
          "startTimestampDate": "2012-01-05T15:22:15.264",
          "executionTime": 10,
          "description": "id#testCatchAllQueryWithHighlighting(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335275,
          "startTimestampDate": "2012-01-05T15:22:15.275",
          "executionTime": 0,
          "description": "id#testNoResultsQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335275,
          "startTimestampDate": "2012-01-05T15:22:15.275",
          "executionTime": 46,
          "description": "id#testCustomQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335322,
          "startTimestampDate": "2012-01-05T15:22:15.322",
          "executionTime": 0,
          "description": "id#testHtmlUnescaping(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335323,
          "startTimestampDate": "2012-01-05T15:22:15.323",
          "executionTime": 32,
          "description": "id#testCustomFormatter(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335355,
          "startTimestampDate": "2012-01-05T15:22:15.355",
          "executionTime": 159,
          "description": "id#luceneDocumentNotSerialized(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335514,
          "startTimestampDate": "2012-01-05T15:22:15.514",
          "executionTime": 0,
          "description": "id#testURLsUnique(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335515,
          "startTimestampDate": "2012-01-05T15:22:15.515",
          "executionTime": 15,
          "description": "id#luceneDocumentNotPassedByDefault(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335530,
          "startTimestampDate": "2012-01-05T15:22:15.530",
          "executionTime": 1,
          "description": "id#testUtfCharacters(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335545,
          "startTimestampDate": "2012-01-05T15:22:15.545",
          "executionTime": 7,
          "description": "id#testMultiEntryField(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335553,
          "startTimestampDate": "2012-01-05T15:22:15.553",
          "executionTime": 0,
          "description": "id#testSmallQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335553,
          "startTimestampDate": "2012-01-05T15:22:15.553",
          "executionTime": 13,
          "description": "id#luceneScorePassing(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335566,
          "startTimestampDate": "2012-01-05T15:22:15.566",
          "executionTime": 1,
          "description": "id#testInCachingController(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335567,
          "startTimestampDate": "2012-01-05T15:22:15.567",
          "executionTime": 0,
          "description": "id#testResultsTotal(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335568,
          "startTimestampDate": "2012-01-05T15:22:15.568",
          "executionTime": 50,
          "description": "id#testAdvancedQueries(org.carrot2.source.lucene.LuceneDocumentSourceTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testMetadataAvailable(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMetadataAvailable(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "luceneDocumentPassing(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "luceneDocumentPassing(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLargeQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLargeQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCatchAllQueryWithHighlighting(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCatchAllQueryWithHighlighting(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoResultsQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoResultsQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCustomQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCustomQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHtmlUnescaping(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHtmlUnescaping(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testCustomFormatter(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCustomFormatter(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "luceneDocumentNotSerialized(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "luceneDocumentNotSerialized(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testURLsUnique(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testURLsUnique(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "luceneDocumentNotPassedByDefault(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "luceneDocumentNotPassedByDefault(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUtfCharacters(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUtfCharacters(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMultiEntryField(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMultiEntryField(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSmallQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSmallQuery(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "luceneScorePassing(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "luceneScorePassing(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInCachingController(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInCachingController(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testResultsTotal(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testResultsTotal(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testAdvancedQueries(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testAdvancedQueries(org.carrot2.source.lucene.LuceneDocumentSourceTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773335077,
      "startTimestampDate": "2012-01-05T15:22:15.077",
      "executionTime": 117,
      "description": {
        "id": "id#org.carrot2.util.IndirectSorterTest[2]",
        "displayName": "org.carrot2.util.IndirectSorterTest",
        "className": "org.carrot2.util.IndirectSorterTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testDoubleUnsorted(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testDoubleUnsorted(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testDoubleUnsorted",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDoubleSingleElement(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testDoubleSingleElement(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testDoubleSingleElement",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testIntReversed(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testIntReversed(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testIntReversed",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFloatReversed(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testFloatReversed(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testFloatReversed",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testIntUnsorted(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testIntUnsorted(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testIntUnsorted",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testIntLargerArray(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testIntLargerArray(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testIntLargerArray",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testObjectRepeatedElements(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testObjectRepeatedElements(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testObjectRepeatedElements",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testIntEmpty(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testIntEmpty(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testIntEmpty",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testObjectLargerArray(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testObjectLargerArray(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testObjectLargerArray",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDoubleLargerArray(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testDoubleLargerArray(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testDoubleLargerArray",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDoubleEmpty(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testDoubleEmpty(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testDoubleEmpty",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testObjectSingleElement(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testObjectSingleElement(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testObjectSingleElement",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testIntSingleElement(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testIntSingleElement(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testIntSingleElement",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testShortReversed(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testShortReversed(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testShortReversed",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testObjectSorted(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testObjectSorted(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testObjectSorted",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testIntSorted(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testIntSorted(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testIntSorted",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testObjectEmpty(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testObjectEmpty(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testObjectEmpty",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDoubleReversed(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testDoubleReversed(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testDoubleReversed",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testIntRepeatedElements(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testIntRepeatedElements(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testIntRepeatedElements",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testObjectUnsorted(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testObjectUnsorted(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testObjectUnsorted",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDoubleSorted(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testDoubleSorted(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testDoubleSorted",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testObjectReversed(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testObjectReversed(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testObjectReversed",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDoubleRepeatedElements(org.carrot2.util.IndirectSorterTest)[0]",
            "displayName": "testDoubleRepeatedElements(org.carrot2.util.IndirectSorterTest)",
            "methodName": "testDoubleRepeatedElements",
            "className": "org.carrot2.util.IndirectSorterTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773335117,
          "startTimestampDate": "2012-01-05T15:22:15.117",
          "executionTime": 5,
          "description": "id#testDoubleUnsorted(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335123,
          "startTimestampDate": "2012-01-05T15:22:15.123",
          "executionTime": 3,
          "description": "id#testDoubleSingleElement(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335126,
          "startTimestampDate": "2012-01-05T15:22:15.126",
          "executionTime": 4,
          "description": "id#testIntReversed(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335131,
          "startTimestampDate": "2012-01-05T15:22:15.131",
          "executionTime": 3,
          "description": "id#testFloatReversed(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335135,
          "startTimestampDate": "2012-01-05T15:22:15.135",
          "executionTime": 2,
          "description": "id#testIntUnsorted(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335138,
          "startTimestampDate": "2012-01-05T15:22:15.138",
          "executionTime": 3,
          "description": "id#testIntLargerArray(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335141,
          "startTimestampDate": "2012-01-05T15:22:15.141",
          "executionTime": 3,
          "description": "id#testObjectRepeatedElements(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335145,
          "startTimestampDate": "2012-01-05T15:22:15.145",
          "executionTime": 3,
          "description": "id#testIntEmpty(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335149,
          "startTimestampDate": "2012-01-05T15:22:15.149",
          "executionTime": 2,
          "description": "id#testObjectLargerArray(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335152,
          "startTimestampDate": "2012-01-05T15:22:15.152",
          "executionTime": 2,
          "description": "id#testDoubleLargerArray(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335154,
          "startTimestampDate": "2012-01-05T15:22:15.154",
          "executionTime": 3,
          "description": "id#testDoubleEmpty(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335157,
          "startTimestampDate": "2012-01-05T15:22:15.157",
          "executionTime": 2,
          "description": "id#testObjectSingleElement(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335160,
          "startTimestampDate": "2012-01-05T15:22:15.160",
          "executionTime": 2,
          "description": "id#testIntSingleElement(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335162,
          "startTimestampDate": "2012-01-05T15:22:15.162",
          "executionTime": 3,
          "description": "id#testShortReversed(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335166,
          "startTimestampDate": "2012-01-05T15:22:15.166",
          "executionTime": 2,
          "description": "id#testObjectSorted(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335168,
          "startTimestampDate": "2012-01-05T15:22:15.168",
          "executionTime": 3,
          "description": "id#testIntSorted(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335172,
          "startTimestampDate": "2012-01-05T15:22:15.172",
          "executionTime": 2,
          "description": "id#testObjectEmpty(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335174,
          "startTimestampDate": "2012-01-05T15:22:15.174",
          "executionTime": 3,
          "description": "id#testDoubleReversed(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335178,
          "startTimestampDate": "2012-01-05T15:22:15.178",
          "executionTime": 2,
          "description": "id#testIntRepeatedElements(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335181,
          "startTimestampDate": "2012-01-05T15:22:15.181",
          "executionTime": 2,
          "description": "id#testObjectUnsorted(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335183,
          "startTimestampDate": "2012-01-05T15:22:15.183",
          "executionTime": 3,
          "description": "id#testDoubleSorted(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335186,
          "startTimestampDate": "2012-01-05T15:22:15.186",
          "executionTime": 4,
          "description": "id#testObjectReversed(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335191,
          "startTimestampDate": "2012-01-05T15:22:15.191",
          "executionTime": 3,
          "description": "id#testDoubleRepeatedElements(org.carrot2.util.IndirectSorterTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testDoubleUnsorted(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDoubleUnsorted(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDoubleSingleElement(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDoubleSingleElement(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testIntReversed(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIntReversed(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFloatReversed(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFloatReversed(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testIntUnsorted(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIntUnsorted(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testIntLargerArray(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIntLargerArray(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testObjectRepeatedElements(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testObjectRepeatedElements(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testIntEmpty(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIntEmpty(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testObjectLargerArray(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testObjectLargerArray(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDoubleLargerArray(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDoubleLargerArray(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDoubleEmpty(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDoubleEmpty(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testObjectSingleElement(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testObjectSingleElement(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testIntSingleElement(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIntSingleElement(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testShortReversed(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testShortReversed(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testObjectSorted(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testObjectSorted(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testIntSorted(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIntSorted(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testObjectEmpty(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testObjectEmpty(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDoubleReversed(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDoubleReversed(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testIntRepeatedElements(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIntRepeatedElements(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testObjectUnsorted(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testObjectUnsorted(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDoubleSorted(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDoubleSorted(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testObjectReversed(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testObjectReversed(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDoubleRepeatedElements(org.carrot2.util.IndirectSorterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDoubleRepeatedElements(org.carrot2.util.IndirectSorterTest)"
        }
      ]
    },
    {
      "slave": 1,
      "startTimestamp": 1325773335620,
      "startTimestampDate": "2012-01-05T15:22:15.620",
      "executionTime": 15,
      "description": {
        "id": "id#org.carrot2.clustering.stc.GeneralizedSuffixTreeTest[2]",
        "displayName": "org.carrot2.clustering.stc.GeneralizedSuffixTreeTest",
        "className": "org.carrot2.clustering.stc.GeneralizedSuffixTreeTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testEmptyGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)[0]",
            "displayName": "testEmptyGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)",
            "methodName": "testEmptyGST",
            "className": "org.carrot2.clustering.stc.GeneralizedSuffixTreeTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSinglephraseGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)[0]",
            "displayName": "testSinglephraseGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)",
            "methodName": "testSinglephraseGST",
            "className": "org.carrot2.clustering.stc.GeneralizedSuffixTreeTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMultiphraseGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)[0]",
            "displayName": "testMultiphraseGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)",
            "methodName": "testMultiphraseGST",
            "className": "org.carrot2.clustering.stc.GeneralizedSuffixTreeTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 1,
          "startTimestamp": 1325773335622,
          "startTimestampDate": "2012-01-05T15:22:15.622",
          "executionTime": 6,
          "description": "id#testEmptyGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335628,
          "startTimestampDate": "2012-01-05T15:22:15.628",
          "executionTime": 4,
          "description": "id#testSinglephraseGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 1,
          "startTimestamp": 1325773335632,
          "startTimestampDate": "2012-01-05T15:22:15.632",
          "executionTime": 3,
          "description": "id#testMultiphraseGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testEmptyGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSinglephraseGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSinglephraseGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMultiphraseGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMultiphraseGST(org.carrot2.clustering.stc.GeneralizedSuffixTreeTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773335209,
      "startTimestampDate": "2012-01-05T15:22:15.209",
      "executionTime": 516,
      "description": {
        "id": "id#org.carrot2.util.simplexml.SimpleXmlWrappersTest[2]",
        "displayName": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testChar(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testChar(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testChar",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSimpleXmlAnnotatedClass(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testSimpleXmlAnnotatedClass(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testSimpleXmlAnnotatedClass",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNull(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testNull(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testNull",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testClassWithWrapperNotStrictMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testClassWithWrapperNotStrictMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testClassWithWrapperNotStrictMatched",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLinkedList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testLinkedList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testLinkedList",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testByte(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testByte(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testByte",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHashMap(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testHashMap(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testHashMap",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDouble(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testDouble(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testDouble",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testClassWithWrapperStrictMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testClassWithWrapperStrictMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testClassWithWrapperStrictMatched",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSubList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testSubList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testSubList",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testClass(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testClass(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testClass",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testString(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testString(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testString",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testBoolean(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testBoolean(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testBoolean",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLong(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testLong(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testLong",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testValueWithDefaultStringType(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testValueWithDefaultStringType(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testValueWithDefaultStringType",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFileResource(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testFileResource(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testFileResource",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHashMapWithList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testHashMapWithList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testHashMapWithList",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNonprimitiveClassWithDefaultConstructor(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testNonprimitiveClassWithDefaultConstructor(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testNonprimitiveClassWithDefaultConstructor",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEnum(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testEnum(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testEnum",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testArrayList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testArrayList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testArrayList",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testShort(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testShort(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testShort",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMixedTypeList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testMixedTypeList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testMixedTypeList",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testTreeMap(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testTreeMap(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testTreeMap",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testFloat(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testFloat(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testFloat",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNestedList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testNestedList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testNestedList",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInt(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testInt(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testInt",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNestedMaps(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testNestedMaps(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testNestedMaps",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testClassWithWrapperStrictNotMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
            "displayName": "testClassWithWrapperStrictNotMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)",
            "methodName": "testClassWithWrapperStrictNotMatched",
            "className": "org.carrot2.util.simplexml.SimpleXmlWrappersTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773335233,
          "startTimestampDate": "2012-01-05T15:22:15.233",
          "executionTime": 26,
          "description": "id#testChar(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335259,
          "startTimestampDate": "2012-01-05T15:22:15.259",
          "executionTime": 48,
          "description": "id#testSimpleXmlAnnotatedClass(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335308,
          "startTimestampDate": "2012-01-05T15:22:15.308",
          "executionTime": 11,
          "description": "id#testNull(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335320,
          "startTimestampDate": "2012-01-05T15:22:15.320",
          "executionTime": 35,
          "description": "id#testClassWithWrapperNotStrictMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335355,
          "startTimestampDate": "2012-01-05T15:22:15.355",
          "executionTime": 16,
          "description": "id#testLinkedList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335371,
          "startTimestampDate": "2012-01-05T15:22:15.371",
          "executionTime": 17,
          "description": "id#testByte(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335389,
          "startTimestampDate": "2012-01-05T15:22:15.389",
          "executionTime": 26,
          "description": "id#testHashMap(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335416,
          "startTimestampDate": "2012-01-05T15:22:15.416",
          "executionTime": 17,
          "description": "id#testDouble(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335434,
          "startTimestampDate": "2012-01-05T15:22:15.434",
          "executionTime": 31,
          "description": "id#testClassWithWrapperStrictMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335466,
          "startTimestampDate": "2012-01-05T15:22:15.466",
          "executionTime": 8,
          "description": "id#testSubList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335475,
          "startTimestampDate": "2012-01-05T15:22:15.475",
          "executionTime": 10,
          "description": "id#testClass(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335485,
          "startTimestampDate": "2012-01-05T15:22:15.485",
          "executionTime": 14,
          "description": "id#testString(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335500,
          "startTimestampDate": "2012-01-05T15:22:15.500",
          "executionTime": 9,
          "description": "id#testBoolean(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335509,
          "startTimestampDate": "2012-01-05T15:22:15.509",
          "executionTime": 14,
          "description": "id#testLong(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335524,
          "startTimestampDate": "2012-01-05T15:22:15.524",
          "executionTime": 3,
          "description": "id#testValueWithDefaultStringType(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335528,
          "startTimestampDate": "2012-01-05T15:22:15.528",
          "executionTime": 10,
          "description": "id#testFileResource(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335539,
          "startTimestampDate": "2012-01-05T15:22:15.539",
          "executionTime": 13,
          "description": "id#testHashMapWithList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335553,
          "startTimestampDate": "2012-01-05T15:22:15.553",
          "executionTime": 9,
          "description": "id#testNonprimitiveClassWithDefaultConstructor(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335563,
          "startTimestampDate": "2012-01-05T15:22:15.563",
          "executionTime": 12,
          "description": "id#testEnum(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335576,
          "startTimestampDate": "2012-01-05T15:22:15.576",
          "executionTime": 9,
          "description": "id#testArrayList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335585,
          "startTimestampDate": "2012-01-05T15:22:15.585",
          "executionTime": 17,
          "description": "id#testShort(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335603,
          "startTimestampDate": "2012-01-05T15:22:15.603",
          "executionTime": 15,
          "description": "id#testMixedTypeList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335618,
          "startTimestampDate": "2012-01-05T15:22:15.618",
          "executionTime": 17,
          "description": "id#testTreeMap(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335636,
          "startTimestampDate": "2012-01-05T15:22:15.636",
          "executionTime": 21,
          "description": "id#testFloat(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335683,
          "startTimestampDate": "2012-01-05T15:22:15.683",
          "executionTime": 14,
          "description": "id#testNestedList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335698,
          "startTimestampDate": "2012-01-05T15:22:15.698",
          "executionTime": 12,
          "description": "id#testInt(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335710,
          "startTimestampDate": "2012-01-05T15:22:15.710",
          "executionTime": 11,
          "description": "id#testNestedMaps(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335722,
          "startTimestampDate": "2012-01-05T15:22:15.722",
          "executionTime": 3,
          "description": "id#testClassWithWrapperStrictNotMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testChar(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testChar(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSimpleXmlAnnotatedClass(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSimpleXmlAnnotatedClass(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNull(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNull(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testClassWithWrapperNotStrictMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testClassWithWrapperNotStrictMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLinkedList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLinkedList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testByte(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testByte(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHashMap(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHashMap(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDouble(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDouble(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testClassWithWrapperStrictMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testClassWithWrapperStrictMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSubList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSubList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testClass(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testClass(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testString(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testString(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testBoolean(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testBoolean(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLong(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLong(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testValueWithDefaultStringType(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testValueWithDefaultStringType(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFileResource(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFileResource(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHashMapWithList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHashMapWithList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNonprimitiveClassWithDefaultConstructor(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNonprimitiveClassWithDefaultConstructor(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEnum(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEnum(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testArrayList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testArrayList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testShort(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testShort(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMixedTypeList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMixedTypeList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testTreeMap(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testTreeMap(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testFloat(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testFloat(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNestedList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNestedList(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInt(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInt(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNestedMaps(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNestedMaps(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testClassWithWrapperStrictNotMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testClassWithWrapperStrictNotMatched(org.carrot2.util.simplexml.SimpleXmlWrappersTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773335726,
      "startTimestampDate": "2012-01-05T15:22:15.726",
      "executionTime": 14,
      "description": {
        "id": "id#org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest[2]",
        "displayName": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)[0]",
            "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStopWordsInPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)[0]",
            "displayName": "testStopWordsInPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)",
            "methodName": "testStopWordsInPhrases",
            "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)[0]",
            "displayName": "testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)",
            "methodName": "testStopWords",
            "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)[0]",
            "displayName": "testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)",
            "methodName": "testNonStopWords",
            "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773335728,
          "startTimestampDate": "2012-01-05T15:22:15.728",
          "executionTime": 3,
          "description": "id#testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335731,
          "startTimestampDate": "2012-01-05T15:22:15.731",
          "executionTime": 3,
          "description": "id#testStopWordsInPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335734,
          "startTimestampDate": "2012-01-05T15:22:15.734",
          "executionTime": 3,
          "description": "id#testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335738,
          "startTimestampDate": "2012-01-05T15:22:15.738",
          "executionTime": 2,
          "description": "id#testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStopWordsInPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStopWordsInPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterMergedTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773335742,
      "startTimestampDate": "2012-01-05T15:22:15.742",
      "executionTime": 13,
      "description": {
        "id": "id#org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest[2]",
        "displayName": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest",
        "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)[0]",
            "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStopWordsInPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)[0]",
            "displayName": "testStopWordsInPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)",
            "methodName": "testStopWordsInPhrases",
            "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)[0]",
            "displayName": "testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)",
            "methodName": "testStopWords",
            "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)[0]",
            "displayName": "testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)",
            "methodName": "testNonStopWords",
            "className": "org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773335744,
          "startTimestampDate": "2012-01-05T15:22:15.744",
          "executionTime": 3,
          "description": "id#testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335747,
          "startTimestampDate": "2012-01-05T15:22:15.747",
          "executionTime": 3,
          "description": "id#testStopWordsInPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335750,
          "startTimestampDate": "2012-01-05T15:22:15.750",
          "executionTime": 2,
          "description": "id#testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335753,
          "startTimestampDate": "2012-01-05T15:22:15.753",
          "executionTime": 2,
          "description": "id#testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStopWordsInPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStopWordsInPhrases(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNonStopWords(org.carrot2.text.preprocessing.filter.StopWordLabelFilterEnglishTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773335758,
      "startTimestampDate": "2012-01-05T15:22:15.758",
      "executionTime": 20,
      "description": {
        "id": "id#org.carrot2.source.etools.EToolsDocumentSourceTest[3]",
        "displayName": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          },
          {
            "org.carrot2.util.tests.UsesExternalServices": {}
          }
        ],
        "children": [
          {
            "id": "id#testInCachingController(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
            "displayName": "testInCachingController(org.carrot2.source.etools.EToolsDocumentSourceTest)",
            "methodName": "testInCachingController",
            "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testGzipCompression(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
            "displayName": "testGzipCompression(org.carrot2.source.etools.EToolsDocumentSourceTest)",
            "methodName": "testGzipCompression",
            "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLargeQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
            "displayName": "testLargeQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)",
            "methodName": "testLargeQuery",
            "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMetadataAvailable(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
            "displayName": "testMetadataAvailable(org.carrot2.source.etools.EToolsDocumentSourceTest)",
            "methodName": "testMetadataAvailable",
            "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDataSourceResultsCount(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
            "displayName": "testDataSourceResultsCount(org.carrot2.source.etools.EToolsDocumentSourceTest)",
            "methodName": "testDataSourceResultsCount",
            "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSmallQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
            "displayName": "testSmallQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)",
            "methodName": "testSmallQuery",
            "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDataSources(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
            "displayName": "testDataSources(org.carrot2.source.etools.EToolsDocumentSourceTest)",
            "methodName": "testDataSources",
            "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testURLsUnique(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
            "displayName": "testURLsUnique(org.carrot2.source.etools.EToolsDocumentSourceTest)",
            "methodName": "testURLsUnique",
            "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHtmlUnescaping(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
            "displayName": "testHtmlUnescaping(org.carrot2.source.etools.EToolsDocumentSourceTest)",
            "methodName": "testHtmlUnescaping",
            "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoResultsQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
            "displayName": "testNoResultsQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)",
            "methodName": "testNoResultsQuery",
            "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testResultsTotal(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
            "displayName": "testResultsTotal(org.carrot2.source.etools.EToolsDocumentSourceTest)",
            "methodName": "testResultsTotal",
            "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testUtfCharacters(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
            "displayName": "testUtfCharacters(org.carrot2.source.etools.EToolsDocumentSourceTest)",
            "methodName": "testUtfCharacters",
            "className": "org.carrot2.source.etools.EToolsDocumentSourceTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773335761,
          "startTimestampDate": "2012-01-05T15:22:15.761",
          "executionTime": 1,
          "description": "id#testInCachingController(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335770,
          "startTimestampDate": "2012-01-05T15:22:15.770",
          "executionTime": 0,
          "description": "id#testGzipCompression(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335771,
          "startTimestampDate": "2012-01-05T15:22:15.771",
          "executionTime": 0,
          "description": "id#testLargeQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335774,
          "startTimestampDate": "2012-01-05T15:22:15.774",
          "executionTime": 0,
          "description": "id#testMetadataAvailable(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335775,
          "startTimestampDate": "2012-01-05T15:22:15.775",
          "executionTime": 0,
          "description": "id#testDataSourceResultsCount(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335775,
          "startTimestampDate": "2012-01-05T15:22:15.775",
          "executionTime": 0,
          "description": "id#testSmallQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335775,
          "startTimestampDate": "2012-01-05T15:22:15.775",
          "executionTime": 0,
          "description": "id#testDataSources(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335776,
          "startTimestampDate": "2012-01-05T15:22:15.776",
          "executionTime": 0,
          "description": "id#testURLsUnique(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335776,
          "startTimestampDate": "2012-01-05T15:22:15.776",
          "executionTime": 0,
          "description": "id#testHtmlUnescaping(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335776,
          "startTimestampDate": "2012-01-05T15:22:15.776",
          "executionTime": 1,
          "description": "id#testNoResultsQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335777,
          "startTimestampDate": "2012-01-05T15:22:15.777",
          "executionTime": 0,
          "description": "id#testResultsTotal(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335777,
          "startTimestampDate": "2012-01-05T15:22:15.777",
          "executionTime": 0,
          "description": "id#testUtfCharacters(org.carrot2.source.etools.EToolsDocumentSourceTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testInCachingController(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInCachingController(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testGzipCompression(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testGzipCompression(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLargeQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLargeQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMetadataAvailable(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMetadataAvailable(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDataSourceResultsCount(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDataSourceResultsCount(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSmallQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSmallQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDataSources(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDataSources(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testURLsUnique(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testURLsUnique(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHtmlUnescaping(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHtmlUnescaping(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoResultsQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoResultsQuery(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testResultsTotal(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testResultsTotal(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUtfCharacters(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUtfCharacters(org.carrot2.source.etools.EToolsDocumentSourceTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773335781,
      "startTimestampDate": "2012-01-05T15:22:15.781",
      "executionTime": 67,
      "description": {
        "id": "id#org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest[2]",
        "displayName": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testRepeatedClusteringWithCache(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
            "displayName": "testRepeatedClusteringWithCache(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
            "methodName": "testRepeatedClusteringWithCache",
            "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOneUrl(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
            "displayName": "testOneUrl(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
            "methodName": "testOneUrl",
            "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testMetadataAvailable(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
            "displayName": "testMetadataAvailable(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
            "methodName": "testMetadataAvailable",
            "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testClusteringDataMining(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
            "displayName": "testClusteringDataMining(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
            "methodName": "testClusteringDataMining",
            "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testUrlParsing(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
            "displayName": "testUrlParsing(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
            "methodName": "testUrlParsing",
            "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStress(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
            "displayName": "testStress(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
            "methodName": "testStress",
            "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testStopPartsStripping(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
            "displayName": "testStopPartsStripping(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
            "methodName": "testStopPartsStripping",
            "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoDocuments(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
            "displayName": "testNoDocuments(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
            "methodName": "testNoDocuments",
            "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSorting(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
            "displayName": "testSorting(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
            "methodName": "testSorting",
            "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testOneUrlWithTwoSuburls(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
            "displayName": "testOneUrlWithTwoSuburls(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
            "methodName": "testOneUrlWithTwoSuburls",
            "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmptyDocuments(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
            "displayName": "testEmptyDocuments(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)",
            "methodName": "testEmptyDocuments",
            "className": "org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773335783,
          "startTimestampDate": "2012-01-05T15:22:15.783",
          "executionTime": 20,
          "description": "id#testRepeatedClusteringWithCache(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335804,
          "startTimestampDate": "2012-01-05T15:22:15.804",
          "executionTime": 8,
          "description": "id#testOneUrl(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335812,
          "startTimestampDate": "2012-01-05T15:22:15.812",
          "executionTime": 3,
          "description": "id#testMetadataAvailable(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335816,
          "startTimestampDate": "2012-01-05T15:22:15.816",
          "executionTime": 8,
          "description": "id#testClusteringDataMining(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335824,
          "startTimestampDate": "2012-01-05T15:22:15.824",
          "executionTime": 3,
          "description": "id#testUrlParsing(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335828,
          "startTimestampDate": "2012-01-05T15:22:15.828",
          "executionTime": 0,
          "description": "id#testStress(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335828,
          "startTimestampDate": "2012-01-05T15:22:15.828",
          "executionTime": 4,
          "description": "id#testStopPartsStripping(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335832,
          "startTimestampDate": "2012-01-05T15:22:15.832",
          "executionTime": 3,
          "description": "id#testNoDocuments(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335836,
          "startTimestampDate": "2012-01-05T15:22:15.836",
          "executionTime": 4,
          "description": "id#testSorting(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335840,
          "startTimestampDate": "2012-01-05T15:22:15.840",
          "executionTime": 4,
          "description": "id#testOneUrlWithTwoSuburls(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335845,
          "startTimestampDate": "2012-01-05T15:22:15.845",
          "executionTime": 3,
          "description": "id#testEmptyDocuments(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testRepeatedClusteringWithCache(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testRepeatedClusteringWithCache(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOneUrl(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOneUrl(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testMetadataAvailable(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testMetadataAvailable(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testClusteringDataMining(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testClusteringDataMining(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testUrlParsing(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testUrlParsing(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStress(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStress(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testStopPartsStripping(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testStopPartsStripping(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoDocuments(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoDocuments(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSorting(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSorting(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testOneUrlWithTwoSuburls(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testOneUrlWithTwoSuburls(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmptyDocuments(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmptyDocuments(org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithmTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773335850,
      "startTimestampDate": "2012-01-05T15:22:15.850",
      "executionTime": 37,
      "description": {
        "id": "id#org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest[2]",
        "displayName": "org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest",
        "className": "org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testGenitiveEndingPhrases(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)[0]",
            "displayName": "testGenitiveEndingPhrases(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
            "methodName": "testGenitiveEndingPhrases",
            "className": "org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmpty(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)[0]",
            "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoGenitiveWords(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)[0]",
            "displayName": "testNoGenitiveWords(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
            "methodName": "testNoGenitiveWords",
            "className": "org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testNoGenitiveEndingPhrases(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)[0]",
            "displayName": "testNoGenitiveEndingPhrases(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
            "methodName": "testNoGenitiveEndingPhrases",
            "className": "org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testGenitiveWords(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)[0]",
            "displayName": "testGenitiveWords(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)",
            "methodName": "testGenitiveWords",
            "className": "org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773335867,
          "startTimestampDate": "2012-01-05T15:22:15.867",
          "executionTime": 5,
          "description": "id#testGenitiveEndingPhrases(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335873,
          "startTimestampDate": "2012-01-05T15:22:15.873",
          "executionTime": 2,
          "description": "id#testEmpty(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335876,
          "startTimestampDate": "2012-01-05T15:22:15.876",
          "executionTime": 3,
          "description": "id#testNoGenitiveWords(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335880,
          "startTimestampDate": "2012-01-05T15:22:15.880",
          "executionTime": 3,
          "description": "id#testNoGenitiveEndingPhrases(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335883,
          "startTimestampDate": "2012-01-05T15:22:15.883",
          "executionTime": 4,
          "description": "id#testGenitiveWords(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testGenitiveEndingPhrases(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testGenitiveEndingPhrases(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoGenitiveWords(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoGenitiveWords(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testNoGenitiveEndingPhrases(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNoGenitiveEndingPhrases(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testGenitiveWords(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testGenitiveWords(org.carrot2.text.preprocessing.filter.GenitiveLabelFilterTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773335889,
      "startTimestampDate": "2012-01-05T15:22:15.889",
      "executionTime": 25,
      "description": {
        "id": "id#org.carrot2.util.CharArrayUtilsTest[2]",
        "displayName": "org.carrot2.util.CharArrayUtilsTest",
        "className": "org.carrot2.util.CharArrayUtilsTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#bufferTooSmall(org.carrot2.util.CharArrayUtilsTest)[0]",
            "displayName": "bufferTooSmall(org.carrot2.util.CharArrayUtilsTest)",
            "methodName": "bufferTooSmall",
            "className": "org.carrot2.util.CharArrayUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testToLowerCaseBuffer(org.carrot2.util.CharArrayUtilsTest)[0]",
            "displayName": "testToLowerCaseBuffer(org.carrot2.util.CharArrayUtilsTest)",
            "methodName": "testToLowerCaseBuffer",
            "className": "org.carrot2.util.CharArrayUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testToLowerCaseBufferStartLength(org.carrot2.util.CharArrayUtilsTest)[0]",
            "displayName": "testToLowerCaseBufferStartLength(org.carrot2.util.CharArrayUtilsTest)",
            "methodName": "testToLowerCaseBufferStartLength",
            "className": "org.carrot2.util.CharArrayUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testToLowerCaseInPlace(org.carrot2.util.CharArrayUtilsTest)[0]",
            "displayName": "testToLowerCaseInPlace(org.carrot2.util.CharArrayUtilsTest)",
            "methodName": "testToLowerCaseInPlace",
            "className": "org.carrot2.util.CharArrayUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testHasCapitalizedLetters(org.carrot2.util.CharArrayUtilsTest)[0]",
            "displayName": "testHasCapitalizedLetters(org.carrot2.util.CharArrayUtilsTest)",
            "methodName": "testHasCapitalizedLetters",
            "className": "org.carrot2.util.CharArrayUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testToLowerCaseCopy(org.carrot2.util.CharArrayUtilsTest)[0]",
            "displayName": "testToLowerCaseCopy(org.carrot2.util.CharArrayUtilsTest)",
            "methodName": "testToLowerCaseCopy",
            "className": "org.carrot2.util.CharArrayUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#wordTooShort(org.carrot2.util.CharArrayUtilsTest)[0]",
            "displayName": "wordTooShort(org.carrot2.util.CharArrayUtilsTest)",
            "methodName": "wordTooShort",
            "className": "org.carrot2.util.CharArrayUtilsTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773335891,
          "startTimestampDate": "2012-01-05T15:22:15.891",
          "executionTime": 0,
          "description": "id#bufferTooSmall(org.carrot2.util.CharArrayUtilsTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335891,
          "startTimestampDate": "2012-01-05T15:22:15.891",
          "executionTime": 4,
          "description": "id#testToLowerCaseBuffer(org.carrot2.util.CharArrayUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335896,
          "startTimestampDate": "2012-01-05T15:22:15.896",
          "executionTime": 3,
          "description": "id#testToLowerCaseBufferStartLength(org.carrot2.util.CharArrayUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335900,
          "startTimestampDate": "2012-01-05T15:22:15.900",
          "executionTime": 4,
          "description": "id#testToLowerCaseInPlace(org.carrot2.util.CharArrayUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335904,
          "startTimestampDate": "2012-01-05T15:22:15.904",
          "executionTime": 3,
          "description": "id#testHasCapitalizedLetters(org.carrot2.util.CharArrayUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335908,
          "startTimestampDate": "2012-01-05T15:22:15.908",
          "executionTime": 5,
          "description": "id#testToLowerCaseCopy(org.carrot2.util.CharArrayUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335914,
          "startTimestampDate": "2012-01-05T15:22:15.914",
          "executionTime": 0,
          "description": "id#wordTooShort(org.carrot2.util.CharArrayUtilsTest)[0]",
          "status": "IGNORED",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "bufferTooSmall(org.carrot2.util.CharArrayUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "bufferTooSmall(org.carrot2.util.CharArrayUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testToLowerCaseBuffer(org.carrot2.util.CharArrayUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testToLowerCaseBuffer(org.carrot2.util.CharArrayUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testToLowerCaseBufferStartLength(org.carrot2.util.CharArrayUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testToLowerCaseBufferStartLength(org.carrot2.util.CharArrayUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testToLowerCaseInPlace(org.carrot2.util.CharArrayUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testToLowerCaseInPlace(org.carrot2.util.CharArrayUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testHasCapitalizedLetters(org.carrot2.util.CharArrayUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testHasCapitalizedLetters(org.carrot2.util.CharArrayUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testToLowerCaseCopy(org.carrot2.util.CharArrayUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testToLowerCaseCopy(org.carrot2.util.CharArrayUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "wordTooShort(org.carrot2.util.CharArrayUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "wordTooShort(org.carrot2.util.CharArrayUtilsTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773335916,
      "startTimestampDate": "2012-01-05T15:22:15.916",
      "executionTime": 44,
      "description": {
        "id": "id#org.carrot2.util.RangeUtilsTest[2]",
        "displayName": "org.carrot2.util.RangeUtilsTest",
        "className": "org.carrot2.util.RangeUtilsTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testIntZeroRange(org.carrot2.util.RangeUtilsTest)[0]",
            "displayName": "testIntZeroRange(org.carrot2.util.RangeUtilsTest)",
            "methodName": "testIntZeroRange",
            "className": "org.carrot2.util.RangeUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDouble1To3Range(org.carrot2.util.RangeUtilsTest)[0]",
            "displayName": "testDouble1To3Range(org.carrot2.util.RangeUtilsTest)",
            "methodName": "testDouble1To3Range",
            "className": "org.carrot2.util.RangeUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInt30To59Range(org.carrot2.util.RangeUtilsTest)[0]",
            "displayName": "testInt30To59Range(org.carrot2.util.RangeUtilsTest)",
            "methodName": "testInt30To59Range",
            "className": "org.carrot2.util.RangeUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testIntLessThan11Range(org.carrot2.util.RangeUtilsTest)[0]",
            "displayName": "testIntLessThan11Range(org.carrot2.util.RangeUtilsTest)",
            "methodName": "testIntLessThan11Range",
            "className": "org.carrot2.util.RangeUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDoubleZeroRange(org.carrot2.util.RangeUtilsTest)[0]",
            "displayName": "testDoubleZeroRange(org.carrot2.util.RangeUtilsTest)",
            "methodName": "testDoubleZeroRange",
            "className": "org.carrot2.util.RangeUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInt60To100Range(org.carrot2.util.RangeUtilsTest)[0]",
            "displayName": "testInt60To100Range(org.carrot2.util.RangeUtilsTest)",
            "methodName": "testInt60To100Range",
            "className": "org.carrot2.util.RangeUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDoubleLessThan1Range(org.carrot2.util.RangeUtilsTest)[0]",
            "displayName": "testDoubleLessThan1Range(org.carrot2.util.RangeUtilsTest)",
            "methodName": "testDoubleLessThan1Range",
            "className": "org.carrot2.util.RangeUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testInt11To29Range(org.carrot2.util.RangeUtilsTest)[0]",
            "displayName": "testInt11To29Range(org.carrot2.util.RangeUtilsTest)",
            "methodName": "testInt11To29Range",
            "className": "org.carrot2.util.RangeUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDouble3To6Range(org.carrot2.util.RangeUtilsTest)[0]",
            "displayName": "testDouble3To6Range(org.carrot2.util.RangeUtilsTest)",
            "methodName": "testDouble3To6Range",
            "className": "org.carrot2.util.RangeUtilsTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testDouble6To10Range(org.carrot2.util.RangeUtilsTest)[0]",
            "displayName": "testDouble6To10Range(org.carrot2.util.RangeUtilsTest)",
            "methodName": "testDouble6To10Range",
            "className": "org.carrot2.util.RangeUtilsTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773335919,
          "startTimestampDate": "2012-01-05T15:22:15.919",
          "executionTime": 4,
          "description": "id#testIntZeroRange(org.carrot2.util.RangeUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335923,
          "startTimestampDate": "2012-01-05T15:22:15.923",
          "executionTime": 2,
          "description": "id#testDouble1To3Range(org.carrot2.util.RangeUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335925,
          "startTimestampDate": "2012-01-05T15:22:15.925",
          "executionTime": 2,
          "description": "id#testInt30To59Range(org.carrot2.util.RangeUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335928,
          "startTimestampDate": "2012-01-05T15:22:15.928",
          "executionTime": 1,
          "description": "id#testIntLessThan11Range(org.carrot2.util.RangeUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335930,
          "startTimestampDate": "2012-01-05T15:22:15.930",
          "executionTime": 1,
          "description": "id#testDoubleZeroRange(org.carrot2.util.RangeUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335947,
          "startTimestampDate": "2012-01-05T15:22:15.947",
          "executionTime": 3,
          "description": "id#testInt60To100Range(org.carrot2.util.RangeUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335950,
          "startTimestampDate": "2012-01-05T15:22:15.950",
          "executionTime": 3,
          "description": "id#testDoubleLessThan1Range(org.carrot2.util.RangeUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335953,
          "startTimestampDate": "2012-01-05T15:22:15.953",
          "executionTime": 2,
          "description": "id#testInt11To29Range(org.carrot2.util.RangeUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335955,
          "startTimestampDate": "2012-01-05T15:22:15.955",
          "executionTime": 2,
          "description": "id#testDouble3To6Range(org.carrot2.util.RangeUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335957,
          "startTimestampDate": "2012-01-05T15:22:15.957",
          "executionTime": 2,
          "description": "id#testDouble6To10Range(org.carrot2.util.RangeUtilsTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testIntZeroRange(org.carrot2.util.RangeUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIntZeroRange(org.carrot2.util.RangeUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDouble1To3Range(org.carrot2.util.RangeUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDouble1To3Range(org.carrot2.util.RangeUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInt30To59Range(org.carrot2.util.RangeUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInt30To59Range(org.carrot2.util.RangeUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testIntLessThan11Range(org.carrot2.util.RangeUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testIntLessThan11Range(org.carrot2.util.RangeUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDoubleZeroRange(org.carrot2.util.RangeUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDoubleZeroRange(org.carrot2.util.RangeUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInt60To100Range(org.carrot2.util.RangeUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInt60To100Range(org.carrot2.util.RangeUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDoubleLessThan1Range(org.carrot2.util.RangeUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDoubleLessThan1Range(org.carrot2.util.RangeUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testInt11To29Range(org.carrot2.util.RangeUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testInt11To29Range(org.carrot2.util.RangeUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDouble3To6Range(org.carrot2.util.RangeUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDouble3To6Range(org.carrot2.util.RangeUtilsTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testDouble6To10Range(org.carrot2.util.RangeUtilsTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testDouble6To10Range(org.carrot2.util.RangeUtilsTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773335961,
      "startTimestampDate": "2012-01-05T15:22:15.961",
      "executionTime": 164,
      "description": {
        "id": "id#org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest[2]",
        "displayName": "org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest",
        "className": "org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testLexicalDataFromTheSameResourceDirIsShared(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)[0]",
            "displayName": "testLexicalDataFromTheSameResourceDirIsShared(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)",
            "methodName": "testLexicalDataFromTheSameResourceDirIsShared",
            "className": "org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testSeparateLexicalDataForDifferentResourceLookup(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)[0]",
            "displayName": "testSeparateLexicalDataForDifferentResourceLookup(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)",
            "methodName": "testSeparateLexicalDataForDifferentResourceLookup",
            "className": "org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testLexicalDataIsReloadedOnDemand(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)[0]",
            "displayName": "testLexicalDataIsReloadedOnDemand(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)",
            "methodName": "testLexicalDataIsReloadedOnDemand",
            "className": "org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773335967,
          "startTimestampDate": "2012-01-05T15:22:15.967",
          "executionTime": 10,
          "description": "id#testLexicalDataFromTheSameResourceDirIsShared(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773335978,
          "startTimestampDate": "2012-01-05T15:22:15.978",
          "executionTime": 99,
          "description": "id#testSeparateLexicalDataForDifferentResourceLookup(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773336078,
          "startTimestampDate": "2012-01-05T15:22:16.078",
          "executionTime": 47,
          "description": "id#testLexicalDataIsReloadedOnDemand(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testLexicalDataFromTheSameResourceDirIsShared(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLexicalDataFromTheSameResourceDirIsShared(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testSeparateLexicalDataForDifferentResourceLookup(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testSeparateLexicalDataForDifferentResourceLookup(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testLexicalDataIsReloadedOnDemand(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testLexicalDataIsReloadedOnDemand(org.carrot2.text.linguistic.DefaultLexicalDataFactoryTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1325773336127,
      "startTimestampDate": "2012-01-05T15:22:16.127",
      "executionTime": 15,
      "description": {
        "id": "id#org.carrot2.text.preprocessing.filter.QueryLabelFilterTest[2]",
        "displayName": "org.carrot2.text.preprocessing.filter.QueryLabelFilterTest",
        "className": "org.carrot2.text.preprocessing.filter.QueryLabelFilterTest",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Timeout": {
              "millis": 60000
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testNonQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)[0]",
            "displayName": "testNonQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
            "methodName": "testNonQueryWords",
            "className": "org.carrot2.text.preprocessing.filter.QueryLabelFilterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testEmpty(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)[0]",
            "displayName": "testEmpty(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
            "methodName": "testEmpty",
            "className": "org.carrot2.text.preprocessing.filter.QueryLabelFilterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)[0]",
            "displayName": "testQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
            "methodName": "testQueryWords",
            "className": "org.carrot2.text.preprocessing.filter.QueryLabelFilterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPhraseWithSomeQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)[0]",
            "displayName": "testPhraseWithSomeQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
            "methodName": "testPhraseWithSomeQueryWords",
            "className": "org.carrot2.text.preprocessing.filter.QueryLabelFilterTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#testPhraseWithAllQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)[0]",
            "displayName": "testPhraseWithAllQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)",
            "methodName": "testPhraseWithAllQueryWords",
            "className": "org.carrot2.text.preprocessing.filter.QueryLabelFilterTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1325773336128,
          "startTimestampDate": "2012-01-05T15:22:16.128",
          "executionTime": 3,
          "description": "id#testNonQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773336132,
          "startTimestampDate": "2012-01-05T15:22:16.132",
          "executionTime": 2,
          "description": "id#testEmpty(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773336134,
          "startTimestampDate": "2012-01-05T15:22:16.134",
          "executionTime": 2,
          "description": "id#testQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773336137,
          "startTimestampDate": "2012-01-05T15:22:16.137",
          "executionTime": 2,
          "description": "id#testPhraseWithSomeQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1325773336139,
          "startTimestampDate": "2012-01-05T15:22:16.139",
          "executionTime": 2,
          "description": "id#testPhraseWithAllQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testNonQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testNonQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testEmpty(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testEmpty(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPhraseWithSomeQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPhraseWithSomeQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "testPhraseWithAllQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testPhraseWithAllQueryWords(org.carrot2.text.preprocessing.filter.QueryLabelFilterTest)"
        }
      ]
    }
  ],
  "slaves": {
    "0": {
      "id": 0,
      "jvmName": "Java HotSpot(TM) 64-Bit Server VM, 20.4-b02",
      "charset": "windows-1250",
      "systemProperties": {
        "awt.toolkit": "sun.awt.windows.WToolkit",
        "carrot2.xml.feed.url.base": "",
        "dcs.test.web.dir.prefix": "e:\\repositories\\github.com\\carrot2\\applications/carrot2-dcs",
        "file.encoding": "Cp1250",
        "file.encoding.pkg": "sun.io",
        "file.separator": "\\",
        "java.awt.graphicsenv": "sun.awt.Win32GraphicsEnvironment",
        "java.awt.printerjob": "sun.awt.windows.WPrinterJob",
        "java.class.path": "e:\\repositories\\github.com\\carrot2\\applications\\carrot2-benchmarks\\lib\\h2-1.2.132.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-benchmarks\\lib\\junit-benchmarks-0.1.0.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-dcs\\lib\\commons-fileupload-1.2.1.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-webapp\\lib\\jawr-2.4.2.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-attribute\\.apt_factory\\org.carrot2.bindables.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-text\\lib\\JFlex.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.hppc\\hppc-0.4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.randomizedtesting\\ant-junit4-0.0.5-SNAPSHOT-standalone.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.randomizedtesting\\randomizedtesting-runner-0.0.5-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.google.guava\\guava-10.0.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.google.guava\\jsr305-1.3.9.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.planetj.compression\\pjl-comp-filter-1.7.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.thoughtworks.qdox\\qdox-1.12.jar;e:\\repositories\\github.com\\carrot2\\lib\\javax.servlet\\servlet-api-2.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\morfologik\\morfologik-stemming-1.5.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.java.dev.rome\\rome-1.0.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.java.dev.rome\\rome-fetcher-1.0.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.sf.ehcache\\ehcache-core-1.7.2.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-codec-1.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-collections-3.2.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-io-2.0.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-lang-2.6.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpclient-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpcore-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpmime-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.log4j\\log4j-1.2.16.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-analyzers-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-core-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-highlighter-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-memory-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-smartcn-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.mahout\\mahout-collections-1.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.mahout\\mahout-math-0.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.oro\\oro-2.0.8.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.velocity\\velocity-1.7.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.velocity\\velocity-tools-generic-2.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\resolver.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\serializer.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xalan-2.7.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xercesImpl-2.11.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xml-apis.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.carrot2.antlib\\org.carrot2.antlib.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.codehaus.jackson\\jackson-core-asl-1.7.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.codehaus.jackson\\jackson-mapper-asl-1.7.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.easymock\\easymock-3.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-continuation-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-deploy-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-http-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-io-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-security-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-server-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-servlet-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-servlets-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-util-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-webapp-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-xml-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-assert-1.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-mocks-1.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-util-1.1.6.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\cssparser-0.9.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\htmlunit-2.9-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\htmlunit-core-js-2.9-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\nekohtml-1.9.15-20101026.093020-2.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\sac-1.3.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.jdom\\jdom-1.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.junit4-ext\\junit-4.10.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.kohsuke.args4j\\args4j-2.0.9.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.simpleframework.xml\\simple-xml-2.4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\jcl-over-slf4j-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\slf4j-api-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\slf4j-log4j12-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-component-suites\\suites;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-log4j\\src;e:\\repositories\\github.com\\carrot2\\tmp\\classes-clover;e:\\repositories\\github.com\\carrot2\\tmp\\classes-test;e:\\repositories\\github.com\\carrot2\\tmp\\classes;e:\\repositories\\carrotsearch.com\\tools\\clover-ant-2.6.3\\lib\\clover.jar",
        "java.class.version": "50.0",
        "java.endorsed.dirs": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\endorsed",
        "java.ext.dirs": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\ext;C:\\Windows\\Sun\\Java\\lib\\ext",
        "java.home": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre",
        "java.io.tmpdir": "C:\\Users\\stachoo\\AppData\\Local\\Temp\\",
        "java.library.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;d:\\dev\\scm\\svn\\cmd;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\DMIX;d:\\dev\\scm\\git\\msysgit\\cmd;D:\\dev\\scm\\git\\tortoise\\bin;d:\\dev\\java\\ant\\bin;d:\\bin;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\bin;D:\\dev\\scm\\svn\\tortoise\\bin;d:\\dev\\java\\maven\\bin;.",
        "java.runtime.name": "Java(TM) SE Runtime Environment",
        "java.runtime.version": "1.6.0_29-b11",
        "java.specification.name": "Java Platform API Specification",
        "java.specification.vendor": "Sun Microsystems Inc.",
        "java.specification.version": "1.6",
        "java.vendor": "Sun Microsystems Inc.",
        "java.vendor.url": "http://java.sun.com/",
        "java.vendor.url.bug": "http://java.sun.com/cgi-bin/bugreport.cgi",
        "java.version": "1.6.0_29",
        "java.vm.info": "mixed mode",
        "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
        "java.vm.specification.name": "Java Virtual Machine Specification",
        "java.vm.specification.vendor": "Sun Microsystems Inc.",
        "java.vm.specification.version": "1.0",
        "java.vm.vendor": "Sun Microsystems Inc.",
        "java.vm.version": "20.4-b02",
        "junit4.memory.total": "191496192",
        "junit4.processors": "8",
        "line.separator": "\r\n",
        "log4j.configuration": "log4j-tests.xml",
        "os.arch": "amd64",
        "os.name": "Windows 7",
        "os.version": "6.1",
        "path.separator": ";",
        "sun.arch.data.model": "64",
        "sun.boot.class.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\resources.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\rt.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\sunrsasign.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\jsse.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\jce.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\charsets.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\modules\\jdk.boot.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\classes",
        "sun.boot.library.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\bin",
        "sun.cpu.endian": "little",
        "sun.cpu.isalist": "amd64",
        "sun.desktop": "windows",
        "sun.io.unicode.encoding": "UnicodeLittle",
        "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe @e:\\repositories\\github.com\\carrot2\\tmp\\junit4-6111706349028991298.testmethods",
        "sun.java.launcher": "SUN_STANDARD",
        "sun.jnu.encoding": "Cp1250",
        "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
        "sun.os.patch.level": "Service Pack 1",
        "tests.externalservices": "${tests.externalservices}",
        "tests.nightly": "false",
        "tests.seed": "7C6FC98AC649E1E9",
        "user.country": "PL",
        "user.dir": "e:\\repositories\\github.com\\carrot2",
        "user.home": "C:\\Users\\stachoo",
        "user.language": "pl",
        "user.name": "stachoo",
        "user.timezone": "",
        "user.variant": ""
      }
    },
    "1": {
      "id": 1,
      "jvmName": "Java HotSpot(TM) 64-Bit Server VM, 20.4-b02",
      "charset": "windows-1250",
      "systemProperties": {
        "awt.toolkit": "sun.awt.windows.WToolkit",
        "carrot2.xml.feed.url.base": "",
        "dcs.test.web.dir.prefix": "e:\\repositories\\github.com\\carrot2\\applications/carrot2-dcs",
        "file.encoding": "Cp1250",
        "file.encoding.pkg": "sun.io",
        "file.separator": "\\",
        "java.awt.graphicsenv": "sun.awt.Win32GraphicsEnvironment",
        "java.awt.printerjob": "sun.awt.windows.WPrinterJob",
        "java.class.path": "e:\\repositories\\github.com\\carrot2\\applications\\carrot2-benchmarks\\lib\\h2-1.2.132.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-benchmarks\\lib\\junit-benchmarks-0.1.0.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-dcs\\lib\\commons-fileupload-1.2.1.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-webapp\\lib\\jawr-2.4.2.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-attribute\\.apt_factory\\org.carrot2.bindables.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-text\\lib\\JFlex.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.hppc\\hppc-0.4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.randomizedtesting\\ant-junit4-0.0.5-SNAPSHOT-standalone.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.randomizedtesting\\randomizedtesting-runner-0.0.5-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.google.guava\\guava-10.0.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.google.guava\\jsr305-1.3.9.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.planetj.compression\\pjl-comp-filter-1.7.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.thoughtworks.qdox\\qdox-1.12.jar;e:\\repositories\\github.com\\carrot2\\lib\\javax.servlet\\servlet-api-2.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\morfologik\\morfologik-stemming-1.5.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.java.dev.rome\\rome-1.0.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.java.dev.rome\\rome-fetcher-1.0.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.sf.ehcache\\ehcache-core-1.7.2.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-codec-1.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-collections-3.2.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-io-2.0.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-lang-2.6.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpclient-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpcore-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpmime-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.log4j\\log4j-1.2.16.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-analyzers-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-core-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-highlighter-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-memory-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-smartcn-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.mahout\\mahout-collections-1.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.mahout\\mahout-math-0.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.oro\\oro-2.0.8.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.velocity\\velocity-1.7.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.velocity\\velocity-tools-generic-2.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\resolver.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\serializer.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xalan-2.7.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xercesImpl-2.11.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xml-apis.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.carrot2.antlib\\org.carrot2.antlib.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.codehaus.jackson\\jackson-core-asl-1.7.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.codehaus.jackson\\jackson-mapper-asl-1.7.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.easymock\\easymock-3.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-continuation-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-deploy-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-http-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-io-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-security-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-server-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-servlet-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-servlets-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-util-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-webapp-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-xml-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-assert-1.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-mocks-1.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-util-1.1.6.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\cssparser-0.9.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\htmlunit-2.9-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\htmlunit-core-js-2.9-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\nekohtml-1.9.15-20101026.093020-2.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\sac-1.3.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.jdom\\jdom-1.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.junit4-ext\\junit-4.10.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.kohsuke.args4j\\args4j-2.0.9.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.simpleframework.xml\\simple-xml-2.4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\jcl-over-slf4j-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\slf4j-api-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\slf4j-log4j12-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-component-suites\\suites;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-log4j\\src;e:\\repositories\\github.com\\carrot2\\tmp\\classes-clover;e:\\repositories\\github.com\\carrot2\\tmp\\classes-test;e:\\repositories\\github.com\\carrot2\\tmp\\classes;e:\\repositories\\carrotsearch.com\\tools\\clover-ant-2.6.3\\lib\\clover.jar",
        "java.class.version": "50.0",
        "java.endorsed.dirs": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\endorsed",
        "java.ext.dirs": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\ext;C:\\Windows\\Sun\\Java\\lib\\ext",
        "java.home": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre",
        "java.io.tmpdir": "C:\\Users\\stachoo\\AppData\\Local\\Temp\\",
        "java.library.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;d:\\dev\\scm\\svn\\cmd;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\DMIX;d:\\dev\\scm\\git\\msysgit\\cmd;D:\\dev\\scm\\git\\tortoise\\bin;d:\\dev\\java\\ant\\bin;d:\\bin;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\bin;D:\\dev\\scm\\svn\\tortoise\\bin;d:\\dev\\java\\maven\\bin;.",
        "java.runtime.name": "Java(TM) SE Runtime Environment",
        "java.runtime.version": "1.6.0_29-b11",
        "java.specification.name": "Java Platform API Specification",
        "java.specification.vendor": "Sun Microsystems Inc.",
        "java.specification.version": "1.6",
        "java.vendor": "Sun Microsystems Inc.",
        "java.vendor.url": "http://java.sun.com/",
        "java.vendor.url.bug": "http://java.sun.com/cgi-bin/bugreport.cgi",
        "java.version": "1.6.0_29",
        "java.vm.info": "mixed mode",
        "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
        "java.vm.specification.name": "Java Virtual Machine Specification",
        "java.vm.specification.vendor": "Sun Microsystems Inc.",
        "java.vm.specification.version": "1.0",
        "java.vm.vendor": "Sun Microsystems Inc.",
        "java.vm.version": "20.4-b02",
        "junit4.memory.total": "191496192",
        "junit4.processors": "8",
        "line.separator": "\r\n",
        "log4j.configuration": "log4j-tests.xml",
        "os.arch": "amd64",
        "os.name": "Windows 7",
        "os.version": "6.1",
        "path.separator": ";",
        "sun.arch.data.model": "64",
        "sun.boot.class.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\resources.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\rt.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\sunrsasign.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\jsse.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\jce.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\charsets.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\modules\\jdk.boot.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\classes",
        "sun.boot.library.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\bin",
        "sun.cpu.endian": "little",
        "sun.cpu.isalist": "amd64",
        "sun.desktop": "windows",
        "sun.io.unicode.encoding": "UnicodeLittle",
        "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe @e:\\repositories\\github.com\\carrot2\\tmp\\junit4-2993111285221651108.testmethods",
        "sun.java.launcher": "SUN_STANDARD",
        "sun.jnu.encoding": "Cp1250",
        "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
        "sun.os.patch.level": "Service Pack 1",
        "tests.externalservices": "${tests.externalservices}",
        "tests.nightly": "false",
        "tests.seed": "7C6FC98AC649E1E9",
        "user.country": "PL",
        "user.dir": "e:\\repositories\\github.com\\carrot2",
        "user.home": "C:\\Users\\stachoo",
        "user.language": "pl",
        "user.name": "stachoo",
        "user.timezone": "",
        "user.variant": ""
      }
    },
    "2": {
      "id": 2,
      "jvmName": "Java HotSpot(TM) 64-Bit Server VM, 20.4-b02",
      "charset": "windows-1250",
      "systemProperties": {
        "awt.toolkit": "sun.awt.windows.WToolkit",
        "carrot2.xml.feed.url.base": "",
        "dcs.test.web.dir.prefix": "e:\\repositories\\github.com\\carrot2\\applications/carrot2-dcs",
        "file.encoding": "Cp1250",
        "file.encoding.pkg": "sun.io",
        "file.separator": "\\",
        "java.awt.graphicsenv": "sun.awt.Win32GraphicsEnvironment",
        "java.awt.printerjob": "sun.awt.windows.WPrinterJob",
        "java.class.path": "e:\\repositories\\github.com\\carrot2\\applications\\carrot2-benchmarks\\lib\\h2-1.2.132.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-benchmarks\\lib\\junit-benchmarks-0.1.0.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-dcs\\lib\\commons-fileupload-1.2.1.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-webapp\\lib\\jawr-2.4.2.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-attribute\\.apt_factory\\org.carrot2.bindables.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-text\\lib\\JFlex.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.hppc\\hppc-0.4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.randomizedtesting\\ant-junit4-0.0.5-SNAPSHOT-standalone.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.randomizedtesting\\randomizedtesting-runner-0.0.5-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.google.guava\\guava-10.0.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.google.guava\\jsr305-1.3.9.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.planetj.compression\\pjl-comp-filter-1.7.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.thoughtworks.qdox\\qdox-1.12.jar;e:\\repositories\\github.com\\carrot2\\lib\\javax.servlet\\servlet-api-2.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\morfologik\\morfologik-stemming-1.5.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.java.dev.rome\\rome-1.0.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.java.dev.rome\\rome-fetcher-1.0.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.sf.ehcache\\ehcache-core-1.7.2.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-codec-1.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-collections-3.2.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-io-2.0.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-lang-2.6.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpclient-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpcore-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpmime-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.log4j\\log4j-1.2.16.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-analyzers-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-core-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-highlighter-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-memory-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-smartcn-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.mahout\\mahout-collections-1.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.mahout\\mahout-math-0.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.oro\\oro-2.0.8.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.velocity\\velocity-1.7.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.velocity\\velocity-tools-generic-2.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\resolver.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\serializer.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xalan-2.7.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xercesImpl-2.11.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xml-apis.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.carrot2.antlib\\org.carrot2.antlib.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.codehaus.jackson\\jackson-core-asl-1.7.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.codehaus.jackson\\jackson-mapper-asl-1.7.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.easymock\\easymock-3.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-continuation-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-deploy-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-http-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-io-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-security-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-server-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-servlet-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-servlets-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-util-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-webapp-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-xml-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-assert-1.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-mocks-1.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-util-1.1.6.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\cssparser-0.9.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\htmlunit-2.9-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\htmlunit-core-js-2.9-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\nekohtml-1.9.15-20101026.093020-2.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\sac-1.3.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.jdom\\jdom-1.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.junit4-ext\\junit-4.10.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.kohsuke.args4j\\args4j-2.0.9.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.simpleframework.xml\\simple-xml-2.4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\jcl-over-slf4j-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\slf4j-api-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\slf4j-log4j12-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-component-suites\\suites;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-log4j\\src;e:\\repositories\\github.com\\carrot2\\tmp\\classes-clover;e:\\repositories\\github.com\\carrot2\\tmp\\classes-test;e:\\repositories\\github.com\\carrot2\\tmp\\classes;e:\\repositories\\carrotsearch.com\\tools\\clover-ant-2.6.3\\lib\\clover.jar",
        "java.class.version": "50.0",
        "java.endorsed.dirs": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\endorsed",
        "java.ext.dirs": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\ext;C:\\Windows\\Sun\\Java\\lib\\ext",
        "java.home": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre",
        "java.io.tmpdir": "C:\\Users\\stachoo\\AppData\\Local\\Temp\\",
        "java.library.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;d:\\dev\\scm\\svn\\cmd;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\DMIX;d:\\dev\\scm\\git\\msysgit\\cmd;D:\\dev\\scm\\git\\tortoise\\bin;d:\\dev\\java\\ant\\bin;d:\\bin;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\bin;D:\\dev\\scm\\svn\\tortoise\\bin;d:\\dev\\java\\maven\\bin;.",
        "java.runtime.name": "Java(TM) SE Runtime Environment",
        "java.runtime.version": "1.6.0_29-b11",
        "java.specification.name": "Java Platform API Specification",
        "java.specification.vendor": "Sun Microsystems Inc.",
        "java.specification.version": "1.6",
        "java.vendor": "Sun Microsystems Inc.",
        "java.vendor.url": "http://java.sun.com/",
        "java.vendor.url.bug": "http://java.sun.com/cgi-bin/bugreport.cgi",
        "java.version": "1.6.0_29",
        "java.vm.info": "mixed mode",
        "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
        "java.vm.specification.name": "Java Virtual Machine Specification",
        "java.vm.specification.vendor": "Sun Microsystems Inc.",
        "java.vm.specification.version": "1.0",
        "java.vm.vendor": "Sun Microsystems Inc.",
        "java.vm.version": "20.4-b02",
        "junit4.memory.total": "191496192",
        "junit4.processors": "8",
        "line.separator": "\r\n",
        "log4j.configuration": "log4j-tests.xml",
        "os.arch": "amd64",
        "os.name": "Windows 7",
        "os.version": "6.1",
        "path.separator": ";",
        "sun.arch.data.model": "64",
        "sun.boot.class.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\resources.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\rt.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\sunrsasign.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\jsse.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\jce.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\charsets.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\modules\\jdk.boot.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\classes",
        "sun.boot.library.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\bin",
        "sun.cpu.endian": "little",
        "sun.cpu.isalist": "amd64",
        "sun.desktop": "windows",
        "sun.io.unicode.encoding": "UnicodeLittle",
        "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe @e:\\repositories\\github.com\\carrot2\\tmp\\junit4-4835837832069809687.testmethods",
        "sun.java.launcher": "SUN_STANDARD",
        "sun.jnu.encoding": "Cp1250",
        "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
        "sun.os.patch.level": "Service Pack 1",
        "tests.externalservices": "${tests.externalservices}",
        "tests.nightly": "false",
        "tests.seed": "7C6FC98AC649E1E9",
        "user.country": "PL",
        "user.dir": "e:\\repositories\\github.com\\carrot2",
        "user.home": "C:\\Users\\stachoo",
        "user.language": "pl",
        "user.name": "stachoo",
        "user.timezone": "",
        "user.variant": ""
      }
    },
    "3": {
      "id": 3,
      "jvmName": "Java HotSpot(TM) 64-Bit Server VM, 20.4-b02",
      "charset": "windows-1250",
      "systemProperties": {
        "awt.toolkit": "sun.awt.windows.WToolkit",
        "carrot2.xml.feed.url.base": "",
        "dcs.test.web.dir.prefix": "e:\\repositories\\github.com\\carrot2\\applications/carrot2-dcs",
        "file.encoding": "Cp1250",
        "file.encoding.pkg": "sun.io",
        "file.separator": "\\",
        "java.awt.graphicsenv": "sun.awt.Win32GraphicsEnvironment",
        "java.awt.printerjob": "sun.awt.windows.WPrinterJob",
        "java.class.path": "e:\\repositories\\github.com\\carrot2\\applications\\carrot2-benchmarks\\lib\\h2-1.2.132.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-benchmarks\\lib\\junit-benchmarks-0.1.0.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-dcs\\lib\\commons-fileupload-1.2.1.jar;e:\\repositories\\github.com\\carrot2\\applications\\carrot2-webapp\\lib\\jawr-2.4.2.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-attribute\\.apt_factory\\org.carrot2.bindables.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-text\\lib\\JFlex.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.hppc\\hppc-0.4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.randomizedtesting\\ant-junit4-0.0.5-SNAPSHOT-standalone.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.carrotsearch.randomizedtesting\\randomizedtesting-runner-0.0.5-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.google.guava\\guava-10.0.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.google.guava\\jsr305-1.3.9.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.planetj.compression\\pjl-comp-filter-1.7.jar;e:\\repositories\\github.com\\carrot2\\lib\\com.thoughtworks.qdox\\qdox-1.12.jar;e:\\repositories\\github.com\\carrot2\\lib\\javax.servlet\\servlet-api-2.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\morfologik\\morfologik-stemming-1.5.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.java.dev.rome\\rome-1.0.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.java.dev.rome\\rome-fetcher-1.0.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\net.sf.ehcache\\ehcache-core-1.7.2.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-codec-1.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-collections-3.2.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-io-2.0.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.commons\\commons-lang-2.6.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpclient-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpcore-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.http\\httpmime-4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.log4j\\log4j-1.2.16.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-analyzers-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-core-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-highlighter-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-memory-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.lucene\\lucene-smartcn-3.4.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.mahout\\mahout-collections-1.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.mahout\\mahout-math-0.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.oro\\oro-2.0.8.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.velocity\\velocity-1.7.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.velocity\\velocity-tools-generic-2.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\resolver.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\serializer.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xalan-2.7.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xercesImpl-2.11.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.apache.xml\\xml-apis.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.carrot2.antlib\\org.carrot2.antlib.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.codehaus.jackson\\jackson-core-asl-1.7.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.codehaus.jackson\\jackson-mapper-asl-1.7.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.easymock\\easymock-3.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-continuation-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-deploy-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-http-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-io-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-security-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-server-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-servlet-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-servlets-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-util-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-webapp-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.eclipse.jetty\\jetty-xml-7.3.1.v20110307.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-assert-1.4.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-mocks-1.0.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.fest\\fest-util-1.1.6.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\cssparser-0.9.5.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\htmlunit-2.9-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\htmlunit-core-js-2.9-SNAPSHOT.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\nekohtml-1.9.15-20101026.093020-2.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.gargoylesoftware.htmlunit\\sac-1.3.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.jdom\\jdom-1.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.junit4-ext\\junit-4.10.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.kohsuke.args4j\\args4j-2.0.9.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.simpleframework.xml\\simple-xml-2.4.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\jcl-over-slf4j-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\slf4j-api-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\lib\\org.slf4j\\slf4j-log4j12-1.6.1.jar;e:\\repositories\\github.com\\carrot2\\core\\carrot2-component-suites\\suites;e:\\repositories\\github.com\\carrot2\\core\\carrot2-util-log4j\\src;e:\\repositories\\github.com\\carrot2\\tmp\\classes-clover;e:\\repositories\\github.com\\carrot2\\tmp\\classes-test;e:\\repositories\\github.com\\carrot2\\tmp\\classes;e:\\repositories\\carrotsearch.com\\tools\\clover-ant-2.6.3\\lib\\clover.jar",
        "java.class.version": "50.0",
        "java.endorsed.dirs": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\endorsed",
        "java.ext.dirs": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\ext;C:\\Windows\\Sun\\Java\\lib\\ext",
        "java.home": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre",
        "java.io.tmpdir": "C:\\Users\\stachoo\\AppData\\Local\\Temp\\",
        "java.library.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;d:\\dev\\scm\\svn\\cmd;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\DMIX;d:\\dev\\scm\\git\\msysgit\\cmd;D:\\dev\\scm\\git\\tortoise\\bin;d:\\dev\\java\\ant\\bin;d:\\bin;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\bin;D:\\dev\\scm\\svn\\tortoise\\bin;d:\\dev\\java\\maven\\bin;.",
        "java.runtime.name": "Java(TM) SE Runtime Environment",
        "java.runtime.version": "1.6.0_29-b11",
        "java.specification.name": "Java Platform API Specification",
        "java.specification.vendor": "Sun Microsystems Inc.",
        "java.specification.version": "1.6",
        "java.vendor": "Sun Microsystems Inc.",
        "java.vendor.url": "http://java.sun.com/",
        "java.vendor.url.bug": "http://java.sun.com/cgi-bin/bugreport.cgi",
        "java.version": "1.6.0_29",
        "java.vm.info": "mixed mode",
        "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
        "java.vm.specification.name": "Java Virtual Machine Specification",
        "java.vm.specification.vendor": "Sun Microsystems Inc.",
        "java.vm.specification.version": "1.0",
        "java.vm.vendor": "Sun Microsystems Inc.",
        "java.vm.version": "20.4-b02",
        "junit4.memory.total": "191496192",
        "junit4.processors": "8",
        "line.separator": "\r\n",
        "log4j.configuration": "log4j-tests.xml",
        "os.arch": "amd64",
        "os.name": "Windows 7",
        "os.version": "6.1",
        "path.separator": ";",
        "sun.arch.data.model": "64",
        "sun.boot.class.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\resources.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\rt.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\sunrsasign.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\jsse.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\jce.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\charsets.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\lib\\modules\\jdk.boot.jar;d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\classes",
        "sun.boot.library.path": "d:\\dev\\java\\jdk\\sun-j2sdk1.6.0\\jre\\bin",
        "sun.cpu.endian": "little",
        "sun.cpu.isalist": "amd64",
        "sun.desktop": "windows",
        "sun.io.unicode.encoding": "UnicodeLittle",
        "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe @e:\\repositories\\github.com\\carrot2\\tmp\\junit4-6380515002075397020.testmethods",
        "sun.java.launcher": "SUN_STANDARD",
        "sun.jnu.encoding": "Cp1250",
        "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
        "sun.os.patch.level": "Service Pack 1",
        "tests.externalservices": "${tests.externalservices}",
        "tests.nightly": "false",
        "tests.seed": "7C6FC98AC649E1E9",
        "user.country": "PL",
        "user.dir": "e:\\repositories\\github.com\\carrot2",
        "user.home": "C:\\Users\\stachoo",
        "user.language": "pl",
        "user.name": "stachoo",
        "user.timezone": "",
        "user.variant": ""
      }
    }
  }
})
