testData({
  "junit4": {
    "tests.seed": "F156A86CD805A9AC"
  },
  "suites": [
    {
      "slave": 0,
      "startTimestamp": 1327321163584,
      "startTimestampDate": "2012-01-23T13:19:23.584",
      "executionTime": 447,
      "description": {
        "id": "id#com.carrotsearch.hppc.FloatCharOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
        "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.FloatCharOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.FloatCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321163711,
          "startTimestampDate": "2012-01-23T13:19:23.711",
          "executionTime": 5,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163718,
          "startTimestampDate": "2012-01-23T13:19:23.718",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163719,
          "startTimestampDate": "2012-01-23T13:19:23.719",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163720,
          "startTimestampDate": "2012-01-23T13:19:23.720",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163721,
          "startTimestampDate": "2012-01-23T13:19:23.721",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163722,
          "startTimestampDate": "2012-01-23T13:19:23.722",
          "executionTime": 123,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163851,
          "startTimestampDate": "2012-01-23T13:19:23.851",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163854,
          "startTimestampDate": "2012-01-23T13:19:23.854",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163856,
          "startTimestampDate": "2012-01-23T13:19:23.856",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163859,
          "startTimestampDate": "2012-01-23T13:19:23.859",
          "executionTime": 3,
          "description": "id#testRemove(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163865,
          "startTimestampDate": "2012-01-23T13:19:23.865",
          "executionTime": 3,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163871,
          "startTimestampDate": "2012-01-23T13:19:23.871",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163873,
          "startTimestampDate": "2012-01-23T13:19:23.873",
          "executionTime": 2,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163877,
          "startTimestampDate": "2012-01-23T13:19:23.877",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163878,
          "startTimestampDate": "2012-01-23T13:19:23.878",
          "executionTime": 3,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163884,
          "startTimestampDate": "2012-01-23T13:19:23.884",
          "executionTime": 1,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163888,
          "startTimestampDate": "2012-01-23T13:19:23.888",
          "executionTime": 22,
          "description": "id#testClear(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163913,
          "startTimestampDate": "2012-01-23T13:19:23.913",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163916,
          "startTimestampDate": "2012-01-23T13:19:23.916",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163918,
          "startTimestampDate": "2012-01-23T13:19:23.918",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163920,
          "startTimestampDate": "2012-01-23T13:19:23.920",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163922,
          "startTimestampDate": "2012-01-23T13:19:23.922",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163928,
          "startTimestampDate": "2012-01-23T13:19:23.928",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163930,
          "startTimestampDate": "2012-01-23T13:19:23.930",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321163932,
          "startTimestampDate": "2012-01-23T13:19:23.932",
          "executionTime": 68,
          "description": "id#testToString(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatCharOpenHashMapTest.testToString(FloatCharOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164009,
          "startTimestampDate": "2012-01-23T13:19:24.009",
          "executionTime": 6,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatCharOpenHashMapTest.testAddRemoveSameHashCollision(FloatCharOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164017,
          "startTimestampDate": "2012-01-23T13:19:24.017",
          "executionTime": 4,
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164023,
          "startTimestampDate": "2012-01-23T13:19:24.023",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164025,
          "startTimestampDate": "2012-01-23T13:19:24.025",
          "executionTime": 3,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatCharOpenHashMapTest.testToString(FloatCharOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatCharOpenHashMapTest.testAddRemoveSameHashCollision(FloatCharOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatCharOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321164060,
      "startTimestampDate": "2012-01-23T13:19:24.060",
      "executionTime": 294,
      "description": {
        "id": "id#com.carrotsearch.hppc.FloatFloatOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
        "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.FloatFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321164175,
          "startTimestampDate": "2012-01-23T13:19:24.175",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164178,
          "startTimestampDate": "2012-01-23T13:19:24.178",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164185,
          "startTimestampDate": "2012-01-23T13:19:24.185",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164192,
          "startTimestampDate": "2012-01-23T13:19:24.192",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164192,
          "startTimestampDate": "2012-01-23T13:19:24.192",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164193,
          "startTimestampDate": "2012-01-23T13:19:24.193",
          "executionTime": 60,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164256,
          "startTimestampDate": "2012-01-23T13:19:24.256",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164256,
          "startTimestampDate": "2012-01-23T13:19:24.256",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164257,
          "startTimestampDate": "2012-01-23T13:19:24.257",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164258,
          "startTimestampDate": "2012-01-23T13:19:24.258",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164258,
          "startTimestampDate": "2012-01-23T13:19:24.258",
          "executionTime": 1,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164260,
          "startTimestampDate": "2012-01-23T13:19:24.260",
          "executionTime": 4,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164267,
          "startTimestampDate": "2012-01-23T13:19:24.267",
          "executionTime": 2,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164269,
          "startTimestampDate": "2012-01-23T13:19:24.269",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164276,
          "startTimestampDate": "2012-01-23T13:19:24.276",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164277,
          "startTimestampDate": "2012-01-23T13:19:24.277",
          "executionTime": 1,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164278,
          "startTimestampDate": "2012-01-23T13:19:24.278",
          "executionTime": 35,
          "description": "id#testClear(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164314,
          "startTimestampDate": "2012-01-23T13:19:24.314",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164315,
          "startTimestampDate": "2012-01-23T13:19:24.315",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164320,
          "startTimestampDate": "2012-01-23T13:19:24.320",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164321,
          "startTimestampDate": "2012-01-23T13:19:24.321",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164322,
          "startTimestampDate": "2012-01-23T13:19:24.322",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164323,
          "startTimestampDate": "2012-01-23T13:19:24.323",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164323,
          "startTimestampDate": "2012-01-23T13:19:24.323",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164324,
          "startTimestampDate": "2012-01-23T13:19:24.324",
          "executionTime": 20,
          "description": "id#testToString(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatFloatOpenHashMapTest.testToString(FloatFloatOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164344,
          "startTimestampDate": "2012-01-23T13:19:24.344",
          "executionTime": 5,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatFloatOpenHashMapTest.testAddRemoveSameHashCollision(FloatFloatOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164350,
          "startTimestampDate": "2012-01-23T13:19:24.350",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164352,
          "startTimestampDate": "2012-01-23T13:19:24.352",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164353,
          "startTimestampDate": "2012-01-23T13:19:24.353",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatFloatOpenHashMapTest.testToString(FloatFloatOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatFloatOpenHashMapTest.testAddRemoveSameHashCollision(FloatFloatOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatFloatOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321164364,
      "startTimestampDate": "2012-01-23T13:19:24.364",
      "executionTime": 212,
      "description": {
        "id": "id#com.carrotsearch.hppc.DoubleIntOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
        "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.DoubleIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321164413,
          "startTimestampDate": "2012-01-23T13:19:24.413",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164415,
          "startTimestampDate": "2012-01-23T13:19:24.415",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164416,
          "startTimestampDate": "2012-01-23T13:19:24.416",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164416,
          "startTimestampDate": "2012-01-23T13:19:24.416",
          "executionTime": 1,
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164417,
          "startTimestampDate": "2012-01-23T13:19:24.417",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164418,
          "startTimestampDate": "2012-01-23T13:19:24.418",
          "executionTime": 57,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164476,
          "startTimestampDate": "2012-01-23T13:19:24.476",
          "executionTime": 5,
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164481,
          "startTimestampDate": "2012-01-23T13:19:24.481",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164482,
          "startTimestampDate": "2012-01-23T13:19:24.482",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164483,
          "startTimestampDate": "2012-01-23T13:19:24.483",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164483,
          "startTimestampDate": "2012-01-23T13:19:24.483",
          "executionTime": 3,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164487,
          "startTimestampDate": "2012-01-23T13:19:24.487",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164488,
          "startTimestampDate": "2012-01-23T13:19:24.488",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164490,
          "startTimestampDate": "2012-01-23T13:19:24.490",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164491,
          "startTimestampDate": "2012-01-23T13:19:24.491",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164493,
          "startTimestampDate": "2012-01-23T13:19:24.493",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164494,
          "startTimestampDate": "2012-01-23T13:19:24.494",
          "executionTime": 33,
          "description": "id#testClear(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164528,
          "startTimestampDate": "2012-01-23T13:19:24.528",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164528,
          "startTimestampDate": "2012-01-23T13:19:24.528",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164529,
          "startTimestampDate": "2012-01-23T13:19:24.529",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164541,
          "startTimestampDate": "2012-01-23T13:19:24.541",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164545,
          "startTimestampDate": "2012-01-23T13:19:24.545",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164546,
          "startTimestampDate": "2012-01-23T13:19:24.546",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164547,
          "startTimestampDate": "2012-01-23T13:19:24.547",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164547,
          "startTimestampDate": "2012-01-23T13:19:24.547",
          "executionTime": 10,
          "description": "id#testToString(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleIntOpenHashMapTest.testToString(DoubleIntOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164558,
          "startTimestampDate": "2012-01-23T13:19:24.558",
          "executionTime": 6,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleIntOpenHashMapTest.testAddRemoveSameHashCollision(DoubleIntOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164564,
          "startTimestampDate": "2012-01-23T13:19:24.564",
          "executionTime": 2,
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164573,
          "startTimestampDate": "2012-01-23T13:19:24.573",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164574,
          "startTimestampDate": "2012-01-23T13:19:24.574",
          "executionTime": 2,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleIntOpenHashMapTest.testToString(DoubleIntOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleIntOpenHashMapTest.testAddRemoveSameHashCollision(DoubleIntOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleIntOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321164638,
      "startTimestampDate": "2012-01-23T13:19:24.638",
      "executionTime": 583,
      "description": {
        "id": "id#com.carrotsearch.hppc.ObjectFloatOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullKey(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testNullKey(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testNullKey",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLkey(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
            "displayName": "testLkey(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)",
            "methodName": "testLkey",
            "className": "com.carrotsearch.hppc.ObjectFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321164676,
          "startTimestampDate": "2012-01-23T13:19:24.676",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164679,
          "startTimestampDate": "2012-01-23T13:19:24.679",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164679,
          "startTimestampDate": "2012-01-23T13:19:24.679",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164680,
          "startTimestampDate": "2012-01-23T13:19:24.680",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164680,
          "startTimestampDate": "2012-01-23T13:19:24.680",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164681,
          "startTimestampDate": "2012-01-23T13:19:24.681",
          "executionTime": 92,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164774,
          "startTimestampDate": "2012-01-23T13:19:24.774",
          "executionTime": 5,
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164780,
          "startTimestampDate": "2012-01-23T13:19:24.780",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164780,
          "startTimestampDate": "2012-01-23T13:19:24.780",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164781,
          "startTimestampDate": "2012-01-23T13:19:24.781",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164781,
          "startTimestampDate": "2012-01-23T13:19:24.781",
          "executionTime": 3,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164785,
          "startTimestampDate": "2012-01-23T13:19:24.785",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164786,
          "startTimestampDate": "2012-01-23T13:19:24.786",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164787,
          "startTimestampDate": "2012-01-23T13:19:24.787",
          "executionTime": 7,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164795,
          "startTimestampDate": "2012-01-23T13:19:24.795",
          "executionTime": 2,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164799,
          "startTimestampDate": "2012-01-23T13:19:24.799",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164801,
          "startTimestampDate": "2012-01-23T13:19:24.801",
          "executionTime": 14,
          "description": "id#testClear(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164817,
          "startTimestampDate": "2012-01-23T13:19:24.817",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164821,
          "startTimestampDate": "2012-01-23T13:19:24.821",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164822,
          "startTimestampDate": "2012-01-23T13:19:24.822",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164824,
          "startTimestampDate": "2012-01-23T13:19:24.824",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164825,
          "startTimestampDate": "2012-01-23T13:19:24.825",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164827,
          "startTimestampDate": "2012-01-23T13:19:24.827",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164829,
          "startTimestampDate": "2012-01-23T13:19:24.829",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164830,
          "startTimestampDate": "2012-01-23T13:19:24.830",
          "executionTime": 6,
          "description": "id#testToString(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ObjectFloatOpenHashMapTest.testToString(ObjectFloatOpenHashMapTest.java:514)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321164838,
          "startTimestampDate": "2012-01-23T13:19:24.838",
          "executionTime": 370,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165210,
          "startTimestampDate": "2012-01-23T13:19:25.210",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165214,
          "startTimestampDate": "2012-01-23T13:19:25.214",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165215,
          "startTimestampDate": "2012-01-23T13:19:25.215",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165218,
          "startTimestampDate": "2012-01-23T13:19:25.218",
          "executionTime": 0,
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165220,
          "startTimestampDate": "2012-01-23T13:19:25.220",
          "executionTime": 0,
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ObjectFloatOpenHashMapTest.testToString(ObjectFloatOpenHashMapTest.java:514)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectFloatOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321165242,
      "startTimestampDate": "2012-01-23T13:19:25.242",
      "executionTime": 126,
      "description": {
        "id": "id#com.carrotsearch.hppc.CharDoubleOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
        "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.CharDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321165261,
          "startTimestampDate": "2012-01-23T13:19:25.261",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165263,
          "startTimestampDate": "2012-01-23T13:19:25.263",
          "executionTime": 1,
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165264,
          "startTimestampDate": "2012-01-23T13:19:25.264",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165265,
          "startTimestampDate": "2012-01-23T13:19:25.265",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165265,
          "startTimestampDate": "2012-01-23T13:19:25.265",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165266,
          "startTimestampDate": "2012-01-23T13:19:25.266",
          "executionTime": 45,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165312,
          "startTimestampDate": "2012-01-23T13:19:25.312",
          "executionTime": 4,
          "description": "id#testPutAll(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165317,
          "startTimestampDate": "2012-01-23T13:19:25.317",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165318,
          "startTimestampDate": "2012-01-23T13:19:25.318",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165318,
          "startTimestampDate": "2012-01-23T13:19:25.318",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165319,
          "startTimestampDate": "2012-01-23T13:19:25.319",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165320,
          "startTimestampDate": "2012-01-23T13:19:25.320",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165321,
          "startTimestampDate": "2012-01-23T13:19:25.321",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165323,
          "startTimestampDate": "2012-01-23T13:19:25.323",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165324,
          "startTimestampDate": "2012-01-23T13:19:25.324",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165325,
          "startTimestampDate": "2012-01-23T13:19:25.325",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165326,
          "startTimestampDate": "2012-01-23T13:19:25.326",
          "executionTime": 20,
          "description": "id#testClear(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165348,
          "startTimestampDate": "2012-01-23T13:19:25.348",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165349,
          "startTimestampDate": "2012-01-23T13:19:25.349",
          "executionTime": 1,
          "description": "id#testIterable(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165351,
          "startTimestampDate": "2012-01-23T13:19:25.351",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165352,
          "startTimestampDate": "2012-01-23T13:19:25.352",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165353,
          "startTimestampDate": "2012-01-23T13:19:25.353",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165354,
          "startTimestampDate": "2012-01-23T13:19:25.354",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165354,
          "startTimestampDate": "2012-01-23T13:19:25.354",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165355,
          "startTimestampDate": "2012-01-23T13:19:25.355",
          "executionTime": 4,
          "description": "id#testToString(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharDoubleOpenHashMapTest.testToString(CharDoubleOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165360,
          "startTimestampDate": "2012-01-23T13:19:25.360",
          "executionTime": 4,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharDoubleOpenHashMapTest.testAddRemoveSameHashCollision(CharDoubleOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165364,
          "startTimestampDate": "2012-01-23T13:19:25.364",
          "executionTime": 2,
          "description": "id#testMapValues(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165367,
          "startTimestampDate": "2012-01-23T13:19:25.367",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165367,
          "startTimestampDate": "2012-01-23T13:19:25.367",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharDoubleOpenHashMapTest.testToString(CharDoubleOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharDoubleOpenHashMapTest.testAddRemoveSameHashCollision(CharDoubleOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharDoubleOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321165380,
      "startTimestampDate": "2012-01-23T13:19:25.380",
      "executionTime": 327,
      "description": {
        "id": "id#com.carrotsearch.hppc.ObjectArrayDequeTest[0]",
        "displayName": "com.carrotsearch.hppc.ObjectArrayDequeTest",
        "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddFirst(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testAddFirst(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testAddFirst",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddLast(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testAddLast(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testAddLast",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddWithGrowth(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testAddWithGrowth(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testAddWithGrowth",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddLastWithGrowth(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testAddLastWithGrowth(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testAddLastWithGrowth",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllFirst(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testAddAllFirst(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testAddAllFirst",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllLast(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testAddAllLast(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testAddAllLast",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirst(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testRemoveFirst(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testRemoveFirst",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testRemoveFirstEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testRemoveFirstEmpty",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLast(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testRemoveLast(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testRemoveLast",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLastEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testRemoveLastEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testRemoveLastEmpty",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetFirst(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testGetFirst(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testGetFirst",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetFirstEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testGetFirstEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testGetFirstEmpty",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetLast(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testGetLast(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testGetLast",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetLastEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testGetLastEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testGetLastEmpty",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testRemoveFirstOccurrence(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testRemoveFirstOccurrence",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testRemoveLastOccurrence(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testRemoveLastOccurrence",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testRemoveAllOccurrences(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testRemoveAllOccurrences",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testRemoveAllInLookupContainer(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testRemoveAllInLookupContainer",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testRemoveAllWithPredicateInterrupted",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRelease(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testRelease(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testRelease",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterator(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testIterator(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testIterator",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDescendingIterator(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testDescendingIterator(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testDescendingIterator",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachWithProcedure(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testForEachWithProcedure(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testForEachWithProcedure",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testDescendingForEachWithProcedure(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testDescendingForEachWithProcedure",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAgainstArrayDeque(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testAgainstArrayDeque(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testAgainstArrayDeque",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAgainstArrayDequeVariousTailHeadPositions(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testAgainstArrayDequeVariousTailHeadPositions(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testAgainstArrayDequeVariousTailHeadPositions",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeWithNulls(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testHashCodeWithNulls(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testHashCodeWithNulls",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToArrayWithClass(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testToArrayWithClass(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testToArrayWithClass",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToArray(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
            "displayName": "testToArray(com.carrotsearch.hppc.ObjectArrayDequeTest)",
            "methodName": "testToArray",
            "className": "com.carrotsearch.hppc.ObjectArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321165409,
          "startTimestampDate": "2012-01-23T13:19:25.409",
          "executionTime": 14,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165423,
          "startTimestampDate": "2012-01-23T13:19:25.423",
          "executionTime": 7,
          "description": "id#testClear(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165431,
          "startTimestampDate": "2012-01-23T13:19:25.431",
          "executionTime": 41,
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165472,
          "startTimestampDate": "2012-01-23T13:19:25.472",
          "executionTime": 1,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165474,
          "startTimestampDate": "2012-01-23T13:19:25.474",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165475,
          "startTimestampDate": "2012-01-23T13:19:25.475",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165476,
          "startTimestampDate": "2012-01-23T13:19:25.476",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165477,
          "startTimestampDate": "2012-01-23T13:19:25.477",
          "executionTime": 0,
          "description": "id#testAddFirst(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165477,
          "startTimestampDate": "2012-01-23T13:19:25.477",
          "executionTime": 1,
          "description": "id#testAddLast(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165479,
          "startTimestampDate": "2012-01-23T13:19:25.479",
          "executionTime": 16,
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165497,
          "startTimestampDate": "2012-01-23T13:19:25.497",
          "executionTime": 7,
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165505,
          "startTimestampDate": "2012-01-23T13:19:25.505",
          "executionTime": 1,
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165508,
          "startTimestampDate": "2012-01-23T13:19:25.508",
          "executionTime": 0,
          "description": "id#testAddAllLast(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165510,
          "startTimestampDate": "2012-01-23T13:19:25.510",
          "executionTime": 0,
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165512,
          "startTimestampDate": "2012-01-23T13:19:25.512",
          "executionTime": 1,
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165515,
          "startTimestampDate": "2012-01-23T13:19:25.515",
          "executionTime": 1,
          "description": "id#testRemoveLast(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165517,
          "startTimestampDate": "2012-01-23T13:19:25.517",
          "executionTime": 1,
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165519,
          "startTimestampDate": "2012-01-23T13:19:25.519",
          "executionTime": 1,
          "description": "id#testGetFirst(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165521,
          "startTimestampDate": "2012-01-23T13:19:25.521",
          "executionTime": 1,
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165533,
          "startTimestampDate": "2012-01-23T13:19:25.533",
          "executionTime": 0,
          "description": "id#testGetLast(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165535,
          "startTimestampDate": "2012-01-23T13:19:25.535",
          "executionTime": 0,
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165537,
          "startTimestampDate": "2012-01-23T13:19:25.537",
          "executionTime": 15,
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165553,
          "startTimestampDate": "2012-01-23T13:19:25.553",
          "executionTime": 10,
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165565,
          "startTimestampDate": "2012-01-23T13:19:25.565",
          "executionTime": 1,
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165567,
          "startTimestampDate": "2012-01-23T13:19:25.567",
          "executionTime": 3,
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165571,
          "startTimestampDate": "2012-01-23T13:19:25.571",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165573,
          "startTimestampDate": "2012-01-23T13:19:25.573",
          "executionTime": 0,
          "description": "id#testRelease(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165574,
          "startTimestampDate": "2012-01-23T13:19:25.574",
          "executionTime": 0,
          "description": "id#testIterator(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165575,
          "startTimestampDate": "2012-01-23T13:19:25.575",
          "executionTime": 12,
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165589,
          "startTimestampDate": "2012-01-23T13:19:25.589",
          "executionTime": 5,
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165596,
          "startTimestampDate": "2012-01-23T13:19:25.596",
          "executionTime": 4,
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165602,
          "startTimestampDate": "2012-01-23T13:19:25.602",
          "executionTime": 54,
          "description": "id#testAgainstArrayDeque(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165657,
          "startTimestampDate": "2012-01-23T13:19:25.657",
          "executionTime": 43,
          "description": "id#testAgainstArrayDequeVariousTailHeadPositions(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165702,
          "startTimestampDate": "2012-01-23T13:19:25.702",
          "executionTime": 0,
          "description": "id#testHashCodeWithNulls(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165704,
          "startTimestampDate": "2012-01-23T13:19:25.704",
          "executionTime": 0,
          "description": "id#testToArrayWithClass(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165706,
          "startTimestampDate": "2012-01-23T13:19:25.706",
          "executionTime": 0,
          "description": "id#testToArray(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddFirst(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddFirst(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddLast(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddLast(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllLast(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllLast(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLast(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLast(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetFirst(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetFirst(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetLast(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetLast(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRelease(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRelease(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterator(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterator(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAgainstArrayDeque(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAgainstArrayDeque(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAgainstArrayDequeVariousTailHeadPositions(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAgainstArrayDequeVariousTailHeadPositions(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeWithNulls(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeWithNulls(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToArrayWithClass(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToArrayWithClass(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToArray(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToArray(com.carrotsearch.hppc.ObjectArrayDequeTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321165716,
      "startTimestampDate": "2012-01-23T13:19:25.716",
      "executionTime": 550,
      "description": {
        "id": "id#com.carrotsearch.hppc.IntObjectOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
        "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullValue(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
            "displayName": "testNullValue(com.carrotsearch.hppc.IntObjectOpenHashMapTest)",
            "methodName": "testNullValue",
            "className": "com.carrotsearch.hppc.IntObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321165767,
          "startTimestampDate": "2012-01-23T13:19:25.767",
          "executionTime": 10,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165778,
          "startTimestampDate": "2012-01-23T13:19:25.778",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165778,
          "startTimestampDate": "2012-01-23T13:19:25.778",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165779,
          "startTimestampDate": "2012-01-23T13:19:25.779",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165779,
          "startTimestampDate": "2012-01-23T13:19:25.779",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165780,
          "startTimestampDate": "2012-01-23T13:19:25.780",
          "executionTime": 93,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165875,
          "startTimestampDate": "2012-01-23T13:19:25.875",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165883,
          "startTimestampDate": "2012-01-23T13:19:25.883",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165886,
          "startTimestampDate": "2012-01-23T13:19:25.886",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165889,
          "startTimestampDate": "2012-01-23T13:19:25.889",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165896,
          "startTimestampDate": "2012-01-23T13:19:25.896",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165899,
          "startTimestampDate": "2012-01-23T13:19:25.899",
          "executionTime": 11,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165910,
          "startTimestampDate": "2012-01-23T13:19:25.910",
          "executionTime": 1,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165912,
          "startTimestampDate": "2012-01-23T13:19:25.912",
          "executionTime": 2,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165915,
          "startTimestampDate": "2012-01-23T13:19:25.915",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165917,
          "startTimestampDate": "2012-01-23T13:19:25.917",
          "executionTime": 33,
          "description": "id#testClear(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165952,
          "startTimestampDate": "2012-01-23T13:19:25.952",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165960,
          "startTimestampDate": "2012-01-23T13:19:25.960",
          "executionTime": 1,
          "description": "id#testIterable(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165962,
          "startTimestampDate": "2012-01-23T13:19:25.962",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165967,
          "startTimestampDate": "2012-01-23T13:19:25.967",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165975,
          "startTimestampDate": "2012-01-23T13:19:25.975",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165977,
          "startTimestampDate": "2012-01-23T13:19:25.977",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165979,
          "startTimestampDate": "2012-01-23T13:19:25.979",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165980,
          "startTimestampDate": "2012-01-23T13:19:25.980",
          "executionTime": 2,
          "description": "id#testToString(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321165984,
          "startTimestampDate": "2012-01-23T13:19:25.984",
          "executionTime": 272,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166258,
          "startTimestampDate": "2012-01-23T13:19:26.258",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166261,
          "startTimestampDate": "2012-01-23T13:19:26.261",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166262,
          "startTimestampDate": "2012-01-23T13:19:26.262",
          "executionTime": 2,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166265,
          "startTimestampDate": "2012-01-23T13:19:26.265",
          "executionTime": 0,
          "description": "id#testNullValue(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullValue(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullValue(com.carrotsearch.hppc.IntObjectOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321166287,
      "startTimestampDate": "2012-01-23T13:19:26.287",
      "executionTime": 49,
      "description": {
        "id": "id#com.carrotsearch.hppc.LongStackTest[0]",
        "displayName": "com.carrotsearch.hppc.LongStackTest",
        "className": "com.carrotsearch.hppc.LongStackTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.LongStackTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.LongStackTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.LongStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.LongStackTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.LongStackTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.LongStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.LongStackTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.LongStackTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.LongStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.LongStackTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.LongStackTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.LongStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPush1(com.carrotsearch.hppc.LongStackTest)[1]",
            "displayName": "testPush1(com.carrotsearch.hppc.LongStackTest)",
            "methodName": "testPush1",
            "className": "com.carrotsearch.hppc.LongStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPush2(com.carrotsearch.hppc.LongStackTest)[1]",
            "displayName": "testPush2(com.carrotsearch.hppc.LongStackTest)",
            "methodName": "testPush2",
            "className": "com.carrotsearch.hppc.LongStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPushArray(com.carrotsearch.hppc.LongStackTest)[1]",
            "displayName": "testPushArray(com.carrotsearch.hppc.LongStackTest)",
            "methodName": "testPushArray",
            "className": "com.carrotsearch.hppc.LongStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllPushAll(com.carrotsearch.hppc.LongStackTest)[1]",
            "displayName": "testAddAllPushAll(com.carrotsearch.hppc.LongStackTest)",
            "methodName": "testAddAllPushAll",
            "className": "com.carrotsearch.hppc.LongStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDiscard(com.carrotsearch.hppc.LongStackTest)[1]",
            "displayName": "testDiscard(com.carrotsearch.hppc.LongStackTest)",
            "methodName": "testDiscard",
            "className": "com.carrotsearch.hppc.LongStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetAssertions(com.carrotsearch.hppc.LongStackTest)[1]",
            "displayName": "testGetAssertions(com.carrotsearch.hppc.LongStackTest)",
            "methodName": "testGetAssertions",
            "className": "com.carrotsearch.hppc.LongStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDiscardAssertions(com.carrotsearch.hppc.LongStackTest)[1]",
            "displayName": "testDiscardAssertions(com.carrotsearch.hppc.LongStackTest)",
            "methodName": "testDiscardAssertions",
            "className": "com.carrotsearch.hppc.LongStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.LongStackTest)[1]",
            "displayName": "testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.LongStackTest)",
            "methodName": "testHashCodeEqualsWithOtherContainer",
            "className": "com.carrotsearch.hppc.LongStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321166318,
          "startTimestampDate": "2012-01-23T13:19:26.318",
          "executionTime": 1,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166320,
          "startTimestampDate": "2012-01-23T13:19:26.320",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.LongStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166321,
          "startTimestampDate": "2012-01-23T13:19:26.321",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.LongStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166321,
          "startTimestampDate": "2012-01-23T13:19:26.321",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.LongStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166322,
          "startTimestampDate": "2012-01-23T13:19:26.322",
          "executionTime": 0,
          "description": "id#testPush1(com.carrotsearch.hppc.LongStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166322,
          "startTimestampDate": "2012-01-23T13:19:26.322",
          "executionTime": 0,
          "description": "id#testPush2(com.carrotsearch.hppc.LongStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166323,
          "startTimestampDate": "2012-01-23T13:19:26.323",
          "executionTime": 0,
          "description": "id#testPushArray(com.carrotsearch.hppc.LongStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166333,
          "startTimestampDate": "2012-01-23T13:19:26.333",
          "executionTime": 1,
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.LongStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166334,
          "startTimestampDate": "2012-01-23T13:19:26.334",
          "executionTime": 0,
          "description": "id#testDiscard(com.carrotsearch.hppc.LongStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166335,
          "startTimestampDate": "2012-01-23T13:19:26.335",
          "executionTime": 0,
          "description": "id#testGetAssertions(com.carrotsearch.hppc.LongStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166335,
          "startTimestampDate": "2012-01-23T13:19:26.335",
          "executionTime": 0,
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.LongStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166336,
          "startTimestampDate": "2012-01-23T13:19:26.336",
          "executionTime": 0,
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.LongStackTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPush1(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPush1(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPush2(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPush2(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPushArray(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPushArray(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDiscard(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDiscard(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetAssertions(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetAssertions(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.LongStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.LongStackTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321166364,
      "startTimestampDate": "2012-01-23T13:19:26.364",
      "executionTime": 410,
      "description": {
        "id": "id#com.carrotsearch.hppc.IntShortOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
        "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.IntShortOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.IntShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321166406,
          "startTimestampDate": "2012-01-23T13:19:26.406",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166408,
          "startTimestampDate": "2012-01-23T13:19:26.408",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166418,
          "startTimestampDate": "2012-01-23T13:19:26.418",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166419,
          "startTimestampDate": "2012-01-23T13:19:26.419",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166419,
          "startTimestampDate": "2012-01-23T13:19:26.419",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166420,
          "startTimestampDate": "2012-01-23T13:19:26.420",
          "executionTime": 67,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166489,
          "startTimestampDate": "2012-01-23T13:19:26.489",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166490,
          "startTimestampDate": "2012-01-23T13:19:26.490",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166491,
          "startTimestampDate": "2012-01-23T13:19:26.491",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166493,
          "startTimestampDate": "2012-01-23T13:19:26.493",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166495,
          "startTimestampDate": "2012-01-23T13:19:26.495",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166496,
          "startTimestampDate": "2012-01-23T13:19:26.496",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166498,
          "startTimestampDate": "2012-01-23T13:19:26.498",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166501,
          "startTimestampDate": "2012-01-23T13:19:26.501",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166502,
          "startTimestampDate": "2012-01-23T13:19:26.502",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166505,
          "startTimestampDate": "2012-01-23T13:19:26.505",
          "executionTime": 1,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166507,
          "startTimestampDate": "2012-01-23T13:19:26.507",
          "executionTime": 14,
          "description": "id#testClear(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166522,
          "startTimestampDate": "2012-01-23T13:19:26.522",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166525,
          "startTimestampDate": "2012-01-23T13:19:26.525",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166528,
          "startTimestampDate": "2012-01-23T13:19:26.528",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166529,
          "startTimestampDate": "2012-01-23T13:19:26.529",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166530,
          "startTimestampDate": "2012-01-23T13:19:26.530",
          "executionTime": 1,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166544,
          "startTimestampDate": "2012-01-23T13:19:26.544",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166546,
          "startTimestampDate": "2012-01-23T13:19:26.546",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166547,
          "startTimestampDate": "2012-01-23T13:19:26.547",
          "executionTime": 1,
          "description": "id#testToString(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166549,
          "startTimestampDate": "2012-01-23T13:19:26.549",
          "executionTime": 218,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166768,
          "startTimestampDate": "2012-01-23T13:19:26.768",
          "executionTime": 2,
          "description": "id#testMapValues(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166770,
          "startTimestampDate": "2012-01-23T13:19:26.770",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166771,
          "startTimestampDate": "2012-01-23T13:19:26.771",
          "executionTime": 2,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntShortOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321166783,
      "startTimestampDate": "2012-01-23T13:19:26.783",
      "executionTime": 76,
      "description": {
        "id": "id#com.carrotsearch.hppc.ByteArrayListTest[0]",
        "displayName": "com.carrotsearch.hppc.ByteArrayListTest",
        "className": "com.carrotsearch.hppc.ByteArrayListTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testRemoveAllWithPredicateInterrupted",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRelease(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testRelease(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testRelease",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterator(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testIterator(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testIterator",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachWithProcedure(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testForEachWithProcedure(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testForEachWithProcedure",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testHashCodeEqualsWithOtherContainer",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testAdd(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testAdd",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddTwoArgs(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testAddTwoArgs(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testAddTwoArgs",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddArray(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testAddArray(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testAddArray",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddVarArg(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testAddVarArg(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testAddVarArg",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAll(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testAddAll(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testAddAll",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInsert(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testInsert(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testInsert",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testSet(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testSet(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testSet",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveRange(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testRemoveRange(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testRemoveRange",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstLast(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testRemoveFirstLast(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testRemoveFirstLast",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAll(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testRemoveAll(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testRemoveAll",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testRemoveAllFromLookupContainer",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testRetainAllWithPredicate(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testRetainAllWithPredicate",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIndexOf(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testIndexOf(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testIndexOf",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLastIndexOf(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testLastIndexOf(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testLastIndexOf",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testEnsureCapacity(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testEnsureCapacity(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testEnsureCapacity",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testResizeAndCleanBuffer(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testResizeAndCleanBuffer",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testTrimToSize(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testTrimToSize(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testTrimToSize",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGrowth(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testGrowth(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testGrowth",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testForEachReturnValueFromAnonymousClass",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFrom(com.carrotsearch.hppc.ByteArrayListTest)[1]",
            "displayName": "testFrom(com.carrotsearch.hppc.ByteArrayListTest)",
            "methodName": "testFrom",
            "className": "com.carrotsearch.hppc.ByteArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321166804,
          "startTimestampDate": "2012-01-23T13:19:26.804",
          "executionTime": 1,
          "description": "id#testRemove(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166805,
          "startTimestampDate": "2012-01-23T13:19:26.805",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166806,
          "startTimestampDate": "2012-01-23T13:19:26.806",
          "executionTime": 0,
          "description": "id#testClear(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166807,
          "startTimestampDate": "2012-01-23T13:19:26.807",
          "executionTime": 1,
          "description": "id#testIterable(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166808,
          "startTimestampDate": "2012-01-23T13:19:26.808",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166809,
          "startTimestampDate": "2012-01-23T13:19:26.809",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166809,
          "startTimestampDate": "2012-01-23T13:19:26.809",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166810,
          "startTimestampDate": "2012-01-23T13:19:26.810",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166812,
          "startTimestampDate": "2012-01-23T13:19:26.812",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166814,
          "startTimestampDate": "2012-01-23T13:19:26.814",
          "executionTime": 0,
          "description": "id#testRelease(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166814,
          "startTimestampDate": "2012-01-23T13:19:26.814",
          "executionTime": 0,
          "description": "id#testIterator(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166814,
          "startTimestampDate": "2012-01-23T13:19:26.814",
          "executionTime": 1,
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166816,
          "startTimestampDate": "2012-01-23T13:19:26.816",
          "executionTime": 0,
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166817,
          "startTimestampDate": "2012-01-23T13:19:26.817",
          "executionTime": 0,
          "description": "id#testAdd(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166817,
          "startTimestampDate": "2012-01-23T13:19:26.817",
          "executionTime": 0,
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166818,
          "startTimestampDate": "2012-01-23T13:19:26.818",
          "executionTime": 1,
          "description": "id#testAddArray(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166819,
          "startTimestampDate": "2012-01-23T13:19:26.819",
          "executionTime": 0,
          "description": "id#testAddVarArg(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166820,
          "startTimestampDate": "2012-01-23T13:19:26.820",
          "executionTime": 0,
          "description": "id#testAddAll(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166835,
          "startTimestampDate": "2012-01-23T13:19:26.835",
          "executionTime": 0,
          "description": "id#testInsert(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166837,
          "startTimestampDate": "2012-01-23T13:19:26.837",
          "executionTime": 0,
          "description": "id#testSet(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166837,
          "startTimestampDate": "2012-01-23T13:19:26.837",
          "executionTime": 0,
          "description": "id#testRemoveRange(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166838,
          "startTimestampDate": "2012-01-23T13:19:26.838",
          "executionTime": 0,
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166838,
          "startTimestampDate": "2012-01-23T13:19:26.838",
          "executionTime": 0,
          "description": "id#testRemoveAll(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166839,
          "startTimestampDate": "2012-01-23T13:19:26.839",
          "executionTime": 1,
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166841,
          "startTimestampDate": "2012-01-23T13:19:26.841",
          "executionTime": 1,
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166842,
          "startTimestampDate": "2012-01-23T13:19:26.842",
          "executionTime": 0,
          "description": "id#testIndexOf(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166843,
          "startTimestampDate": "2012-01-23T13:19:26.843",
          "executionTime": 0,
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166843,
          "startTimestampDate": "2012-01-23T13:19:26.843",
          "executionTime": 0,
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166844,
          "startTimestampDate": "2012-01-23T13:19:26.844",
          "executionTime": 0,
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166844,
          "startTimestampDate": "2012-01-23T13:19:26.844",
          "executionTime": 0,
          "description": "id#testTrimToSize(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166850,
          "startTimestampDate": "2012-01-23T13:19:26.850",
          "executionTime": 0,
          "description": "id#testGrowth(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166851,
          "startTimestampDate": "2012-01-23T13:19:26.851",
          "executionTime": 0,
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166859,
          "startTimestampDate": "2012-01-23T13:19:26.859",
          "executionTime": 0,
          "description": "id#testFrom(com.carrotsearch.hppc.ByteArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRelease(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRelease(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterator(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterator(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddArray(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddArray(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddVarArg(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddVarArg(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAll(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAll(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInsert(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInsert(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testSet(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testSet(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveRange(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveRange(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAll(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAll(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIndexOf(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIndexOf(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testTrimToSize(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testTrimToSize(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGrowth(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGrowth(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFrom(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFrom(com.carrotsearch.hppc.ByteArrayListTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321166868,
      "startTimestampDate": "2012-01-23T13:19:26.868",
      "executionTime": 511,
      "description": {
        "id": "id#com.carrotsearch.hppc.ObjectLongOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullKey(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testNullKey(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testNullKey",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLkey(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
            "displayName": "testLkey(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)",
            "methodName": "testLkey",
            "className": "com.carrotsearch.hppc.ObjectLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321166887,
          "startTimestampDate": "2012-01-23T13:19:26.887",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166889,
          "startTimestampDate": "2012-01-23T13:19:26.889",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166889,
          "startTimestampDate": "2012-01-23T13:19:26.889",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166890,
          "startTimestampDate": "2012-01-23T13:19:26.890",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166890,
          "startTimestampDate": "2012-01-23T13:19:26.890",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166891,
          "startTimestampDate": "2012-01-23T13:19:26.891",
          "executionTime": 50,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166942,
          "startTimestampDate": "2012-01-23T13:19:26.942",
          "executionTime": 4,
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166947,
          "startTimestampDate": "2012-01-23T13:19:26.947",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166947,
          "startTimestampDate": "2012-01-23T13:19:26.947",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166948,
          "startTimestampDate": "2012-01-23T13:19:26.948",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166948,
          "startTimestampDate": "2012-01-23T13:19:26.948",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166949,
          "startTimestampDate": "2012-01-23T13:19:26.949",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166950,
          "startTimestampDate": "2012-01-23T13:19:26.950",
          "executionTime": 4,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166955,
          "startTimestampDate": "2012-01-23T13:19:26.955",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166955,
          "startTimestampDate": "2012-01-23T13:19:26.955",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166957,
          "startTimestampDate": "2012-01-23T13:19:26.957",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321166957,
          "startTimestampDate": "2012-01-23T13:19:26.957",
          "executionTime": 39,
          "description": "id#testClear(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167005,
          "startTimestampDate": "2012-01-23T13:19:27.005",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167005,
          "startTimestampDate": "2012-01-23T13:19:27.005",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167006,
          "startTimestampDate": "2012-01-23T13:19:27.006",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167008,
          "startTimestampDate": "2012-01-23T13:19:27.008",
          "executionTime": 1,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167009,
          "startTimestampDate": "2012-01-23T13:19:27.009",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167010,
          "startTimestampDate": "2012-01-23T13:19:27.010",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167010,
          "startTimestampDate": "2012-01-23T13:19:27.010",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167010,
          "startTimestampDate": "2012-01-23T13:19:27.010",
          "executionTime": 1,
          "description": "id#testToString(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167011,
          "startTimestampDate": "2012-01-23T13:19:27.011",
          "executionTime": 358,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167371,
          "startTimestampDate": "2012-01-23T13:19:27.371",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167373,
          "startTimestampDate": "2012-01-23T13:19:27.373",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167375,
          "startTimestampDate": "2012-01-23T13:19:27.375",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167377,
          "startTimestampDate": "2012-01-23T13:19:27.377",
          "executionTime": 0,
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167379,
          "startTimestampDate": "2012-01-23T13:19:27.379",
          "executionTime": 0,
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectLongOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321167402,
      "startTimestampDate": "2012-01-23T13:19:27.402",
      "executionTime": 170,
      "description": {
        "id": "id#com.carrotsearch.hppc.FloatShortOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
        "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.FloatShortOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.FloatShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321167436,
          "startTimestampDate": "2012-01-23T13:19:27.436",
          "executionTime": 10,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167446,
          "startTimestampDate": "2012-01-23T13:19:27.446",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167447,
          "startTimestampDate": "2012-01-23T13:19:27.447",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167449,
          "startTimestampDate": "2012-01-23T13:19:27.449",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167449,
          "startTimestampDate": "2012-01-23T13:19:27.449",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167450,
          "startTimestampDate": "2012-01-23T13:19:27.450",
          "executionTime": 43,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167494,
          "startTimestampDate": "2012-01-23T13:19:27.494",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167494,
          "startTimestampDate": "2012-01-23T13:19:27.494",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167505,
          "startTimestampDate": "2012-01-23T13:19:27.505",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167505,
          "startTimestampDate": "2012-01-23T13:19:27.505",
          "executionTime": 1,
          "description": "id#testRemove(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167506,
          "startTimestampDate": "2012-01-23T13:19:27.506",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167506,
          "startTimestampDate": "2012-01-23T13:19:27.506",
          "executionTime": 2,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167508,
          "startTimestampDate": "2012-01-23T13:19:27.508",
          "executionTime": 7,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167516,
          "startTimestampDate": "2012-01-23T13:19:27.516",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167516,
          "startTimestampDate": "2012-01-23T13:19:27.516",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167518,
          "startTimestampDate": "2012-01-23T13:19:27.518",
          "executionTime": 1,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167519,
          "startTimestampDate": "2012-01-23T13:19:27.519",
          "executionTime": 23,
          "description": "id#testClear(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167544,
          "startTimestampDate": "2012-01-23T13:19:27.544",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167545,
          "startTimestampDate": "2012-01-23T13:19:27.545",
          "executionTime": 1,
          "description": "id#testIterable(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167547,
          "startTimestampDate": "2012-01-23T13:19:27.547",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167549,
          "startTimestampDate": "2012-01-23T13:19:27.549",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167550,
          "startTimestampDate": "2012-01-23T13:19:27.550",
          "executionTime": 1,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167552,
          "startTimestampDate": "2012-01-23T13:19:27.552",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167553,
          "startTimestampDate": "2012-01-23T13:19:27.553",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167554,
          "startTimestampDate": "2012-01-23T13:19:27.554",
          "executionTime": 8,
          "description": "id#testToString(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatShortOpenHashMapTest.testToString(FloatShortOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167564,
          "startTimestampDate": "2012-01-23T13:19:27.564",
          "executionTime": 3,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatShortOpenHashMapTest.testAddRemoveSameHashCollision(FloatShortOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167568,
          "startTimestampDate": "2012-01-23T13:19:27.568",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167570,
          "startTimestampDate": "2012-01-23T13:19:27.570",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167570,
          "startTimestampDate": "2012-01-23T13:19:27.570",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatShortOpenHashMapTest.testToString(FloatShortOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatShortOpenHashMapTest.testAddRemoveSameHashCollision(FloatShortOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatShortOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321167577,
      "startTimestampDate": "2012-01-23T13:19:27.577",
      "executionTime": 101,
      "description": {
        "id": "id#com.carrotsearch.hppc.LongArrayListTest[0]",
        "displayName": "com.carrotsearch.hppc.LongArrayListTest",
        "className": "com.carrotsearch.hppc.LongArrayListTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemove(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testRemoveAllWithPredicateInterrupted",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRelease(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testRelease(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testRelease",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterator(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testIterator(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testIterator",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachWithProcedure(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testForEachWithProcedure(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testForEachWithProcedure",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testHashCodeEqualsWithOtherContainer",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testAdd(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testAdd",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddTwoArgs(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testAddTwoArgs(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testAddTwoArgs",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddArray(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testAddArray(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testAddArray",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddVarArg(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testAddVarArg(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testAddVarArg",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAll(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testAddAll(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testAddAll",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInsert(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testInsert(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testInsert",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testSet(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testSet(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testSet",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveRange(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testRemoveRange(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testRemoveRange",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstLast(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testRemoveFirstLast(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testRemoveFirstLast",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAll(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testRemoveAll(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testRemoveAll",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testRemoveAllFromLookupContainer(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testRemoveAllFromLookupContainer",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testRetainAllWithPredicate(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testRetainAllWithPredicate",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIndexOf(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testIndexOf(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testIndexOf",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLastIndexOf(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testLastIndexOf(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testLastIndexOf",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testEnsureCapacity(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testEnsureCapacity(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testEnsureCapacity",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testResizeAndCleanBuffer(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testResizeAndCleanBuffer",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testTrimToSize(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testTrimToSize(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testTrimToSize",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGrowth(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testGrowth(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testGrowth",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testForEachReturnValueFromAnonymousClass",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFrom(com.carrotsearch.hppc.LongArrayListTest)[1]",
            "displayName": "testFrom(com.carrotsearch.hppc.LongArrayListTest)",
            "methodName": "testFrom",
            "className": "com.carrotsearch.hppc.LongArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321167623,
          "startTimestampDate": "2012-01-23T13:19:27.623",
          "executionTime": 1,
          "description": "id#testRemove(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167624,
          "startTimestampDate": "2012-01-23T13:19:27.624",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167631,
          "startTimestampDate": "2012-01-23T13:19:27.631",
          "executionTime": 0,
          "description": "id#testClear(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167641,
          "startTimestampDate": "2012-01-23T13:19:27.641",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167642,
          "startTimestampDate": "2012-01-23T13:19:27.642",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167642,
          "startTimestampDate": "2012-01-23T13:19:27.642",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167643,
          "startTimestampDate": "2012-01-23T13:19:27.643",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167643,
          "startTimestampDate": "2012-01-23T13:19:27.643",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167643,
          "startTimestampDate": "2012-01-23T13:19:27.643",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167644,
          "startTimestampDate": "2012-01-23T13:19:27.644",
          "executionTime": 1,
          "description": "id#testRelease(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167645,
          "startTimestampDate": "2012-01-23T13:19:27.645",
          "executionTime": 0,
          "description": "id#testIterator(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167645,
          "startTimestampDate": "2012-01-23T13:19:27.645",
          "executionTime": 3,
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167649,
          "startTimestampDate": "2012-01-23T13:19:27.649",
          "executionTime": 0,
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167649,
          "startTimestampDate": "2012-01-23T13:19:27.649",
          "executionTime": 0,
          "description": "id#testAdd(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167650,
          "startTimestampDate": "2012-01-23T13:19:27.650",
          "executionTime": 0,
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167651,
          "startTimestampDate": "2012-01-23T13:19:27.651",
          "executionTime": 0,
          "description": "id#testAddArray(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167651,
          "startTimestampDate": "2012-01-23T13:19:27.651",
          "executionTime": 1,
          "description": "id#testAddVarArg(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167657,
          "startTimestampDate": "2012-01-23T13:19:27.657",
          "executionTime": 0,
          "description": "id#testAddAll(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167657,
          "startTimestampDate": "2012-01-23T13:19:27.657",
          "executionTime": 0,
          "description": "id#testInsert(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167658,
          "startTimestampDate": "2012-01-23T13:19:27.658",
          "executionTime": 0,
          "description": "id#testSet(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167659,
          "startTimestampDate": "2012-01-23T13:19:27.659",
          "executionTime": 0,
          "description": "id#testRemoveRange(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167659,
          "startTimestampDate": "2012-01-23T13:19:27.659",
          "executionTime": 1,
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167660,
          "startTimestampDate": "2012-01-23T13:19:27.660",
          "executionTime": 0,
          "description": "id#testRemoveAll(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167660,
          "startTimestampDate": "2012-01-23T13:19:27.660",
          "executionTime": 2,
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167663,
          "startTimestampDate": "2012-01-23T13:19:27.663",
          "executionTime": 0,
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167664,
          "startTimestampDate": "2012-01-23T13:19:27.664",
          "executionTime": 0,
          "description": "id#testIndexOf(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167664,
          "startTimestampDate": "2012-01-23T13:19:27.664",
          "executionTime": 0,
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167665,
          "startTimestampDate": "2012-01-23T13:19:27.665",
          "executionTime": 0,
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167665,
          "startTimestampDate": "2012-01-23T13:19:27.665",
          "executionTime": 0,
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167666,
          "startTimestampDate": "2012-01-23T13:19:27.666",
          "executionTime": 0,
          "description": "id#testTrimToSize(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167666,
          "startTimestampDate": "2012-01-23T13:19:27.666",
          "executionTime": 10,
          "description": "id#testGrowth(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167676,
          "startTimestampDate": "2012-01-23T13:19:27.676",
          "executionTime": 1,
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167678,
          "startTimestampDate": "2012-01-23T13:19:27.678",
          "executionTime": 0,
          "description": "id#testFrom(com.carrotsearch.hppc.LongArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRelease(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRelease(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterator(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterator(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddArray(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddArray(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddVarArg(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddVarArg(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAll(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAll(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInsert(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInsert(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testSet(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testSet(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveRange(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveRange(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAll(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAll(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIndexOf(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIndexOf(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testTrimToSize(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testTrimToSize(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGrowth(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGrowth(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFrom(com.carrotsearch.hppc.LongArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFrom(com.carrotsearch.hppc.LongArrayListTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321167688,
      "startTimestampDate": "2012-01-23T13:19:27.688",
      "executionTime": 288,
      "description": {
        "id": "id#com.carrotsearch.hppc.LongFloatOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
        "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.LongFloatOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.LongFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321167713,
          "startTimestampDate": "2012-01-23T13:19:27.713",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167715,
          "startTimestampDate": "2012-01-23T13:19:27.715",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167716,
          "startTimestampDate": "2012-01-23T13:19:27.716",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167716,
          "startTimestampDate": "2012-01-23T13:19:27.716",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167719,
          "startTimestampDate": "2012-01-23T13:19:27.719",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167719,
          "startTimestampDate": "2012-01-23T13:19:27.719",
          "executionTime": 83,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167803,
          "startTimestampDate": "2012-01-23T13:19:27.803",
          "executionTime": 4,
          "description": "id#testPutAll(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167808,
          "startTimestampDate": "2012-01-23T13:19:27.808",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167808,
          "startTimestampDate": "2012-01-23T13:19:27.808",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167809,
          "startTimestampDate": "2012-01-23T13:19:27.809",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167809,
          "startTimestampDate": "2012-01-23T13:19:27.809",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167809,
          "startTimestampDate": "2012-01-23T13:19:27.809",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167810,
          "startTimestampDate": "2012-01-23T13:19:27.810",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167812,
          "startTimestampDate": "2012-01-23T13:19:27.812",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167813,
          "startTimestampDate": "2012-01-23T13:19:27.813",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167818,
          "startTimestampDate": "2012-01-23T13:19:27.818",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167820,
          "startTimestampDate": "2012-01-23T13:19:27.820",
          "executionTime": 30,
          "description": "id#testClear(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167851,
          "startTimestampDate": "2012-01-23T13:19:27.851",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167851,
          "startTimestampDate": "2012-01-23T13:19:27.851",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167852,
          "startTimestampDate": "2012-01-23T13:19:27.852",
          "executionTime": 4,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167858,
          "startTimestampDate": "2012-01-23T13:19:27.858",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167865,
          "startTimestampDate": "2012-01-23T13:19:27.865",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167867,
          "startTimestampDate": "2012-01-23T13:19:27.867",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167868,
          "startTimestampDate": "2012-01-23T13:19:27.868",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167869,
          "startTimestampDate": "2012-01-23T13:19:27.869",
          "executionTime": 4,
          "description": "id#testToString(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.LongFloatOpenHashMapTest.testToString(LongFloatOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167875,
          "startTimestampDate": "2012-01-23T13:19:27.875",
          "executionTime": 95,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167970,
          "startTimestampDate": "2012-01-23T13:19:27.970",
          "executionTime": 2,
          "description": "id#testMapValues(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167973,
          "startTimestampDate": "2012-01-23T13:19:27.973",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167974,
          "startTimestampDate": "2012-01-23T13:19:27.974",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.LongFloatOpenHashMapTest.testToString(LongFloatOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongFloatOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321167984,
      "startTimestampDate": "2012-01-23T13:19:27.984",
      "executionTime": 138,
      "description": {
        "id": "id#com.carrotsearch.hppc.ByteFloatOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ByteFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321167997,
          "startTimestampDate": "2012-01-23T13:19:27.997",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321167999,
          "startTimestampDate": "2012-01-23T13:19:27.999",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168002,
          "startTimestampDate": "2012-01-23T13:19:28.002",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168002,
          "startTimestampDate": "2012-01-23T13:19:28.002",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168002,
          "startTimestampDate": "2012-01-23T13:19:28.002",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168003,
          "startTimestampDate": "2012-01-23T13:19:28.003",
          "executionTime": 26,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168030,
          "startTimestampDate": "2012-01-23T13:19:28.030",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168030,
          "startTimestampDate": "2012-01-23T13:19:28.030",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168030,
          "startTimestampDate": "2012-01-23T13:19:28.030",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168031,
          "startTimestampDate": "2012-01-23T13:19:28.031",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168033,
          "startTimestampDate": "2012-01-23T13:19:28.033",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168033,
          "startTimestampDate": "2012-01-23T13:19:28.033",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168034,
          "startTimestampDate": "2012-01-23T13:19:28.034",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168036,
          "startTimestampDate": "2012-01-23T13:19:28.036",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168037,
          "startTimestampDate": "2012-01-23T13:19:28.037",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168042,
          "startTimestampDate": "2012-01-23T13:19:28.042",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168043,
          "startTimestampDate": "2012-01-23T13:19:28.043",
          "executionTime": 31,
          "description": "id#testClear(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168075,
          "startTimestampDate": "2012-01-23T13:19:28.075",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168085,
          "startTimestampDate": "2012-01-23T13:19:28.085",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168086,
          "startTimestampDate": "2012-01-23T13:19:28.086",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168086,
          "startTimestampDate": "2012-01-23T13:19:28.086",
          "executionTime": 1,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168087,
          "startTimestampDate": "2012-01-23T13:19:28.087",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168087,
          "startTimestampDate": "2012-01-23T13:19:28.087",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168095,
          "startTimestampDate": "2012-01-23T13:19:28.095",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168096,
          "startTimestampDate": "2012-01-23T13:19:28.096",
          "executionTime": 7,
          "description": "id#testToString(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteFloatOpenHashMapTest.testToString(ByteFloatOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168108,
          "startTimestampDate": "2012-01-23T13:19:28.108",
          "executionTime": 4,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteFloatOpenHashMapTest.testAddRemoveSameHashCollision(ByteFloatOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168112,
          "startTimestampDate": "2012-01-23T13:19:28.112",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168114,
          "startTimestampDate": "2012-01-23T13:19:28.114",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168121,
          "startTimestampDate": "2012-01-23T13:19:28.121",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteFloatOpenHashMapTest.testToString(ByteFloatOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteFloatOpenHashMapTest.testAddRemoveSameHashCollision(ByteFloatOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteFloatOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321168134,
      "startTimestampDate": "2012-01-23T13:19:28.134",
      "executionTime": 242,
      "description": {
        "id": "id#com.carrotsearch.hppc.ByteCharOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ByteCharOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ByteCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321168190,
          "startTimestampDate": "2012-01-23T13:19:28.190",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168199,
          "startTimestampDate": "2012-01-23T13:19:28.199",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168199,
          "startTimestampDate": "2012-01-23T13:19:28.199",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168200,
          "startTimestampDate": "2012-01-23T13:19:28.200",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168219,
          "startTimestampDate": "2012-01-23T13:19:28.219",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168219,
          "startTimestampDate": "2012-01-23T13:19:28.219",
          "executionTime": 80,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168300,
          "startTimestampDate": "2012-01-23T13:19:28.300",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168300,
          "startTimestampDate": "2012-01-23T13:19:28.300",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168301,
          "startTimestampDate": "2012-01-23T13:19:28.301",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168301,
          "startTimestampDate": "2012-01-23T13:19:28.301",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168301,
          "startTimestampDate": "2012-01-23T13:19:28.301",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168302,
          "startTimestampDate": "2012-01-23T13:19:28.302",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168303,
          "startTimestampDate": "2012-01-23T13:19:28.303",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168304,
          "startTimestampDate": "2012-01-23T13:19:28.304",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168320,
          "startTimestampDate": "2012-01-23T13:19:28.320",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168326,
          "startTimestampDate": "2012-01-23T13:19:28.326",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168327,
          "startTimestampDate": "2012-01-23T13:19:28.327",
          "executionTime": 19,
          "description": "id#testClear(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168347,
          "startTimestampDate": "2012-01-23T13:19:28.347",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168348,
          "startTimestampDate": "2012-01-23T13:19:28.348",
          "executionTime": 1,
          "description": "id#testIterable(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168350,
          "startTimestampDate": "2012-01-23T13:19:28.350",
          "executionTime": 1,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168352,
          "startTimestampDate": "2012-01-23T13:19:28.352",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168353,
          "startTimestampDate": "2012-01-23T13:19:28.353",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168354,
          "startTimestampDate": "2012-01-23T13:19:28.354",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168355,
          "startTimestampDate": "2012-01-23T13:19:28.355",
          "executionTime": 1,
          "description": "id#testClone(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168357,
          "startTimestampDate": "2012-01-23T13:19:28.357",
          "executionTime": 3,
          "description": "id#testToString(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteCharOpenHashMapTest.testToString(ByteCharOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168362,
          "startTimestampDate": "2012-01-23T13:19:28.362",
          "executionTime": 4,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteCharOpenHashMapTest.testAddRemoveSameHashCollision(ByteCharOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168370,
          "startTimestampDate": "2012-01-23T13:19:28.370",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168372,
          "startTimestampDate": "2012-01-23T13:19:28.372",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168374,
          "startTimestampDate": "2012-01-23T13:19:28.374",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteCharOpenHashMapTest.testToString(ByteCharOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteCharOpenHashMapTest.testAddRemoveSameHashCollision(ByteCharOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteCharOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321168400,
      "startTimestampDate": "2012-01-23T13:19:28.400",
      "executionTime": 181,
      "description": {
        "id": "id#com.carrotsearch.hppc.DoubleArrayDequeTest[0]",
        "displayName": "com.carrotsearch.hppc.DoubleArrayDequeTest",
        "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddFirst(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testAddFirst(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testAddFirst",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddLast(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testAddLast(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testAddLast",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddWithGrowth(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testAddWithGrowth(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testAddWithGrowth",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddLastWithGrowth(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testAddLastWithGrowth(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testAddLastWithGrowth",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllFirst(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testAddAllFirst(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testAddAllFirst",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllLast(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testAddAllLast(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testAddAllLast",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirst(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testRemoveFirst(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testRemoveFirst",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testRemoveFirstEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testRemoveFirstEmpty",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLast(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testRemoveLast(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testRemoveLast",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLastEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testRemoveLastEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testRemoveLastEmpty",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetFirst(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testGetFirst(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testGetFirst",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetFirstEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testGetFirstEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testGetFirstEmpty",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetLast(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testGetLast(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testGetLast",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetLastEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testGetLastEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testGetLastEmpty",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testRemoveFirstOccurrence(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testRemoveFirstOccurrence",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testRemoveLastOccurrence(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testRemoveLastOccurrence",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testRemoveAllOccurrences(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testRemoveAllOccurrences",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testRemoveAllInLookupContainer(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testRemoveAllInLookupContainer",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testRemoveAllWithPredicateInterrupted",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRelease(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testRelease(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testRelease",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterator(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testIterator(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testIterator",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDescendingIterator(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testDescendingIterator(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testDescendingIterator",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachWithProcedure(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testForEachWithProcedure(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testForEachWithProcedure",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
            "displayName": "testDescendingForEachWithProcedure(com.carrotsearch.hppc.DoubleArrayDequeTest)",
            "methodName": "testDescendingForEachWithProcedure",
            "className": "com.carrotsearch.hppc.DoubleArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321168428,
          "startTimestampDate": "2012-01-23T13:19:28.428",
          "executionTime": 19,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168447,
          "startTimestampDate": "2012-01-23T13:19:28.447",
          "executionTime": 2,
          "description": "id#testClear(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168450,
          "startTimestampDate": "2012-01-23T13:19:28.450",
          "executionTime": 36,
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168487,
          "startTimestampDate": "2012-01-23T13:19:28.487",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168488,
          "startTimestampDate": "2012-01-23T13:19:28.488",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168489,
          "startTimestampDate": "2012-01-23T13:19:28.489",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168489,
          "startTimestampDate": "2012-01-23T13:19:28.489",
          "executionTime": 1,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168490,
          "startTimestampDate": "2012-01-23T13:19:28.490",
          "executionTime": 0,
          "description": "id#testAddFirst(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168491,
          "startTimestampDate": "2012-01-23T13:19:28.491",
          "executionTime": 0,
          "description": "id#testAddLast(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168495,
          "startTimestampDate": "2012-01-23T13:19:28.495",
          "executionTime": 11,
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168507,
          "startTimestampDate": "2012-01-23T13:19:28.507",
          "executionTime": 5,
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168513,
          "startTimestampDate": "2012-01-23T13:19:28.513",
          "executionTime": 0,
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168515,
          "startTimestampDate": "2012-01-23T13:19:28.515",
          "executionTime": 0,
          "description": "id#testAddAllLast(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168516,
          "startTimestampDate": "2012-01-23T13:19:28.516",
          "executionTime": 0,
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168518,
          "startTimestampDate": "2012-01-23T13:19:28.518",
          "executionTime": 0,
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168519,
          "startTimestampDate": "2012-01-23T13:19:28.519",
          "executionTime": 1,
          "description": "id#testRemoveLast(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168521,
          "startTimestampDate": "2012-01-23T13:19:28.521",
          "executionTime": 1,
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168523,
          "startTimestampDate": "2012-01-23T13:19:28.523",
          "executionTime": 0,
          "description": "id#testGetFirst(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168524,
          "startTimestampDate": "2012-01-23T13:19:28.524",
          "executionTime": 0,
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168526,
          "startTimestampDate": "2012-01-23T13:19:28.526",
          "executionTime": 0,
          "description": "id#testGetLast(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168526,
          "startTimestampDate": "2012-01-23T13:19:28.526",
          "executionTime": 1,
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168527,
          "startTimestampDate": "2012-01-23T13:19:28.527",
          "executionTime": 16,
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168544,
          "startTimestampDate": "2012-01-23T13:19:28.544",
          "executionTime": 9,
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168554,
          "startTimestampDate": "2012-01-23T13:19:28.554",
          "executionTime": 0,
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168554,
          "startTimestampDate": "2012-01-23T13:19:28.554",
          "executionTime": 3,
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168557,
          "startTimestampDate": "2012-01-23T13:19:28.557",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168558,
          "startTimestampDate": "2012-01-23T13:19:28.558",
          "executionTime": 1,
          "description": "id#testRelease(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168559,
          "startTimestampDate": "2012-01-23T13:19:28.559",
          "executionTime": 0,
          "description": "id#testIterator(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168560,
          "startTimestampDate": "2012-01-23T13:19:28.560",
          "executionTime": 9,
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168570,
          "startTimestampDate": "2012-01-23T13:19:28.570",
          "executionTime": 4,
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168576,
          "startTimestampDate": "2012-01-23T13:19:28.576",
          "executionTime": 4,
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddFirst(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddFirst(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddLast(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddLast(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllLast(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllLast(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLast(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLast(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetFirst(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetFirst(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetLast(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetLast(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRelease(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRelease(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterator(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterator(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.DoubleArrayDequeTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321168642,
      "startTimestampDate": "2012-01-23T13:19:28.642",
      "executionTime": 115,
      "description": {
        "id": "id#com.carrotsearch.hppc.FloatLongOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
        "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.FloatLongOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.FloatLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321168666,
          "startTimestampDate": "2012-01-23T13:19:28.666",
          "executionTime": 9,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168676,
          "startTimestampDate": "2012-01-23T13:19:28.676",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168676,
          "startTimestampDate": "2012-01-23T13:19:28.676",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168677,
          "startTimestampDate": "2012-01-23T13:19:28.677",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168677,
          "startTimestampDate": "2012-01-23T13:19:28.677",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168677,
          "startTimestampDate": "2012-01-23T13:19:28.677",
          "executionTime": 30,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168708,
          "startTimestampDate": "2012-01-23T13:19:28.708",
          "executionTime": 1,
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168709,
          "startTimestampDate": "2012-01-23T13:19:28.709",
          "executionTime": 1,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168710,
          "startTimestampDate": "2012-01-23T13:19:28.710",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168711,
          "startTimestampDate": "2012-01-23T13:19:28.711",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168711,
          "startTimestampDate": "2012-01-23T13:19:28.711",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168712,
          "startTimestampDate": "2012-01-23T13:19:28.712",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168713,
          "startTimestampDate": "2012-01-23T13:19:28.713",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168716,
          "startTimestampDate": "2012-01-23T13:19:28.716",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168716,
          "startTimestampDate": "2012-01-23T13:19:28.716",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168718,
          "startTimestampDate": "2012-01-23T13:19:28.718",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168719,
          "startTimestampDate": "2012-01-23T13:19:28.719",
          "executionTime": 13,
          "description": "id#testClear(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168733,
          "startTimestampDate": "2012-01-23T13:19:28.733",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168734,
          "startTimestampDate": "2012-01-23T13:19:28.734",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168735,
          "startTimestampDate": "2012-01-23T13:19:28.735",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168736,
          "startTimestampDate": "2012-01-23T13:19:28.736",
          "executionTime": 1,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168737,
          "startTimestampDate": "2012-01-23T13:19:28.737",
          "executionTime": 1,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168739,
          "startTimestampDate": "2012-01-23T13:19:28.739",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168740,
          "startTimestampDate": "2012-01-23T13:19:28.740",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168741,
          "startTimestampDate": "2012-01-23T13:19:28.741",
          "executionTime": 4,
          "description": "id#testToString(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatLongOpenHashMapTest.testToString(FloatLongOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168747,
          "startTimestampDate": "2012-01-23T13:19:28.747",
          "executionTime": 4,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatLongOpenHashMapTest.testAddRemoveSameHashCollision(FloatLongOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168753,
          "startTimestampDate": "2012-01-23T13:19:28.753",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168755,
          "startTimestampDate": "2012-01-23T13:19:28.755",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168755,
          "startTimestampDate": "2012-01-23T13:19:28.755",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatLongOpenHashMapTest.testToString(FloatLongOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatLongOpenHashMapTest.testAddRemoveSameHashCollision(FloatLongOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatLongOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321168773,
      "startTimestampDate": "2012-01-23T13:19:28.773",
      "executionTime": 108,
      "description": {
        "id": "id#com.carrotsearch.hppc.DoubleFloatOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
        "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.DoubleFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321168797,
          "startTimestampDate": "2012-01-23T13:19:28.797",
          "executionTime": 3,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168801,
          "startTimestampDate": "2012-01-23T13:19:28.801",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168801,
          "startTimestampDate": "2012-01-23T13:19:28.801",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168801,
          "startTimestampDate": "2012-01-23T13:19:28.801",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168802,
          "startTimestampDate": "2012-01-23T13:19:28.802",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168802,
          "startTimestampDate": "2012-01-23T13:19:28.802",
          "executionTime": 32,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168835,
          "startTimestampDate": "2012-01-23T13:19:28.835",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168836,
          "startTimestampDate": "2012-01-23T13:19:28.836",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168837,
          "startTimestampDate": "2012-01-23T13:19:28.837",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168838,
          "startTimestampDate": "2012-01-23T13:19:28.838",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168839,
          "startTimestampDate": "2012-01-23T13:19:28.839",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168840,
          "startTimestampDate": "2012-01-23T13:19:28.840",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168841,
          "startTimestampDate": "2012-01-23T13:19:28.841",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168843,
          "startTimestampDate": "2012-01-23T13:19:28.843",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168843,
          "startTimestampDate": "2012-01-23T13:19:28.843",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168845,
          "startTimestampDate": "2012-01-23T13:19:28.845",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168846,
          "startTimestampDate": "2012-01-23T13:19:28.846",
          "executionTime": 13,
          "description": "id#testClear(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168860,
          "startTimestampDate": "2012-01-23T13:19:28.860",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168861,
          "startTimestampDate": "2012-01-23T13:19:28.861",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168862,
          "startTimestampDate": "2012-01-23T13:19:28.862",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168863,
          "startTimestampDate": "2012-01-23T13:19:28.863",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168864,
          "startTimestampDate": "2012-01-23T13:19:28.864",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168865,
          "startTimestampDate": "2012-01-23T13:19:28.865",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168866,
          "startTimestampDate": "2012-01-23T13:19:28.866",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168867,
          "startTimestampDate": "2012-01-23T13:19:28.867",
          "executionTime": 4,
          "description": "id#testToString(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleFloatOpenHashMapTest.testToString(DoubleFloatOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168872,
          "startTimestampDate": "2012-01-23T13:19:28.872",
          "executionTime": 4,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleFloatOpenHashMapTest.testAddRemoveSameHashCollision(DoubleFloatOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168877,
          "startTimestampDate": "2012-01-23T13:19:28.877",
          "executionTime": 2,
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168879,
          "startTimestampDate": "2012-01-23T13:19:28.879",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168880,
          "startTimestampDate": "2012-01-23T13:19:28.880",
          "executionTime": 0,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleFloatOpenHashMapTest.testToString(DoubleFloatOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleFloatOpenHashMapTest.testAddRemoveSameHashCollision(DoubleFloatOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleFloatOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321168885,
      "startTimestampDate": "2012-01-23T13:19:28.885",
      "executionTime": 140,
      "description": {
        "id": "id#com.carrotsearch.hppc.LongOpenHashSetTest[0]",
        "displayName": "com.carrotsearch.hppc.LongOpenHashSetTest",
        "className": "com.carrotsearch.hppc.LongOpenHashSetTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemove(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.LongOpenHashSetTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.LongOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.LongOpenHashSetTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.LongOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.LongOpenHashSetTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.LongOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.LongOpenHashSetTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.LongOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.LongOpenHashSetTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.LongOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.LongOpenHashSetTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.LongOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.LongOpenHashSetTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.LongOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongOpenHashSetTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.LongOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.LongOpenHashSetTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.LongOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
            "displayName": "testAdd(com.carrotsearch.hppc.LongOpenHashSetTest)",
            "methodName": "testAdd",
            "className": "com.carrotsearch.hppc.LongOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAll(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
            "displayName": "testAddAll(com.carrotsearch.hppc.LongOpenHashSetTest)",
            "methodName": "testAddAll",
            "className": "com.carrotsearch.hppc.LongOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
            "displayName": "testRemoveAllFromLookupContainer(com.carrotsearch.hppc.LongOpenHashSetTest)",
            "methodName": "testRemoveAllFromLookupContainer",
            "className": "com.carrotsearch.hppc.LongOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
            "displayName": "testRetainAllWithPredicate(com.carrotsearch.hppc.LongOpenHashSetTest)",
            "methodName": "testRetainAllWithPredicate",
            "className": "com.carrotsearch.hppc.LongOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd2(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
            "displayName": "testAdd2(com.carrotsearch.hppc.LongOpenHashSetTest)",
            "methodName": "testAdd2",
            "className": "com.carrotsearch.hppc.LongOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddVarArgs(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
            "displayName": "testAddVarArgs(com.carrotsearch.hppc.LongOpenHashSetTest)",
            "methodName": "testAddVarArgs",
            "className": "com.carrotsearch.hppc.LongOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
            "displayName": "testInitialCapacityAndGrowth(com.carrotsearch.hppc.LongOpenHashSetTest)",
            "methodName": "testInitialCapacityAndGrowth",
            "className": "com.carrotsearch.hppc.LongOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321168890,
          "startTimestampDate": "2012-01-23T13:19:28.890",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168891,
          "startTimestampDate": "2012-01-23T13:19:28.891",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168892,
          "startTimestampDate": "2012-01-23T13:19:28.892",
          "executionTime": 0,
          "description": "id#testClear(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168892,
          "startTimestampDate": "2012-01-23T13:19:28.892",
          "executionTime": 1,
          "description": "id#testIterable(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168893,
          "startTimestampDate": "2012-01-23T13:19:28.893",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168894,
          "startTimestampDate": "2012-01-23T13:19:28.894",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168894,
          "startTimestampDate": "2012-01-23T13:19:28.894",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321168894,
          "startTimestampDate": "2012-01-23T13:19:28.894",
          "executionTime": 115,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169010,
          "startTimestampDate": "2012-01-23T13:19:29.010",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169010,
          "startTimestampDate": "2012-01-23T13:19:29.010",
          "executionTime": 0,
          "description": "id#testAdd(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169011,
          "startTimestampDate": "2012-01-23T13:19:29.011",
          "executionTime": 0,
          "description": "id#testAddAll(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169011,
          "startTimestampDate": "2012-01-23T13:19:29.011",
          "executionTime": 0,
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169012,
          "startTimestampDate": "2012-01-23T13:19:29.012",
          "executionTime": 0,
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169013,
          "startTimestampDate": "2012-01-23T13:19:29.013",
          "executionTime": 0,
          "description": "id#testAdd2(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169013,
          "startTimestampDate": "2012-01-23T13:19:29.013",
          "executionTime": 0,
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169014,
          "startTimestampDate": "2012-01-23T13:19:29.014",
          "executionTime": 10,
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.LongOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAll(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAll(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd2(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd2(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.LongOpenHashSetTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321169048,
      "startTimestampDate": "2012-01-23T13:19:29.048",
      "executionTime": 25,
      "description": {
        "id": "id#com.carrotsearch.hppc.IntStackTest[0]",
        "displayName": "com.carrotsearch.hppc.IntStackTest",
        "className": "com.carrotsearch.hppc.IntStackTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.IntStackTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.IntStackTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.IntStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.IntStackTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.IntStackTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.IntStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.IntStackTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.IntStackTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.IntStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.IntStackTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.IntStackTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.IntStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPush1(com.carrotsearch.hppc.IntStackTest)[1]",
            "displayName": "testPush1(com.carrotsearch.hppc.IntStackTest)",
            "methodName": "testPush1",
            "className": "com.carrotsearch.hppc.IntStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPush2(com.carrotsearch.hppc.IntStackTest)[1]",
            "displayName": "testPush2(com.carrotsearch.hppc.IntStackTest)",
            "methodName": "testPush2",
            "className": "com.carrotsearch.hppc.IntStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPushArray(com.carrotsearch.hppc.IntStackTest)[1]",
            "displayName": "testPushArray(com.carrotsearch.hppc.IntStackTest)",
            "methodName": "testPushArray",
            "className": "com.carrotsearch.hppc.IntStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllPushAll(com.carrotsearch.hppc.IntStackTest)[1]",
            "displayName": "testAddAllPushAll(com.carrotsearch.hppc.IntStackTest)",
            "methodName": "testAddAllPushAll",
            "className": "com.carrotsearch.hppc.IntStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDiscard(com.carrotsearch.hppc.IntStackTest)[1]",
            "displayName": "testDiscard(com.carrotsearch.hppc.IntStackTest)",
            "methodName": "testDiscard",
            "className": "com.carrotsearch.hppc.IntStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetAssertions(com.carrotsearch.hppc.IntStackTest)[1]",
            "displayName": "testGetAssertions(com.carrotsearch.hppc.IntStackTest)",
            "methodName": "testGetAssertions",
            "className": "com.carrotsearch.hppc.IntStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDiscardAssertions(com.carrotsearch.hppc.IntStackTest)[1]",
            "displayName": "testDiscardAssertions(com.carrotsearch.hppc.IntStackTest)",
            "methodName": "testDiscardAssertions",
            "className": "com.carrotsearch.hppc.IntStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.IntStackTest)[1]",
            "displayName": "testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.IntStackTest)",
            "methodName": "testHashCodeEqualsWithOtherContainer",
            "className": "com.carrotsearch.hppc.IntStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321169065,
          "startTimestampDate": "2012-01-23T13:19:29.065",
          "executionTime": 3,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169068,
          "startTimestampDate": "2012-01-23T13:19:29.068",
          "executionTime": 1,
          "description": "id#testClone(com.carrotsearch.hppc.IntStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169069,
          "startTimestampDate": "2012-01-23T13:19:29.069",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.IntStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169069,
          "startTimestampDate": "2012-01-23T13:19:29.069",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.IntStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169070,
          "startTimestampDate": "2012-01-23T13:19:29.070",
          "executionTime": 0,
          "description": "id#testPush1(com.carrotsearch.hppc.IntStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169070,
          "startTimestampDate": "2012-01-23T13:19:29.070",
          "executionTime": 0,
          "description": "id#testPush2(com.carrotsearch.hppc.IntStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169070,
          "startTimestampDate": "2012-01-23T13:19:29.070",
          "executionTime": 0,
          "description": "id#testPushArray(com.carrotsearch.hppc.IntStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169071,
          "startTimestampDate": "2012-01-23T13:19:29.071",
          "executionTime": 0,
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.IntStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169071,
          "startTimestampDate": "2012-01-23T13:19:29.071",
          "executionTime": 1,
          "description": "id#testDiscard(com.carrotsearch.hppc.IntStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169072,
          "startTimestampDate": "2012-01-23T13:19:29.072",
          "executionTime": 0,
          "description": "id#testGetAssertions(com.carrotsearch.hppc.IntStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169072,
          "startTimestampDate": "2012-01-23T13:19:29.072",
          "executionTime": 0,
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.IntStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169073,
          "startTimestampDate": "2012-01-23T13:19:29.073",
          "executionTime": 0,
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.IntStackTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPush1(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPush1(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPush2(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPush2(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPushArray(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPushArray(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDiscard(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDiscard(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetAssertions(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetAssertions(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.IntStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.IntStackTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321169078,
      "startTimestampDate": "2012-01-23T13:19:29.078",
      "executionTime": 39,
      "description": {
        "id": "id#com.carrotsearch.hppc.FloatArrayListTest[0]",
        "displayName": "com.carrotsearch.hppc.FloatArrayListTest",
        "className": "com.carrotsearch.hppc.FloatArrayListTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemove(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testRemoveAllWithPredicateInterrupted",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRelease(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testRelease(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testRelease",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterator(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testIterator(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testIterator",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachWithProcedure(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testForEachWithProcedure(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testForEachWithProcedure",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testHashCodeEqualsWithOtherContainer",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testAdd(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testAdd",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddTwoArgs(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testAddTwoArgs(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testAddTwoArgs",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddArray(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testAddArray(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testAddArray",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddVarArg(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testAddVarArg(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testAddVarArg",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAll(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testAddAll(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testAddAll",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInsert(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testInsert(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testInsert",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testSet(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testSet(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testSet",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveRange(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testRemoveRange(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testRemoveRange",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstLast(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testRemoveFirstLast(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testRemoveFirstLast",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAll(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testRemoveAll(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testRemoveAll",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testRemoveAllFromLookupContainer(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testRemoveAllFromLookupContainer",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testRetainAllWithPredicate(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testRetainAllWithPredicate",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIndexOf(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testIndexOf(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testIndexOf",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLastIndexOf(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testLastIndexOf(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testLastIndexOf",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testEnsureCapacity(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testEnsureCapacity(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testEnsureCapacity",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testResizeAndCleanBuffer(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testResizeAndCleanBuffer",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testTrimToSize(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testTrimToSize(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testTrimToSize",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGrowth(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testGrowth(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testGrowth",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testForEachReturnValueFromAnonymousClass",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFrom(com.carrotsearch.hppc.FloatArrayListTest)[1]",
            "displayName": "testFrom(com.carrotsearch.hppc.FloatArrayListTest)",
            "methodName": "testFrom",
            "className": "com.carrotsearch.hppc.FloatArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321169090,
          "startTimestampDate": "2012-01-23T13:19:29.090",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169091,
          "startTimestampDate": "2012-01-23T13:19:29.091",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169092,
          "startTimestampDate": "2012-01-23T13:19:29.092",
          "executionTime": 0,
          "description": "id#testClear(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169093,
          "startTimestampDate": "2012-01-23T13:19:29.093",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169093,
          "startTimestampDate": "2012-01-23T13:19:29.093",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169093,
          "startTimestampDate": "2012-01-23T13:19:29.093",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169094,
          "startTimestampDate": "2012-01-23T13:19:29.094",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169094,
          "startTimestampDate": "2012-01-23T13:19:29.094",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169095,
          "startTimestampDate": "2012-01-23T13:19:29.095",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169096,
          "startTimestampDate": "2012-01-23T13:19:29.096",
          "executionTime": 0,
          "description": "id#testRelease(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169096,
          "startTimestampDate": "2012-01-23T13:19:29.096",
          "executionTime": 0,
          "description": "id#testIterator(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169096,
          "startTimestampDate": "2012-01-23T13:19:29.096",
          "executionTime": 1,
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169097,
          "startTimestampDate": "2012-01-23T13:19:29.097",
          "executionTime": 1,
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169099,
          "startTimestampDate": "2012-01-23T13:19:29.099",
          "executionTime": 0,
          "description": "id#testAdd(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169099,
          "startTimestampDate": "2012-01-23T13:19:29.099",
          "executionTime": 0,
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169100,
          "startTimestampDate": "2012-01-23T13:19:29.100",
          "executionTime": 0,
          "description": "id#testAddArray(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169101,
          "startTimestampDate": "2012-01-23T13:19:29.101",
          "executionTime": 0,
          "description": "id#testAddVarArg(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169101,
          "startTimestampDate": "2012-01-23T13:19:29.101",
          "executionTime": 0,
          "description": "id#testAddAll(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169102,
          "startTimestampDate": "2012-01-23T13:19:29.102",
          "executionTime": 0,
          "description": "id#testInsert(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169105,
          "startTimestampDate": "2012-01-23T13:19:29.105",
          "executionTime": 0,
          "description": "id#testSet(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169105,
          "startTimestampDate": "2012-01-23T13:19:29.105",
          "executionTime": 0,
          "description": "id#testRemoveRange(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169105,
          "startTimestampDate": "2012-01-23T13:19:29.105",
          "executionTime": 0,
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169106,
          "startTimestampDate": "2012-01-23T13:19:29.106",
          "executionTime": 0,
          "description": "id#testRemoveAll(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169106,
          "startTimestampDate": "2012-01-23T13:19:29.106",
          "executionTime": 2,
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169111,
          "startTimestampDate": "2012-01-23T13:19:29.111",
          "executionTime": 2,
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169113,
          "startTimestampDate": "2012-01-23T13:19:29.113",
          "executionTime": 0,
          "description": "id#testIndexOf(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169114,
          "startTimestampDate": "2012-01-23T13:19:29.114",
          "executionTime": 0,
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169114,
          "startTimestampDate": "2012-01-23T13:19:29.114",
          "executionTime": 0,
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169114,
          "startTimestampDate": "2012-01-23T13:19:29.114",
          "executionTime": 0,
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169115,
          "startTimestampDate": "2012-01-23T13:19:29.115",
          "executionTime": 0,
          "description": "id#testTrimToSize(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169115,
          "startTimestampDate": "2012-01-23T13:19:29.115",
          "executionTime": 0,
          "description": "id#testGrowth(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169116,
          "startTimestampDate": "2012-01-23T13:19:29.116",
          "executionTime": 1,
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321169117,
          "startTimestampDate": "2012-01-23T13:19:29.117",
          "executionTime": 0,
          "description": "id#testFrom(com.carrotsearch.hppc.FloatArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRelease(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRelease(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterator(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterator(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddArray(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddArray(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddVarArg(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddVarArg(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAll(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAll(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInsert(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInsert(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testSet(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testSet(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveRange(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveRange(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAll(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAll(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIndexOf(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIndexOf(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testTrimToSize(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testTrimToSize(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGrowth(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGrowth(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFrom(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFrom(com.carrotsearch.hppc.FloatArrayListTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321169131,
      "startTimestampDate": "2012-01-23T13:19:29.131",
      "executionTime": 4337,
      "description": {
        "id": "id#com.carrotsearch.hppc.sorting.IndirectSortTest[0]",
        "displayName": "com.carrotsearch.hppc.sorting.IndirectSortTest",
        "className": "com.carrotsearch.hppc.sorting.IndirectSortTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testSortCertificationMergeSort(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]",
            "displayName": "testSortCertificationMergeSort(com.carrotsearch.hppc.sorting.IndirectSortTest)",
            "methodName": "testSortCertificationMergeSort",
            "className": "com.carrotsearch.hppc.sorting.IndirectSortTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testEmptyAndSingle(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]",
            "displayName": "testEmptyAndSingle(com.carrotsearch.hppc.sorting.IndirectSortTest)",
            "methodName": "testEmptyAndSingle",
            "className": "com.carrotsearch.hppc.sorting.IndirectSortTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testOrderedMergeSort(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]",
            "displayName": "testOrderedMergeSort(com.carrotsearch.hppc.sorting.IndirectSortTest)",
            "methodName": "testOrderedMergeSort",
            "className": "com.carrotsearch.hppc.sorting.IndirectSortTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testReversedMergeSort(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]",
            "displayName": "testReversedMergeSort(com.carrotsearch.hppc.sorting.IndirectSortTest)",
            "methodName": "testReversedMergeSort",
            "className": "com.carrotsearch.hppc.sorting.IndirectSortTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAscInt(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]",
            "displayName": "testAscInt(com.carrotsearch.hppc.sorting.IndirectSortTest)",
            "methodName": "testAscInt",
            "className": "com.carrotsearch.hppc.sorting.IndirectSortTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDescInt(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]",
            "displayName": "testDescInt(com.carrotsearch.hppc.sorting.IndirectSortTest)",
            "methodName": "testDescInt",
            "className": "com.carrotsearch.hppc.sorting.IndirectSortTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAscDouble(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]",
            "displayName": "testAscDouble(com.carrotsearch.hppc.sorting.IndirectSortTest)",
            "methodName": "testAscDouble",
            "className": "com.carrotsearch.hppc.sorting.IndirectSortTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMergeSortIsStable(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]",
            "displayName": "testMergeSortIsStable(com.carrotsearch.hppc.sorting.IndirectSortTest)",
            "methodName": "testMergeSortIsStable",
            "className": "com.carrotsearch.hppc.sorting.IndirectSortTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321169134,
          "startTimestampDate": "2012-01-23T13:19:29.134",
          "executionTime": 3098,
          "description": "id#testSortCertificationMergeSort(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321172232,
          "startTimestampDate": "2012-01-23T13:19:32.232",
          "executionTime": 117,
          "description": "id#testEmptyAndSingle(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321172350,
          "startTimestampDate": "2012-01-23T13:19:32.350",
          "executionTime": 256,
          "description": "id#testOrderedMergeSort(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321172607,
          "startTimestampDate": "2012-01-23T13:19:32.607",
          "executionTime": 550,
          "description": "id#testReversedMergeSort(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173158,
          "startTimestampDate": "2012-01-23T13:19:33.158",
          "executionTime": 42,
          "description": "id#testAscInt(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173201,
          "startTimestampDate": "2012-01-23T13:19:33.201",
          "executionTime": 126,
          "description": "id#testDescInt(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173328,
          "startTimestampDate": "2012-01-23T13:19:33.328",
          "executionTime": 130,
          "description": "id#testAscDouble(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173459,
          "startTimestampDate": "2012-01-23T13:19:33.459",
          "executionTime": 9,
          "description": "id#testMergeSortIsStable(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testSortCertificationMergeSort(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testSortCertificationMergeSort(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testEmptyAndSingle(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testEmptyAndSingle(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testOrderedMergeSort(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testOrderedMergeSort(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testReversedMergeSort(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testReversedMergeSort(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAscInt(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAscInt(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDescInt(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDescInt(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAscDouble(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAscDouble(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMergeSortIsStable(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMergeSortIsStable(com.carrotsearch.hppc.sorting.IndirectSortTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321173474,
      "startTimestampDate": "2012-01-23T13:19:33.474",
      "executionTime": 53,
      "description": {
        "id": "id#com.carrotsearch.hppc.ObjectArrayListTest[0]",
        "displayName": "com.carrotsearch.hppc.ObjectArrayListTest",
        "className": "com.carrotsearch.hppc.ObjectArrayListTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testRemoveAllWithPredicateInterrupted",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRelease(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testRelease(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testRelease",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterator(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testIterator(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testIterator",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachWithProcedure(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testForEachWithProcedure(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testForEachWithProcedure",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeWithNulls(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testHashCodeWithNulls(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testHashCodeWithNulls",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToArrayWithClass(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testToArrayWithClass(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testToArrayWithClass",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToArray(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testToArray(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testToArray",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testHashCodeEqualsWithOtherContainer",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testAdd(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testAdd",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddTwoArgs(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testAddTwoArgs(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testAddTwoArgs",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddArray(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testAddArray(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testAddArray",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddVarArg(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testAddVarArg(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testAddVarArg",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAll(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testAddAll(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testAddAll",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInsert(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testInsert(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testInsert",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testSet(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testSet(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testSet",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveRange(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testRemoveRange(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testRemoveRange",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstLast(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testRemoveFirstLast(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testRemoveFirstLast",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAll(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testRemoveAll(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testRemoveAll",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testRemoveAllFromLookupContainer",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testRetainAllWithPredicate(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testRetainAllWithPredicate",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIndexOf(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testIndexOf(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testIndexOf",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLastIndexOf(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testLastIndexOf(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testLastIndexOf",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testEnsureCapacity(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testEnsureCapacity(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testEnsureCapacity",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testResizeAndCleanBuffer(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testResizeAndCleanBuffer",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testTrimToSize(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testTrimToSize(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testTrimToSize",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGrowth(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testGrowth(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testGrowth",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testForEachReturnValueFromAnonymousClass",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFrom(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testFrom(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testFrom",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAll_subclass(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
            "displayName": "testAddAll_subclass(com.carrotsearch.hppc.ObjectArrayListTest)",
            "methodName": "testAddAll_subclass",
            "className": "com.carrotsearch.hppc.ObjectArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321173496,
          "startTimestampDate": "2012-01-23T13:19:33.496",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173503,
          "startTimestampDate": "2012-01-23T13:19:33.503",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173504,
          "startTimestampDate": "2012-01-23T13:19:33.504",
          "executionTime": 0,
          "description": "id#testClear(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173505,
          "startTimestampDate": "2012-01-23T13:19:33.505",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173506,
          "startTimestampDate": "2012-01-23T13:19:33.506",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173506,
          "startTimestampDate": "2012-01-23T13:19:33.506",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173507,
          "startTimestampDate": "2012-01-23T13:19:33.507",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173507,
          "startTimestampDate": "2012-01-23T13:19:33.507",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173509,
          "startTimestampDate": "2012-01-23T13:19:33.509",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173510,
          "startTimestampDate": "2012-01-23T13:19:33.510",
          "executionTime": 0,
          "description": "id#testRelease(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173510,
          "startTimestampDate": "2012-01-23T13:19:33.510",
          "executionTime": 0,
          "description": "id#testIterator(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173510,
          "startTimestampDate": "2012-01-23T13:19:33.510",
          "executionTime": 1,
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173511,
          "startTimestampDate": "2012-01-23T13:19:33.511",
          "executionTime": 0,
          "description": "id#testHashCodeWithNulls(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173512,
          "startTimestampDate": "2012-01-23T13:19:33.512",
          "executionTime": 0,
          "description": "id#testToArrayWithClass(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173512,
          "startTimestampDate": "2012-01-23T13:19:33.512",
          "executionTime": 0,
          "description": "id#testToArray(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173513,
          "startTimestampDate": "2012-01-23T13:19:33.513",
          "executionTime": 3,
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173516,
          "startTimestampDate": "2012-01-23T13:19:33.516",
          "executionTime": 0,
          "description": "id#testAdd(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173516,
          "startTimestampDate": "2012-01-23T13:19:33.516",
          "executionTime": 1,
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173517,
          "startTimestampDate": "2012-01-23T13:19:33.517",
          "executionTime": 0,
          "description": "id#testAddArray(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173517,
          "startTimestampDate": "2012-01-23T13:19:33.517",
          "executionTime": 0,
          "description": "id#testAddVarArg(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173518,
          "startTimestampDate": "2012-01-23T13:19:33.518",
          "executionTime": 0,
          "description": "id#testAddAll(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173518,
          "startTimestampDate": "2012-01-23T13:19:33.518",
          "executionTime": 0,
          "description": "id#testInsert(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173518,
          "startTimestampDate": "2012-01-23T13:19:33.518",
          "executionTime": 0,
          "description": "id#testSet(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173519,
          "startTimestampDate": "2012-01-23T13:19:33.519",
          "executionTime": 0,
          "description": "id#testRemoveRange(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173519,
          "startTimestampDate": "2012-01-23T13:19:33.519",
          "executionTime": 0,
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173519,
          "startTimestampDate": "2012-01-23T13:19:33.519",
          "executionTime": 0,
          "description": "id#testRemoveAll(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173520,
          "startTimestampDate": "2012-01-23T13:19:33.520",
          "executionTime": 0,
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173520,
          "startTimestampDate": "2012-01-23T13:19:33.520",
          "executionTime": 1,
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173522,
          "startTimestampDate": "2012-01-23T13:19:33.522",
          "executionTime": 0,
          "description": "id#testIndexOf(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173522,
          "startTimestampDate": "2012-01-23T13:19:33.522",
          "executionTime": 0,
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173523,
          "startTimestampDate": "2012-01-23T13:19:33.523",
          "executionTime": 0,
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173523,
          "startTimestampDate": "2012-01-23T13:19:33.523",
          "executionTime": 0,
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173524,
          "startTimestampDate": "2012-01-23T13:19:33.524",
          "executionTime": 0,
          "description": "id#testTrimToSize(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173524,
          "startTimestampDate": "2012-01-23T13:19:33.524",
          "executionTime": 0,
          "description": "id#testGrowth(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173525,
          "startTimestampDate": "2012-01-23T13:19:33.525",
          "executionTime": 0,
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173525,
          "startTimestampDate": "2012-01-23T13:19:33.525",
          "executionTime": 1,
          "description": "id#testFrom(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173526,
          "startTimestampDate": "2012-01-23T13:19:33.526",
          "executionTime": 0,
          "description": "id#testAddAll_subclass(com.carrotsearch.hppc.ObjectArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRelease(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRelease(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterator(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterator(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeWithNulls(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeWithNulls(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToArrayWithClass(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToArrayWithClass(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToArray(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToArray(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddArray(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddArray(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddVarArg(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddVarArg(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAll(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAll(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInsert(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInsert(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testSet(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testSet(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveRange(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveRange(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAll(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAll(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIndexOf(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIndexOf(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testTrimToSize(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testTrimToSize(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGrowth(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGrowth(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFrom(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFrom(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAll_subclass(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAll_subclass(com.carrotsearch.hppc.ObjectArrayListTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321173531,
      "startTimestampDate": "2012-01-23T13:19:33.531",
      "executionTime": 37,
      "description": {
        "id": "id#com.carrotsearch.hppc.StringConversionsTest[0]",
        "displayName": "com.carrotsearch.hppc.StringConversionsTest",
        "className": "com.carrotsearch.hppc.StringConversionsTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testByteList(com.carrotsearch.hppc.StringConversionsTest)[1]",
            "displayName": "testByteList(com.carrotsearch.hppc.StringConversionsTest)",
            "methodName": "testByteList",
            "className": "com.carrotsearch.hppc.StringConversionsTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testCharList(com.carrotsearch.hppc.StringConversionsTest)[1]",
            "displayName": "testCharList(com.carrotsearch.hppc.StringConversionsTest)",
            "methodName": "testCharList",
            "className": "com.carrotsearch.hppc.StringConversionsTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testObjectList(com.carrotsearch.hppc.StringConversionsTest)[1]",
            "displayName": "testObjectList(com.carrotsearch.hppc.StringConversionsTest)",
            "methodName": "testObjectList",
            "className": "com.carrotsearch.hppc.StringConversionsTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testObjectObjectMap(com.carrotsearch.hppc.StringConversionsTest)[1]",
            "displayName": "testObjectObjectMap(com.carrotsearch.hppc.StringConversionsTest)",
            "methodName": "testObjectObjectMap",
            "className": "com.carrotsearch.hppc.StringConversionsTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321173534,
          "startTimestampDate": "2012-01-23T13:19:33.534",
          "executionTime": 0,
          "description": "id#testByteList(com.carrotsearch.hppc.StringConversionsTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173534,
          "startTimestampDate": "2012-01-23T13:19:33.534",
          "executionTime": 0,
          "description": "id#testCharList(com.carrotsearch.hppc.StringConversionsTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173547,
          "startTimestampDate": "2012-01-23T13:19:33.547",
          "executionTime": 0,
          "description": "id#testObjectList(com.carrotsearch.hppc.StringConversionsTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173548,
          "startTimestampDate": "2012-01-23T13:19:33.548",
          "executionTime": 19,
          "description": "id#testObjectObjectMap(com.carrotsearch.hppc.StringConversionsTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testByteList(com.carrotsearch.hppc.StringConversionsTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testByteList(com.carrotsearch.hppc.StringConversionsTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testCharList(com.carrotsearch.hppc.StringConversionsTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCharList(com.carrotsearch.hppc.StringConversionsTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testObjectList(com.carrotsearch.hppc.StringConversionsTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testObjectList(com.carrotsearch.hppc.StringConversionsTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testObjectObjectMap(com.carrotsearch.hppc.StringConversionsTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testObjectObjectMap(com.carrotsearch.hppc.StringConversionsTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321173571,
      "startTimestampDate": "2012-01-23T13:19:33.571",
      "executionTime": 89,
      "description": {
        "id": "id#com.carrotsearch.hppc.FloatOpenHashSetTest[0]",
        "displayName": "com.carrotsearch.hppc.FloatOpenHashSetTest",
        "className": "com.carrotsearch.hppc.FloatOpenHashSetTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemove(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.FloatOpenHashSetTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.FloatOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatOpenHashSetTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.FloatOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.FloatOpenHashSetTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.FloatOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.FloatOpenHashSetTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.FloatOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.FloatOpenHashSetTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.FloatOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.FloatOpenHashSetTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.FloatOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.FloatOpenHashSetTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.FloatOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatOpenHashSetTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.FloatOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.FloatOpenHashSetTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.FloatOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
            "displayName": "testAdd(com.carrotsearch.hppc.FloatOpenHashSetTest)",
            "methodName": "testAdd",
            "className": "com.carrotsearch.hppc.FloatOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAll(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
            "displayName": "testAddAll(com.carrotsearch.hppc.FloatOpenHashSetTest)",
            "methodName": "testAddAll",
            "className": "com.carrotsearch.hppc.FloatOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
            "displayName": "testRemoveAllFromLookupContainer(com.carrotsearch.hppc.FloatOpenHashSetTest)",
            "methodName": "testRemoveAllFromLookupContainer",
            "className": "com.carrotsearch.hppc.FloatOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
            "displayName": "testRetainAllWithPredicate(com.carrotsearch.hppc.FloatOpenHashSetTest)",
            "methodName": "testRetainAllWithPredicate",
            "className": "com.carrotsearch.hppc.FloatOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd2(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
            "displayName": "testAdd2(com.carrotsearch.hppc.FloatOpenHashSetTest)",
            "methodName": "testAdd2",
            "className": "com.carrotsearch.hppc.FloatOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddVarArgs(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
            "displayName": "testAddVarArgs(com.carrotsearch.hppc.FloatOpenHashSetTest)",
            "methodName": "testAddVarArgs",
            "className": "com.carrotsearch.hppc.FloatOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
            "displayName": "testInitialCapacityAndGrowth(com.carrotsearch.hppc.FloatOpenHashSetTest)",
            "methodName": "testInitialCapacityAndGrowth",
            "className": "com.carrotsearch.hppc.FloatOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321173600,
          "startTimestampDate": "2012-01-23T13:19:33.600",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173600,
          "startTimestampDate": "2012-01-23T13:19:33.600",
          "executionTime": 4,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173604,
          "startTimestampDate": "2012-01-23T13:19:33.604",
          "executionTime": 0,
          "description": "id#testClear(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173604,
          "startTimestampDate": "2012-01-23T13:19:33.604",
          "executionTime": 1,
          "description": "id#testIterable(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173606,
          "startTimestampDate": "2012-01-23T13:19:33.606",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173606,
          "startTimestampDate": "2012-01-23T13:19:33.606",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173619,
          "startTimestampDate": "2012-01-23T13:19:33.619",
          "executionTime": 13,
          "description": "id#testToString(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatOpenHashSetTest.testToString(FloatOpenHashSetTest.java:315)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173634,
          "startTimestampDate": "2012-01-23T13:19:33.634",
          "executionTime": 3,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatOpenHashSetTest.testAddRemoveSameHashCollision(FloatOpenHashSetTest.java:55)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173640,
          "startTimestampDate": "2012-01-23T13:19:33.640",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173641,
          "startTimestampDate": "2012-01-23T13:19:33.641",
          "executionTime": 0,
          "description": "id#testAdd(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173642,
          "startTimestampDate": "2012-01-23T13:19:33.642",
          "executionTime": 0,
          "description": "id#testAddAll(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173643,
          "startTimestampDate": "2012-01-23T13:19:33.643",
          "executionTime": 0,
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173643,
          "startTimestampDate": "2012-01-23T13:19:33.643",
          "executionTime": 1,
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173644,
          "startTimestampDate": "2012-01-23T13:19:33.644",
          "executionTime": 0,
          "description": "id#testAdd2(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173645,
          "startTimestampDate": "2012-01-23T13:19:33.645",
          "executionTime": 0,
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173646,
          "startTimestampDate": "2012-01-23T13:19:33.646",
          "executionTime": 13,
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatOpenHashSetTest.testToString(FloatOpenHashSetTest.java:315)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatOpenHashSetTest.testAddRemoveSameHashCollision(FloatOpenHashSetTest.java:55)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAll(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAll(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd2(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd2(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.FloatOpenHashSetTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321173682,
      "startTimestampDate": "2012-01-23T13:19:33.682",
      "executionTime": 148,
      "description": {
        "id": "id#com.carrotsearch.hppc.DoubleObjectOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
        "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullValue(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
            "displayName": "testNullValue(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)",
            "methodName": "testNullValue",
            "className": "com.carrotsearch.hppc.DoubleObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321173696,
          "startTimestampDate": "2012-01-23T13:19:33.696",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173698,
          "startTimestampDate": "2012-01-23T13:19:33.698",
          "executionTime": 1,
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173699,
          "startTimestampDate": "2012-01-23T13:19:33.699",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173699,
          "startTimestampDate": "2012-01-23T13:19:33.699",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173699,
          "startTimestampDate": "2012-01-23T13:19:33.699",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173700,
          "startTimestampDate": "2012-01-23T13:19:33.700",
          "executionTime": 31,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173738,
          "startTimestampDate": "2012-01-23T13:19:33.738",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173738,
          "startTimestampDate": "2012-01-23T13:19:33.738",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173739,
          "startTimestampDate": "2012-01-23T13:19:33.739",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173739,
          "startTimestampDate": "2012-01-23T13:19:33.739",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173739,
          "startTimestampDate": "2012-01-23T13:19:33.739",
          "executionTime": 4,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173744,
          "startTimestampDate": "2012-01-23T13:19:33.744",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173746,
          "startTimestampDate": "2012-01-23T13:19:33.746",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173746,
          "startTimestampDate": "2012-01-23T13:19:33.746",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173747,
          "startTimestampDate": "2012-01-23T13:19:33.747",
          "executionTime": 1,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173748,
          "startTimestampDate": "2012-01-23T13:19:33.748",
          "executionTime": 53,
          "description": "id#testClear(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173802,
          "startTimestampDate": "2012-01-23T13:19:33.802",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173803,
          "startTimestampDate": "2012-01-23T13:19:33.803",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173804,
          "startTimestampDate": "2012-01-23T13:19:33.804",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173805,
          "startTimestampDate": "2012-01-23T13:19:33.805",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173806,
          "startTimestampDate": "2012-01-23T13:19:33.806",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173809,
          "startTimestampDate": "2012-01-23T13:19:33.809",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173810,
          "startTimestampDate": "2012-01-23T13:19:33.810",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173811,
          "startTimestampDate": "2012-01-23T13:19:33.811",
          "executionTime": 3,
          "description": "id#testToString(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleObjectOpenHashMapTest.testToString(DoubleObjectOpenHashMapTest.java:502)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173819,
          "startTimestampDate": "2012-01-23T13:19:33.819",
          "executionTime": 4,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleObjectOpenHashMapTest.testAddRemoveSameHashCollision(DoubleObjectOpenHashMapTest.java:528)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173824,
          "startTimestampDate": "2012-01-23T13:19:33.824",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173826,
          "startTimestampDate": "2012-01-23T13:19:33.826",
          "executionTime": 1,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173827,
          "startTimestampDate": "2012-01-23T13:19:33.827",
          "executionTime": 2,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173830,
          "startTimestampDate": "2012-01-23T13:19:33.830",
          "executionTime": 0,
          "description": "id#testNullValue(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleObjectOpenHashMapTest.testToString(DoubleObjectOpenHashMapTest.java:502)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleObjectOpenHashMapTest.testAddRemoveSameHashCollision(DoubleObjectOpenHashMapTest.java:528)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullValue(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullValue(com.carrotsearch.hppc.DoubleObjectOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321173833,
      "startTimestampDate": "2012-01-23T13:19:33.833",
      "executionTime": 18,
      "description": {
        "id": "id#com.carrotsearch.hppc.DoubleStackTest[0]",
        "displayName": "com.carrotsearch.hppc.DoubleStackTest",
        "className": "com.carrotsearch.hppc.DoubleStackTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleStackTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.DoubleStackTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.DoubleStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.DoubleStackTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.DoubleStackTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.DoubleStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.DoubleStackTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.DoubleStackTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.DoubleStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.DoubleStackTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.DoubleStackTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.DoubleStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPush1(com.carrotsearch.hppc.DoubleStackTest)[1]",
            "displayName": "testPush1(com.carrotsearch.hppc.DoubleStackTest)",
            "methodName": "testPush1",
            "className": "com.carrotsearch.hppc.DoubleStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPush2(com.carrotsearch.hppc.DoubleStackTest)[1]",
            "displayName": "testPush2(com.carrotsearch.hppc.DoubleStackTest)",
            "methodName": "testPush2",
            "className": "com.carrotsearch.hppc.DoubleStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPushArray(com.carrotsearch.hppc.DoubleStackTest)[1]",
            "displayName": "testPushArray(com.carrotsearch.hppc.DoubleStackTest)",
            "methodName": "testPushArray",
            "className": "com.carrotsearch.hppc.DoubleStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllPushAll(com.carrotsearch.hppc.DoubleStackTest)[1]",
            "displayName": "testAddAllPushAll(com.carrotsearch.hppc.DoubleStackTest)",
            "methodName": "testAddAllPushAll",
            "className": "com.carrotsearch.hppc.DoubleStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDiscard(com.carrotsearch.hppc.DoubleStackTest)[1]",
            "displayName": "testDiscard(com.carrotsearch.hppc.DoubleStackTest)",
            "methodName": "testDiscard",
            "className": "com.carrotsearch.hppc.DoubleStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetAssertions(com.carrotsearch.hppc.DoubleStackTest)[1]",
            "displayName": "testGetAssertions(com.carrotsearch.hppc.DoubleStackTest)",
            "methodName": "testGetAssertions",
            "className": "com.carrotsearch.hppc.DoubleStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDiscardAssertions(com.carrotsearch.hppc.DoubleStackTest)[1]",
            "displayName": "testDiscardAssertions(com.carrotsearch.hppc.DoubleStackTest)",
            "methodName": "testDiscardAssertions",
            "className": "com.carrotsearch.hppc.DoubleStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.DoubleStackTest)[1]",
            "displayName": "testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.DoubleStackTest)",
            "methodName": "testHashCodeEqualsWithOtherContainer",
            "className": "com.carrotsearch.hppc.DoubleStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321173847,
          "startTimestampDate": "2012-01-23T13:19:33.847",
          "executionTime": 1,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173848,
          "startTimestampDate": "2012-01-23T13:19:33.848",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.DoubleStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173848,
          "startTimestampDate": "2012-01-23T13:19:33.848",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.DoubleStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173849,
          "startTimestampDate": "2012-01-23T13:19:33.849",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.DoubleStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173849,
          "startTimestampDate": "2012-01-23T13:19:33.849",
          "executionTime": 0,
          "description": "id#testPush1(com.carrotsearch.hppc.DoubleStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173849,
          "startTimestampDate": "2012-01-23T13:19:33.849",
          "executionTime": 0,
          "description": "id#testPush2(com.carrotsearch.hppc.DoubleStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173850,
          "startTimestampDate": "2012-01-23T13:19:33.850",
          "executionTime": 0,
          "description": "id#testPushArray(com.carrotsearch.hppc.DoubleStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173850,
          "startTimestampDate": "2012-01-23T13:19:33.850",
          "executionTime": 0,
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.DoubleStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173850,
          "startTimestampDate": "2012-01-23T13:19:33.850",
          "executionTime": 0,
          "description": "id#testDiscard(com.carrotsearch.hppc.DoubleStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173850,
          "startTimestampDate": "2012-01-23T13:19:33.850",
          "executionTime": 1,
          "description": "id#testGetAssertions(com.carrotsearch.hppc.DoubleStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173851,
          "startTimestampDate": "2012-01-23T13:19:33.851",
          "executionTime": 0,
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.DoubleStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173851,
          "startTimestampDate": "2012-01-23T13:19:33.851",
          "executionTime": 0,
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.DoubleStackTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPush1(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPush1(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPush2(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPush2(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPushArray(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPushArray(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDiscard(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDiscard(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetAssertions(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetAssertions(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.DoubleStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.DoubleStackTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321173877,
      "startTimestampDate": "2012-01-23T13:19:33.877",
      "executionTime": 491,
      "description": {
        "id": "id#com.carrotsearch.hppc.ObjectIntOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullKey(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testNullKey(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testNullKey",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLkey(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
            "displayName": "testLkey(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)",
            "methodName": "testLkey",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321173908,
          "startTimestampDate": "2012-01-23T13:19:33.908",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173910,
          "startTimestampDate": "2012-01-23T13:19:33.910",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173910,
          "startTimestampDate": "2012-01-23T13:19:33.910",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173910,
          "startTimestampDate": "2012-01-23T13:19:33.910",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173910,
          "startTimestampDate": "2012-01-23T13:19:33.910",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173911,
          "startTimestampDate": "2012-01-23T13:19:33.911",
          "executionTime": 60,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173972,
          "startTimestampDate": "2012-01-23T13:19:33.972",
          "executionTime": 3,
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173976,
          "startTimestampDate": "2012-01-23T13:19:33.976",
          "executionTime": 1,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173979,
          "startTimestampDate": "2012-01-23T13:19:33.979",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173980,
          "startTimestampDate": "2012-01-23T13:19:33.980",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173981,
          "startTimestampDate": "2012-01-23T13:19:33.981",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173983,
          "startTimestampDate": "2012-01-23T13:19:33.983",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173984,
          "startTimestampDate": "2012-01-23T13:19:33.984",
          "executionTime": 2,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173987,
          "startTimestampDate": "2012-01-23T13:19:33.987",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173988,
          "startTimestampDate": "2012-01-23T13:19:33.988",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173990,
          "startTimestampDate": "2012-01-23T13:19:33.990",
          "executionTime": 1,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321173991,
          "startTimestampDate": "2012-01-23T13:19:33.991",
          "executionTime": 26,
          "description": "id#testClear(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174018,
          "startTimestampDate": "2012-01-23T13:19:34.018",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174019,
          "startTimestampDate": "2012-01-23T13:19:34.019",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174020,
          "startTimestampDate": "2012-01-23T13:19:34.020",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174021,
          "startTimestampDate": "2012-01-23T13:19:34.021",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174022,
          "startTimestampDate": "2012-01-23T13:19:34.022",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174023,
          "startTimestampDate": "2012-01-23T13:19:34.023",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174024,
          "startTimestampDate": "2012-01-23T13:19:34.024",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174025,
          "startTimestampDate": "2012-01-23T13:19:34.025",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174026,
          "startTimestampDate": "2012-01-23T13:19:34.026",
          "executionTime": 338,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174364,
          "startTimestampDate": "2012-01-23T13:19:34.364",
          "executionTime": 2,
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174366,
          "startTimestampDate": "2012-01-23T13:19:34.366",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174366,
          "startTimestampDate": "2012-01-23T13:19:34.366",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174367,
          "startTimestampDate": "2012-01-23T13:19:34.367",
          "executionTime": 0,
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174368,
          "startTimestampDate": "2012-01-23T13:19:34.368",
          "executionTime": 0,
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectIntOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321174378,
      "startTimestampDate": "2012-01-23T13:19:34.378",
      "executionTime": 172,
      "description": {
        "id": "id#com.carrotsearch.hppc.ShortArrayDequeTest[0]",
        "displayName": "com.carrotsearch.hppc.ShortArrayDequeTest",
        "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddFirst(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testAddFirst(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testAddFirst",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddLast(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testAddLast(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testAddLast",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddWithGrowth(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testAddWithGrowth(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testAddWithGrowth",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddLastWithGrowth(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testAddLastWithGrowth(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testAddLastWithGrowth",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllFirst(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testAddAllFirst(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testAddAllFirst",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllLast(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testAddAllLast(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testAddAllLast",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirst(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testRemoveFirst(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testRemoveFirst",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testRemoveFirstEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testRemoveFirstEmpty",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLast(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testRemoveLast(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testRemoveLast",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLastEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testRemoveLastEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testRemoveLastEmpty",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetFirst(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testGetFirst(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testGetFirst",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetFirstEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testGetFirstEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testGetFirstEmpty",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetLast(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testGetLast(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testGetLast",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetLastEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testGetLastEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testGetLastEmpty",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testRemoveFirstOccurrence(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testRemoveFirstOccurrence",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testRemoveLastOccurrence(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testRemoveLastOccurrence",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testRemoveAllOccurrences(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testRemoveAllOccurrences",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testRemoveAllInLookupContainer(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testRemoveAllInLookupContainer",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testRemoveAllWithPredicateInterrupted",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRelease(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testRelease(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testRelease",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterator(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testIterator(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testIterator",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDescendingIterator(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testDescendingIterator(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testDescendingIterator",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachWithProcedure(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testForEachWithProcedure(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testForEachWithProcedure",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
            "displayName": "testDescendingForEachWithProcedure(com.carrotsearch.hppc.ShortArrayDequeTest)",
            "methodName": "testDescendingForEachWithProcedure",
            "className": "com.carrotsearch.hppc.ShortArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321174394,
          "startTimestampDate": "2012-01-23T13:19:34.394",
          "executionTime": 13,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174408,
          "startTimestampDate": "2012-01-23T13:19:34.408",
          "executionTime": 3,
          "description": "id#testClear(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174411,
          "startTimestampDate": "2012-01-23T13:19:34.411",
          "executionTime": 39,
          "description": "id#testIterable(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174451,
          "startTimestampDate": "2012-01-23T13:19:34.451",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174451,
          "startTimestampDate": "2012-01-23T13:19:34.451",
          "executionTime": 1,
          "description": "id#testClone(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174452,
          "startTimestampDate": "2012-01-23T13:19:34.452",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174457,
          "startTimestampDate": "2012-01-23T13:19:34.457",
          "executionTime": 1,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174459,
          "startTimestampDate": "2012-01-23T13:19:34.459",
          "executionTime": 0,
          "description": "id#testAddFirst(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174459,
          "startTimestampDate": "2012-01-23T13:19:34.459",
          "executionTime": 1,
          "description": "id#testAddLast(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174460,
          "startTimestampDate": "2012-01-23T13:19:34.460",
          "executionTime": 11,
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174472,
          "startTimestampDate": "2012-01-23T13:19:34.472",
          "executionTime": 5,
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174478,
          "startTimestampDate": "2012-01-23T13:19:34.478",
          "executionTime": 4,
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174483,
          "startTimestampDate": "2012-01-23T13:19:34.483",
          "executionTime": 0,
          "description": "id#testAddAllLast(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174489,
          "startTimestampDate": "2012-01-23T13:19:34.489",
          "executionTime": 0,
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174490,
          "startTimestampDate": "2012-01-23T13:19:34.490",
          "executionTime": 0,
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174491,
          "startTimestampDate": "2012-01-23T13:19:34.491",
          "executionTime": 1,
          "description": "id#testRemoveLast(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174493,
          "startTimestampDate": "2012-01-23T13:19:34.493",
          "executionTime": 0,
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174494,
          "startTimestampDate": "2012-01-23T13:19:34.494",
          "executionTime": 0,
          "description": "id#testGetFirst(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174495,
          "startTimestampDate": "2012-01-23T13:19:34.495",
          "executionTime": 0,
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174496,
          "startTimestampDate": "2012-01-23T13:19:34.496",
          "executionTime": 0,
          "description": "id#testGetLast(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174497,
          "startTimestampDate": "2012-01-23T13:19:34.497",
          "executionTime": 0,
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174498,
          "startTimestampDate": "2012-01-23T13:19:34.498",
          "executionTime": 12,
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174512,
          "startTimestampDate": "2012-01-23T13:19:34.512",
          "executionTime": 10,
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174523,
          "startTimestampDate": "2012-01-23T13:19:34.523",
          "executionTime": 1,
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174524,
          "startTimestampDate": "2012-01-23T13:19:34.524",
          "executionTime": 2,
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174527,
          "startTimestampDate": "2012-01-23T13:19:34.527",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174529,
          "startTimestampDate": "2012-01-23T13:19:34.529",
          "executionTime": 0,
          "description": "id#testRelease(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174529,
          "startTimestampDate": "2012-01-23T13:19:34.529",
          "executionTime": 0,
          "description": "id#testIterator(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174529,
          "startTimestampDate": "2012-01-23T13:19:34.529",
          "executionTime": 10,
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174540,
          "startTimestampDate": "2012-01-23T13:19:34.540",
          "executionTime": 4,
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174545,
          "startTimestampDate": "2012-01-23T13:19:34.545",
          "executionTime": 4,
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.ShortArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddFirst(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddFirst(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddLast(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddLast(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllLast(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllLast(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLast(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLast(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetFirst(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetFirst(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetLast(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetLast(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRelease(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRelease(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterator(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterator(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.ShortArrayDequeTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321174556,
      "startTimestampDate": "2012-01-23T13:19:34.556",
      "executionTime": 52,
      "description": {
        "id": "id#com.carrotsearch.hppc.CharArrayListTest[0]",
        "displayName": "com.carrotsearch.hppc.CharArrayListTest",
        "className": "com.carrotsearch.hppc.CharArrayListTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemove(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testRemoveAllWithPredicateInterrupted",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRelease(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testRelease(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testRelease",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterator(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testIterator(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testIterator",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachWithProcedure(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testForEachWithProcedure(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testForEachWithProcedure",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testHashCodeEqualsWithOtherContainer",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testAdd(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testAdd",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddTwoArgs(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testAddTwoArgs(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testAddTwoArgs",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddArray(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testAddArray(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testAddArray",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddVarArg(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testAddVarArg(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testAddVarArg",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAll(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testAddAll(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testAddAll",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInsert(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testInsert(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testInsert",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testSet(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testSet(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testSet",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveRange(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testRemoveRange(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testRemoveRange",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstLast(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testRemoveFirstLast(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testRemoveFirstLast",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAll(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testRemoveAll(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testRemoveAll",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testRemoveAllFromLookupContainer(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testRemoveAllFromLookupContainer",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testRetainAllWithPredicate(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testRetainAllWithPredicate",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIndexOf(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testIndexOf(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testIndexOf",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLastIndexOf(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testLastIndexOf(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testLastIndexOf",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testEnsureCapacity(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testEnsureCapacity(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testEnsureCapacity",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testResizeAndCleanBuffer(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testResizeAndCleanBuffer",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testTrimToSize(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testTrimToSize(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testTrimToSize",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGrowth(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testGrowth(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testGrowth",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testForEachReturnValueFromAnonymousClass",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFrom(com.carrotsearch.hppc.CharArrayListTest)[1]",
            "displayName": "testFrom(com.carrotsearch.hppc.CharArrayListTest)",
            "methodName": "testFrom",
            "className": "com.carrotsearch.hppc.CharArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321174583,
          "startTimestampDate": "2012-01-23T13:19:34.583",
          "executionTime": 1,
          "description": "id#testRemove(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174584,
          "startTimestampDate": "2012-01-23T13:19:34.584",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174585,
          "startTimestampDate": "2012-01-23T13:19:34.585",
          "executionTime": 0,
          "description": "id#testClear(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174589,
          "startTimestampDate": "2012-01-23T13:19:34.589",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174589,
          "startTimestampDate": "2012-01-23T13:19:34.589",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174590,
          "startTimestampDate": "2012-01-23T13:19:34.590",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174590,
          "startTimestampDate": "2012-01-23T13:19:34.590",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174590,
          "startTimestampDate": "2012-01-23T13:19:34.590",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174591,
          "startTimestampDate": "2012-01-23T13:19:34.591",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174592,
          "startTimestampDate": "2012-01-23T13:19:34.592",
          "executionTime": 0,
          "description": "id#testRelease(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174592,
          "startTimestampDate": "2012-01-23T13:19:34.592",
          "executionTime": 1,
          "description": "id#testIterator(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174593,
          "startTimestampDate": "2012-01-23T13:19:34.593",
          "executionTime": 0,
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174594,
          "startTimestampDate": "2012-01-23T13:19:34.594",
          "executionTime": 2,
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174597,
          "startTimestampDate": "2012-01-23T13:19:34.597",
          "executionTime": 0,
          "description": "id#testAdd(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174597,
          "startTimestampDate": "2012-01-23T13:19:34.597",
          "executionTime": 0,
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174598,
          "startTimestampDate": "2012-01-23T13:19:34.598",
          "executionTime": 0,
          "description": "id#testAddArray(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174599,
          "startTimestampDate": "2012-01-23T13:19:34.599",
          "executionTime": 0,
          "description": "id#testAddVarArg(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174600,
          "startTimestampDate": "2012-01-23T13:19:34.600",
          "executionTime": 0,
          "description": "id#testAddAll(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174600,
          "startTimestampDate": "2012-01-23T13:19:34.600",
          "executionTime": 0,
          "description": "id#testInsert(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174600,
          "startTimestampDate": "2012-01-23T13:19:34.600",
          "executionTime": 0,
          "description": "id#testSet(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174601,
          "startTimestampDate": "2012-01-23T13:19:34.601",
          "executionTime": 0,
          "description": "id#testRemoveRange(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174601,
          "startTimestampDate": "2012-01-23T13:19:34.601",
          "executionTime": 0,
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174601,
          "startTimestampDate": "2012-01-23T13:19:34.601",
          "executionTime": 0,
          "description": "id#testRemoveAll(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174601,
          "startTimestampDate": "2012-01-23T13:19:34.601",
          "executionTime": 2,
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174604,
          "startTimestampDate": "2012-01-23T13:19:34.604",
          "executionTime": 0,
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174605,
          "startTimestampDate": "2012-01-23T13:19:34.605",
          "executionTime": 0,
          "description": "id#testIndexOf(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174605,
          "startTimestampDate": "2012-01-23T13:19:34.605",
          "executionTime": 0,
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174605,
          "startTimestampDate": "2012-01-23T13:19:34.605",
          "executionTime": 0,
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174606,
          "startTimestampDate": "2012-01-23T13:19:34.606",
          "executionTime": 0,
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174606,
          "startTimestampDate": "2012-01-23T13:19:34.606",
          "executionTime": 0,
          "description": "id#testTrimToSize(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174606,
          "startTimestampDate": "2012-01-23T13:19:34.606",
          "executionTime": 1,
          "description": "id#testGrowth(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174607,
          "startTimestampDate": "2012-01-23T13:19:34.607",
          "executionTime": 0,
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174608,
          "startTimestampDate": "2012-01-23T13:19:34.608",
          "executionTime": 0,
          "description": "id#testFrom(com.carrotsearch.hppc.CharArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRelease(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRelease(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterator(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterator(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddArray(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddArray(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddVarArg(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddVarArg(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAll(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAll(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInsert(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInsert(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testSet(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testSet(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveRange(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveRange(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAll(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAll(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIndexOf(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIndexOf(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testTrimToSize(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testTrimToSize(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGrowth(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGrowth(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFrom(com.carrotsearch.hppc.CharArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFrom(com.carrotsearch.hppc.CharArrayListTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321174623,
      "startTimestampDate": "2012-01-23T13:19:34.623",
      "executionTime": 49,
      "description": {
        "id": "id#com.carrotsearch.hppc.DoubleArrayListTest[0]",
        "displayName": "com.carrotsearch.hppc.DoubleArrayListTest",
        "className": "com.carrotsearch.hppc.DoubleArrayListTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemove(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testRemoveAllWithPredicateInterrupted",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRelease(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testRelease(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testRelease",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterator(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testIterator(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testIterator",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachWithProcedure(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testForEachWithProcedure(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testForEachWithProcedure",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testHashCodeEqualsWithOtherContainer",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testAdd(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testAdd",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddTwoArgs(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testAddTwoArgs(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testAddTwoArgs",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddArray(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testAddArray(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testAddArray",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddVarArg(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testAddVarArg(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testAddVarArg",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAll(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testAddAll(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testAddAll",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInsert(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testInsert(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testInsert",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testSet(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testSet(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testSet",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveRange(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testRemoveRange(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testRemoveRange",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstLast(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testRemoveFirstLast(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testRemoveFirstLast",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAll(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testRemoveAll(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testRemoveAll",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testRemoveAllFromLookupContainer(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testRemoveAllFromLookupContainer",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testRetainAllWithPredicate(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testRetainAllWithPredicate",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIndexOf(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testIndexOf(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testIndexOf",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLastIndexOf(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testLastIndexOf(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testLastIndexOf",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testEnsureCapacity(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testEnsureCapacity(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testEnsureCapacity",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testResizeAndCleanBuffer(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testResizeAndCleanBuffer",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testTrimToSize(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testTrimToSize(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testTrimToSize",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGrowth(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testGrowth(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testGrowth",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testForEachReturnValueFromAnonymousClass",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFrom(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
            "displayName": "testFrom(com.carrotsearch.hppc.DoubleArrayListTest)",
            "methodName": "testFrom",
            "className": "com.carrotsearch.hppc.DoubleArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321174655,
          "startTimestampDate": "2012-01-23T13:19:34.655",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174655,
          "startTimestampDate": "2012-01-23T13:19:34.655",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174656,
          "startTimestampDate": "2012-01-23T13:19:34.656",
          "executionTime": 0,
          "description": "id#testClear(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174657,
          "startTimestampDate": "2012-01-23T13:19:34.657",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174657,
          "startTimestampDate": "2012-01-23T13:19:34.657",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174657,
          "startTimestampDate": "2012-01-23T13:19:34.657",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174658,
          "startTimestampDate": "2012-01-23T13:19:34.658",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174659,
          "startTimestampDate": "2012-01-23T13:19:34.659",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174659,
          "startTimestampDate": "2012-01-23T13:19:34.659",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174660,
          "startTimestampDate": "2012-01-23T13:19:34.660",
          "executionTime": 0,
          "description": "id#testRelease(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174660,
          "startTimestampDate": "2012-01-23T13:19:34.660",
          "executionTime": 0,
          "description": "id#testIterator(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174661,
          "startTimestampDate": "2012-01-23T13:19:34.661",
          "executionTime": 0,
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174661,
          "startTimestampDate": "2012-01-23T13:19:34.661",
          "executionTime": 0,
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174662,
          "startTimestampDate": "2012-01-23T13:19:34.662",
          "executionTime": 0,
          "description": "id#testAdd(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174662,
          "startTimestampDate": "2012-01-23T13:19:34.662",
          "executionTime": 0,
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174663,
          "startTimestampDate": "2012-01-23T13:19:34.663",
          "executionTime": 0,
          "description": "id#testAddArray(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174663,
          "startTimestampDate": "2012-01-23T13:19:34.663",
          "executionTime": 0,
          "description": "id#testAddVarArg(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174664,
          "startTimestampDate": "2012-01-23T13:19:34.664",
          "executionTime": 0,
          "description": "id#testAddAll(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174664,
          "startTimestampDate": "2012-01-23T13:19:34.664",
          "executionTime": 0,
          "description": "id#testInsert(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174665,
          "startTimestampDate": "2012-01-23T13:19:34.665",
          "executionTime": 0,
          "description": "id#testSet(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174665,
          "startTimestampDate": "2012-01-23T13:19:34.665",
          "executionTime": 0,
          "description": "id#testRemoveRange(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174665,
          "startTimestampDate": "2012-01-23T13:19:34.665",
          "executionTime": 0,
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174666,
          "startTimestampDate": "2012-01-23T13:19:34.666",
          "executionTime": 0,
          "description": "id#testRemoveAll(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174666,
          "startTimestampDate": "2012-01-23T13:19:34.666",
          "executionTime": 0,
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174666,
          "startTimestampDate": "2012-01-23T13:19:34.666",
          "executionTime": 1,
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174668,
          "startTimestampDate": "2012-01-23T13:19:34.668",
          "executionTime": 0,
          "description": "id#testIndexOf(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174669,
          "startTimestampDate": "2012-01-23T13:19:34.669",
          "executionTime": 0,
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174669,
          "startTimestampDate": "2012-01-23T13:19:34.669",
          "executionTime": 0,
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174669,
          "startTimestampDate": "2012-01-23T13:19:34.669",
          "executionTime": 0,
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174670,
          "startTimestampDate": "2012-01-23T13:19:34.670",
          "executionTime": 0,
          "description": "id#testTrimToSize(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174670,
          "startTimestampDate": "2012-01-23T13:19:34.670",
          "executionTime": 0,
          "description": "id#testGrowth(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174671,
          "startTimestampDate": "2012-01-23T13:19:34.671",
          "executionTime": 0,
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174672,
          "startTimestampDate": "2012-01-23T13:19:34.672",
          "executionTime": 0,
          "description": "id#testFrom(com.carrotsearch.hppc.DoubleArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRelease(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRelease(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterator(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterator(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddArray(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddArray(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddVarArg(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddVarArg(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAll(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAll(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInsert(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInsert(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testSet(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testSet(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveRange(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveRange(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAll(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAll(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIndexOf(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIndexOf(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testTrimToSize(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testTrimToSize(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGrowth(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGrowth(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFrom(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFrom(com.carrotsearch.hppc.DoubleArrayListTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321174679,
      "startTimestampDate": "2012-01-23T13:19:34.679",
      "executionTime": 826,
      "description": {
        "id": "id#com.carrotsearch.hppc.KTypeOpenHashSetTest[0]",
        "displayName": "com.carrotsearch.hppc.KTypeOpenHashSetTest",
        "className": "com.carrotsearch.hppc.KTypeOpenHashSetTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemove(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.KTypeOpenHashSetTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.KTypeOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.KTypeOpenHashSetTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.KTypeOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.KTypeOpenHashSetTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.KTypeOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.KTypeOpenHashSetTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.KTypeOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.KTypeOpenHashSetTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.KTypeOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.KTypeOpenHashSetTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.KTypeOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.KTypeOpenHashSetTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.KTypeOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.KTypeOpenHashSetTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.KTypeOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullKey(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
            "displayName": "testNullKey(com.carrotsearch.hppc.KTypeOpenHashSetTest)",
            "methodName": "testNullKey",
            "className": "com.carrotsearch.hppc.KTypeOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.KTypeOpenHashSetTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.KTypeOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeWithNulls(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
            "displayName": "testHashCodeWithNulls(com.carrotsearch.hppc.KTypeOpenHashSetTest)",
            "methodName": "testHashCodeWithNulls",
            "className": "com.carrotsearch.hppc.KTypeOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
            "displayName": "testAdd(com.carrotsearch.hppc.KTypeOpenHashSetTest)",
            "methodName": "testAdd",
            "className": "com.carrotsearch.hppc.KTypeOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAll(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
            "displayName": "testAddAll(com.carrotsearch.hppc.KTypeOpenHashSetTest)",
            "methodName": "testAddAll",
            "className": "com.carrotsearch.hppc.KTypeOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
            "displayName": "testRemoveAllFromLookupContainer(com.carrotsearch.hppc.KTypeOpenHashSetTest)",
            "methodName": "testRemoveAllFromLookupContainer",
            "className": "com.carrotsearch.hppc.KTypeOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
            "displayName": "testRetainAllWithPredicate(com.carrotsearch.hppc.KTypeOpenHashSetTest)",
            "methodName": "testRetainAllWithPredicate",
            "className": "com.carrotsearch.hppc.KTypeOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd2(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
            "displayName": "testAdd2(com.carrotsearch.hppc.KTypeOpenHashSetTest)",
            "methodName": "testAdd2",
            "className": "com.carrotsearch.hppc.KTypeOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddVarArgs(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
            "displayName": "testAddVarArgs(com.carrotsearch.hppc.KTypeOpenHashSetTest)",
            "methodName": "testAddVarArgs",
            "className": "com.carrotsearch.hppc.KTypeOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
            "displayName": "testInitialCapacityAndGrowth(com.carrotsearch.hppc.KTypeOpenHashSetTest)",
            "methodName": "testInitialCapacityAndGrowth",
            "className": "com.carrotsearch.hppc.KTypeOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAgainstHashMap(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
            "displayName": "testAgainstHashMap(com.carrotsearch.hppc.KTypeOpenHashSetTest)",
            "methodName": "testAgainstHashMap",
            "className": "com.carrotsearch.hppc.KTypeOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321174700,
          "startTimestampDate": "2012-01-23T13:19:34.700",
          "executionTime": 1,
          "description": "id#testRemove(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174701,
          "startTimestampDate": "2012-01-23T13:19:34.701",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174702,
          "startTimestampDate": "2012-01-23T13:19:34.702",
          "executionTime": 0,
          "description": "id#testClear(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174703,
          "startTimestampDate": "2012-01-23T13:19:34.703",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174704,
          "startTimestampDate": "2012-01-23T13:19:34.704",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174704,
          "startTimestampDate": "2012-01-23T13:19:34.704",
          "executionTime": 1,
          "description": "id#testClone(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174705,
          "startTimestampDate": "2012-01-23T13:19:34.705",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174705,
          "startTimestampDate": "2012-01-23T13:19:34.705",
          "executionTime": 294,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321174999,
          "startTimestampDate": "2012-01-23T13:19:34.999",
          "executionTime": 0,
          "description": "id#testNullKey(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175000,
          "startTimestampDate": "2012-01-23T13:19:35.000",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175001,
          "startTimestampDate": "2012-01-23T13:19:35.001",
          "executionTime": 0,
          "description": "id#testHashCodeWithNulls(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175001,
          "startTimestampDate": "2012-01-23T13:19:35.001",
          "executionTime": 0,
          "description": "id#testAdd(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175002,
          "startTimestampDate": "2012-01-23T13:19:35.002",
          "executionTime": 0,
          "description": "id#testAddAll(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175003,
          "startTimestampDate": "2012-01-23T13:19:35.003",
          "executionTime": 0,
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175004,
          "startTimestampDate": "2012-01-23T13:19:35.004",
          "executionTime": 1,
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175006,
          "startTimestampDate": "2012-01-23T13:19:35.006",
          "executionTime": 0,
          "description": "id#testAdd2(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175007,
          "startTimestampDate": "2012-01-23T13:19:35.007",
          "executionTime": 0,
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175007,
          "startTimestampDate": "2012-01-23T13:19:35.007",
          "executionTime": 7,
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175015,
          "startTimestampDate": "2012-01-23T13:19:35.015",
          "executionTime": 490,
          "description": "id#testAgainstHashMap(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullKey(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullKey(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeWithNulls(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeWithNulls(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAll(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAll(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd2(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd2(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAgainstHashMap(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAgainstHashMap(com.carrotsearch.hppc.KTypeOpenHashSetTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321175511,
      "startTimestampDate": "2012-01-23T13:19:35.511",
      "executionTime": 224,
      "description": {
        "id": "id#com.carrotsearch.hppc.CharByteOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
        "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.CharByteOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.CharByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321175542,
          "startTimestampDate": "2012-01-23T13:19:35.542",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175544,
          "startTimestampDate": "2012-01-23T13:19:35.544",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175544,
          "startTimestampDate": "2012-01-23T13:19:35.544",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175556,
          "startTimestampDate": "2012-01-23T13:19:35.556",
          "executionTime": 1,
          "description": "id#testLPut(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175557,
          "startTimestampDate": "2012-01-23T13:19:35.557",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175557,
          "startTimestampDate": "2012-01-23T13:19:35.557",
          "executionTime": 63,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175634,
          "startTimestampDate": "2012-01-23T13:19:35.634",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175635,
          "startTimestampDate": "2012-01-23T13:19:35.635",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175641,
          "startTimestampDate": "2012-01-23T13:19:35.641",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175642,
          "startTimestampDate": "2012-01-23T13:19:35.642",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175643,
          "startTimestampDate": "2012-01-23T13:19:35.643",
          "executionTime": 2,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175646,
          "startTimestampDate": "2012-01-23T13:19:35.646",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175649,
          "startTimestampDate": "2012-01-23T13:19:35.649",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175651,
          "startTimestampDate": "2012-01-23T13:19:35.651",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175652,
          "startTimestampDate": "2012-01-23T13:19:35.652",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175654,
          "startTimestampDate": "2012-01-23T13:19:35.654",
          "executionTime": 1,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175656,
          "startTimestampDate": "2012-01-23T13:19:35.656",
          "executionTime": 32,
          "description": "id#testClear(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175701,
          "startTimestampDate": "2012-01-23T13:19:35.701",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175702,
          "startTimestampDate": "2012-01-23T13:19:35.702",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175702,
          "startTimestampDate": "2012-01-23T13:19:35.702",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175703,
          "startTimestampDate": "2012-01-23T13:19:35.703",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175704,
          "startTimestampDate": "2012-01-23T13:19:35.704",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175705,
          "startTimestampDate": "2012-01-23T13:19:35.705",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175705,
          "startTimestampDate": "2012-01-23T13:19:35.705",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175706,
          "startTimestampDate": "2012-01-23T13:19:35.706",
          "executionTime": 3,
          "description": "id#testToString(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharByteOpenHashMapTest.testToString(CharByteOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175718,
          "startTimestampDate": "2012-01-23T13:19:35.718",
          "executionTime": 3,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharByteOpenHashMapTest.testAddRemoveSameHashCollision(CharByteOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175725,
          "startTimestampDate": "2012-01-23T13:19:35.725",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175732,
          "startTimestampDate": "2012-01-23T13:19:35.732",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175733,
          "startTimestampDate": "2012-01-23T13:19:35.733",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharByteOpenHashMapTest.testToString(CharByteOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharByteOpenHashMapTest.testAddRemoveSameHashCollision(CharByteOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharByteOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321175773,
      "startTimestampDate": "2012-01-23T13:19:35.773",
      "executionTime": 180,
      "description": {
        "id": "id#com.carrotsearch.hppc.CharArrayDequeTest[0]",
        "displayName": "com.carrotsearch.hppc.CharArrayDequeTest",
        "className": "com.carrotsearch.hppc.CharArrayDequeTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddFirst(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testAddFirst(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testAddFirst",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddLast(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testAddLast(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testAddLast",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddWithGrowth(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testAddWithGrowth(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testAddWithGrowth",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddLastWithGrowth(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testAddLastWithGrowth(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testAddLastWithGrowth",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllFirst(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testAddAllFirst(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testAddAllFirst",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllLast(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testAddAllLast(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testAddAllLast",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirst(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testRemoveFirst(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testRemoveFirst",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testRemoveFirstEmpty(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testRemoveFirstEmpty",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLast(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testRemoveLast(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testRemoveLast",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLastEmpty(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testRemoveLastEmpty(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testRemoveLastEmpty",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetFirst(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testGetFirst(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testGetFirst",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetFirstEmpty(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testGetFirstEmpty(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testGetFirstEmpty",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetLast(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testGetLast(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testGetLast",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetLastEmpty(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testGetLastEmpty(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testGetLastEmpty",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testRemoveFirstOccurrence(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testRemoveFirstOccurrence",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testRemoveLastOccurrence(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testRemoveLastOccurrence",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testRemoveAllOccurrences(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testRemoveAllOccurrences",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testRemoveAllInLookupContainer(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testRemoveAllInLookupContainer",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testRemoveAllWithPredicateInterrupted",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRelease(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testRelease(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testRelease",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterator(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testIterator(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testIterator",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDescendingIterator(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testDescendingIterator(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testDescendingIterator",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachWithProcedure(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testForEachWithProcedure(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testForEachWithProcedure",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
            "displayName": "testDescendingForEachWithProcedure(com.carrotsearch.hppc.CharArrayDequeTest)",
            "methodName": "testDescendingForEachWithProcedure",
            "className": "com.carrotsearch.hppc.CharArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321175797,
          "startTimestampDate": "2012-01-23T13:19:35.797",
          "executionTime": 17,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175814,
          "startTimestampDate": "2012-01-23T13:19:35.814",
          "executionTime": 3,
          "description": "id#testClear(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175818,
          "startTimestampDate": "2012-01-23T13:19:35.818",
          "executionTime": 36,
          "description": "id#testIterable(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175854,
          "startTimestampDate": "2012-01-23T13:19:35.854",
          "executionTime": 1,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175855,
          "startTimestampDate": "2012-01-23T13:19:35.855",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175855,
          "startTimestampDate": "2012-01-23T13:19:35.855",
          "executionTime": 1,
          "description": "id#testToString(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175856,
          "startTimestampDate": "2012-01-23T13:19:35.856",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175860,
          "startTimestampDate": "2012-01-23T13:19:35.860",
          "executionTime": 0,
          "description": "id#testAddFirst(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175861,
          "startTimestampDate": "2012-01-23T13:19:35.861",
          "executionTime": 0,
          "description": "id#testAddLast(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175862,
          "startTimestampDate": "2012-01-23T13:19:35.862",
          "executionTime": 11,
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175874,
          "startTimestampDate": "2012-01-23T13:19:35.874",
          "executionTime": 5,
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175880,
          "startTimestampDate": "2012-01-23T13:19:35.880",
          "executionTime": 5,
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175886,
          "startTimestampDate": "2012-01-23T13:19:35.886",
          "executionTime": 5,
          "description": "id#testAddAllLast(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175892,
          "startTimestampDate": "2012-01-23T13:19:35.892",
          "executionTime": 0,
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175896,
          "startTimestampDate": "2012-01-23T13:19:35.896",
          "executionTime": 0,
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175897,
          "startTimestampDate": "2012-01-23T13:19:35.897",
          "executionTime": 1,
          "description": "id#testRemoveLast(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175899,
          "startTimestampDate": "2012-01-23T13:19:35.899",
          "executionTime": 0,
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175900,
          "startTimestampDate": "2012-01-23T13:19:35.900",
          "executionTime": 0,
          "description": "id#testGetFirst(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175901,
          "startTimestampDate": "2012-01-23T13:19:35.901",
          "executionTime": 0,
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175902,
          "startTimestampDate": "2012-01-23T13:19:35.902",
          "executionTime": 0,
          "description": "id#testGetLast(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175905,
          "startTimestampDate": "2012-01-23T13:19:35.905",
          "executionTime": 0,
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175906,
          "startTimestampDate": "2012-01-23T13:19:35.906",
          "executionTime": 13,
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175920,
          "startTimestampDate": "2012-01-23T13:19:35.920",
          "executionTime": 9,
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175930,
          "startTimestampDate": "2012-01-23T13:19:35.930",
          "executionTime": 1,
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175932,
          "startTimestampDate": "2012-01-23T13:19:35.932",
          "executionTime": 0,
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175933,
          "startTimestampDate": "2012-01-23T13:19:35.933",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175934,
          "startTimestampDate": "2012-01-23T13:19:35.934",
          "executionTime": 0,
          "description": "id#testRelease(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175934,
          "startTimestampDate": "2012-01-23T13:19:35.934",
          "executionTime": 1,
          "description": "id#testIterator(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175935,
          "startTimestampDate": "2012-01-23T13:19:35.935",
          "executionTime": 7,
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175943,
          "startTimestampDate": "2012-01-23T13:19:35.943",
          "executionTime": 4,
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175948,
          "startTimestampDate": "2012-01-23T13:19:35.948",
          "executionTime": 4,
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.CharArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddFirst(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddFirst(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddLast(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddLast(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllLast(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllLast(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLast(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLast(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetFirst(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetFirst(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetLast(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetLast(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRelease(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRelease(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterator(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterator(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.CharArrayDequeTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321175961,
      "startTimestampDate": "2012-01-23T13:19:35.961",
      "executionTime": 160,
      "description": {
        "id": "id#com.carrotsearch.hppc.FloatDoubleOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
        "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.FloatDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321175972,
          "startTimestampDate": "2012-01-23T13:19:35.972",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175974,
          "startTimestampDate": "2012-01-23T13:19:35.974",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175977,
          "startTimestampDate": "2012-01-23T13:19:35.977",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175977,
          "startTimestampDate": "2012-01-23T13:19:35.977",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175978,
          "startTimestampDate": "2012-01-23T13:19:35.978",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321175978,
          "startTimestampDate": "2012-01-23T13:19:35.978",
          "executionTime": 51,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176029,
          "startTimestampDate": "2012-01-23T13:19:36.029",
          "executionTime": 4,
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176033,
          "startTimestampDate": "2012-01-23T13:19:36.033",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176034,
          "startTimestampDate": "2012-01-23T13:19:36.034",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176034,
          "startTimestampDate": "2012-01-23T13:19:36.034",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176034,
          "startTimestampDate": "2012-01-23T13:19:36.034",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176034,
          "startTimestampDate": "2012-01-23T13:19:36.034",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176036,
          "startTimestampDate": "2012-01-23T13:19:36.036",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176037,
          "startTimestampDate": "2012-01-23T13:19:36.037",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176037,
          "startTimestampDate": "2012-01-23T13:19:36.037",
          "executionTime": 3,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176044,
          "startTimestampDate": "2012-01-23T13:19:36.044",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176045,
          "startTimestampDate": "2012-01-23T13:19:36.045",
          "executionTime": 42,
          "description": "id#testClear(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176088,
          "startTimestampDate": "2012-01-23T13:19:36.088",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176089,
          "startTimestampDate": "2012-01-23T13:19:36.089",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176090,
          "startTimestampDate": "2012-01-23T13:19:36.090",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176090,
          "startTimestampDate": "2012-01-23T13:19:36.090",
          "executionTime": 1,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176091,
          "startTimestampDate": "2012-01-23T13:19:36.091",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176092,
          "startTimestampDate": "2012-01-23T13:19:36.092",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176093,
          "startTimestampDate": "2012-01-23T13:19:36.093",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176107,
          "startTimestampDate": "2012-01-23T13:19:36.107",
          "executionTime": 5,
          "description": "id#testToString(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatDoubleOpenHashMapTest.testToString(FloatDoubleOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176114,
          "startTimestampDate": "2012-01-23T13:19:36.114",
          "executionTime": 3,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatDoubleOpenHashMapTest.testAddRemoveSameHashCollision(FloatDoubleOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176117,
          "startTimestampDate": "2012-01-23T13:19:36.117",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176119,
          "startTimestampDate": "2012-01-23T13:19:36.119",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176120,
          "startTimestampDate": "2012-01-23T13:19:36.120",
          "executionTime": 0,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatDoubleOpenHashMapTest.testToString(FloatDoubleOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatDoubleOpenHashMapTest.testAddRemoveSameHashCollision(FloatDoubleOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatDoubleOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321176156,
      "startTimestampDate": "2012-01-23T13:19:36.156",
      "executionTime": 386,
      "description": {
        "id": "id#com.carrotsearch.hppc.ObjectShortOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullKey(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testNullKey(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testNullKey",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLkey(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
            "displayName": "testLkey(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)",
            "methodName": "testLkey",
            "className": "com.carrotsearch.hppc.ObjectShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321176168,
          "startTimestampDate": "2012-01-23T13:19:36.168",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176171,
          "startTimestampDate": "2012-01-23T13:19:36.171",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176171,
          "startTimestampDate": "2012-01-23T13:19:36.171",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176171,
          "startTimestampDate": "2012-01-23T13:19:36.171",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176172,
          "startTimestampDate": "2012-01-23T13:19:36.172",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176172,
          "startTimestampDate": "2012-01-23T13:19:36.172",
          "executionTime": 59,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176232,
          "startTimestampDate": "2012-01-23T13:19:36.232",
          "executionTime": 4,
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176237,
          "startTimestampDate": "2012-01-23T13:19:36.237",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176238,
          "startTimestampDate": "2012-01-23T13:19:36.238",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176238,
          "startTimestampDate": "2012-01-23T13:19:36.238",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176239,
          "startTimestampDate": "2012-01-23T13:19:36.239",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176239,
          "startTimestampDate": "2012-01-23T13:19:36.239",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176240,
          "startTimestampDate": "2012-01-23T13:19:36.240",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176242,
          "startTimestampDate": "2012-01-23T13:19:36.242",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176243,
          "startTimestampDate": "2012-01-23T13:19:36.243",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176244,
          "startTimestampDate": "2012-01-23T13:19:36.244",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176245,
          "startTimestampDate": "2012-01-23T13:19:36.245",
          "executionTime": 16,
          "description": "id#testClear(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176262,
          "startTimestampDate": "2012-01-23T13:19:36.262",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176263,
          "startTimestampDate": "2012-01-23T13:19:36.263",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176264,
          "startTimestampDate": "2012-01-23T13:19:36.264",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176264,
          "startTimestampDate": "2012-01-23T13:19:36.264",
          "executionTime": 1,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176265,
          "startTimestampDate": "2012-01-23T13:19:36.265",
          "executionTime": 1,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176266,
          "startTimestampDate": "2012-01-23T13:19:36.266",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176267,
          "startTimestampDate": "2012-01-23T13:19:36.267",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176268,
          "startTimestampDate": "2012-01-23T13:19:36.268",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176269,
          "startTimestampDate": "2012-01-23T13:19:36.269",
          "executionTime": 269,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176539,
          "startTimestampDate": "2012-01-23T13:19:36.539",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176540,
          "startTimestampDate": "2012-01-23T13:19:36.540",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176541,
          "startTimestampDate": "2012-01-23T13:19:36.541",
          "executionTime": 0,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176542,
          "startTimestampDate": "2012-01-23T13:19:36.542",
          "executionTime": 0,
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176542,
          "startTimestampDate": "2012-01-23T13:19:36.542",
          "executionTime": 0,
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectShortOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321176548,
      "startTimestampDate": "2012-01-23T13:19:36.548",
      "executionTime": 147,
      "description": {
        "id": "id#com.carrotsearch.hppc.DoubleLongOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
        "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.DoubleLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321176557,
          "startTimestampDate": "2012-01-23T13:19:36.557",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176559,
          "startTimestampDate": "2012-01-23T13:19:36.559",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176559,
          "startTimestampDate": "2012-01-23T13:19:36.559",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176560,
          "startTimestampDate": "2012-01-23T13:19:36.560",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176560,
          "startTimestampDate": "2012-01-23T13:19:36.560",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176560,
          "startTimestampDate": "2012-01-23T13:19:36.560",
          "executionTime": 48,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176609,
          "startTimestampDate": "2012-01-23T13:19:36.609",
          "executionTime": 6,
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176615,
          "startTimestampDate": "2012-01-23T13:19:36.615",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176616,
          "startTimestampDate": "2012-01-23T13:19:36.616",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176616,
          "startTimestampDate": "2012-01-23T13:19:36.616",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176618,
          "startTimestampDate": "2012-01-23T13:19:36.618",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176618,
          "startTimestampDate": "2012-01-23T13:19:36.618",
          "executionTime": 8,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176627,
          "startTimestampDate": "2012-01-23T13:19:36.627",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176628,
          "startTimestampDate": "2012-01-23T13:19:36.628",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176628,
          "startTimestampDate": "2012-01-23T13:19:36.628",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176630,
          "startTimestampDate": "2012-01-23T13:19:36.630",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176630,
          "startTimestampDate": "2012-01-23T13:19:36.630",
          "executionTime": 49,
          "description": "id#testClear(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176680,
          "startTimestampDate": "2012-01-23T13:19:36.680",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176680,
          "startTimestampDate": "2012-01-23T13:19:36.680",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176680,
          "startTimestampDate": "2012-01-23T13:19:36.680",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176681,
          "startTimestampDate": "2012-01-23T13:19:36.681",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176681,
          "startTimestampDate": "2012-01-23T13:19:36.681",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176681,
          "startTimestampDate": "2012-01-23T13:19:36.681",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176681,
          "startTimestampDate": "2012-01-23T13:19:36.681",
          "executionTime": 1,
          "description": "id#testClone(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176682,
          "startTimestampDate": "2012-01-23T13:19:36.682",
          "executionTime": 3,
          "description": "id#testToString(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleLongOpenHashMapTest.testToString(DoubleLongOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176687,
          "startTimestampDate": "2012-01-23T13:19:36.687",
          "executionTime": 3,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleLongOpenHashMapTest.testAddRemoveSameHashCollision(DoubleLongOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176691,
          "startTimestampDate": "2012-01-23T13:19:36.691",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176693,
          "startTimestampDate": "2012-01-23T13:19:36.693",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176694,
          "startTimestampDate": "2012-01-23T13:19:36.694",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleLongOpenHashMapTest.testToString(DoubleLongOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleLongOpenHashMapTest.testAddRemoveSameHashCollision(DoubleLongOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleLongOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321176712,
      "startTimestampDate": "2012-01-23T13:19:36.712",
      "executionTime": 180,
      "description": {
        "id": "id#com.carrotsearch.hppc.LongIntOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
        "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.LongIntOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.LongIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321176738,
          "startTimestampDate": "2012-01-23T13:19:36.738",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176739,
          "startTimestampDate": "2012-01-23T13:19:36.739",
          "executionTime": 1,
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176740,
          "startTimestampDate": "2012-01-23T13:19:36.740",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176740,
          "startTimestampDate": "2012-01-23T13:19:36.740",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176740,
          "startTimestampDate": "2012-01-23T13:19:36.740",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176741,
          "startTimestampDate": "2012-01-23T13:19:36.741",
          "executionTime": 24,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176766,
          "startTimestampDate": "2012-01-23T13:19:36.766",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176767,
          "startTimestampDate": "2012-01-23T13:19:36.767",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176767,
          "startTimestampDate": "2012-01-23T13:19:36.767",
          "executionTime": 1,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176768,
          "startTimestampDate": "2012-01-23T13:19:36.768",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176769,
          "startTimestampDate": "2012-01-23T13:19:36.769",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176769,
          "startTimestampDate": "2012-01-23T13:19:36.769",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176771,
          "startTimestampDate": "2012-01-23T13:19:36.771",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176773,
          "startTimestampDate": "2012-01-23T13:19:36.773",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176773,
          "startTimestampDate": "2012-01-23T13:19:36.773",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176775,
          "startTimestampDate": "2012-01-23T13:19:36.775",
          "executionTime": 1,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176776,
          "startTimestampDate": "2012-01-23T13:19:36.776",
          "executionTime": 14,
          "description": "id#testClear(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176791,
          "startTimestampDate": "2012-01-23T13:19:36.791",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176792,
          "startTimestampDate": "2012-01-23T13:19:36.792",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176793,
          "startTimestampDate": "2012-01-23T13:19:36.793",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176793,
          "startTimestampDate": "2012-01-23T13:19:36.793",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176794,
          "startTimestampDate": "2012-01-23T13:19:36.794",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176795,
          "startTimestampDate": "2012-01-23T13:19:36.795",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176795,
          "startTimestampDate": "2012-01-23T13:19:36.795",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176796,
          "startTimestampDate": "2012-01-23T13:19:36.796",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176797,
          "startTimestampDate": "2012-01-23T13:19:36.797",
          "executionTime": 92,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176889,
          "startTimestampDate": "2012-01-23T13:19:36.889",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176891,
          "startTimestampDate": "2012-01-23T13:19:36.891",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176891,
          "startTimestampDate": "2012-01-23T13:19:36.891",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongIntOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321176898,
      "startTimestampDate": "2012-01-23T13:19:36.898",
      "executionTime": 81,
      "description": {
        "id": "id#com.carrotsearch.hppc.ByteByteOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ByteByteOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ByteByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321176906,
          "startTimestampDate": "2012-01-23T13:19:36.906",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176908,
          "startTimestampDate": "2012-01-23T13:19:36.908",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176909,
          "startTimestampDate": "2012-01-23T13:19:36.909",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176909,
          "startTimestampDate": "2012-01-23T13:19:36.909",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176909,
          "startTimestampDate": "2012-01-23T13:19:36.909",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176917,
          "startTimestampDate": "2012-01-23T13:19:36.917",
          "executionTime": 23,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176940,
          "startTimestampDate": "2012-01-23T13:19:36.940",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176940,
          "startTimestampDate": "2012-01-23T13:19:36.940",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176943,
          "startTimestampDate": "2012-01-23T13:19:36.943",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176945,
          "startTimestampDate": "2012-01-23T13:19:36.945",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176948,
          "startTimestampDate": "2012-01-23T13:19:36.948",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176949,
          "startTimestampDate": "2012-01-23T13:19:36.949",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176949,
          "startTimestampDate": "2012-01-23T13:19:36.949",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176951,
          "startTimestampDate": "2012-01-23T13:19:36.951",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176951,
          "startTimestampDate": "2012-01-23T13:19:36.951",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176952,
          "startTimestampDate": "2012-01-23T13:19:36.952",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176953,
          "startTimestampDate": "2012-01-23T13:19:36.953",
          "executionTime": 11,
          "description": "id#testClear(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176964,
          "startTimestampDate": "2012-01-23T13:19:36.964",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176965,
          "startTimestampDate": "2012-01-23T13:19:36.965",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176966,
          "startTimestampDate": "2012-01-23T13:19:36.966",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176967,
          "startTimestampDate": "2012-01-23T13:19:36.967",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176967,
          "startTimestampDate": "2012-01-23T13:19:36.967",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176968,
          "startTimestampDate": "2012-01-23T13:19:36.968",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176969,
          "startTimestampDate": "2012-01-23T13:19:36.969",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176969,
          "startTimestampDate": "2012-01-23T13:19:36.969",
          "executionTime": 1,
          "description": "id#testToString(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176970,
          "startTimestampDate": "2012-01-23T13:19:36.970",
          "executionTime": 3,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteByteOpenHashMapTest.testAddRemoveSameHashCollision(ByteByteOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176975,
          "startTimestampDate": "2012-01-23T13:19:36.975",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176977,
          "startTimestampDate": "2012-01-23T13:19:36.977",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321176977,
          "startTimestampDate": "2012-01-23T13:19:36.977",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteByteOpenHashMapTest.testAddRemoveSameHashCollision(ByteByteOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteByteOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321176993,
      "startTimestampDate": "2012-01-23T13:19:36.993",
      "executionTime": 61,
      "description": {
        "id": "id#com.carrotsearch.hppc.CharOpenHashSetTest[0]",
        "displayName": "com.carrotsearch.hppc.CharOpenHashSetTest",
        "className": "com.carrotsearch.hppc.CharOpenHashSetTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemove(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.CharOpenHashSetTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.CharOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.CharOpenHashSetTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.CharOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.CharOpenHashSetTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.CharOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.CharOpenHashSetTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.CharOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.CharOpenHashSetTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.CharOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.CharOpenHashSetTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.CharOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.CharOpenHashSetTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.CharOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharOpenHashSetTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.CharOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.CharOpenHashSetTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.CharOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
            "displayName": "testAdd(com.carrotsearch.hppc.CharOpenHashSetTest)",
            "methodName": "testAdd",
            "className": "com.carrotsearch.hppc.CharOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAll(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
            "displayName": "testAddAll(com.carrotsearch.hppc.CharOpenHashSetTest)",
            "methodName": "testAddAll",
            "className": "com.carrotsearch.hppc.CharOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
            "displayName": "testRemoveAllFromLookupContainer(com.carrotsearch.hppc.CharOpenHashSetTest)",
            "methodName": "testRemoveAllFromLookupContainer",
            "className": "com.carrotsearch.hppc.CharOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
            "displayName": "testRetainAllWithPredicate(com.carrotsearch.hppc.CharOpenHashSetTest)",
            "methodName": "testRetainAllWithPredicate",
            "className": "com.carrotsearch.hppc.CharOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd2(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
            "displayName": "testAdd2(com.carrotsearch.hppc.CharOpenHashSetTest)",
            "methodName": "testAdd2",
            "className": "com.carrotsearch.hppc.CharOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddVarArgs(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
            "displayName": "testAddVarArgs(com.carrotsearch.hppc.CharOpenHashSetTest)",
            "methodName": "testAddVarArgs",
            "className": "com.carrotsearch.hppc.CharOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
            "displayName": "testInitialCapacityAndGrowth(com.carrotsearch.hppc.CharOpenHashSetTest)",
            "methodName": "testInitialCapacityAndGrowth",
            "className": "com.carrotsearch.hppc.CharOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321177007,
          "startTimestampDate": "2012-01-23T13:19:37.007",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177007,
          "startTimestampDate": "2012-01-23T13:19:37.007",
          "executionTime": 11,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177019,
          "startTimestampDate": "2012-01-23T13:19:37.019",
          "executionTime": 0,
          "description": "id#testClear(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177019,
          "startTimestampDate": "2012-01-23T13:19:37.019",
          "executionTime": 1,
          "description": "id#testIterable(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177020,
          "startTimestampDate": "2012-01-23T13:19:37.020",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177020,
          "startTimestampDate": "2012-01-23T13:19:37.020",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177021,
          "startTimestampDate": "2012-01-23T13:19:37.021",
          "executionTime": 9,
          "description": "id#testToString(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharOpenHashSetTest.testToString(CharOpenHashSetTest.java:315)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177030,
          "startTimestampDate": "2012-01-23T13:19:37.030",
          "executionTime": 5,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharOpenHashSetTest.testAddRemoveSameHashCollision(CharOpenHashSetTest.java:55)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177035,
          "startTimestampDate": "2012-01-23T13:19:37.035",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177035,
          "startTimestampDate": "2012-01-23T13:19:37.035",
          "executionTime": 0,
          "description": "id#testAdd(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177035,
          "startTimestampDate": "2012-01-23T13:19:37.035",
          "executionTime": 0,
          "description": "id#testAddAll(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177036,
          "startTimestampDate": "2012-01-23T13:19:37.036",
          "executionTime": 0,
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177036,
          "startTimestampDate": "2012-01-23T13:19:37.036",
          "executionTime": 1,
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177037,
          "startTimestampDate": "2012-01-23T13:19:37.037",
          "executionTime": 0,
          "description": "id#testAdd2(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177037,
          "startTimestampDate": "2012-01-23T13:19:37.037",
          "executionTime": 0,
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177038,
          "startTimestampDate": "2012-01-23T13:19:37.038",
          "executionTime": 15,
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharOpenHashSetTest.testToString(CharOpenHashSetTest.java:315)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharOpenHashSetTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharOpenHashSetTest.testAddRemoveSameHashCollision(CharOpenHashSetTest.java:55)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAll(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAll(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd2(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd2(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.CharOpenHashSetTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321177075,
      "startTimestampDate": "2012-01-23T13:19:37.075",
      "executionTime": 138,
      "description": {
        "id": "id#com.carrotsearch.hppc.CharShortOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
        "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.CharShortOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.CharShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321177109,
          "startTimestampDate": "2012-01-23T13:19:37.109",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177118,
          "startTimestampDate": "2012-01-23T13:19:37.118",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177118,
          "startTimestampDate": "2012-01-23T13:19:37.118",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177119,
          "startTimestampDate": "2012-01-23T13:19:37.119",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177119,
          "startTimestampDate": "2012-01-23T13:19:37.119",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177119,
          "startTimestampDate": "2012-01-23T13:19:37.119",
          "executionTime": 29,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177149,
          "startTimestampDate": "2012-01-23T13:19:37.149",
          "executionTime": 4,
          "description": "id#testPutAll(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177154,
          "startTimestampDate": "2012-01-23T13:19:37.154",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177154,
          "startTimestampDate": "2012-01-23T13:19:37.154",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177155,
          "startTimestampDate": "2012-01-23T13:19:37.155",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177156,
          "startTimestampDate": "2012-01-23T13:19:37.156",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177156,
          "startTimestampDate": "2012-01-23T13:19:37.156",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177158,
          "startTimestampDate": "2012-01-23T13:19:37.158",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177159,
          "startTimestampDate": "2012-01-23T13:19:37.159",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177160,
          "startTimestampDate": "2012-01-23T13:19:37.160",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177161,
          "startTimestampDate": "2012-01-23T13:19:37.161",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177161,
          "startTimestampDate": "2012-01-23T13:19:37.161",
          "executionTime": 24,
          "description": "id#testClear(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177186,
          "startTimestampDate": "2012-01-23T13:19:37.186",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177186,
          "startTimestampDate": "2012-01-23T13:19:37.186",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177187,
          "startTimestampDate": "2012-01-23T13:19:37.187",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177188,
          "startTimestampDate": "2012-01-23T13:19:37.188",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177188,
          "startTimestampDate": "2012-01-23T13:19:37.188",
          "executionTime": 1,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177189,
          "startTimestampDate": "2012-01-23T13:19:37.189",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177190,
          "startTimestampDate": "2012-01-23T13:19:37.190",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177190,
          "startTimestampDate": "2012-01-23T13:19:37.190",
          "executionTime": 4,
          "description": "id#testToString(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharShortOpenHashMapTest.testToString(CharShortOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177195,
          "startTimestampDate": "2012-01-23T13:19:37.195",
          "executionTime": 3,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharShortOpenHashMapTest.testAddRemoveSameHashCollision(CharShortOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177199,
          "startTimestampDate": "2012-01-23T13:19:37.199",
          "executionTime": 2,
          "description": "id#testMapValues(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177201,
          "startTimestampDate": "2012-01-23T13:19:37.201",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177202,
          "startTimestampDate": "2012-01-23T13:19:37.202",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharShortOpenHashMapTest.testToString(CharShortOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharShortOpenHashMapTest.testAddRemoveSameHashCollision(CharShortOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharShortOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321177230,
      "startTimestampDate": "2012-01-23T13:19:37.230",
      "executionTime": 257,
      "description": {
        "id": "id#com.carrotsearch.hppc.IntCharOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
        "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.IntCharOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.IntCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321177239,
          "startTimestampDate": "2012-01-23T13:19:37.239",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177241,
          "startTimestampDate": "2012-01-23T13:19:37.241",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177241,
          "startTimestampDate": "2012-01-23T13:19:37.241",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177242,
          "startTimestampDate": "2012-01-23T13:19:37.242",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177242,
          "startTimestampDate": "2012-01-23T13:19:37.242",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177243,
          "startTimestampDate": "2012-01-23T13:19:37.243",
          "executionTime": 39,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177283,
          "startTimestampDate": "2012-01-23T13:19:37.283",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177284,
          "startTimestampDate": "2012-01-23T13:19:37.284",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177284,
          "startTimestampDate": "2012-01-23T13:19:37.284",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177285,
          "startTimestampDate": "2012-01-23T13:19:37.285",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177287,
          "startTimestampDate": "2012-01-23T13:19:37.287",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177287,
          "startTimestampDate": "2012-01-23T13:19:37.287",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177288,
          "startTimestampDate": "2012-01-23T13:19:37.288",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177289,
          "startTimestampDate": "2012-01-23T13:19:37.289",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177289,
          "startTimestampDate": "2012-01-23T13:19:37.289",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177290,
          "startTimestampDate": "2012-01-23T13:19:37.290",
          "executionTime": 1,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177291,
          "startTimestampDate": "2012-01-23T13:19:37.291",
          "executionTime": 13,
          "description": "id#testClear(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177305,
          "startTimestampDate": "2012-01-23T13:19:37.305",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177306,
          "startTimestampDate": "2012-01-23T13:19:37.306",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177307,
          "startTimestampDate": "2012-01-23T13:19:37.307",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177307,
          "startTimestampDate": "2012-01-23T13:19:37.307",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177308,
          "startTimestampDate": "2012-01-23T13:19:37.308",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177309,
          "startTimestampDate": "2012-01-23T13:19:37.309",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177310,
          "startTimestampDate": "2012-01-23T13:19:37.310",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177310,
          "startTimestampDate": "2012-01-23T13:19:37.310",
          "executionTime": 4,
          "description": "id#testToString(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.IntCharOpenHashMapTest.testToString(IntCharOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177315,
          "startTimestampDate": "2012-01-23T13:19:37.315",
          "executionTime": 169,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177484,
          "startTimestampDate": "2012-01-23T13:19:37.484",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177486,
          "startTimestampDate": "2012-01-23T13:19:37.486",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177486,
          "startTimestampDate": "2012-01-23T13:19:37.486",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.IntCharOpenHashMapTest.testToString(IntCharOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntCharOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321177492,
      "startTimestampDate": "2012-01-23T13:19:37.492",
      "executionTime": 93,
      "description": {
        "id": "id#com.carrotsearch.hppc.FloatIntOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
        "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.FloatIntOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.FloatIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321177507,
          "startTimestampDate": "2012-01-23T13:19:37.507",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177509,
          "startTimestampDate": "2012-01-23T13:19:37.509",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177509,
          "startTimestampDate": "2012-01-23T13:19:37.509",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177509,
          "startTimestampDate": "2012-01-23T13:19:37.509",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177510,
          "startTimestampDate": "2012-01-23T13:19:37.510",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177510,
          "startTimestampDate": "2012-01-23T13:19:37.510",
          "executionTime": 32,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177543,
          "startTimestampDate": "2012-01-23T13:19:37.543",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177544,
          "startTimestampDate": "2012-01-23T13:19:37.544",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177545,
          "startTimestampDate": "2012-01-23T13:19:37.545",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177546,
          "startTimestampDate": "2012-01-23T13:19:37.546",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177546,
          "startTimestampDate": "2012-01-23T13:19:37.546",
          "executionTime": 1,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177547,
          "startTimestampDate": "2012-01-23T13:19:37.547",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177549,
          "startTimestampDate": "2012-01-23T13:19:37.549",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177550,
          "startTimestampDate": "2012-01-23T13:19:37.550",
          "executionTime": 1,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177551,
          "startTimestampDate": "2012-01-23T13:19:37.551",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177552,
          "startTimestampDate": "2012-01-23T13:19:37.552",
          "executionTime": 1,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177554,
          "startTimestampDate": "2012-01-23T13:19:37.554",
          "executionTime": 12,
          "description": "id#testClear(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177567,
          "startTimestampDate": "2012-01-23T13:19:37.567",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177568,
          "startTimestampDate": "2012-01-23T13:19:37.568",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177569,
          "startTimestampDate": "2012-01-23T13:19:37.569",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177569,
          "startTimestampDate": "2012-01-23T13:19:37.569",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177570,
          "startTimestampDate": "2012-01-23T13:19:37.570",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177571,
          "startTimestampDate": "2012-01-23T13:19:37.571",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177571,
          "startTimestampDate": "2012-01-23T13:19:37.571",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177572,
          "startTimestampDate": "2012-01-23T13:19:37.572",
          "executionTime": 3,
          "description": "id#testToString(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatIntOpenHashMapTest.testToString(FloatIntOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177577,
          "startTimestampDate": "2012-01-23T13:19:37.577",
          "executionTime": 3,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatIntOpenHashMapTest.testAddRemoveSameHashCollision(FloatIntOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177581,
          "startTimestampDate": "2012-01-23T13:19:37.581",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177583,
          "startTimestampDate": "2012-01-23T13:19:37.583",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177584,
          "startTimestampDate": "2012-01-23T13:19:37.584",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatIntOpenHashMapTest.testToString(FloatIntOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatIntOpenHashMapTest.testAddRemoveSameHashCollision(FloatIntOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatIntOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321177606,
      "startTimestampDate": "2012-01-23T13:19:37.606",
      "executionTime": 954,
      "description": {
        "id": "id#com.carrotsearch.hppc.ObjectObjectOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullKey(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testNullKey(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testNullKey",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLkey(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testLkey(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testLkey",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullValue(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testNullValue(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testNullValue",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAgainstHashMap(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
            "displayName": "testAgainstHashMap(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)",
            "methodName": "testAgainstHashMap",
            "className": "com.carrotsearch.hppc.ObjectObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321177638,
          "startTimestampDate": "2012-01-23T13:19:37.638",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177639,
          "startTimestampDate": "2012-01-23T13:19:37.639",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177640,
          "startTimestampDate": "2012-01-23T13:19:37.640",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177640,
          "startTimestampDate": "2012-01-23T13:19:37.640",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177640,
          "startTimestampDate": "2012-01-23T13:19:37.640",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177640,
          "startTimestampDate": "2012-01-23T13:19:37.640",
          "executionTime": 81,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177722,
          "startTimestampDate": "2012-01-23T13:19:37.722",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177722,
          "startTimestampDate": "2012-01-23T13:19:37.722",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177723,
          "startTimestampDate": "2012-01-23T13:19:37.723",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177723,
          "startTimestampDate": "2012-01-23T13:19:37.723",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177724,
          "startTimestampDate": "2012-01-23T13:19:37.724",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177725,
          "startTimestampDate": "2012-01-23T13:19:37.725",
          "executionTime": 2,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177727,
          "startTimestampDate": "2012-01-23T13:19:37.727",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177728,
          "startTimestampDate": "2012-01-23T13:19:37.728",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177730,
          "startTimestampDate": "2012-01-23T13:19:37.730",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177731,
          "startTimestampDate": "2012-01-23T13:19:37.731",
          "executionTime": 16,
          "description": "id#testClear(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177748,
          "startTimestampDate": "2012-01-23T13:19:37.748",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177749,
          "startTimestampDate": "2012-01-23T13:19:37.749",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177750,
          "startTimestampDate": "2012-01-23T13:19:37.750",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177751,
          "startTimestampDate": "2012-01-23T13:19:37.751",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177752,
          "startTimestampDate": "2012-01-23T13:19:37.752",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177752,
          "startTimestampDate": "2012-01-23T13:19:37.752",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177753,
          "startTimestampDate": "2012-01-23T13:19:37.753",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177753,
          "startTimestampDate": "2012-01-23T13:19:37.753",
          "executionTime": 1,
          "description": "id#testToString(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321177754,
          "startTimestampDate": "2012-01-23T13:19:37.754",
          "executionTime": 351,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178105,
          "startTimestampDate": "2012-01-23T13:19:38.105",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178107,
          "startTimestampDate": "2012-01-23T13:19:38.107",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178107,
          "startTimestampDate": "2012-01-23T13:19:38.107",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178109,
          "startTimestampDate": "2012-01-23T13:19:38.109",
          "executionTime": 0,
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178109,
          "startTimestampDate": "2012-01-23T13:19:38.109",
          "executionTime": 0,
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178110,
          "startTimestampDate": "2012-01-23T13:19:38.110",
          "executionTime": 0,
          "description": "id#testNullValue(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178110,
          "startTimestampDate": "2012-01-23T13:19:38.110",
          "executionTime": 449,
          "description": "id#testAgainstHashMap(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullValue(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullValue(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAgainstHashMap(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAgainstHashMap(com.carrotsearch.hppc.ObjectObjectOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321178585,
      "startTimestampDate": "2012-01-23T13:19:38.585",
      "executionTime": 134,
      "description": {
        "id": "id#com.carrotsearch.hppc.ByteLongOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ByteLongOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ByteLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321178605,
          "startTimestampDate": "2012-01-23T13:19:38.605",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178607,
          "startTimestampDate": "2012-01-23T13:19:38.607",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178607,
          "startTimestampDate": "2012-01-23T13:19:38.607",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178608,
          "startTimestampDate": "2012-01-23T13:19:38.608",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178608,
          "startTimestampDate": "2012-01-23T13:19:38.608",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178608,
          "startTimestampDate": "2012-01-23T13:19:38.608",
          "executionTime": 23,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178632,
          "startTimestampDate": "2012-01-23T13:19:38.632",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178632,
          "startTimestampDate": "2012-01-23T13:19:38.632",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178632,
          "startTimestampDate": "2012-01-23T13:19:38.632",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178633,
          "startTimestampDate": "2012-01-23T13:19:38.633",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178641,
          "startTimestampDate": "2012-01-23T13:19:38.641",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178641,
          "startTimestampDate": "2012-01-23T13:19:38.641",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178642,
          "startTimestampDate": "2012-01-23T13:19:38.642",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178643,
          "startTimestampDate": "2012-01-23T13:19:38.643",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178644,
          "startTimestampDate": "2012-01-23T13:19:38.644",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178645,
          "startTimestampDate": "2012-01-23T13:19:38.645",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178645,
          "startTimestampDate": "2012-01-23T13:19:38.645",
          "executionTime": 47,
          "description": "id#testClear(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178692,
          "startTimestampDate": "2012-01-23T13:19:38.692",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178693,
          "startTimestampDate": "2012-01-23T13:19:38.693",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178693,
          "startTimestampDate": "2012-01-23T13:19:38.693",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178693,
          "startTimestampDate": "2012-01-23T13:19:38.693",
          "executionTime": 1,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178694,
          "startTimestampDate": "2012-01-23T13:19:38.694",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178694,
          "startTimestampDate": "2012-01-23T13:19:38.694",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178694,
          "startTimestampDate": "2012-01-23T13:19:38.694",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178695,
          "startTimestampDate": "2012-01-23T13:19:38.695",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178695,
          "startTimestampDate": "2012-01-23T13:19:38.695",
          "executionTime": 11,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteLongOpenHashMapTest.testAddRemoveSameHashCollision(ByteLongOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178707,
          "startTimestampDate": "2012-01-23T13:19:38.707",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178717,
          "startTimestampDate": "2012-01-23T13:19:38.717",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178717,
          "startTimestampDate": "2012-01-23T13:19:38.717",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteLongOpenHashMapTest.testAddRemoveSameHashCollision(ByteLongOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteLongOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321178743,
      "startTimestampDate": "2012-01-23T13:19:38.743",
      "executionTime": 280,
      "description": {
        "id": "id#com.carrotsearch.hppc.LongCharOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
        "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.LongCharOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.LongCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321178775,
          "startTimestampDate": "2012-01-23T13:19:38.775",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178777,
          "startTimestampDate": "2012-01-23T13:19:38.777",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178777,
          "startTimestampDate": "2012-01-23T13:19:38.777",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178777,
          "startTimestampDate": "2012-01-23T13:19:38.777",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178777,
          "startTimestampDate": "2012-01-23T13:19:38.777",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178778,
          "startTimestampDate": "2012-01-23T13:19:38.778",
          "executionTime": 50,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178844,
          "startTimestampDate": "2012-01-23T13:19:38.844",
          "executionTime": 3,
          "description": "id#testPutAll(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178848,
          "startTimestampDate": "2012-01-23T13:19:38.848",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178849,
          "startTimestampDate": "2012-01-23T13:19:38.849",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178849,
          "startTimestampDate": "2012-01-23T13:19:38.849",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178850,
          "startTimestampDate": "2012-01-23T13:19:38.850",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178851,
          "startTimestampDate": "2012-01-23T13:19:38.851",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178852,
          "startTimestampDate": "2012-01-23T13:19:38.852",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178854,
          "startTimestampDate": "2012-01-23T13:19:38.854",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178854,
          "startTimestampDate": "2012-01-23T13:19:38.854",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178856,
          "startTimestampDate": "2012-01-23T13:19:38.856",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178857,
          "startTimestampDate": "2012-01-23T13:19:38.857",
          "executionTime": 27,
          "description": "id#testClear(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178893,
          "startTimestampDate": "2012-01-23T13:19:38.893",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178893,
          "startTimestampDate": "2012-01-23T13:19:38.893",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178894,
          "startTimestampDate": "2012-01-23T13:19:38.894",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178895,
          "startTimestampDate": "2012-01-23T13:19:38.895",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178895,
          "startTimestampDate": "2012-01-23T13:19:38.895",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178896,
          "startTimestampDate": "2012-01-23T13:19:38.896",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178897,
          "startTimestampDate": "2012-01-23T13:19:38.897",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178897,
          "startTimestampDate": "2012-01-23T13:19:38.897",
          "executionTime": 3,
          "description": "id#testToString(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.LongCharOpenHashMapTest.testToString(LongCharOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321178909,
          "startTimestampDate": "2012-01-23T13:19:38.909",
          "executionTime": 109,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321179019,
          "startTimestampDate": "2012-01-23T13:19:39.019",
          "executionTime": 2,
          "description": "id#testMapValues(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321179021,
          "startTimestampDate": "2012-01-23T13:19:39.021",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321179022,
          "startTimestampDate": "2012-01-23T13:19:39.022",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.LongCharOpenHashMapTest.testToString(LongCharOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongCharOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321179035,
      "startTimestampDate": "2012-01-23T13:19:39.035",
      "executionTime": 225,
      "description": {
        "id": "id#com.carrotsearch.hppc.IntOpenHashSetTest[0]",
        "displayName": "com.carrotsearch.hppc.IntOpenHashSetTest",
        "className": "com.carrotsearch.hppc.IntOpenHashSetTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemove(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.IntOpenHashSetTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.IntOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.IntOpenHashSetTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.IntOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.IntOpenHashSetTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.IntOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.IntOpenHashSetTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.IntOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.IntOpenHashSetTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.IntOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.IntOpenHashSetTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.IntOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.IntOpenHashSetTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.IntOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntOpenHashSetTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.IntOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.IntOpenHashSetTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.IntOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
            "displayName": "testAdd(com.carrotsearch.hppc.IntOpenHashSetTest)",
            "methodName": "testAdd",
            "className": "com.carrotsearch.hppc.IntOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAll(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
            "displayName": "testAddAll(com.carrotsearch.hppc.IntOpenHashSetTest)",
            "methodName": "testAddAll",
            "className": "com.carrotsearch.hppc.IntOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
            "displayName": "testRemoveAllFromLookupContainer(com.carrotsearch.hppc.IntOpenHashSetTest)",
            "methodName": "testRemoveAllFromLookupContainer",
            "className": "com.carrotsearch.hppc.IntOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
            "displayName": "testRetainAllWithPredicate(com.carrotsearch.hppc.IntOpenHashSetTest)",
            "methodName": "testRetainAllWithPredicate",
            "className": "com.carrotsearch.hppc.IntOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd2(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
            "displayName": "testAdd2(com.carrotsearch.hppc.IntOpenHashSetTest)",
            "methodName": "testAdd2",
            "className": "com.carrotsearch.hppc.IntOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddVarArgs(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
            "displayName": "testAddVarArgs(com.carrotsearch.hppc.IntOpenHashSetTest)",
            "methodName": "testAddVarArgs",
            "className": "com.carrotsearch.hppc.IntOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
            "displayName": "testInitialCapacityAndGrowth(com.carrotsearch.hppc.IntOpenHashSetTest)",
            "methodName": "testInitialCapacityAndGrowth",
            "className": "com.carrotsearch.hppc.IntOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321179039,
          "startTimestampDate": "2012-01-23T13:19:39.039",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321179040,
          "startTimestampDate": "2012-01-23T13:19:39.040",
          "executionTime": 8,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321179049,
          "startTimestampDate": "2012-01-23T13:19:39.049",
          "executionTime": 0,
          "description": "id#testClear(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321179049,
          "startTimestampDate": "2012-01-23T13:19:39.049",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321179049,
          "startTimestampDate": "2012-01-23T13:19:39.049",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321179050,
          "startTimestampDate": "2012-01-23T13:19:39.050",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321179050,
          "startTimestampDate": "2012-01-23T13:19:39.050",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321179050,
          "startTimestampDate": "2012-01-23T13:19:39.050",
          "executionTime": 184,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321179235,
          "startTimestampDate": "2012-01-23T13:19:39.235",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321179235,
          "startTimestampDate": "2012-01-23T13:19:39.235",
          "executionTime": 0,
          "description": "id#testAdd(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321179236,
          "startTimestampDate": "2012-01-23T13:19:39.236",
          "executionTime": 0,
          "description": "id#testAddAll(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321179237,
          "startTimestampDate": "2012-01-23T13:19:39.237",
          "executionTime": 0,
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321179238,
          "startTimestampDate": "2012-01-23T13:19:39.238",
          "executionTime": 1,
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321179240,
          "startTimestampDate": "2012-01-23T13:19:39.240",
          "executionTime": 0,
          "description": "id#testAdd2(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321179240,
          "startTimestampDate": "2012-01-23T13:19:39.240",
          "executionTime": 0,
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321179241,
          "startTimestampDate": "2012-01-23T13:19:39.241",
          "executionTime": 15,
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.IntOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAll(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAll(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd2(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd2(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.IntOpenHashSetTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321179289,
      "startTimestampDate": "2012-01-23T13:19:39.289",
      "executionTime": 1104,
      "description": {
        "id": "id#com.carrotsearch.hppc.XorShiftRandomTest[0]",
        "displayName": "com.carrotsearch.hppc.XorShiftRandomTest",
        "className": "com.carrotsearch.hppc.XorShiftRandomTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testApproxEqualBucketFill(com.carrotsearch.hppc.XorShiftRandomTest)[1]",
            "displayName": "testApproxEqualBucketFill(com.carrotsearch.hppc.XorShiftRandomTest)",
            "methodName": "testApproxEqualBucketFill",
            "className": "com.carrotsearch.hppc.XorShiftRandomTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321179290,
          "startTimestampDate": "2012-01-23T13:19:39.290",
          "executionTime": 1102,
          "description": "id#testApproxEqualBucketFill(com.carrotsearch.hppc.XorShiftRandomTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testApproxEqualBucketFill(com.carrotsearch.hppc.XorShiftRandomTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testApproxEqualBucketFill(com.carrotsearch.hppc.XorShiftRandomTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321180398,
      "startTimestampDate": "2012-01-23T13:19:40.398",
      "executionTime": 88,
      "description": {
        "id": "id#com.carrotsearch.hppc.ShortIntOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ShortIntOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ShortIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321180409,
          "startTimestampDate": "2012-01-23T13:19:40.409",
          "executionTime": 3,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180413,
          "startTimestampDate": "2012-01-23T13:19:40.413",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180413,
          "startTimestampDate": "2012-01-23T13:19:40.413",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180413,
          "startTimestampDate": "2012-01-23T13:19:40.413",
          "executionTime": 1,
          "description": "id#testLPut(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180414,
          "startTimestampDate": "2012-01-23T13:19:40.414",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180414,
          "startTimestampDate": "2012-01-23T13:19:40.414",
          "executionTime": 33,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180448,
          "startTimestampDate": "2012-01-23T13:19:40.448",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180449,
          "startTimestampDate": "2012-01-23T13:19:40.449",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180450,
          "startTimestampDate": "2012-01-23T13:19:40.450",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180451,
          "startTimestampDate": "2012-01-23T13:19:40.451",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180451,
          "startTimestampDate": "2012-01-23T13:19:40.451",
          "executionTime": 1,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180452,
          "startTimestampDate": "2012-01-23T13:19:40.452",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180454,
          "startTimestampDate": "2012-01-23T13:19:40.454",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180456,
          "startTimestampDate": "2012-01-23T13:19:40.456",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180457,
          "startTimestampDate": "2012-01-23T13:19:40.457",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180458,
          "startTimestampDate": "2012-01-23T13:19:40.458",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180458,
          "startTimestampDate": "2012-01-23T13:19:40.458",
          "executionTime": 13,
          "description": "id#testClear(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180472,
          "startTimestampDate": "2012-01-23T13:19:40.472",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180473,
          "startTimestampDate": "2012-01-23T13:19:40.473",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180474,
          "startTimestampDate": "2012-01-23T13:19:40.474",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180474,
          "startTimestampDate": "2012-01-23T13:19:40.474",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180475,
          "startTimestampDate": "2012-01-23T13:19:40.475",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180476,
          "startTimestampDate": "2012-01-23T13:19:40.476",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180476,
          "startTimestampDate": "2012-01-23T13:19:40.476",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180477,
          "startTimestampDate": "2012-01-23T13:19:40.477",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180478,
          "startTimestampDate": "2012-01-23T13:19:40.478",
          "executionTime": 2,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortIntOpenHashMapTest.testAddRemoveSameHashCollision(ShortIntOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180482,
          "startTimestampDate": "2012-01-23T13:19:40.482",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180484,
          "startTimestampDate": "2012-01-23T13:19:40.484",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180484,
          "startTimestampDate": "2012-01-23T13:19:40.484",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortIntOpenHashMapTest.testAddRemoveSameHashCollision(ShortIntOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortIntOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321180507,
      "startTimestampDate": "2012-01-23T13:19:40.507",
      "executionTime": 142,
      "description": {
        "id": "id#com.carrotsearch.hppc.ShortShortOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ShortShortOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ShortShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321180537,
          "startTimestampDate": "2012-01-23T13:19:40.537",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180538,
          "startTimestampDate": "2012-01-23T13:19:40.538",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180539,
          "startTimestampDate": "2012-01-23T13:19:40.539",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180539,
          "startTimestampDate": "2012-01-23T13:19:40.539",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180539,
          "startTimestampDate": "2012-01-23T13:19:40.539",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180539,
          "startTimestampDate": "2012-01-23T13:19:40.539",
          "executionTime": 55,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180595,
          "startTimestampDate": "2012-01-23T13:19:40.595",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180596,
          "startTimestampDate": "2012-01-23T13:19:40.596",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180597,
          "startTimestampDate": "2012-01-23T13:19:40.597",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180597,
          "startTimestampDate": "2012-01-23T13:19:40.597",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180598,
          "startTimestampDate": "2012-01-23T13:19:40.598",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180599,
          "startTimestampDate": "2012-01-23T13:19:40.599",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180600,
          "startTimestampDate": "2012-01-23T13:19:40.600",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180602,
          "startTimestampDate": "2012-01-23T13:19:40.602",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180603,
          "startTimestampDate": "2012-01-23T13:19:40.603",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180605,
          "startTimestampDate": "2012-01-23T13:19:40.605",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180606,
          "startTimestampDate": "2012-01-23T13:19:40.606",
          "executionTime": 18,
          "description": "id#testClear(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180625,
          "startTimestampDate": "2012-01-23T13:19:40.625",
          "executionTime": 1,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180626,
          "startTimestampDate": "2012-01-23T13:19:40.626",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180627,
          "startTimestampDate": "2012-01-23T13:19:40.627",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180627,
          "startTimestampDate": "2012-01-23T13:19:40.627",
          "executionTime": 1,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180628,
          "startTimestampDate": "2012-01-23T13:19:40.628",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180629,
          "startTimestampDate": "2012-01-23T13:19:40.629",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180629,
          "startTimestampDate": "2012-01-23T13:19:40.629",
          "executionTime": 1,
          "description": "id#testClone(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180639,
          "startTimestampDate": "2012-01-23T13:19:40.639",
          "executionTime": 1,
          "description": "id#testToString(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180641,
          "startTimestampDate": "2012-01-23T13:19:40.641",
          "executionTime": 2,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortShortOpenHashMapTest.testAddRemoveSameHashCollision(ShortShortOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180644,
          "startTimestampDate": "2012-01-23T13:19:40.644",
          "executionTime": 2,
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180647,
          "startTimestampDate": "2012-01-23T13:19:40.647",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180647,
          "startTimestampDate": "2012-01-23T13:19:40.647",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortShortOpenHashMapTest.testAddRemoveSameHashCollision(ShortShortOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortShortOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321180662,
      "startTimestampDate": "2012-01-23T13:19:40.662",
      "executionTime": 552,
      "description": {
        "id": "id#com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullKey(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testNullKey(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testNullKey",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLkey(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
            "displayName": "testLkey(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)",
            "methodName": "testLkey",
            "className": "com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321180731,
          "startTimestampDate": "2012-01-23T13:19:40.731",
          "executionTime": 8,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180739,
          "startTimestampDate": "2012-01-23T13:19:40.739",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180740,
          "startTimestampDate": "2012-01-23T13:19:40.740",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180740,
          "startTimestampDate": "2012-01-23T13:19:40.740",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180740,
          "startTimestampDate": "2012-01-23T13:19:40.740",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180740,
          "startTimestampDate": "2012-01-23T13:19:40.740",
          "executionTime": 82,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180823,
          "startTimestampDate": "2012-01-23T13:19:40.823",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180823,
          "startTimestampDate": "2012-01-23T13:19:40.823",
          "executionTime": 1,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180824,
          "startTimestampDate": "2012-01-23T13:19:40.824",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180825,
          "startTimestampDate": "2012-01-23T13:19:40.825",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180825,
          "startTimestampDate": "2012-01-23T13:19:40.825",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180826,
          "startTimestampDate": "2012-01-23T13:19:40.826",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180827,
          "startTimestampDate": "2012-01-23T13:19:40.827",
          "executionTime": 2,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180829,
          "startTimestampDate": "2012-01-23T13:19:40.829",
          "executionTime": 1,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180833,
          "startTimestampDate": "2012-01-23T13:19:40.833",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180836,
          "startTimestampDate": "2012-01-23T13:19:40.836",
          "executionTime": 1,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180838,
          "startTimestampDate": "2012-01-23T13:19:40.838",
          "executionTime": 26,
          "description": "id#testClear(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180865,
          "startTimestampDate": "2012-01-23T13:19:40.865",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180865,
          "startTimestampDate": "2012-01-23T13:19:40.865",
          "executionTime": 1,
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180866,
          "startTimestampDate": "2012-01-23T13:19:40.866",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180867,
          "startTimestampDate": "2012-01-23T13:19:40.867",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180867,
          "startTimestampDate": "2012-01-23T13:19:40.867",
          "executionTime": 1,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180869,
          "startTimestampDate": "2012-01-23T13:19:40.869",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180869,
          "startTimestampDate": "2012-01-23T13:19:40.869",
          "executionTime": 1,
          "description": "id#testClone(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180870,
          "startTimestampDate": "2012-01-23T13:19:40.870",
          "executionTime": 3,
          "description": "id#testToString(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest.testToString(ObjectDoubleOpenHashMapTest.java:514)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321180875,
          "startTimestampDate": "2012-01-23T13:19:40.875",
          "executionTime": 334,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181209,
          "startTimestampDate": "2012-01-23T13:19:41.209",
          "executionTime": 2,
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181211,
          "startTimestampDate": "2012-01-23T13:19:41.211",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181212,
          "startTimestampDate": "2012-01-23T13:19:41.212",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181213,
          "startTimestampDate": "2012-01-23T13:19:41.213",
          "executionTime": 1,
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181214,
          "startTimestampDate": "2012-01-23T13:19:41.214",
          "executionTime": 0,
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest.testToString(ObjectDoubleOpenHashMapTest.java:514)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectDoubleOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321181220,
      "startTimestampDate": "2012-01-23T13:19:41.220",
      "executionTime": 286,
      "description": {
        "id": "id#com.carrotsearch.hppc.IntByteOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
        "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.IntByteOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.IntByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321181234,
          "startTimestampDate": "2012-01-23T13:19:41.234",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181235,
          "startTimestampDate": "2012-01-23T13:19:41.235",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181236,
          "startTimestampDate": "2012-01-23T13:19:41.236",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181236,
          "startTimestampDate": "2012-01-23T13:19:41.236",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181236,
          "startTimestampDate": "2012-01-23T13:19:41.236",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181237,
          "startTimestampDate": "2012-01-23T13:19:41.237",
          "executionTime": 46,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181284,
          "startTimestampDate": "2012-01-23T13:19:41.284",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181285,
          "startTimestampDate": "2012-01-23T13:19:41.285",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181285,
          "startTimestampDate": "2012-01-23T13:19:41.285",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181286,
          "startTimestampDate": "2012-01-23T13:19:41.286",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181287,
          "startTimestampDate": "2012-01-23T13:19:41.287",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181287,
          "startTimestampDate": "2012-01-23T13:19:41.287",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181289,
          "startTimestampDate": "2012-01-23T13:19:41.289",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181291,
          "startTimestampDate": "2012-01-23T13:19:41.291",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181291,
          "startTimestampDate": "2012-01-23T13:19:41.291",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181293,
          "startTimestampDate": "2012-01-23T13:19:41.293",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181294,
          "startTimestampDate": "2012-01-23T13:19:41.294",
          "executionTime": 29,
          "description": "id#testClear(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181324,
          "startTimestampDate": "2012-01-23T13:19:41.324",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181325,
          "startTimestampDate": "2012-01-23T13:19:41.325",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181325,
          "startTimestampDate": "2012-01-23T13:19:41.325",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181326,
          "startTimestampDate": "2012-01-23T13:19:41.326",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181326,
          "startTimestampDate": "2012-01-23T13:19:41.326",
          "executionTime": 1,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181327,
          "startTimestampDate": "2012-01-23T13:19:41.327",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181328,
          "startTimestampDate": "2012-01-23T13:19:41.328",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181328,
          "startTimestampDate": "2012-01-23T13:19:41.328",
          "executionTime": 1,
          "description": "id#testToString(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181329,
          "startTimestampDate": "2012-01-23T13:19:41.329",
          "executionTime": 174,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181503,
          "startTimestampDate": "2012-01-23T13:19:41.503",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181504,
          "startTimestampDate": "2012-01-23T13:19:41.504",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181505,
          "startTimestampDate": "2012-01-23T13:19:41.505",
          "executionTime": 0,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntByteOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321181510,
      "startTimestampDate": "2012-01-23T13:19:41.510",
      "executionTime": 77,
      "description": {
        "id": "id#com.carrotsearch.hppc.ByteIntOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ByteIntOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ByteIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321181519,
          "startTimestampDate": "2012-01-23T13:19:41.519",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181520,
          "startTimestampDate": "2012-01-23T13:19:41.520",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181520,
          "startTimestampDate": "2012-01-23T13:19:41.520",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181521,
          "startTimestampDate": "2012-01-23T13:19:41.521",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181521,
          "startTimestampDate": "2012-01-23T13:19:41.521",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181521,
          "startTimestampDate": "2012-01-23T13:19:41.521",
          "executionTime": 21,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181543,
          "startTimestampDate": "2012-01-23T13:19:41.543",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181543,
          "startTimestampDate": "2012-01-23T13:19:41.543",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181543,
          "startTimestampDate": "2012-01-23T13:19:41.543",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181544,
          "startTimestampDate": "2012-01-23T13:19:41.544",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181544,
          "startTimestampDate": "2012-01-23T13:19:41.544",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181544,
          "startTimestampDate": "2012-01-23T13:19:41.544",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181545,
          "startTimestampDate": "2012-01-23T13:19:41.545",
          "executionTime": 3,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181548,
          "startTimestampDate": "2012-01-23T13:19:41.548",
          "executionTime": 1,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181549,
          "startTimestampDate": "2012-01-23T13:19:41.549",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181550,
          "startTimestampDate": "2012-01-23T13:19:41.550",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181551,
          "startTimestampDate": "2012-01-23T13:19:41.551",
          "executionTime": 20,
          "description": "id#testClear(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181572,
          "startTimestampDate": "2012-01-23T13:19:41.572",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181573,
          "startTimestampDate": "2012-01-23T13:19:41.573",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181574,
          "startTimestampDate": "2012-01-23T13:19:41.574",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181574,
          "startTimestampDate": "2012-01-23T13:19:41.574",
          "executionTime": 1,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181575,
          "startTimestampDate": "2012-01-23T13:19:41.575",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181576,
          "startTimestampDate": "2012-01-23T13:19:41.576",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181576,
          "startTimestampDate": "2012-01-23T13:19:41.576",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181577,
          "startTimestampDate": "2012-01-23T13:19:41.577",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181578,
          "startTimestampDate": "2012-01-23T13:19:41.578",
          "executionTime": 3,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteIntOpenHashMapTest.testAddRemoveSameHashCollision(ByteIntOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181583,
          "startTimestampDate": "2012-01-23T13:19:41.583",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181585,
          "startTimestampDate": "2012-01-23T13:19:41.585",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181586,
          "startTimestampDate": "2012-01-23T13:19:41.586",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteIntOpenHashMapTest.testAddRemoveSameHashCollision(ByteIntOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteIntOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321181605,
      "startTimestampDate": "2012-01-23T13:19:41.605",
      "executionTime": 196,
      "description": {
        "id": "id#com.carrotsearch.hppc.LongByteOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
        "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.LongByteOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.LongByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321181614,
          "startTimestampDate": "2012-01-23T13:19:41.614",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181615,
          "startTimestampDate": "2012-01-23T13:19:41.615",
          "executionTime": 1,
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181616,
          "startTimestampDate": "2012-01-23T13:19:41.616",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181616,
          "startTimestampDate": "2012-01-23T13:19:41.616",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181616,
          "startTimestampDate": "2012-01-23T13:19:41.616",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181617,
          "startTimestampDate": "2012-01-23T13:19:41.617",
          "executionTime": 46,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181664,
          "startTimestampDate": "2012-01-23T13:19:41.664",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181664,
          "startTimestampDate": "2012-01-23T13:19:41.664",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181664,
          "startTimestampDate": "2012-01-23T13:19:41.664",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181665,
          "startTimestampDate": "2012-01-23T13:19:41.665",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181665,
          "startTimestampDate": "2012-01-23T13:19:41.665",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181665,
          "startTimestampDate": "2012-01-23T13:19:41.665",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181666,
          "startTimestampDate": "2012-01-23T13:19:41.666",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181667,
          "startTimestampDate": "2012-01-23T13:19:41.667",
          "executionTime": 1,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181668,
          "startTimestampDate": "2012-01-23T13:19:41.668",
          "executionTime": 10,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181680,
          "startTimestampDate": "2012-01-23T13:19:41.680",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181681,
          "startTimestampDate": "2012-01-23T13:19:41.681",
          "executionTime": 19,
          "description": "id#testClear(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181701,
          "startTimestampDate": "2012-01-23T13:19:41.701",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181702,
          "startTimestampDate": "2012-01-23T13:19:41.702",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181702,
          "startTimestampDate": "2012-01-23T13:19:41.702",
          "executionTime": 1,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181703,
          "startTimestampDate": "2012-01-23T13:19:41.703",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181704,
          "startTimestampDate": "2012-01-23T13:19:41.704",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181704,
          "startTimestampDate": "2012-01-23T13:19:41.704",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181705,
          "startTimestampDate": "2012-01-23T13:19:41.705",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181706,
          "startTimestampDate": "2012-01-23T13:19:41.706",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181706,
          "startTimestampDate": "2012-01-23T13:19:41.706",
          "executionTime": 92,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181798,
          "startTimestampDate": "2012-01-23T13:19:41.798",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181799,
          "startTimestampDate": "2012-01-23T13:19:41.799",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181800,
          "startTimestampDate": "2012-01-23T13:19:41.800",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongByteOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321181836,
      "startTimestampDate": "2012-01-23T13:19:41.836",
      "executionTime": 106,
      "description": {
        "id": "id#com.carrotsearch.hppc.DoubleCharOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
        "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.DoubleCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321181844,
          "startTimestampDate": "2012-01-23T13:19:41.844",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181854,
          "startTimestampDate": "2012-01-23T13:19:41.854",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181855,
          "startTimestampDate": "2012-01-23T13:19:41.855",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181856,
          "startTimestampDate": "2012-01-23T13:19:41.856",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181856,
          "startTimestampDate": "2012-01-23T13:19:41.856",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181857,
          "startTimestampDate": "2012-01-23T13:19:41.857",
          "executionTime": 41,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181899,
          "startTimestampDate": "2012-01-23T13:19:41.899",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181900,
          "startTimestampDate": "2012-01-23T13:19:41.900",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181901,
          "startTimestampDate": "2012-01-23T13:19:41.901",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181901,
          "startTimestampDate": "2012-01-23T13:19:41.901",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181902,
          "startTimestampDate": "2012-01-23T13:19:41.902",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181902,
          "startTimestampDate": "2012-01-23T13:19:41.902",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181904,
          "startTimestampDate": "2012-01-23T13:19:41.904",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181906,
          "startTimestampDate": "2012-01-23T13:19:41.906",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181906,
          "startTimestampDate": "2012-01-23T13:19:41.906",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181908,
          "startTimestampDate": "2012-01-23T13:19:41.908",
          "executionTime": 1,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181909,
          "startTimestampDate": "2012-01-23T13:19:41.909",
          "executionTime": 14,
          "description": "id#testClear(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181924,
          "startTimestampDate": "2012-01-23T13:19:41.924",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181924,
          "startTimestampDate": "2012-01-23T13:19:41.924",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181925,
          "startTimestampDate": "2012-01-23T13:19:41.925",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181926,
          "startTimestampDate": "2012-01-23T13:19:41.926",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181926,
          "startTimestampDate": "2012-01-23T13:19:41.926",
          "executionTime": 1,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181927,
          "startTimestampDate": "2012-01-23T13:19:41.927",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181928,
          "startTimestampDate": "2012-01-23T13:19:41.928",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181929,
          "startTimestampDate": "2012-01-23T13:19:41.929",
          "executionTime": 3,
          "description": "id#testToString(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleCharOpenHashMapTest.testToString(DoubleCharOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181933,
          "startTimestampDate": "2012-01-23T13:19:41.933",
          "executionTime": 3,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleCharOpenHashMapTest.testAddRemoveSameHashCollision(DoubleCharOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181937,
          "startTimestampDate": "2012-01-23T13:19:41.937",
          "executionTime": 2,
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181939,
          "startTimestampDate": "2012-01-23T13:19:41.939",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181940,
          "startTimestampDate": "2012-01-23T13:19:41.940",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleCharOpenHashMapTest.testToString(DoubleCharOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleCharOpenHashMapTest.testAddRemoveSameHashCollision(DoubleCharOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleCharOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321181974,
      "startTimestampDate": "2012-01-23T13:19:41.974",
      "executionTime": 243,
      "description": {
        "id": "id#com.carrotsearch.hppc.IntIntOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
        "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.IntIntOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.IntIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321181983,
          "startTimestampDate": "2012-01-23T13:19:41.983",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181985,
          "startTimestampDate": "2012-01-23T13:19:41.985",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181986,
          "startTimestampDate": "2012-01-23T13:19:41.986",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181986,
          "startTimestampDate": "2012-01-23T13:19:41.986",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181986,
          "startTimestampDate": "2012-01-23T13:19:41.986",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321181986,
          "startTimestampDate": "2012-01-23T13:19:41.986",
          "executionTime": 25,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182011,
          "startTimestampDate": "2012-01-23T13:19:42.011",
          "executionTime": 1,
          "description": "id#testPutAll(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182012,
          "startTimestampDate": "2012-01-23T13:19:42.012",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182013,
          "startTimestampDate": "2012-01-23T13:19:42.013",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182013,
          "startTimestampDate": "2012-01-23T13:19:42.013",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182014,
          "startTimestampDate": "2012-01-23T13:19:42.014",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182014,
          "startTimestampDate": "2012-01-23T13:19:42.014",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182016,
          "startTimestampDate": "2012-01-23T13:19:42.016",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182018,
          "startTimestampDate": "2012-01-23T13:19:42.018",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182018,
          "startTimestampDate": "2012-01-23T13:19:42.018",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182020,
          "startTimestampDate": "2012-01-23T13:19:42.020",
          "executionTime": 1,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182021,
          "startTimestampDate": "2012-01-23T13:19:42.021",
          "executionTime": 17,
          "description": "id#testClear(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182039,
          "startTimestampDate": "2012-01-23T13:19:42.039",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182039,
          "startTimestampDate": "2012-01-23T13:19:42.039",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182040,
          "startTimestampDate": "2012-01-23T13:19:42.040",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182041,
          "startTimestampDate": "2012-01-23T13:19:42.041",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182041,
          "startTimestampDate": "2012-01-23T13:19:42.041",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182042,
          "startTimestampDate": "2012-01-23T13:19:42.042",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182042,
          "startTimestampDate": "2012-01-23T13:19:42.042",
          "executionTime": 1,
          "description": "id#testClone(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182043,
          "startTimestampDate": "2012-01-23T13:19:42.043",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182044,
          "startTimestampDate": "2012-01-23T13:19:42.044",
          "executionTime": 169,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182214,
          "startTimestampDate": "2012-01-23T13:19:42.214",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182215,
          "startTimestampDate": "2012-01-23T13:19:42.215",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182216,
          "startTimestampDate": "2012-01-23T13:19:42.216",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntIntOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321182250,
      "startTimestampDate": "2012-01-23T13:19:42.250",
      "executionTime": 339,
      "description": {
        "id": "id#com.carrotsearch.hppc.IntDoubleLinkedSetTest[0]",
        "displayName": "com.carrotsearch.hppc.IntDoubleLinkedSetTest",
        "className": "com.carrotsearch.hppc.IntDoubleLinkedSetTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemove(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.IntDoubleLinkedSetTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.IntDoubleLinkedSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.IntDoubleLinkedSetTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.IntDoubleLinkedSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.IntDoubleLinkedSetTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.IntDoubleLinkedSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.IntDoubleLinkedSetTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.IntDoubleLinkedSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.IntDoubleLinkedSetTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.IntDoubleLinkedSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.IntDoubleLinkedSetTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.IntDoubleLinkedSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.IntDoubleLinkedSetTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.IntDoubleLinkedSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
            "displayName": "testAdd(com.carrotsearch.hppc.IntDoubleLinkedSetTest)",
            "methodName": "testAdd",
            "className": "com.carrotsearch.hppc.IntDoubleLinkedSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAll(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
            "displayName": "testAddAll(com.carrotsearch.hppc.IntDoubleLinkedSetTest)",
            "methodName": "testAddAll",
            "className": "com.carrotsearch.hppc.IntDoubleLinkedSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
            "displayName": "testRemoveAllFromLookupContainer(com.carrotsearch.hppc.IntDoubleLinkedSetTest)",
            "methodName": "testRemoveAllFromLookupContainer",
            "className": "com.carrotsearch.hppc.IntDoubleLinkedSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
            "displayName": "testRetainAllWithPredicate(com.carrotsearch.hppc.IntDoubleLinkedSetTest)",
            "methodName": "testRetainAllWithPredicate",
            "className": "com.carrotsearch.hppc.IntDoubleLinkedSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd2(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
            "displayName": "testAdd2(com.carrotsearch.hppc.IntDoubleLinkedSetTest)",
            "methodName": "testAdd2",
            "className": "com.carrotsearch.hppc.IntDoubleLinkedSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddVarArgs(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
            "displayName": "testAddVarArgs(com.carrotsearch.hppc.IntDoubleLinkedSetTest)",
            "methodName": "testAddVarArgs",
            "className": "com.carrotsearch.hppc.IntDoubleLinkedSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
            "displayName": "testInitialCapacityAndGrowth(com.carrotsearch.hppc.IntDoubleLinkedSetTest)",
            "methodName": "testInitialCapacityAndGrowth",
            "className": "com.carrotsearch.hppc.IntDoubleLinkedSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAgainstHashMap(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
            "displayName": "testAgainstHashMap(com.carrotsearch.hppc.IntDoubleLinkedSetTest)",
            "methodName": "testAgainstHashMap",
            "className": "com.carrotsearch.hppc.IntDoubleLinkedSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testConstructorFromContainer(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
            "displayName": "testConstructorFromContainer(com.carrotsearch.hppc.IntDoubleLinkedSetTest)",
            "methodName": "testConstructorFromContainer",
            "className": "com.carrotsearch.hppc.IntDoubleLinkedSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromMethod(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
            "displayName": "testFromMethod(com.carrotsearch.hppc.IntDoubleLinkedSetTest)",
            "methodName": "testFromMethod",
            "className": "com.carrotsearch.hppc.IntDoubleLinkedSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321182255,
          "startTimestampDate": "2012-01-23T13:19:42.255",
          "executionTime": 1,
          "description": "id#testRemove(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182257,
          "startTimestampDate": "2012-01-23T13:19:42.257",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182260,
          "startTimestampDate": "2012-01-23T13:19:42.260",
          "executionTime": 0,
          "description": "id#testClear(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182260,
          "startTimestampDate": "2012-01-23T13:19:42.260",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182260,
          "startTimestampDate": "2012-01-23T13:19:42.260",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182261,
          "startTimestampDate": "2012-01-23T13:19:42.261",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182261,
          "startTimestampDate": "2012-01-23T13:19:42.261",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182261,
          "startTimestampDate": "2012-01-23T13:19:42.261",
          "executionTime": 0,
          "description": "id#testAdd(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182264,
          "startTimestampDate": "2012-01-23T13:19:42.264",
          "executionTime": 0,
          "description": "id#testAddAll(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182265,
          "startTimestampDate": "2012-01-23T13:19:42.265",
          "executionTime": 0,
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182265,
          "startTimestampDate": "2012-01-23T13:19:42.265",
          "executionTime": 1,
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182267,
          "startTimestampDate": "2012-01-23T13:19:42.267",
          "executionTime": 0,
          "description": "id#testAdd2(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182267,
          "startTimestampDate": "2012-01-23T13:19:42.267",
          "executionTime": 0,
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182267,
          "startTimestampDate": "2012-01-23T13:19:42.267",
          "executionTime": 24,
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182292,
          "startTimestampDate": "2012-01-23T13:19:42.292",
          "executionTime": 295,
          "description": "id#testAgainstHashMap(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182588,
          "startTimestampDate": "2012-01-23T13:19:42.588",
          "executionTime": 1,
          "description": "id#testConstructorFromContainer(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182589,
          "startTimestampDate": "2012-01-23T13:19:42.589",
          "executionTime": 0,
          "description": "id#testFromMethod(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAll(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAll(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd2(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd2(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAgainstHashMap(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAgainstHashMap(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testConstructorFromContainer(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testConstructorFromContainer(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromMethod(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromMethod(com.carrotsearch.hppc.IntDoubleLinkedSetTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321182612,
      "startTimestampDate": "2012-01-23T13:19:42.612",
      "executionTime": 91,
      "description": {
        "id": "id#com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
        "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321182634,
          "startTimestampDate": "2012-01-23T13:19:42.634",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182640,
          "startTimestampDate": "2012-01-23T13:19:42.640",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182640,
          "startTimestampDate": "2012-01-23T13:19:42.640",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182641,
          "startTimestampDate": "2012-01-23T13:19:42.641",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182641,
          "startTimestampDate": "2012-01-23T13:19:42.641",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182641,
          "startTimestampDate": "2012-01-23T13:19:42.641",
          "executionTime": 24,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182666,
          "startTimestampDate": "2012-01-23T13:19:42.666",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182666,
          "startTimestampDate": "2012-01-23T13:19:42.666",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182666,
          "startTimestampDate": "2012-01-23T13:19:42.666",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182666,
          "startTimestampDate": "2012-01-23T13:19:42.666",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182667,
          "startTimestampDate": "2012-01-23T13:19:42.667",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182667,
          "startTimestampDate": "2012-01-23T13:19:42.667",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182668,
          "startTimestampDate": "2012-01-23T13:19:42.668",
          "executionTime": 2,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182671,
          "startTimestampDate": "2012-01-23T13:19:42.671",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182672,
          "startTimestampDate": "2012-01-23T13:19:42.672",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182673,
          "startTimestampDate": "2012-01-23T13:19:42.673",
          "executionTime": 1,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182674,
          "startTimestampDate": "2012-01-23T13:19:42.674",
          "executionTime": 13,
          "description": "id#testClear(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182688,
          "startTimestampDate": "2012-01-23T13:19:42.688",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182688,
          "startTimestampDate": "2012-01-23T13:19:42.688",
          "executionTime": 1,
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182689,
          "startTimestampDate": "2012-01-23T13:19:42.689",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182690,
          "startTimestampDate": "2012-01-23T13:19:42.690",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182690,
          "startTimestampDate": "2012-01-23T13:19:42.690",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182691,
          "startTimestampDate": "2012-01-23T13:19:42.691",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182691,
          "startTimestampDate": "2012-01-23T13:19:42.691",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182692,
          "startTimestampDate": "2012-01-23T13:19:42.692",
          "executionTime": 2,
          "description": "id#testToString(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest.testToString(DoubleDoubleOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182695,
          "startTimestampDate": "2012-01-23T13:19:42.695",
          "executionTime": 3,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest.testAddRemoveSameHashCollision(DoubleDoubleOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182699,
          "startTimestampDate": "2012-01-23T13:19:42.699",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182701,
          "startTimestampDate": "2012-01-23T13:19:42.701",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182702,
          "startTimestampDate": "2012-01-23T13:19:42.702",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest.testToString(DoubleDoubleOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest.testAddRemoveSameHashCollision(DoubleDoubleOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleDoubleOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321182750,
      "startTimestampDate": "2012-01-23T13:19:42.750",
      "executionTime": 84,
      "description": {
        "id": "id#com.carrotsearch.hppc.CharLongOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
        "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.CharLongOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.CharLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321182758,
          "startTimestampDate": "2012-01-23T13:19:42.758",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182759,
          "startTimestampDate": "2012-01-23T13:19:42.759",
          "executionTime": 1,
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182760,
          "startTimestampDate": "2012-01-23T13:19:42.760",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182760,
          "startTimestampDate": "2012-01-23T13:19:42.760",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182760,
          "startTimestampDate": "2012-01-23T13:19:42.760",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182760,
          "startTimestampDate": "2012-01-23T13:19:42.760",
          "executionTime": 26,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182787,
          "startTimestampDate": "2012-01-23T13:19:42.787",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182788,
          "startTimestampDate": "2012-01-23T13:19:42.788",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182788,
          "startTimestampDate": "2012-01-23T13:19:42.788",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182792,
          "startTimestampDate": "2012-01-23T13:19:42.792",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182793,
          "startTimestampDate": "2012-01-23T13:19:42.793",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182793,
          "startTimestampDate": "2012-01-23T13:19:42.793",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182794,
          "startTimestampDate": "2012-01-23T13:19:42.794",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182795,
          "startTimestampDate": "2012-01-23T13:19:42.795",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182795,
          "startTimestampDate": "2012-01-23T13:19:42.795",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182797,
          "startTimestampDate": "2012-01-23T13:19:42.797",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182797,
          "startTimestampDate": "2012-01-23T13:19:42.797",
          "executionTime": 14,
          "description": "id#testClear(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182812,
          "startTimestampDate": "2012-01-23T13:19:42.812",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182813,
          "startTimestampDate": "2012-01-23T13:19:42.813",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182814,
          "startTimestampDate": "2012-01-23T13:19:42.814",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182815,
          "startTimestampDate": "2012-01-23T13:19:42.815",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182816,
          "startTimestampDate": "2012-01-23T13:19:42.816",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182817,
          "startTimestampDate": "2012-01-23T13:19:42.817",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182817,
          "startTimestampDate": "2012-01-23T13:19:42.817",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182819,
          "startTimestampDate": "2012-01-23T13:19:42.819",
          "executionTime": 5,
          "description": "id#testToString(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharLongOpenHashMapTest.testToString(CharLongOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182825,
          "startTimestampDate": "2012-01-23T13:19:42.825",
          "executionTime": 2,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharLongOpenHashMapTest.testAddRemoveSameHashCollision(CharLongOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182829,
          "startTimestampDate": "2012-01-23T13:19:42.829",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182831,
          "startTimestampDate": "2012-01-23T13:19:42.831",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182832,
          "startTimestampDate": "2012-01-23T13:19:42.832",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharLongOpenHashMapTest.testToString(CharLongOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharLongOpenHashMapTest.testAddRemoveSameHashCollision(CharLongOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharLongOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321182881,
      "startTimestampDate": "2012-01-23T13:19:42.881",
      "executionTime": 108,
      "description": {
        "id": "id#com.carrotsearch.hppc.CharIntOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
        "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.CharIntOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.CharIntOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321182904,
          "startTimestampDate": "2012-01-23T13:19:42.904",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182911,
          "startTimestampDate": "2012-01-23T13:19:42.911",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182912,
          "startTimestampDate": "2012-01-23T13:19:42.912",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182913,
          "startTimestampDate": "2012-01-23T13:19:42.913",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182913,
          "startTimestampDate": "2012-01-23T13:19:42.913",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182914,
          "startTimestampDate": "2012-01-23T13:19:42.914",
          "executionTime": 29,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182944,
          "startTimestampDate": "2012-01-23T13:19:42.944",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182944,
          "startTimestampDate": "2012-01-23T13:19:42.944",
          "executionTime": 1,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182945,
          "startTimestampDate": "2012-01-23T13:19:42.945",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182946,
          "startTimestampDate": "2012-01-23T13:19:42.946",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182946,
          "startTimestampDate": "2012-01-23T13:19:42.946",
          "executionTime": 1,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182947,
          "startTimestampDate": "2012-01-23T13:19:42.947",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182949,
          "startTimestampDate": "2012-01-23T13:19:42.949",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182951,
          "startTimestampDate": "2012-01-23T13:19:42.951",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182951,
          "startTimestampDate": "2012-01-23T13:19:42.951",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182953,
          "startTimestampDate": "2012-01-23T13:19:42.953",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182953,
          "startTimestampDate": "2012-01-23T13:19:42.953",
          "executionTime": 16,
          "description": "id#testClear(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182970,
          "startTimestampDate": "2012-01-23T13:19:42.970",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182971,
          "startTimestampDate": "2012-01-23T13:19:42.971",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182972,
          "startTimestampDate": "2012-01-23T13:19:42.972",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182973,
          "startTimestampDate": "2012-01-23T13:19:42.973",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182973,
          "startTimestampDate": "2012-01-23T13:19:42.973",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182974,
          "startTimestampDate": "2012-01-23T13:19:42.974",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182975,
          "startTimestampDate": "2012-01-23T13:19:42.975",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182975,
          "startTimestampDate": "2012-01-23T13:19:42.975",
          "executionTime": 3,
          "description": "id#testToString(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharIntOpenHashMapTest.testToString(CharIntOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182980,
          "startTimestampDate": "2012-01-23T13:19:42.980",
          "executionTime": 3,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharIntOpenHashMapTest.testAddRemoveSameHashCollision(CharIntOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182984,
          "startTimestampDate": "2012-01-23T13:19:42.984",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182986,
          "startTimestampDate": "2012-01-23T13:19:42.986",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321182987,
          "startTimestampDate": "2012-01-23T13:19:42.987",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharIntOpenHashMapTest.testToString(CharIntOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharIntOpenHashMapTest.testAddRemoveSameHashCollision(CharIntOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharIntOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321183052,
      "startTimestampDate": "2012-01-23T13:19:43.052",
      "executionTime": 1,
      "description": {
        "id": "id#com.carrotsearch.hppc.BoundedProportionalArraySizingStrategyTest[0]",
        "displayName": "com.carrotsearch.hppc.BoundedProportionalArraySizingStrategyTest",
        "className": "com.carrotsearch.hppc.BoundedProportionalArraySizingStrategyTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testBeyondIntRange(com.carrotsearch.hppc.BoundedProportionalArraySizingStrategyTest)[1]",
            "displayName": "testBeyondIntRange(com.carrotsearch.hppc.BoundedProportionalArraySizingStrategyTest)",
            "methodName": "testBeyondIntRange",
            "className": "com.carrotsearch.hppc.BoundedProportionalArraySizingStrategyTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321183053,
          "startTimestampDate": "2012-01-23T13:19:43.053",
          "executionTime": 0,
          "description": "id#testBeyondIntRange(com.carrotsearch.hppc.BoundedProportionalArraySizingStrategyTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testBeyondIntRange(com.carrotsearch.hppc.BoundedProportionalArraySizingStrategyTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBeyondIntRange(com.carrotsearch.hppc.BoundedProportionalArraySizingStrategyTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321183083,
      "startTimestampDate": "2012-01-23T13:19:43.083",
      "executionTime": 11,
      "description": {
        "id": "id#com.carrotsearch.hppc.ByteStackTest[0]",
        "displayName": "com.carrotsearch.hppc.ByteStackTest",
        "className": "com.carrotsearch.hppc.ByteStackTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteStackTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ByteStackTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ByteStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ByteStackTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ByteStackTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ByteStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ByteStackTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ByteStackTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ByteStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.ByteStackTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.ByteStackTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.ByteStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPush1(com.carrotsearch.hppc.ByteStackTest)[1]",
            "displayName": "testPush1(com.carrotsearch.hppc.ByteStackTest)",
            "methodName": "testPush1",
            "className": "com.carrotsearch.hppc.ByteStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPush2(com.carrotsearch.hppc.ByteStackTest)[1]",
            "displayName": "testPush2(com.carrotsearch.hppc.ByteStackTest)",
            "methodName": "testPush2",
            "className": "com.carrotsearch.hppc.ByteStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPushArray(com.carrotsearch.hppc.ByteStackTest)[1]",
            "displayName": "testPushArray(com.carrotsearch.hppc.ByteStackTest)",
            "methodName": "testPushArray",
            "className": "com.carrotsearch.hppc.ByteStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllPushAll(com.carrotsearch.hppc.ByteStackTest)[1]",
            "displayName": "testAddAllPushAll(com.carrotsearch.hppc.ByteStackTest)",
            "methodName": "testAddAllPushAll",
            "className": "com.carrotsearch.hppc.ByteStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDiscard(com.carrotsearch.hppc.ByteStackTest)[1]",
            "displayName": "testDiscard(com.carrotsearch.hppc.ByteStackTest)",
            "methodName": "testDiscard",
            "className": "com.carrotsearch.hppc.ByteStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetAssertions(com.carrotsearch.hppc.ByteStackTest)[1]",
            "displayName": "testGetAssertions(com.carrotsearch.hppc.ByteStackTest)",
            "methodName": "testGetAssertions",
            "className": "com.carrotsearch.hppc.ByteStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDiscardAssertions(com.carrotsearch.hppc.ByteStackTest)[1]",
            "displayName": "testDiscardAssertions(com.carrotsearch.hppc.ByteStackTest)",
            "methodName": "testDiscardAssertions",
            "className": "com.carrotsearch.hppc.ByteStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ByteStackTest)[1]",
            "displayName": "testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ByteStackTest)",
            "methodName": "testHashCodeEqualsWithOtherContainer",
            "className": "com.carrotsearch.hppc.ByteStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321183087,
          "startTimestampDate": "2012-01-23T13:19:43.087",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183087,
          "startTimestampDate": "2012-01-23T13:19:43.087",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ByteStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183088,
          "startTimestampDate": "2012-01-23T13:19:43.088",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ByteStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183088,
          "startTimestampDate": "2012-01-23T13:19:43.088",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ByteStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183092,
          "startTimestampDate": "2012-01-23T13:19:43.092",
          "executionTime": 0,
          "description": "id#testPush1(com.carrotsearch.hppc.ByteStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183093,
          "startTimestampDate": "2012-01-23T13:19:43.093",
          "executionTime": 0,
          "description": "id#testPush2(com.carrotsearch.hppc.ByteStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183093,
          "startTimestampDate": "2012-01-23T13:19:43.093",
          "executionTime": 0,
          "description": "id#testPushArray(com.carrotsearch.hppc.ByteStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183093,
          "startTimestampDate": "2012-01-23T13:19:43.093",
          "executionTime": 0,
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.ByteStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183093,
          "startTimestampDate": "2012-01-23T13:19:43.093",
          "executionTime": 0,
          "description": "id#testDiscard(com.carrotsearch.hppc.ByteStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183094,
          "startTimestampDate": "2012-01-23T13:19:43.094",
          "executionTime": 0,
          "description": "id#testGetAssertions(com.carrotsearch.hppc.ByteStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183094,
          "startTimestampDate": "2012-01-23T13:19:43.094",
          "executionTime": 0,
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.ByteStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183094,
          "startTimestampDate": "2012-01-23T13:19:43.094",
          "executionTime": 0,
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ByteStackTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPush1(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPush1(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPush2(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPush2(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPushArray(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPushArray(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDiscard(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDiscard(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetAssertions(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetAssertions(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ByteStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ByteStackTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321183114,
      "startTimestampDate": "2012-01-23T13:19:43.114",
      "executionTime": 176,
      "description": {
        "id": "id#com.carrotsearch.hppc.LongShortOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
        "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.LongShortOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.LongShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321183123,
          "startTimestampDate": "2012-01-23T13:19:43.123",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183126,
          "startTimestampDate": "2012-01-23T13:19:43.126",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183126,
          "startTimestampDate": "2012-01-23T13:19:43.126",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183126,
          "startTimestampDate": "2012-01-23T13:19:43.126",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183127,
          "startTimestampDate": "2012-01-23T13:19:43.127",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183127,
          "startTimestampDate": "2012-01-23T13:19:43.127",
          "executionTime": 31,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183159,
          "startTimestampDate": "2012-01-23T13:19:43.159",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183160,
          "startTimestampDate": "2012-01-23T13:19:43.160",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183160,
          "startTimestampDate": "2012-01-23T13:19:43.160",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183161,
          "startTimestampDate": "2012-01-23T13:19:43.161",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183162,
          "startTimestampDate": "2012-01-23T13:19:43.162",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183162,
          "startTimestampDate": "2012-01-23T13:19:43.162",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183164,
          "startTimestampDate": "2012-01-23T13:19:43.164",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183166,
          "startTimestampDate": "2012-01-23T13:19:43.166",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183167,
          "startTimestampDate": "2012-01-23T13:19:43.167",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183169,
          "startTimestampDate": "2012-01-23T13:19:43.169",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183169,
          "startTimestampDate": "2012-01-23T13:19:43.169",
          "executionTime": 15,
          "description": "id#testClear(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183185,
          "startTimestampDate": "2012-01-23T13:19:43.185",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183186,
          "startTimestampDate": "2012-01-23T13:19:43.186",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183187,
          "startTimestampDate": "2012-01-23T13:19:43.187",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183188,
          "startTimestampDate": "2012-01-23T13:19:43.188",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183188,
          "startTimestampDate": "2012-01-23T13:19:43.188",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183189,
          "startTimestampDate": "2012-01-23T13:19:43.189",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183190,
          "startTimestampDate": "2012-01-23T13:19:43.190",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183190,
          "startTimestampDate": "2012-01-23T13:19:43.190",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183191,
          "startTimestampDate": "2012-01-23T13:19:43.191",
          "executionTime": 94,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183285,
          "startTimestampDate": "2012-01-23T13:19:43.285",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183287,
          "startTimestampDate": "2012-01-23T13:19:43.287",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183288,
          "startTimestampDate": "2012-01-23T13:19:43.288",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongShortOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321183337,
      "startTimestampDate": "2012-01-23T13:19:43.337",
      "executionTime": 859,
      "description": {
        "id": "id#com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
        "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullKey(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testNullKey(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testNullKey",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLkey(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testLkey(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testLkey",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullValue(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testNullValue(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testNullValue",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAgainstHashMap(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
            "displayName": "testAgainstHashMap(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)",
            "methodName": "testAgainstHashMap",
            "className": "com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321183345,
          "startTimestampDate": "2012-01-23T13:19:43.345",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183347,
          "startTimestampDate": "2012-01-23T13:19:43.347",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183347,
          "startTimestampDate": "2012-01-23T13:19:43.347",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183347,
          "startTimestampDate": "2012-01-23T13:19:43.347",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183347,
          "startTimestampDate": "2012-01-23T13:19:43.347",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183348,
          "startTimestampDate": "2012-01-23T13:19:43.348",
          "executionTime": 35,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183384,
          "startTimestampDate": "2012-01-23T13:19:43.384",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183384,
          "startTimestampDate": "2012-01-23T13:19:43.384",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183385,
          "startTimestampDate": "2012-01-23T13:19:43.385",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183385,
          "startTimestampDate": "2012-01-23T13:19:43.385",
          "executionTime": 4,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183391,
          "startTimestampDate": "2012-01-23T13:19:43.391",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183393,
          "startTimestampDate": "2012-01-23T13:19:43.393",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183395,
          "startTimestampDate": "2012-01-23T13:19:43.395",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183397,
          "startTimestampDate": "2012-01-23T13:19:43.397",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183399,
          "startTimestampDate": "2012-01-23T13:19:43.399",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183400,
          "startTimestampDate": "2012-01-23T13:19:43.400",
          "executionTime": 16,
          "description": "id#testClear(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183417,
          "startTimestampDate": "2012-01-23T13:19:43.417",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183418,
          "startTimestampDate": "2012-01-23T13:19:43.418",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183418,
          "startTimestampDate": "2012-01-23T13:19:43.418",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183419,
          "startTimestampDate": "2012-01-23T13:19:43.419",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183420,
          "startTimestampDate": "2012-01-23T13:19:43.420",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183420,
          "startTimestampDate": "2012-01-23T13:19:43.420",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183421,
          "startTimestampDate": "2012-01-23T13:19:43.421",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183421,
          "startTimestampDate": "2012-01-23T13:19:43.421",
          "executionTime": 1,
          "description": "id#testToString(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183422,
          "startTimestampDate": "2012-01-23T13:19:43.422",
          "executionTime": 357,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183779,
          "startTimestampDate": "2012-01-23T13:19:43.779",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183781,
          "startTimestampDate": "2012-01-23T13:19:43.781",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183781,
          "startTimestampDate": "2012-01-23T13:19:43.781",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183782,
          "startTimestampDate": "2012-01-23T13:19:43.782",
          "executionTime": 0,
          "description": "id#testNullKey(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183783,
          "startTimestampDate": "2012-01-23T13:19:43.783",
          "executionTime": 0,
          "description": "id#testLkey(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183783,
          "startTimestampDate": "2012-01-23T13:19:43.783",
          "executionTime": 0,
          "description": "id#testNullValue(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321183783,
          "startTimestampDate": "2012-01-23T13:19:43.783",
          "executionTime": 413,
          "description": "id#testAgainstHashMap(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullKey(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullKey(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLkey(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLkey(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullValue(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullValue(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAgainstHashMap(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAgainstHashMap(com.carrotsearch.hppc.KTypeVTypeOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321184226,
      "startTimestampDate": "2012-01-23T13:19:44.226",
      "executionTime": 181,
      "description": {
        "id": "id#com.carrotsearch.hppc.KTypeArrayDequeTest[0]",
        "displayName": "com.carrotsearch.hppc.KTypeArrayDequeTest",
        "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddFirst(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testAddFirst(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testAddFirst",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddLast(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testAddLast(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testAddLast",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddWithGrowth(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testAddWithGrowth(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testAddWithGrowth",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddLastWithGrowth(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testAddLastWithGrowth(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testAddLastWithGrowth",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllFirst(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testAddAllFirst(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testAddAllFirst",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllLast(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testAddAllLast(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testAddAllLast",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirst(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testRemoveFirst(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testRemoveFirst",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testRemoveFirstEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testRemoveFirstEmpty",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLast(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testRemoveLast(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testRemoveLast",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLastEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testRemoveLastEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testRemoveLastEmpty",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetFirst(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testGetFirst(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testGetFirst",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetFirstEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testGetFirstEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testGetFirstEmpty",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetLast(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testGetLast(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testGetLast",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetLastEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testGetLastEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testGetLastEmpty",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testRemoveFirstOccurrence(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testRemoveFirstOccurrence",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testRemoveLastOccurrence(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testRemoveLastOccurrence",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testRemoveAllOccurrences(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testRemoveAllOccurrences",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testRemoveAllInLookupContainer(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testRemoveAllInLookupContainer",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testRemoveAllWithPredicateInterrupted",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRelease(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testRelease(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testRelease",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterator(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testIterator(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testIterator",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDescendingIterator(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testDescendingIterator(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testDescendingIterator",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachWithProcedure(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testForEachWithProcedure(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testForEachWithProcedure",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testDescendingForEachWithProcedure(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testDescendingForEachWithProcedure",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAgainstArrayDeque(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testAgainstArrayDeque(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testAgainstArrayDeque",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAgainstArrayDequeVariousTailHeadPositions(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testAgainstArrayDequeVariousTailHeadPositions(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testAgainstArrayDequeVariousTailHeadPositions",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeWithNulls(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testHashCodeWithNulls(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testHashCodeWithNulls",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToArrayWithClass(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testToArrayWithClass(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testToArrayWithClass",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToArray(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
            "displayName": "testToArray(com.carrotsearch.hppc.KTypeArrayDequeTest)",
            "methodName": "testToArray",
            "className": "com.carrotsearch.hppc.KTypeArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321184238,
          "startTimestampDate": "2012-01-23T13:19:44.238",
          "executionTime": 4,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184247,
          "startTimestampDate": "2012-01-23T13:19:44.247",
          "executionTime": 4,
          "description": "id#testClear(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184251,
          "startTimestampDate": "2012-01-23T13:19:44.251",
          "executionTime": 16,
          "description": "id#testIterable(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184268,
          "startTimestampDate": "2012-01-23T13:19:44.268",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184269,
          "startTimestampDate": "2012-01-23T13:19:44.269",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184269,
          "startTimestampDate": "2012-01-23T13:19:44.269",
          "executionTime": 1,
          "description": "id#testToString(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184270,
          "startTimestampDate": "2012-01-23T13:19:44.270",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184270,
          "startTimestampDate": "2012-01-23T13:19:44.270",
          "executionTime": 1,
          "description": "id#testAddFirst(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184271,
          "startTimestampDate": "2012-01-23T13:19:44.271",
          "executionTime": 0,
          "description": "id#testAddLast(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184271,
          "startTimestampDate": "2012-01-23T13:19:44.271",
          "executionTime": 7,
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184278,
          "startTimestampDate": "2012-01-23T13:19:44.278",
          "executionTime": 4,
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184283,
          "startTimestampDate": "2012-01-23T13:19:44.283",
          "executionTime": 0,
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184283,
          "startTimestampDate": "2012-01-23T13:19:44.283",
          "executionTime": 0,
          "description": "id#testAddAllLast(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184284,
          "startTimestampDate": "2012-01-23T13:19:44.284",
          "executionTime": 1,
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184285,
          "startTimestampDate": "2012-01-23T13:19:44.285",
          "executionTime": 0,
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184286,
          "startTimestampDate": "2012-01-23T13:19:44.286",
          "executionTime": 1,
          "description": "id#testRemoveLast(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184288,
          "startTimestampDate": "2012-01-23T13:19:44.288",
          "executionTime": 0,
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184289,
          "startTimestampDate": "2012-01-23T13:19:44.289",
          "executionTime": 0,
          "description": "id#testGetFirst(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184290,
          "startTimestampDate": "2012-01-23T13:19:44.290",
          "executionTime": 0,
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184291,
          "startTimestampDate": "2012-01-23T13:19:44.291",
          "executionTime": 0,
          "description": "id#testGetLast(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184292,
          "startTimestampDate": "2012-01-23T13:19:44.292",
          "executionTime": 0,
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184293,
          "startTimestampDate": "2012-01-23T13:19:44.293",
          "executionTime": 13,
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184307,
          "startTimestampDate": "2012-01-23T13:19:44.307",
          "executionTime": 10,
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184318,
          "startTimestampDate": "2012-01-23T13:19:44.318",
          "executionTime": 0,
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184319,
          "startTimestampDate": "2012-01-23T13:19:44.319",
          "executionTime": 0,
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184320,
          "startTimestampDate": "2012-01-23T13:19:44.320",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184321,
          "startTimestampDate": "2012-01-23T13:19:44.321",
          "executionTime": 1,
          "description": "id#testRelease(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184322,
          "startTimestampDate": "2012-01-23T13:19:44.322",
          "executionTime": 1,
          "description": "id#testIterator(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184323,
          "startTimestampDate": "2012-01-23T13:19:44.323",
          "executionTime": 9,
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184334,
          "startTimestampDate": "2012-01-23T13:19:44.334",
          "executionTime": 5,
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184340,
          "startTimestampDate": "2012-01-23T13:19:44.340",
          "executionTime": 5,
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184345,
          "startTimestampDate": "2012-01-23T13:19:44.345",
          "executionTime": 16,
          "description": "id#testAgainstArrayDeque(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184362,
          "startTimestampDate": "2012-01-23T13:19:44.362",
          "executionTime": 42,
          "description": "id#testAgainstArrayDequeVariousTailHeadPositions(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184404,
          "startTimestampDate": "2012-01-23T13:19:44.404",
          "executionTime": 1,
          "description": "id#testHashCodeWithNulls(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184405,
          "startTimestampDate": "2012-01-23T13:19:44.405",
          "executionTime": 1,
          "description": "id#testToArrayWithClass(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184406,
          "startTimestampDate": "2012-01-23T13:19:44.406",
          "executionTime": 0,
          "description": "id#testToArray(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddFirst(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddFirst(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddLast(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddLast(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllLast(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllLast(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLast(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLast(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetFirst(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetFirst(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetLast(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetLast(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRelease(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRelease(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterator(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterator(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAgainstArrayDeque(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAgainstArrayDeque(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAgainstArrayDequeVariousTailHeadPositions(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAgainstArrayDequeVariousTailHeadPositions(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeWithNulls(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeWithNulls(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToArrayWithClass(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToArrayWithClass(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToArray(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToArray(com.carrotsearch.hppc.KTypeArrayDequeTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321184446,
      "startTimestampDate": "2012-01-23T13:19:44.446",
      "executionTime": 161,
      "description": {
        "id": "id#com.carrotsearch.hppc.LongObjectOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
        "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullValue(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
            "displayName": "testNullValue(com.carrotsearch.hppc.LongObjectOpenHashMapTest)",
            "methodName": "testNullValue",
            "className": "com.carrotsearch.hppc.LongObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321184454,
          "startTimestampDate": "2012-01-23T13:19:44.454",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184455,
          "startTimestampDate": "2012-01-23T13:19:44.455",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184456,
          "startTimestampDate": "2012-01-23T13:19:44.456",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184456,
          "startTimestampDate": "2012-01-23T13:19:44.456",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184456,
          "startTimestampDate": "2012-01-23T13:19:44.456",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184456,
          "startTimestampDate": "2012-01-23T13:19:44.456",
          "executionTime": 25,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184482,
          "startTimestampDate": "2012-01-23T13:19:44.482",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184482,
          "startTimestampDate": "2012-01-23T13:19:44.482",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184483,
          "startTimestampDate": "2012-01-23T13:19:44.483",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184483,
          "startTimestampDate": "2012-01-23T13:19:44.483",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184484,
          "startTimestampDate": "2012-01-23T13:19:44.484",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184485,
          "startTimestampDate": "2012-01-23T13:19:44.485",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184487,
          "startTimestampDate": "2012-01-23T13:19:44.487",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184488,
          "startTimestampDate": "2012-01-23T13:19:44.488",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184489,
          "startTimestampDate": "2012-01-23T13:19:44.489",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184490,
          "startTimestampDate": "2012-01-23T13:19:44.490",
          "executionTime": 16,
          "description": "id#testClear(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184507,
          "startTimestampDate": "2012-01-23T13:19:44.507",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184507,
          "startTimestampDate": "2012-01-23T13:19:44.507",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184508,
          "startTimestampDate": "2012-01-23T13:19:44.508",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184508,
          "startTimestampDate": "2012-01-23T13:19:44.508",
          "executionTime": 1,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184509,
          "startTimestampDate": "2012-01-23T13:19:44.509",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184510,
          "startTimestampDate": "2012-01-23T13:19:44.510",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184510,
          "startTimestampDate": "2012-01-23T13:19:44.510",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184511,
          "startTimestampDate": "2012-01-23T13:19:44.511",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184513,
          "startTimestampDate": "2012-01-23T13:19:44.513",
          "executionTime": 91,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184604,
          "startTimestampDate": "2012-01-23T13:19:44.604",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184605,
          "startTimestampDate": "2012-01-23T13:19:44.605",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184606,
          "startTimestampDate": "2012-01-23T13:19:44.606",
          "executionTime": 0,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184607,
          "startTimestampDate": "2012-01-23T13:19:44.607",
          "executionTime": 0,
          "description": "id#testNullValue(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullValue(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullValue(com.carrotsearch.hppc.LongObjectOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321184662,
      "startTimestampDate": "2012-01-23T13:19:44.662",
      "executionTime": 118,
      "description": {
        "id": "id#com.carrotsearch.hppc.LongArrayDequeTest[0]",
        "displayName": "com.carrotsearch.hppc.LongArrayDequeTest",
        "className": "com.carrotsearch.hppc.LongArrayDequeTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddFirst(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testAddFirst(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testAddFirst",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddLast(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testAddLast(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testAddLast",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddWithGrowth(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testAddWithGrowth(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testAddWithGrowth",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddLastWithGrowth(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testAddLastWithGrowth(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testAddLastWithGrowth",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllFirst(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testAddAllFirst(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testAddAllFirst",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllLast(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testAddAllLast(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testAddAllLast",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirst(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testRemoveFirst(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testRemoveFirst",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testRemoveFirstEmpty(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testRemoveFirstEmpty",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLast(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testRemoveLast(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testRemoveLast",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLastEmpty(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testRemoveLastEmpty(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testRemoveLastEmpty",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetFirst(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testGetFirst(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testGetFirst",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetFirstEmpty(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testGetFirstEmpty(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testGetFirstEmpty",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetLast(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testGetLast(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testGetLast",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetLastEmpty(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testGetLastEmpty(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testGetLastEmpty",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testRemoveFirstOccurrence(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testRemoveFirstOccurrence",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testRemoveLastOccurrence(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testRemoveLastOccurrence",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testRemoveAllOccurrences(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testRemoveAllOccurrences",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testRemoveAllInLookupContainer(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testRemoveAllInLookupContainer",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testRemoveAllWithPredicateInterrupted",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRelease(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testRelease(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testRelease",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterator(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testIterator(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testIterator",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDescendingIterator(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testDescendingIterator(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testDescendingIterator",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachWithProcedure(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testForEachWithProcedure(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testForEachWithProcedure",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
            "displayName": "testDescendingForEachWithProcedure(com.carrotsearch.hppc.LongArrayDequeTest)",
            "methodName": "testDescendingForEachWithProcedure",
            "className": "com.carrotsearch.hppc.LongArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321184670,
          "startTimestampDate": "2012-01-23T13:19:44.670",
          "executionTime": 5,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184680,
          "startTimestampDate": "2012-01-23T13:19:44.680",
          "executionTime": 3,
          "description": "id#testClear(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184684,
          "startTimestampDate": "2012-01-23T13:19:44.684",
          "executionTime": 16,
          "description": "id#testIterable(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184701,
          "startTimestampDate": "2012-01-23T13:19:44.701",
          "executionTime": 1,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184702,
          "startTimestampDate": "2012-01-23T13:19:44.702",
          "executionTime": 1,
          "description": "id#testClone(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184703,
          "startTimestampDate": "2012-01-23T13:19:44.703",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184704,
          "startTimestampDate": "2012-01-23T13:19:44.704",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184704,
          "startTimestampDate": "2012-01-23T13:19:44.704",
          "executionTime": 0,
          "description": "id#testAddFirst(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184705,
          "startTimestampDate": "2012-01-23T13:19:44.705",
          "executionTime": 0,
          "description": "id#testAddLast(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184705,
          "startTimestampDate": "2012-01-23T13:19:44.705",
          "executionTime": 10,
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184715,
          "startTimestampDate": "2012-01-23T13:19:44.715",
          "executionTime": 5,
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184721,
          "startTimestampDate": "2012-01-23T13:19:44.721",
          "executionTime": 0,
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184722,
          "startTimestampDate": "2012-01-23T13:19:44.722",
          "executionTime": 0,
          "description": "id#testAddAllLast(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184723,
          "startTimestampDate": "2012-01-23T13:19:44.723",
          "executionTime": 0,
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184724,
          "startTimestampDate": "2012-01-23T13:19:44.724",
          "executionTime": 0,
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184726,
          "startTimestampDate": "2012-01-23T13:19:44.726",
          "executionTime": 0,
          "description": "id#testRemoveLast(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184727,
          "startTimestampDate": "2012-01-23T13:19:44.727",
          "executionTime": 0,
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184728,
          "startTimestampDate": "2012-01-23T13:19:44.728",
          "executionTime": 0,
          "description": "id#testGetFirst(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184729,
          "startTimestampDate": "2012-01-23T13:19:44.729",
          "executionTime": 0,
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184730,
          "startTimestampDate": "2012-01-23T13:19:44.730",
          "executionTime": 0,
          "description": "id#testGetLast(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184731,
          "startTimestampDate": "2012-01-23T13:19:44.731",
          "executionTime": 0,
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184732,
          "startTimestampDate": "2012-01-23T13:19:44.732",
          "executionTime": 15,
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184748,
          "startTimestampDate": "2012-01-23T13:19:44.748",
          "executionTime": 10,
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184758,
          "startTimestampDate": "2012-01-23T13:19:44.758",
          "executionTime": 0,
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184759,
          "startTimestampDate": "2012-01-23T13:19:44.759",
          "executionTime": 0,
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184759,
          "startTimestampDate": "2012-01-23T13:19:44.759",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184760,
          "startTimestampDate": "2012-01-23T13:19:44.760",
          "executionTime": 1,
          "description": "id#testRelease(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184761,
          "startTimestampDate": "2012-01-23T13:19:44.761",
          "executionTime": 0,
          "description": "id#testIterator(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184761,
          "startTimestampDate": "2012-01-23T13:19:44.761",
          "executionTime": 8,
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184770,
          "startTimestampDate": "2012-01-23T13:19:44.770",
          "executionTime": 4,
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184775,
          "startTimestampDate": "2012-01-23T13:19:44.775",
          "executionTime": 5,
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.LongArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddFirst(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddFirst(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddLast(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddLast(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllLast(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllLast(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLast(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLast(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetFirst(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetFirst(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetLast(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetLast(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRelease(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRelease(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterator(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterator(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.LongArrayDequeTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321184807,
      "startTimestampDate": "2012-01-23T13:19:44.807",
      "executionTime": 86,
      "description": {
        "id": "id#com.carrotsearch.hppc.CharFloatOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
        "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.CharFloatOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.CharFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321184815,
          "startTimestampDate": "2012-01-23T13:19:44.815",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184817,
          "startTimestampDate": "2012-01-23T13:19:44.817",
          "executionTime": 1,
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184818,
          "startTimestampDate": "2012-01-23T13:19:44.818",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184818,
          "startTimestampDate": "2012-01-23T13:19:44.818",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184818,
          "startTimestampDate": "2012-01-23T13:19:44.818",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184818,
          "startTimestampDate": "2012-01-23T13:19:44.818",
          "executionTime": 26,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184845,
          "startTimestampDate": "2012-01-23T13:19:44.845",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184846,
          "startTimestampDate": "2012-01-23T13:19:44.846",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184846,
          "startTimestampDate": "2012-01-23T13:19:44.846",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184847,
          "startTimestampDate": "2012-01-23T13:19:44.847",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184847,
          "startTimestampDate": "2012-01-23T13:19:44.847",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184848,
          "startTimestampDate": "2012-01-23T13:19:44.848",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184850,
          "startTimestampDate": "2012-01-23T13:19:44.850",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184852,
          "startTimestampDate": "2012-01-23T13:19:44.852",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184852,
          "startTimestampDate": "2012-01-23T13:19:44.852",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184854,
          "startTimestampDate": "2012-01-23T13:19:44.854",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184855,
          "startTimestampDate": "2012-01-23T13:19:44.855",
          "executionTime": 14,
          "description": "id#testClear(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184869,
          "startTimestampDate": "2012-01-23T13:19:44.869",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184870,
          "startTimestampDate": "2012-01-23T13:19:44.870",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184871,
          "startTimestampDate": "2012-01-23T13:19:44.871",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184871,
          "startTimestampDate": "2012-01-23T13:19:44.871",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184872,
          "startTimestampDate": "2012-01-23T13:19:44.872",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184873,
          "startTimestampDate": "2012-01-23T13:19:44.873",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184873,
          "startTimestampDate": "2012-01-23T13:19:44.873",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184874,
          "startTimestampDate": "2012-01-23T13:19:44.874",
          "executionTime": 2,
          "description": "id#testToString(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharFloatOpenHashMapTest.testToString(CharFloatOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184877,
          "startTimestampDate": "2012-01-23T13:19:44.877",
          "executionTime": 2,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharFloatOpenHashMapTest.testAddRemoveSameHashCollision(CharFloatOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184880,
          "startTimestampDate": "2012-01-23T13:19:44.880",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184882,
          "startTimestampDate": "2012-01-23T13:19:44.882",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184883,
          "startTimestampDate": "2012-01-23T13:19:44.883",
          "executionTime": 10,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharFloatOpenHashMapTest.testToString(CharFloatOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharFloatOpenHashMapTest.testAddRemoveSameHashCollision(CharFloatOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharFloatOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321184921,
      "startTimestampDate": "2012-01-23T13:19:44.921",
      "executionTime": 737,
      "description": {
        "id": "id#com.carrotsearch.hppc.ObjectOpenHashSetTest[0]",
        "displayName": "com.carrotsearch.hppc.ObjectOpenHashSetTest",
        "className": "com.carrotsearch.hppc.ObjectOpenHashSetTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ObjectOpenHashSetTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ObjectOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectOpenHashSetTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ObjectOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ObjectOpenHashSetTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ObjectOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ObjectOpenHashSetTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ObjectOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ObjectOpenHashSetTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ObjectOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ObjectOpenHashSetTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ObjectOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ObjectOpenHashSetTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ObjectOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectOpenHashSetTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ObjectOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullKey(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
            "displayName": "testNullKey(com.carrotsearch.hppc.ObjectOpenHashSetTest)",
            "methodName": "testNullKey",
            "className": "com.carrotsearch.hppc.ObjectOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.ObjectOpenHashSetTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.ObjectOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeWithNulls(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
            "displayName": "testHashCodeWithNulls(com.carrotsearch.hppc.ObjectOpenHashSetTest)",
            "methodName": "testHashCodeWithNulls",
            "className": "com.carrotsearch.hppc.ObjectOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
            "displayName": "testAdd(com.carrotsearch.hppc.ObjectOpenHashSetTest)",
            "methodName": "testAdd",
            "className": "com.carrotsearch.hppc.ObjectOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAll(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
            "displayName": "testAddAll(com.carrotsearch.hppc.ObjectOpenHashSetTest)",
            "methodName": "testAddAll",
            "className": "com.carrotsearch.hppc.ObjectOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
            "displayName": "testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ObjectOpenHashSetTest)",
            "methodName": "testRemoveAllFromLookupContainer",
            "className": "com.carrotsearch.hppc.ObjectOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
            "displayName": "testRetainAllWithPredicate(com.carrotsearch.hppc.ObjectOpenHashSetTest)",
            "methodName": "testRetainAllWithPredicate",
            "className": "com.carrotsearch.hppc.ObjectOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd2(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
            "displayName": "testAdd2(com.carrotsearch.hppc.ObjectOpenHashSetTest)",
            "methodName": "testAdd2",
            "className": "com.carrotsearch.hppc.ObjectOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddVarArgs(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
            "displayName": "testAddVarArgs(com.carrotsearch.hppc.ObjectOpenHashSetTest)",
            "methodName": "testAddVarArgs",
            "className": "com.carrotsearch.hppc.ObjectOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
            "displayName": "testInitialCapacityAndGrowth(com.carrotsearch.hppc.ObjectOpenHashSetTest)",
            "methodName": "testInitialCapacityAndGrowth",
            "className": "com.carrotsearch.hppc.ObjectOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAgainstHashMap(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
            "displayName": "testAgainstHashMap(com.carrotsearch.hppc.ObjectOpenHashSetTest)",
            "methodName": "testAgainstHashMap",
            "className": "com.carrotsearch.hppc.ObjectOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321184926,
          "startTimestampDate": "2012-01-23T13:19:44.926",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184932,
          "startTimestampDate": "2012-01-23T13:19:44.932",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184933,
          "startTimestampDate": "2012-01-23T13:19:44.933",
          "executionTime": 0,
          "description": "id#testClear(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184933,
          "startTimestampDate": "2012-01-23T13:19:44.933",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184934,
          "startTimestampDate": "2012-01-23T13:19:44.934",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184934,
          "startTimestampDate": "2012-01-23T13:19:44.934",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184934,
          "startTimestampDate": "2012-01-23T13:19:44.934",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321184934,
          "startTimestampDate": "2012-01-23T13:19:44.934",
          "executionTime": 310,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185245,
          "startTimestampDate": "2012-01-23T13:19:45.245",
          "executionTime": 0,
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185245,
          "startTimestampDate": "2012-01-23T13:19:45.245",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185245,
          "startTimestampDate": "2012-01-23T13:19:45.245",
          "executionTime": 0,
          "description": "id#testHashCodeWithNulls(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185246,
          "startTimestampDate": "2012-01-23T13:19:45.246",
          "executionTime": 0,
          "description": "id#testAdd(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185247,
          "startTimestampDate": "2012-01-23T13:19:45.247",
          "executionTime": 0,
          "description": "id#testAddAll(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185247,
          "startTimestampDate": "2012-01-23T13:19:45.247",
          "executionTime": 0,
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185248,
          "startTimestampDate": "2012-01-23T13:19:45.248",
          "executionTime": 0,
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185249,
          "startTimestampDate": "2012-01-23T13:19:45.249",
          "executionTime": 1,
          "description": "id#testAdd2(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185250,
          "startTimestampDate": "2012-01-23T13:19:45.250",
          "executionTime": 0,
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185251,
          "startTimestampDate": "2012-01-23T13:19:45.251",
          "executionTime": 6,
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185258,
          "startTimestampDate": "2012-01-23T13:19:45.258",
          "executionTime": 399,
          "description": "id#testAgainstHashMap(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeWithNulls(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeWithNulls(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAll(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAll(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd2(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd2(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAgainstHashMap(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAgainstHashMap(com.carrotsearch.hppc.ObjectOpenHashSetTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321185696,
      "startTimestampDate": "2012-01-23T13:19:45.696",
      "executionTime": 260,
      "description": {
        "id": "id#com.carrotsearch.hppc.IntLongOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
        "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.IntLongOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.IntLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321185708,
          "startTimestampDate": "2012-01-23T13:19:45.708",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185714,
          "startTimestampDate": "2012-01-23T13:19:45.714",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185714,
          "startTimestampDate": "2012-01-23T13:19:45.714",
          "executionTime": 1,
          "description": "id#testPut(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185715,
          "startTimestampDate": "2012-01-23T13:19:45.715",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185716,
          "startTimestampDate": "2012-01-23T13:19:45.716",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185716,
          "startTimestampDate": "2012-01-23T13:19:45.716",
          "executionTime": 37,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185754,
          "startTimestampDate": "2012-01-23T13:19:45.754",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185754,
          "startTimestampDate": "2012-01-23T13:19:45.754",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185755,
          "startTimestampDate": "2012-01-23T13:19:45.755",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185755,
          "startTimestampDate": "2012-01-23T13:19:45.755",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185756,
          "startTimestampDate": "2012-01-23T13:19:45.756",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185756,
          "startTimestampDate": "2012-01-23T13:19:45.756",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185758,
          "startTimestampDate": "2012-01-23T13:19:45.758",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185760,
          "startTimestampDate": "2012-01-23T13:19:45.760",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185760,
          "startTimestampDate": "2012-01-23T13:19:45.760",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185762,
          "startTimestampDate": "2012-01-23T13:19:45.762",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185763,
          "startTimestampDate": "2012-01-23T13:19:45.763",
          "executionTime": 13,
          "description": "id#testClear(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185777,
          "startTimestampDate": "2012-01-23T13:19:45.777",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185778,
          "startTimestampDate": "2012-01-23T13:19:45.778",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185779,
          "startTimestampDate": "2012-01-23T13:19:45.779",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185779,
          "startTimestampDate": "2012-01-23T13:19:45.779",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185780,
          "startTimestampDate": "2012-01-23T13:19:45.780",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185780,
          "startTimestampDate": "2012-01-23T13:19:45.780",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185781,
          "startTimestampDate": "2012-01-23T13:19:45.781",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185781,
          "startTimestampDate": "2012-01-23T13:19:45.781",
          "executionTime": 1,
          "description": "id#testToString(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185782,
          "startTimestampDate": "2012-01-23T13:19:45.782",
          "executionTime": 171,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185954,
          "startTimestampDate": "2012-01-23T13:19:45.954",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185955,
          "startTimestampDate": "2012-01-23T13:19:45.955",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185955,
          "startTimestampDate": "2012-01-23T13:19:45.955",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntLongOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321185982,
      "startTimestampDate": "2012-01-23T13:19:45.982",
      "executionTime": 85,
      "description": {
        "id": "id#com.carrotsearch.hppc.FloatByteOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
        "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.FloatByteOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.FloatByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321185992,
          "startTimestampDate": "2012-01-23T13:19:45.992",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185993,
          "startTimestampDate": "2012-01-23T13:19:45.993",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185993,
          "startTimestampDate": "2012-01-23T13:19:45.993",
          "executionTime": 1,
          "description": "id#testPut(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185994,
          "startTimestampDate": "2012-01-23T13:19:45.994",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185994,
          "startTimestampDate": "2012-01-23T13:19:45.994",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321185994,
          "startTimestampDate": "2012-01-23T13:19:45.994",
          "executionTime": 27,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186022,
          "startTimestampDate": "2012-01-23T13:19:46.022",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186022,
          "startTimestampDate": "2012-01-23T13:19:46.022",
          "executionTime": 1,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186023,
          "startTimestampDate": "2012-01-23T13:19:46.023",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186024,
          "startTimestampDate": "2012-01-23T13:19:46.024",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186025,
          "startTimestampDate": "2012-01-23T13:19:46.025",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186026,
          "startTimestampDate": "2012-01-23T13:19:46.026",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186027,
          "startTimestampDate": "2012-01-23T13:19:46.027",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186029,
          "startTimestampDate": "2012-01-23T13:19:46.029",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186030,
          "startTimestampDate": "2012-01-23T13:19:46.030",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186031,
          "startTimestampDate": "2012-01-23T13:19:46.031",
          "executionTime": 1,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186032,
          "startTimestampDate": "2012-01-23T13:19:46.032",
          "executionTime": 14,
          "description": "id#testClear(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186046,
          "startTimestampDate": "2012-01-23T13:19:46.046",
          "executionTime": 1,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186047,
          "startTimestampDate": "2012-01-23T13:19:46.047",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186052,
          "startTimestampDate": "2012-01-23T13:19:46.052",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186053,
          "startTimestampDate": "2012-01-23T13:19:46.053",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186053,
          "startTimestampDate": "2012-01-23T13:19:46.053",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186054,
          "startTimestampDate": "2012-01-23T13:19:46.054",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186054,
          "startTimestampDate": "2012-01-23T13:19:46.054",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186055,
          "startTimestampDate": "2012-01-23T13:19:46.055",
          "executionTime": 2,
          "description": "id#testToString(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatByteOpenHashMapTest.testToString(FloatByteOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186058,
          "startTimestampDate": "2012-01-23T13:19:46.058",
          "executionTime": 2,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatByteOpenHashMapTest.testAddRemoveSameHashCollision(FloatByteOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186061,
          "startTimestampDate": "2012-01-23T13:19:46.061",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186063,
          "startTimestampDate": "2012-01-23T13:19:46.063",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186065,
          "startTimestampDate": "2012-01-23T13:19:46.065",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatByteOpenHashMapTest.testToString(FloatByteOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatByteOpenHashMapTest.testAddRemoveSameHashCollision(FloatByteOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatByteOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321186113,
      "startTimestampDate": "2012-01-23T13:19:46.113",
      "executionTime": 136,
      "description": {
        "id": "id#com.carrotsearch.hppc.DoubleShortOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
        "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.DoubleShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321186120,
          "startTimestampDate": "2012-01-23T13:19:46.120",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186127,
          "startTimestampDate": "2012-01-23T13:19:46.127",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186127,
          "startTimestampDate": "2012-01-23T13:19:46.127",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186128,
          "startTimestampDate": "2012-01-23T13:19:46.128",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186128,
          "startTimestampDate": "2012-01-23T13:19:46.128",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186129,
          "startTimestampDate": "2012-01-23T13:19:46.129",
          "executionTime": 43,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186173,
          "startTimestampDate": "2012-01-23T13:19:46.173",
          "executionTime": 4,
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186178,
          "startTimestampDate": "2012-01-23T13:19:46.178",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186178,
          "startTimestampDate": "2012-01-23T13:19:46.178",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186179,
          "startTimestampDate": "2012-01-23T13:19:46.179",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186179,
          "startTimestampDate": "2012-01-23T13:19:46.179",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186180,
          "startTimestampDate": "2012-01-23T13:19:46.180",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186181,
          "startTimestampDate": "2012-01-23T13:19:46.181",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186183,
          "startTimestampDate": "2012-01-23T13:19:46.183",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186183,
          "startTimestampDate": "2012-01-23T13:19:46.183",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186185,
          "startTimestampDate": "2012-01-23T13:19:46.185",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186186,
          "startTimestampDate": "2012-01-23T13:19:46.186",
          "executionTime": 32,
          "description": "id#testClear(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186225,
          "startTimestampDate": "2012-01-23T13:19:46.225",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186226,
          "startTimestampDate": "2012-01-23T13:19:46.226",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186226,
          "startTimestampDate": "2012-01-23T13:19:46.226",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186227,
          "startTimestampDate": "2012-01-23T13:19:46.227",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186227,
          "startTimestampDate": "2012-01-23T13:19:46.227",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186228,
          "startTimestampDate": "2012-01-23T13:19:46.228",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186228,
          "startTimestampDate": "2012-01-23T13:19:46.228",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186229,
          "startTimestampDate": "2012-01-23T13:19:46.229",
          "executionTime": 4,
          "description": "id#testToString(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleShortOpenHashMapTest.testToString(DoubleShortOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186235,
          "startTimestampDate": "2012-01-23T13:19:46.235",
          "executionTime": 2,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleShortOpenHashMapTest.testAddRemoveSameHashCollision(DoubleShortOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186245,
          "startTimestampDate": "2012-01-23T13:19:46.245",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186247,
          "startTimestampDate": "2012-01-23T13:19:46.247",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186247,
          "startTimestampDate": "2012-01-23T13:19:46.247",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleShortOpenHashMapTest.testToString(DoubleShortOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleShortOpenHashMapTest.testAddRemoveSameHashCollision(DoubleShortOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleShortOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321186291,
      "startTimestampDate": "2012-01-23T13:19:46.291",
      "executionTime": 180,
      "description": {
        "id": "id#com.carrotsearch.hppc.FloatArrayDequeTest[0]",
        "displayName": "com.carrotsearch.hppc.FloatArrayDequeTest",
        "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddFirst(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testAddFirst(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testAddFirst",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddLast(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testAddLast(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testAddLast",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddWithGrowth(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testAddWithGrowth(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testAddWithGrowth",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddLastWithGrowth(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testAddLastWithGrowth(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testAddLastWithGrowth",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllFirst(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testAddAllFirst(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testAddAllFirst",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllLast(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testAddAllLast(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testAddAllLast",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirst(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testRemoveFirst(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testRemoveFirst",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testRemoveFirstEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testRemoveFirstEmpty",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLast(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testRemoveLast(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testRemoveLast",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLastEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testRemoveLastEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testRemoveLastEmpty",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetFirst(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testGetFirst(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testGetFirst",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetFirstEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testGetFirstEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testGetFirstEmpty",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetLast(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testGetLast(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testGetLast",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetLastEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testGetLastEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testGetLastEmpty",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testRemoveFirstOccurrence(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testRemoveFirstOccurrence",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testRemoveLastOccurrence(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testRemoveLastOccurrence",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testRemoveAllOccurrences(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testRemoveAllOccurrences",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testRemoveAllInLookupContainer(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testRemoveAllInLookupContainer",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testRemoveAllWithPredicateInterrupted",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRelease(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testRelease(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testRelease",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterator(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testIterator(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testIterator",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDescendingIterator(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testDescendingIterator(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testDescendingIterator",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachWithProcedure(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testForEachWithProcedure(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testForEachWithProcedure",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
            "displayName": "testDescendingForEachWithProcedure(com.carrotsearch.hppc.FloatArrayDequeTest)",
            "methodName": "testDescendingForEachWithProcedure",
            "className": "com.carrotsearch.hppc.FloatArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321186307,
          "startTimestampDate": "2012-01-23T13:19:46.307",
          "executionTime": 12,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186324,
          "startTimestampDate": "2012-01-23T13:19:46.324",
          "executionTime": 14,
          "description": "id#testClear(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186340,
          "startTimestampDate": "2012-01-23T13:19:46.340",
          "executionTime": 22,
          "description": "id#testIterable(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186362,
          "startTimestampDate": "2012-01-23T13:19:46.362",
          "executionTime": 1,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186363,
          "startTimestampDate": "2012-01-23T13:19:46.363",
          "executionTime": 1,
          "description": "id#testClone(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186364,
          "startTimestampDate": "2012-01-23T13:19:46.364",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186365,
          "startTimestampDate": "2012-01-23T13:19:46.365",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186366,
          "startTimestampDate": "2012-01-23T13:19:46.366",
          "executionTime": 0,
          "description": "id#testAddFirst(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186367,
          "startTimestampDate": "2012-01-23T13:19:46.367",
          "executionTime": 0,
          "description": "id#testAddLast(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186367,
          "startTimestampDate": "2012-01-23T13:19:46.367",
          "executionTime": 15,
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186383,
          "startTimestampDate": "2012-01-23T13:19:46.383",
          "executionTime": 5,
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186389,
          "startTimestampDate": "2012-01-23T13:19:46.389",
          "executionTime": 4,
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186394,
          "startTimestampDate": "2012-01-23T13:19:46.394",
          "executionTime": 5,
          "description": "id#testAddAllLast(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186400,
          "startTimestampDate": "2012-01-23T13:19:46.400",
          "executionTime": 0,
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186400,
          "startTimestampDate": "2012-01-23T13:19:46.400",
          "executionTime": 1,
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186404,
          "startTimestampDate": "2012-01-23T13:19:46.404",
          "executionTime": 1,
          "description": "id#testRemoveLast(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186405,
          "startTimestampDate": "2012-01-23T13:19:46.405",
          "executionTime": 1,
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186407,
          "startTimestampDate": "2012-01-23T13:19:46.407",
          "executionTime": 0,
          "description": "id#testGetFirst(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186408,
          "startTimestampDate": "2012-01-23T13:19:46.408",
          "executionTime": 0,
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186409,
          "startTimestampDate": "2012-01-23T13:19:46.409",
          "executionTime": 0,
          "description": "id#testGetLast(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186410,
          "startTimestampDate": "2012-01-23T13:19:46.410",
          "executionTime": 0,
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186410,
          "startTimestampDate": "2012-01-23T13:19:46.410",
          "executionTime": 16,
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186427,
          "startTimestampDate": "2012-01-23T13:19:46.427",
          "executionTime": 14,
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186442,
          "startTimestampDate": "2012-01-23T13:19:46.442",
          "executionTime": 0,
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186442,
          "startTimestampDate": "2012-01-23T13:19:46.442",
          "executionTime": 1,
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186443,
          "startTimestampDate": "2012-01-23T13:19:46.443",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186444,
          "startTimestampDate": "2012-01-23T13:19:46.444",
          "executionTime": 1,
          "description": "id#testRelease(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186445,
          "startTimestampDate": "2012-01-23T13:19:46.445",
          "executionTime": 0,
          "description": "id#testIterator(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186446,
          "startTimestampDate": "2012-01-23T13:19:46.446",
          "executionTime": 11,
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186458,
          "startTimestampDate": "2012-01-23T13:19:46.458",
          "executionTime": 6,
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186465,
          "startTimestampDate": "2012-01-23T13:19:46.465",
          "executionTime": 6,
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.FloatArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddFirst(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddFirst(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddLast(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddLast(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllLast(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllLast(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLast(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLast(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetFirst(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetFirst(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetLast(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetLast(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRelease(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRelease(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterator(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterator(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.FloatArrayDequeTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321186511,
      "startTimestampDate": "2012-01-23T13:19:46.511",
      "executionTime": 56,
      "description": {
        "id": "id#com.carrotsearch.hppc.DoubleOpenHashSetTest[0]",
        "displayName": "com.carrotsearch.hppc.DoubleOpenHashSetTest",
        "className": "com.carrotsearch.hppc.DoubleOpenHashSetTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemove(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.DoubleOpenHashSetTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.DoubleOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleOpenHashSetTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.DoubleOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.DoubleOpenHashSetTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.DoubleOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.DoubleOpenHashSetTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.DoubleOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.DoubleOpenHashSetTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.DoubleOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.DoubleOpenHashSetTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.DoubleOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.DoubleOpenHashSetTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.DoubleOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleOpenHashSetTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.DoubleOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.DoubleOpenHashSetTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.DoubleOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
            "displayName": "testAdd(com.carrotsearch.hppc.DoubleOpenHashSetTest)",
            "methodName": "testAdd",
            "className": "com.carrotsearch.hppc.DoubleOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAll(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
            "displayName": "testAddAll(com.carrotsearch.hppc.DoubleOpenHashSetTest)",
            "methodName": "testAddAll",
            "className": "com.carrotsearch.hppc.DoubleOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
            "displayName": "testRemoveAllFromLookupContainer(com.carrotsearch.hppc.DoubleOpenHashSetTest)",
            "methodName": "testRemoveAllFromLookupContainer",
            "className": "com.carrotsearch.hppc.DoubleOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
            "displayName": "testRetainAllWithPredicate(com.carrotsearch.hppc.DoubleOpenHashSetTest)",
            "methodName": "testRetainAllWithPredicate",
            "className": "com.carrotsearch.hppc.DoubleOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd2(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
            "displayName": "testAdd2(com.carrotsearch.hppc.DoubleOpenHashSetTest)",
            "methodName": "testAdd2",
            "className": "com.carrotsearch.hppc.DoubleOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddVarArgs(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
            "displayName": "testAddVarArgs(com.carrotsearch.hppc.DoubleOpenHashSetTest)",
            "methodName": "testAddVarArgs",
            "className": "com.carrotsearch.hppc.DoubleOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
            "displayName": "testInitialCapacityAndGrowth(com.carrotsearch.hppc.DoubleOpenHashSetTest)",
            "methodName": "testInitialCapacityAndGrowth",
            "className": "com.carrotsearch.hppc.DoubleOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321186515,
          "startTimestampDate": "2012-01-23T13:19:46.515",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186518,
          "startTimestampDate": "2012-01-23T13:19:46.518",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186519,
          "startTimestampDate": "2012-01-23T13:19:46.519",
          "executionTime": 0,
          "description": "id#testClear(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186519,
          "startTimestampDate": "2012-01-23T13:19:46.519",
          "executionTime": 1,
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186520,
          "startTimestampDate": "2012-01-23T13:19:46.520",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186520,
          "startTimestampDate": "2012-01-23T13:19:46.520",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186520,
          "startTimestampDate": "2012-01-23T13:19:46.520",
          "executionTime": 2,
          "description": "id#testToString(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleOpenHashSetTest.testToString(DoubleOpenHashSetTest.java:315)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186522,
          "startTimestampDate": "2012-01-23T13:19:46.522",
          "executionTime": 4,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleOpenHashSetTest.testAddRemoveSameHashCollision(DoubleOpenHashSetTest.java:55)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186527,
          "startTimestampDate": "2012-01-23T13:19:46.527",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186527,
          "startTimestampDate": "2012-01-23T13:19:46.527",
          "executionTime": 0,
          "description": "id#testAdd(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186528,
          "startTimestampDate": "2012-01-23T13:19:46.528",
          "executionTime": 0,
          "description": "id#testAddAll(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186528,
          "startTimestampDate": "2012-01-23T13:19:46.528",
          "executionTime": 1,
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186529,
          "startTimestampDate": "2012-01-23T13:19:46.529",
          "executionTime": 1,
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186530,
          "startTimestampDate": "2012-01-23T13:19:46.530",
          "executionTime": 1,
          "description": "id#testAdd2(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186531,
          "startTimestampDate": "2012-01-23T13:19:46.531",
          "executionTime": 0,
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186532,
          "startTimestampDate": "2012-01-23T13:19:46.532",
          "executionTime": 34,
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleOpenHashSetTest.testToString(DoubleOpenHashSetTest.java:315)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleOpenHashSetTest.testAddRemoveSameHashCollision(DoubleOpenHashSetTest.java:55)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAll(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAll(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd2(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd2(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.DoubleOpenHashSetTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321186616,
      "startTimestampDate": "2012-01-23T13:19:46.616",
      "executionTime": 211,
      "description": {
        "id": "id#com.carrotsearch.hppc.ByteArrayDequeTest[0]",
        "displayName": "com.carrotsearch.hppc.ByteArrayDequeTest",
        "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddFirst(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testAddFirst(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testAddFirst",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddLast(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testAddLast(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testAddLast",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddWithGrowth(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testAddWithGrowth(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testAddWithGrowth",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddLastWithGrowth(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testAddLastWithGrowth(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testAddLastWithGrowth",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllFirst(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testAddAllFirst(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testAddAllFirst",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllLast(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testAddAllLast(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testAddAllLast",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirst(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testRemoveFirst(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testRemoveFirst",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testRemoveFirstEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testRemoveFirstEmpty",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLast(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testRemoveLast(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testRemoveLast",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLastEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testRemoveLastEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testRemoveLastEmpty",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetFirst(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testGetFirst(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testGetFirst",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetFirstEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testGetFirstEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testGetFirstEmpty",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetLast(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testGetLast(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testGetLast",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetLastEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testGetLastEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testGetLastEmpty",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testRemoveFirstOccurrence(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testRemoveFirstOccurrence",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testRemoveLastOccurrence(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testRemoveLastOccurrence",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testRemoveAllOccurrences(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testRemoveAllOccurrences",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testRemoveAllInLookupContainer(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testRemoveAllInLookupContainer",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testRemoveAllWithPredicateInterrupted",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRelease(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testRelease(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testRelease",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterator(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testIterator(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testIterator",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDescendingIterator(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testDescendingIterator(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testDescendingIterator",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachWithProcedure(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testForEachWithProcedure(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testForEachWithProcedure",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
            "displayName": "testDescendingForEachWithProcedure(com.carrotsearch.hppc.ByteArrayDequeTest)",
            "methodName": "testDescendingForEachWithProcedure",
            "className": "com.carrotsearch.hppc.ByteArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321186637,
          "startTimestampDate": "2012-01-23T13:19:46.637",
          "executionTime": 13,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186657,
          "startTimestampDate": "2012-01-23T13:19:46.657",
          "executionTime": 15,
          "description": "id#testClear(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186673,
          "startTimestampDate": "2012-01-23T13:19:46.673",
          "executionTime": 46,
          "description": "id#testIterable(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186720,
          "startTimestampDate": "2012-01-23T13:19:46.720",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186720,
          "startTimestampDate": "2012-01-23T13:19:46.720",
          "executionTime": 1,
          "description": "id#testClone(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186721,
          "startTimestampDate": "2012-01-23T13:19:46.721",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186722,
          "startTimestampDate": "2012-01-23T13:19:46.722",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186722,
          "startTimestampDate": "2012-01-23T13:19:46.722",
          "executionTime": 1,
          "description": "id#testAddFirst(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186723,
          "startTimestampDate": "2012-01-23T13:19:46.723",
          "executionTime": 0,
          "description": "id#testAddLast(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186724,
          "startTimestampDate": "2012-01-23T13:19:46.724",
          "executionTime": 22,
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186747,
          "startTimestampDate": "2012-01-23T13:19:46.747",
          "executionTime": 5,
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186758,
          "startTimestampDate": "2012-01-23T13:19:46.758",
          "executionTime": 2,
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186761,
          "startTimestampDate": "2012-01-23T13:19:46.761",
          "executionTime": 6,
          "description": "id#testAddAllLast(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186768,
          "startTimestampDate": "2012-01-23T13:19:46.768",
          "executionTime": 0,
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186769,
          "startTimestampDate": "2012-01-23T13:19:46.769",
          "executionTime": 0,
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186770,
          "startTimestampDate": "2012-01-23T13:19:46.770",
          "executionTime": 1,
          "description": "id#testRemoveLast(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186771,
          "startTimestampDate": "2012-01-23T13:19:46.771",
          "executionTime": 0,
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186772,
          "startTimestampDate": "2012-01-23T13:19:46.772",
          "executionTime": 0,
          "description": "id#testGetFirst(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186772,
          "startTimestampDate": "2012-01-23T13:19:46.772",
          "executionTime": 1,
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186773,
          "startTimestampDate": "2012-01-23T13:19:46.773",
          "executionTime": 0,
          "description": "id#testGetLast(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186774,
          "startTimestampDate": "2012-01-23T13:19:46.774",
          "executionTime": 0,
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186775,
          "startTimestampDate": "2012-01-23T13:19:46.775",
          "executionTime": 12,
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186788,
          "startTimestampDate": "2012-01-23T13:19:46.788",
          "executionTime": 11,
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186800,
          "startTimestampDate": "2012-01-23T13:19:46.800",
          "executionTime": 0,
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186801,
          "startTimestampDate": "2012-01-23T13:19:46.801",
          "executionTime": 0,
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186801,
          "startTimestampDate": "2012-01-23T13:19:46.801",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186803,
          "startTimestampDate": "2012-01-23T13:19:46.803",
          "executionTime": 0,
          "description": "id#testRelease(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186803,
          "startTimestampDate": "2012-01-23T13:19:46.803",
          "executionTime": 1,
          "description": "id#testIterator(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186804,
          "startTimestampDate": "2012-01-23T13:19:46.804",
          "executionTime": 10,
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186814,
          "startTimestampDate": "2012-01-23T13:19:46.814",
          "executionTime": 7,
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186822,
          "startTimestampDate": "2012-01-23T13:19:46.822",
          "executionTime": 4,
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.ByteArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddFirst(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddFirst(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddLast(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddLast(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllLast(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllLast(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLast(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLast(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetFirst(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetFirst(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetLast(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetLast(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRelease(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRelease(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterator(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterator(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.ByteArrayDequeTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321186857,
      "startTimestampDate": "2012-01-23T13:19:46.857",
      "executionTime": 132,
      "description": {
        "id": "id#com.carrotsearch.hppc.ShortByteOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ShortByteOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ShortByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321186868,
          "startTimestampDate": "2012-01-23T13:19:46.868",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186882,
          "startTimestampDate": "2012-01-23T13:19:46.882",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186883,
          "startTimestampDate": "2012-01-23T13:19:46.883",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186887,
          "startTimestampDate": "2012-01-23T13:19:46.887",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186887,
          "startTimestampDate": "2012-01-23T13:19:46.887",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186888,
          "startTimestampDate": "2012-01-23T13:19:46.888",
          "executionTime": 51,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186940,
          "startTimestampDate": "2012-01-23T13:19:46.940",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186940,
          "startTimestampDate": "2012-01-23T13:19:46.940",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186941,
          "startTimestampDate": "2012-01-23T13:19:46.941",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186941,
          "startTimestampDate": "2012-01-23T13:19:46.941",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186942,
          "startTimestampDate": "2012-01-23T13:19:46.942",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186943,
          "startTimestampDate": "2012-01-23T13:19:46.943",
          "executionTime": 4,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186948,
          "startTimestampDate": "2012-01-23T13:19:46.948",
          "executionTime": 2,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186950,
          "startTimestampDate": "2012-01-23T13:19:46.950",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186951,
          "startTimestampDate": "2012-01-23T13:19:46.951",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186952,
          "startTimestampDate": "2012-01-23T13:19:46.952",
          "executionTime": 1,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186954,
          "startTimestampDate": "2012-01-23T13:19:46.954",
          "executionTime": 21,
          "description": "id#testClear(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186976,
          "startTimestampDate": "2012-01-23T13:19:46.976",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186977,
          "startTimestampDate": "2012-01-23T13:19:46.977",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186977,
          "startTimestampDate": "2012-01-23T13:19:46.977",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186978,
          "startTimestampDate": "2012-01-23T13:19:46.978",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186978,
          "startTimestampDate": "2012-01-23T13:19:46.978",
          "executionTime": 1,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186979,
          "startTimestampDate": "2012-01-23T13:19:46.979",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186979,
          "startTimestampDate": "2012-01-23T13:19:46.979",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186980,
          "startTimestampDate": "2012-01-23T13:19:46.980",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186981,
          "startTimestampDate": "2012-01-23T13:19:46.981",
          "executionTime": 2,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortByteOpenHashMapTest.testAddRemoveSameHashCollision(ShortByteOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186985,
          "startTimestampDate": "2012-01-23T13:19:46.985",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186986,
          "startTimestampDate": "2012-01-23T13:19:46.986",
          "executionTime": 1,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321186987,
          "startTimestampDate": "2012-01-23T13:19:46.987",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortByteOpenHashMapTest.testAddRemoveSameHashCollision(ShortByteOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortByteOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321187034,
      "startTimestampDate": "2012-01-23T13:19:47.034",
      "executionTime": 6,
      "description": {
        "id": "id#com.carrotsearch.hppc.CharStackTest[0]",
        "displayName": "com.carrotsearch.hppc.CharStackTest",
        "className": "com.carrotsearch.hppc.CharStackTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.CharStackTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.CharStackTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.CharStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.CharStackTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.CharStackTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.CharStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.CharStackTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.CharStackTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.CharStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.CharStackTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.CharStackTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.CharStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPush1(com.carrotsearch.hppc.CharStackTest)[1]",
            "displayName": "testPush1(com.carrotsearch.hppc.CharStackTest)",
            "methodName": "testPush1",
            "className": "com.carrotsearch.hppc.CharStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPush2(com.carrotsearch.hppc.CharStackTest)[1]",
            "displayName": "testPush2(com.carrotsearch.hppc.CharStackTest)",
            "methodName": "testPush2",
            "className": "com.carrotsearch.hppc.CharStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPushArray(com.carrotsearch.hppc.CharStackTest)[1]",
            "displayName": "testPushArray(com.carrotsearch.hppc.CharStackTest)",
            "methodName": "testPushArray",
            "className": "com.carrotsearch.hppc.CharStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllPushAll(com.carrotsearch.hppc.CharStackTest)[1]",
            "displayName": "testAddAllPushAll(com.carrotsearch.hppc.CharStackTest)",
            "methodName": "testAddAllPushAll",
            "className": "com.carrotsearch.hppc.CharStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDiscard(com.carrotsearch.hppc.CharStackTest)[1]",
            "displayName": "testDiscard(com.carrotsearch.hppc.CharStackTest)",
            "methodName": "testDiscard",
            "className": "com.carrotsearch.hppc.CharStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetAssertions(com.carrotsearch.hppc.CharStackTest)[1]",
            "displayName": "testGetAssertions(com.carrotsearch.hppc.CharStackTest)",
            "methodName": "testGetAssertions",
            "className": "com.carrotsearch.hppc.CharStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDiscardAssertions(com.carrotsearch.hppc.CharStackTest)[1]",
            "displayName": "testDiscardAssertions(com.carrotsearch.hppc.CharStackTest)",
            "methodName": "testDiscardAssertions",
            "className": "com.carrotsearch.hppc.CharStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.CharStackTest)[1]",
            "displayName": "testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.CharStackTest)",
            "methodName": "testHashCodeEqualsWithOtherContainer",
            "className": "com.carrotsearch.hppc.CharStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321187037,
          "startTimestampDate": "2012-01-23T13:19:47.037",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187037,
          "startTimestampDate": "2012-01-23T13:19:47.037",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.CharStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187037,
          "startTimestampDate": "2012-01-23T13:19:47.037",
          "executionTime": 1,
          "description": "id#testToString(com.carrotsearch.hppc.CharStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187038,
          "startTimestampDate": "2012-01-23T13:19:47.038",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.CharStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187038,
          "startTimestampDate": "2012-01-23T13:19:47.038",
          "executionTime": 0,
          "description": "id#testPush1(com.carrotsearch.hppc.CharStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187038,
          "startTimestampDate": "2012-01-23T13:19:47.038",
          "executionTime": 0,
          "description": "id#testPush2(com.carrotsearch.hppc.CharStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187038,
          "startTimestampDate": "2012-01-23T13:19:47.038",
          "executionTime": 0,
          "description": "id#testPushArray(com.carrotsearch.hppc.CharStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187039,
          "startTimestampDate": "2012-01-23T13:19:47.039",
          "executionTime": 0,
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.CharStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187039,
          "startTimestampDate": "2012-01-23T13:19:47.039",
          "executionTime": 0,
          "description": "id#testDiscard(com.carrotsearch.hppc.CharStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187039,
          "startTimestampDate": "2012-01-23T13:19:47.039",
          "executionTime": 0,
          "description": "id#testGetAssertions(com.carrotsearch.hppc.CharStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187039,
          "startTimestampDate": "2012-01-23T13:19:47.039",
          "executionTime": 0,
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.CharStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187039,
          "startTimestampDate": "2012-01-23T13:19:47.039",
          "executionTime": 0,
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.CharStackTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPush1(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPush1(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPush2(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPush2(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPushArray(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPushArray(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDiscard(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDiscard(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetAssertions(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetAssertions(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.CharStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.CharStackTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321187077,
      "startTimestampDate": "2012-01-23T13:19:47.077",
      "executionTime": 121,
      "description": {
        "id": "id#com.carrotsearch.hppc.ByteShortOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ByteShortOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ByteShortOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321187098,
          "startTimestampDate": "2012-01-23T13:19:47.098",
          "executionTime": 1,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187103,
          "startTimestampDate": "2012-01-23T13:19:47.103",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187104,
          "startTimestampDate": "2012-01-23T13:19:47.104",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187104,
          "startTimestampDate": "2012-01-23T13:19:47.104",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187105,
          "startTimestampDate": "2012-01-23T13:19:47.105",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187105,
          "startTimestampDate": "2012-01-23T13:19:47.105",
          "executionTime": 20,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187125,
          "startTimestampDate": "2012-01-23T13:19:47.125",
          "executionTime": 1,
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187126,
          "startTimestampDate": "2012-01-23T13:19:47.126",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187126,
          "startTimestampDate": "2012-01-23T13:19:47.126",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187127,
          "startTimestampDate": "2012-01-23T13:19:47.127",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187128,
          "startTimestampDate": "2012-01-23T13:19:47.128",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187129,
          "startTimestampDate": "2012-01-23T13:19:47.129",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187134,
          "startTimestampDate": "2012-01-23T13:19:47.134",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187136,
          "startTimestampDate": "2012-01-23T13:19:47.136",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187137,
          "startTimestampDate": "2012-01-23T13:19:47.137",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187139,
          "startTimestampDate": "2012-01-23T13:19:47.139",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187141,
          "startTimestampDate": "2012-01-23T13:19:47.141",
          "executionTime": 29,
          "description": "id#testClear(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187171,
          "startTimestampDate": "2012-01-23T13:19:47.171",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187171,
          "startTimestampDate": "2012-01-23T13:19:47.171",
          "executionTime": 1,
          "description": "id#testIterable(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187172,
          "startTimestampDate": "2012-01-23T13:19:47.172",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187173,
          "startTimestampDate": "2012-01-23T13:19:47.173",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187179,
          "startTimestampDate": "2012-01-23T13:19:47.179",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187180,
          "startTimestampDate": "2012-01-23T13:19:47.180",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187180,
          "startTimestampDate": "2012-01-23T13:19:47.180",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187181,
          "startTimestampDate": "2012-01-23T13:19:47.181",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187182,
          "startTimestampDate": "2012-01-23T13:19:47.182",
          "executionTime": 2,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteShortOpenHashMapTest.testAddRemoveSameHashCollision(ByteShortOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187185,
          "startTimestampDate": "2012-01-23T13:19:47.185",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187187,
          "startTimestampDate": "2012-01-23T13:19:47.187",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187189,
          "startTimestampDate": "2012-01-23T13:19:47.189",
          "executionTime": 8,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteShortOpenHashMapTest.testAddRemoveSameHashCollision(ByteShortOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteShortOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321187238,
      "startTimestampDate": "2012-01-23T13:19:47.238",
      "executionTime": 128,
      "description": {
        "id": "id#com.carrotsearch.hppc.CharObjectOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
        "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullValue(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
            "displayName": "testNullValue(com.carrotsearch.hppc.CharObjectOpenHashMapTest)",
            "methodName": "testNullValue",
            "className": "com.carrotsearch.hppc.CharObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321187245,
          "startTimestampDate": "2012-01-23T13:19:47.245",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187256,
          "startTimestampDate": "2012-01-23T13:19:47.256",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187256,
          "startTimestampDate": "2012-01-23T13:19:47.256",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187257,
          "startTimestampDate": "2012-01-23T13:19:47.257",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187257,
          "startTimestampDate": "2012-01-23T13:19:47.257",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187257,
          "startTimestampDate": "2012-01-23T13:19:47.257",
          "executionTime": 36,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187294,
          "startTimestampDate": "2012-01-23T13:19:47.294",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187295,
          "startTimestampDate": "2012-01-23T13:19:47.295",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187295,
          "startTimestampDate": "2012-01-23T13:19:47.295",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187295,
          "startTimestampDate": "2012-01-23T13:19:47.295",
          "executionTime": 1,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187296,
          "startTimestampDate": "2012-01-23T13:19:47.296",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187297,
          "startTimestampDate": "2012-01-23T13:19:47.297",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187299,
          "startTimestampDate": "2012-01-23T13:19:47.299",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187300,
          "startTimestampDate": "2012-01-23T13:19:47.300",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187301,
          "startTimestampDate": "2012-01-23T13:19:47.301",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187302,
          "startTimestampDate": "2012-01-23T13:19:47.302",
          "executionTime": 34,
          "description": "id#testClear(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187339,
          "startTimestampDate": "2012-01-23T13:19:47.339",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187343,
          "startTimestampDate": "2012-01-23T13:19:47.343",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187344,
          "startTimestampDate": "2012-01-23T13:19:47.344",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187344,
          "startTimestampDate": "2012-01-23T13:19:47.344",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187345,
          "startTimestampDate": "2012-01-23T13:19:47.345",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187345,
          "startTimestampDate": "2012-01-23T13:19:47.345",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187346,
          "startTimestampDate": "2012-01-23T13:19:47.346",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187346,
          "startTimestampDate": "2012-01-23T13:19:47.346",
          "executionTime": 2,
          "description": "id#testToString(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharObjectOpenHashMapTest.testToString(CharObjectOpenHashMapTest.java:502)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187354,
          "startTimestampDate": "2012-01-23T13:19:47.354",
          "executionTime": 2,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharObjectOpenHashMapTest.testAddRemoveSameHashCollision(CharObjectOpenHashMapTest.java:528)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187357,
          "startTimestampDate": "2012-01-23T13:19:47.357",
          "executionTime": 2,
          "description": "id#testMapValues(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187363,
          "startTimestampDate": "2012-01-23T13:19:47.363",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187364,
          "startTimestampDate": "2012-01-23T13:19:47.364",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187366,
          "startTimestampDate": "2012-01-23T13:19:47.366",
          "executionTime": 0,
          "description": "id#testNullValue(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharObjectOpenHashMapTest.testToString(CharObjectOpenHashMapTest.java:502)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharObjectOpenHashMapTest.testAddRemoveSameHashCollision(CharObjectOpenHashMapTest.java:528)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullValue(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullValue(com.carrotsearch.hppc.CharObjectOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321187417,
      "startTimestampDate": "2012-01-23T13:19:47.417",
      "executionTime": 6,
      "description": {
        "id": "id#com.carrotsearch.hppc.FloatStackTest[0]",
        "displayName": "com.carrotsearch.hppc.FloatStackTest",
        "className": "com.carrotsearch.hppc.FloatStackTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatStackTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.FloatStackTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.FloatStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.FloatStackTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.FloatStackTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.FloatStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.FloatStackTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.FloatStackTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.FloatStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.FloatStackTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.FloatStackTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.FloatStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPush1(com.carrotsearch.hppc.FloatStackTest)[1]",
            "displayName": "testPush1(com.carrotsearch.hppc.FloatStackTest)",
            "methodName": "testPush1",
            "className": "com.carrotsearch.hppc.FloatStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPush2(com.carrotsearch.hppc.FloatStackTest)[1]",
            "displayName": "testPush2(com.carrotsearch.hppc.FloatStackTest)",
            "methodName": "testPush2",
            "className": "com.carrotsearch.hppc.FloatStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPushArray(com.carrotsearch.hppc.FloatStackTest)[1]",
            "displayName": "testPushArray(com.carrotsearch.hppc.FloatStackTest)",
            "methodName": "testPushArray",
            "className": "com.carrotsearch.hppc.FloatStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllPushAll(com.carrotsearch.hppc.FloatStackTest)[1]",
            "displayName": "testAddAllPushAll(com.carrotsearch.hppc.FloatStackTest)",
            "methodName": "testAddAllPushAll",
            "className": "com.carrotsearch.hppc.FloatStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDiscard(com.carrotsearch.hppc.FloatStackTest)[1]",
            "displayName": "testDiscard(com.carrotsearch.hppc.FloatStackTest)",
            "methodName": "testDiscard",
            "className": "com.carrotsearch.hppc.FloatStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetAssertions(com.carrotsearch.hppc.FloatStackTest)[1]",
            "displayName": "testGetAssertions(com.carrotsearch.hppc.FloatStackTest)",
            "methodName": "testGetAssertions",
            "className": "com.carrotsearch.hppc.FloatStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDiscardAssertions(com.carrotsearch.hppc.FloatStackTest)[1]",
            "displayName": "testDiscardAssertions(com.carrotsearch.hppc.FloatStackTest)",
            "methodName": "testDiscardAssertions",
            "className": "com.carrotsearch.hppc.FloatStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.FloatStackTest)[1]",
            "displayName": "testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.FloatStackTest)",
            "methodName": "testHashCodeEqualsWithOtherContainer",
            "className": "com.carrotsearch.hppc.FloatStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321187420,
          "startTimestampDate": "2012-01-23T13:19:47.420",
          "executionTime": 1,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187421,
          "startTimestampDate": "2012-01-23T13:19:47.421",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.FloatStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187421,
          "startTimestampDate": "2012-01-23T13:19:47.421",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.FloatStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187421,
          "startTimestampDate": "2012-01-23T13:19:47.421",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.FloatStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187422,
          "startTimestampDate": "2012-01-23T13:19:47.422",
          "executionTime": 0,
          "description": "id#testPush1(com.carrotsearch.hppc.FloatStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187422,
          "startTimestampDate": "2012-01-23T13:19:47.422",
          "executionTime": 0,
          "description": "id#testPush2(com.carrotsearch.hppc.FloatStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187422,
          "startTimestampDate": "2012-01-23T13:19:47.422",
          "executionTime": 0,
          "description": "id#testPushArray(com.carrotsearch.hppc.FloatStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187422,
          "startTimestampDate": "2012-01-23T13:19:47.422",
          "executionTime": 0,
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.FloatStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187422,
          "startTimestampDate": "2012-01-23T13:19:47.422",
          "executionTime": 0,
          "description": "id#testDiscard(com.carrotsearch.hppc.FloatStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187423,
          "startTimestampDate": "2012-01-23T13:19:47.423",
          "executionTime": 0,
          "description": "id#testGetAssertions(com.carrotsearch.hppc.FloatStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187423,
          "startTimestampDate": "2012-01-23T13:19:47.423",
          "executionTime": 0,
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.FloatStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187423,
          "startTimestampDate": "2012-01-23T13:19:47.423",
          "executionTime": 0,
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.FloatStackTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPush1(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPush1(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPush2(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPush2(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPushArray(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPushArray(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDiscard(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDiscard(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetAssertions(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetAssertions(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.FloatStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.FloatStackTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321187452,
      "startTimestampDate": "2012-01-23T13:19:47.452",
      "executionTime": 38,
      "description": {
        "id": "id#com.carrotsearch.hppc.IntArrayListTest[0]",
        "displayName": "com.carrotsearch.hppc.IntArrayListTest",
        "className": "com.carrotsearch.hppc.IntArrayListTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemove(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testRemoveAllWithPredicateInterrupted",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRelease(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testRelease(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testRelease",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterator(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testIterator(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testIterator",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachWithProcedure(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testForEachWithProcedure(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testForEachWithProcedure",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testHashCodeEqualsWithOtherContainer",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testAdd(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testAdd",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddTwoArgs(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testAddTwoArgs(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testAddTwoArgs",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddArray(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testAddArray(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testAddArray",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddVarArg(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testAddVarArg(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testAddVarArg",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAll(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testAddAll(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testAddAll",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInsert(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testInsert(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testInsert",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testSet(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testSet(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testSet",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveRange(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testRemoveRange(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testRemoveRange",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstLast(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testRemoveFirstLast(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testRemoveFirstLast",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAll(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testRemoveAll(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testRemoveAll",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testRemoveAllFromLookupContainer(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testRemoveAllFromLookupContainer",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testRetainAllWithPredicate(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testRetainAllWithPredicate",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIndexOf(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testIndexOf(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testIndexOf",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLastIndexOf(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testLastIndexOf(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testLastIndexOf",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testEnsureCapacity(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testEnsureCapacity(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testEnsureCapacity",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testResizeAndCleanBuffer(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testResizeAndCleanBuffer",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testTrimToSize(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testTrimToSize(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testTrimToSize",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGrowth(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testGrowth(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testGrowth",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testForEachReturnValueFromAnonymousClass",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFrom(com.carrotsearch.hppc.IntArrayListTest)[1]",
            "displayName": "testFrom(com.carrotsearch.hppc.IntArrayListTest)",
            "methodName": "testFrom",
            "className": "com.carrotsearch.hppc.IntArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321187460,
          "startTimestampDate": "2012-01-23T13:19:47.460",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187465,
          "startTimestampDate": "2012-01-23T13:19:47.465",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187466,
          "startTimestampDate": "2012-01-23T13:19:47.466",
          "executionTime": 0,
          "description": "id#testClear(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187466,
          "startTimestampDate": "2012-01-23T13:19:47.466",
          "executionTime": 1,
          "description": "id#testIterable(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187467,
          "startTimestampDate": "2012-01-23T13:19:47.467",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187467,
          "startTimestampDate": "2012-01-23T13:19:47.467",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187467,
          "startTimestampDate": "2012-01-23T13:19:47.467",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187467,
          "startTimestampDate": "2012-01-23T13:19:47.467",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187469,
          "startTimestampDate": "2012-01-23T13:19:47.469",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187470,
          "startTimestampDate": "2012-01-23T13:19:47.470",
          "executionTime": 0,
          "description": "id#testRelease(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187471,
          "startTimestampDate": "2012-01-23T13:19:47.471",
          "executionTime": 0,
          "description": "id#testIterator(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187471,
          "startTimestampDate": "2012-01-23T13:19:47.471",
          "executionTime": 1,
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187473,
          "startTimestampDate": "2012-01-23T13:19:47.473",
          "executionTime": 0,
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187473,
          "startTimestampDate": "2012-01-23T13:19:47.473",
          "executionTime": 0,
          "description": "id#testAdd(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187474,
          "startTimestampDate": "2012-01-23T13:19:47.474",
          "executionTime": 0,
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187475,
          "startTimestampDate": "2012-01-23T13:19:47.475",
          "executionTime": 0,
          "description": "id#testAddArray(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187476,
          "startTimestampDate": "2012-01-23T13:19:47.476",
          "executionTime": 0,
          "description": "id#testAddVarArg(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187477,
          "startTimestampDate": "2012-01-23T13:19:47.477",
          "executionTime": 0,
          "description": "id#testAddAll(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187478,
          "startTimestampDate": "2012-01-23T13:19:47.478",
          "executionTime": 0,
          "description": "id#testInsert(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187479,
          "startTimestampDate": "2012-01-23T13:19:47.479",
          "executionTime": 0,
          "description": "id#testSet(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187480,
          "startTimestampDate": "2012-01-23T13:19:47.480",
          "executionTime": 0,
          "description": "id#testRemoveRange(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187480,
          "startTimestampDate": "2012-01-23T13:19:47.480",
          "executionTime": 0,
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187481,
          "startTimestampDate": "2012-01-23T13:19:47.481",
          "executionTime": 0,
          "description": "id#testRemoveAll(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187482,
          "startTimestampDate": "2012-01-23T13:19:47.482",
          "executionTime": 0,
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187483,
          "startTimestampDate": "2012-01-23T13:19:47.483",
          "executionTime": 1,
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187484,
          "startTimestampDate": "2012-01-23T13:19:47.484",
          "executionTime": 0,
          "description": "id#testIndexOf(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187485,
          "startTimestampDate": "2012-01-23T13:19:47.485",
          "executionTime": 0,
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187485,
          "startTimestampDate": "2012-01-23T13:19:47.485",
          "executionTime": 1,
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187486,
          "startTimestampDate": "2012-01-23T13:19:47.486",
          "executionTime": 0,
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187487,
          "startTimestampDate": "2012-01-23T13:19:47.487",
          "executionTime": 0,
          "description": "id#testTrimToSize(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187487,
          "startTimestampDate": "2012-01-23T13:19:47.487",
          "executionTime": 1,
          "description": "id#testGrowth(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187488,
          "startTimestampDate": "2012-01-23T13:19:47.488",
          "executionTime": 1,
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187490,
          "startTimestampDate": "2012-01-23T13:19:47.490",
          "executionTime": 0,
          "description": "id#testFrom(com.carrotsearch.hppc.IntArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRelease(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRelease(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterator(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterator(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddArray(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddArray(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddVarArg(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddVarArg(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAll(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAll(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInsert(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInsert(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testSet(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testSet(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveRange(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveRange(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAll(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAll(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIndexOf(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIndexOf(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testTrimToSize(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testTrimToSize(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGrowth(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGrowth(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFrom(com.carrotsearch.hppc.IntArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFrom(com.carrotsearch.hppc.IntArrayListTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321187535,
      "startTimestampDate": "2012-01-23T13:19:47.535",
      "executionTime": 94,
      "description": {
        "id": "id#com.carrotsearch.hppc.ShortFloatOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ShortFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321187543,
          "startTimestampDate": "2012-01-23T13:19:47.543",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187555,
          "startTimestampDate": "2012-01-23T13:19:47.555",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187556,
          "startTimestampDate": "2012-01-23T13:19:47.556",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187556,
          "startTimestampDate": "2012-01-23T13:19:47.556",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187557,
          "startTimestampDate": "2012-01-23T13:19:47.557",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187557,
          "startTimestampDate": "2012-01-23T13:19:47.557",
          "executionTime": 28,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187585,
          "startTimestampDate": "2012-01-23T13:19:47.585",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187586,
          "startTimestampDate": "2012-01-23T13:19:47.586",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187586,
          "startTimestampDate": "2012-01-23T13:19:47.586",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187587,
          "startTimestampDate": "2012-01-23T13:19:47.587",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187587,
          "startTimestampDate": "2012-01-23T13:19:47.587",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187588,
          "startTimestampDate": "2012-01-23T13:19:47.588",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187590,
          "startTimestampDate": "2012-01-23T13:19:47.590",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187592,
          "startTimestampDate": "2012-01-23T13:19:47.592",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187593,
          "startTimestampDate": "2012-01-23T13:19:47.593",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187595,
          "startTimestampDate": "2012-01-23T13:19:47.595",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187595,
          "startTimestampDate": "2012-01-23T13:19:47.595",
          "executionTime": 13,
          "description": "id#testClear(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187610,
          "startTimestampDate": "2012-01-23T13:19:47.610",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187610,
          "startTimestampDate": "2012-01-23T13:19:47.610",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187611,
          "startTimestampDate": "2012-01-23T13:19:47.611",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187611,
          "startTimestampDate": "2012-01-23T13:19:47.611",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187612,
          "startTimestampDate": "2012-01-23T13:19:47.612",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187612,
          "startTimestampDate": "2012-01-23T13:19:47.612",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187613,
          "startTimestampDate": "2012-01-23T13:19:47.613",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187613,
          "startTimestampDate": "2012-01-23T13:19:47.613",
          "executionTime": 2,
          "description": "id#testToString(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortFloatOpenHashMapTest.testToString(ShortFloatOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187616,
          "startTimestampDate": "2012-01-23T13:19:47.616",
          "executionTime": 1,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortFloatOpenHashMapTest.testAddRemoveSameHashCollision(ShortFloatOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187621,
          "startTimestampDate": "2012-01-23T13:19:47.621",
          "executionTime": 4,
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187626,
          "startTimestampDate": "2012-01-23T13:19:47.626",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187627,
          "startTimestampDate": "2012-01-23T13:19:47.627",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortFloatOpenHashMapTest.testToString(ShortFloatOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortFloatOpenHashMapTest.testAddRemoveSameHashCollision(ShortFloatOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortFloatOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321187687,
      "startTimestampDate": "2012-01-23T13:19:47.687",
      "executionTime": 247,
      "description": {
        "id": "id#com.carrotsearch.hppc.IntArrayDequeTest[0]",
        "displayName": "com.carrotsearch.hppc.IntArrayDequeTest",
        "className": "com.carrotsearch.hppc.IntArrayDequeTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddFirst(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testAddFirst(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testAddFirst",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddLast(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testAddLast(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testAddLast",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddWithGrowth(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testAddWithGrowth(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testAddWithGrowth",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddLastWithGrowth(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testAddLastWithGrowth(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testAddLastWithGrowth",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllFirst(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testAddAllFirst(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testAddAllFirst",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllLast(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testAddAllLast(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testAddAllLast",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirst(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testRemoveFirst(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testRemoveFirst",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testRemoveFirstEmpty(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testRemoveFirstEmpty",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLast(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testRemoveLast(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testRemoveLast",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLastEmpty(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testRemoveLastEmpty(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testRemoveLastEmpty",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetFirst(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testGetFirst(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testGetFirst",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetFirstEmpty(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testGetFirstEmpty(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testGetFirstEmpty",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetLast(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testGetLast(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testGetLast",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetLastEmpty(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testGetLastEmpty(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testGetLastEmpty",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testRemoveFirstOccurrence(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testRemoveFirstOccurrence",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testRemoveLastOccurrence(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testRemoveLastOccurrence",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testRemoveAllOccurrences(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testRemoveAllOccurrences",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testRemoveAllInLookupContainer(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testRemoveAllInLookupContainer",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testRemoveAllWithPredicateInterrupted",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRelease(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testRelease(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testRelease",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterator(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testIterator(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testIterator",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDescendingIterator(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testDescendingIterator(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testDescendingIterator",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachWithProcedure(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testForEachWithProcedure(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testForEachWithProcedure",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
            "displayName": "testDescendingForEachWithProcedure(com.carrotsearch.hppc.IntArrayDequeTest)",
            "methodName": "testDescendingForEachWithProcedure",
            "className": "com.carrotsearch.hppc.IntArrayDequeTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321187695,
          "startTimestampDate": "2012-01-23T13:19:47.695",
          "executionTime": 3,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187703,
          "startTimestampDate": "2012-01-23T13:19:47.703",
          "executionTime": 12,
          "description": "id#testClear(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187716,
          "startTimestampDate": "2012-01-23T13:19:47.716",
          "executionTime": 27,
          "description": "id#testIterable(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187744,
          "startTimestampDate": "2012-01-23T13:19:47.744",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187745,
          "startTimestampDate": "2012-01-23T13:19:47.745",
          "executionTime": 1,
          "description": "id#testClone(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187746,
          "startTimestampDate": "2012-01-23T13:19:47.746",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187747,
          "startTimestampDate": "2012-01-23T13:19:47.747",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187748,
          "startTimestampDate": "2012-01-23T13:19:47.748",
          "executionTime": 0,
          "description": "id#testAddFirst(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187749,
          "startTimestampDate": "2012-01-23T13:19:47.749",
          "executionTime": 0,
          "description": "id#testAddLast(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187749,
          "startTimestampDate": "2012-01-23T13:19:47.749",
          "executionTime": 11,
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187761,
          "startTimestampDate": "2012-01-23T13:19:47.761",
          "executionTime": 5,
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187767,
          "startTimestampDate": "2012-01-23T13:19:47.767",
          "executionTime": 4,
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187772,
          "startTimestampDate": "2012-01-23T13:19:47.772",
          "executionTime": 9,
          "description": "id#testAddAllLast(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187783,
          "startTimestampDate": "2012-01-23T13:19:47.783",
          "executionTime": 0,
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187783,
          "startTimestampDate": "2012-01-23T13:19:47.783",
          "executionTime": 1,
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187785,
          "startTimestampDate": "2012-01-23T13:19:47.785",
          "executionTime": 1,
          "description": "id#testRemoveLast(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187787,
          "startTimestampDate": "2012-01-23T13:19:47.787",
          "executionTime": 0,
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187788,
          "startTimestampDate": "2012-01-23T13:19:47.788",
          "executionTime": 0,
          "description": "id#testGetFirst(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187789,
          "startTimestampDate": "2012-01-23T13:19:47.789",
          "executionTime": 0,
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187790,
          "startTimestampDate": "2012-01-23T13:19:47.790",
          "executionTime": 0,
          "description": "id#testGetLast(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187790,
          "startTimestampDate": "2012-01-23T13:19:47.790",
          "executionTime": 1,
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187791,
          "startTimestampDate": "2012-01-23T13:19:47.791",
          "executionTime": 16,
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187808,
          "startTimestampDate": "2012-01-23T13:19:47.808",
          "executionTime": 13,
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187822,
          "startTimestampDate": "2012-01-23T13:19:47.822",
          "executionTime": 0,
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187823,
          "startTimestampDate": "2012-01-23T13:19:47.823",
          "executionTime": 0,
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187824,
          "startTimestampDate": "2012-01-23T13:19:47.824",
          "executionTime": 82,
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187907,
          "startTimestampDate": "2012-01-23T13:19:47.907",
          "executionTime": 0,
          "description": "id#testRelease(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187907,
          "startTimestampDate": "2012-01-23T13:19:47.907",
          "executionTime": 1,
          "description": "id#testIterator(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187908,
          "startTimestampDate": "2012-01-23T13:19:47.908",
          "executionTime": 11,
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187920,
          "startTimestampDate": "2012-01-23T13:19:47.920",
          "executionTime": 5,
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187926,
          "startTimestampDate": "2012-01-23T13:19:47.926",
          "executionTime": 8,
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.IntArrayDequeTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddFirst(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddFirst(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddLast(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddLast(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddWithGrowth(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddLastWithGrowth(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllFirst(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllLast(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllLast(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirst(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstEmpty(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLast(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLast(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLastEmpty(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetFirst(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetFirst(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetFirstEmpty(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetLast(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetLast(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetLastEmpty(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstOccurrence(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveLastOccurrence(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllOccurrences(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllInLookupContainer(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRelease(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRelease(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterator(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterator(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDescendingIterator(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDescendingForEachWithProcedure(com.carrotsearch.hppc.IntArrayDequeTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321187966,
      "startTimestampDate": "2012-01-23T13:19:47.966",
      "executionTime": 44,
      "description": {
        "id": "id#com.carrotsearch.hppc.ShortOpenHashSetTest[0]",
        "displayName": "com.carrotsearch.hppc.ShortOpenHashSetTest",
        "className": "com.carrotsearch.hppc.ShortOpenHashSetTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ShortOpenHashSetTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ShortOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortOpenHashSetTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ShortOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ShortOpenHashSetTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ShortOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ShortOpenHashSetTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ShortOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ShortOpenHashSetTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ShortOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ShortOpenHashSetTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ShortOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ShortOpenHashSetTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ShortOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortOpenHashSetTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ShortOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.ShortOpenHashSetTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.ShortOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
            "displayName": "testAdd(com.carrotsearch.hppc.ShortOpenHashSetTest)",
            "methodName": "testAdd",
            "className": "com.carrotsearch.hppc.ShortOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAll(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
            "displayName": "testAddAll(com.carrotsearch.hppc.ShortOpenHashSetTest)",
            "methodName": "testAddAll",
            "className": "com.carrotsearch.hppc.ShortOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
            "displayName": "testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ShortOpenHashSetTest)",
            "methodName": "testRemoveAllFromLookupContainer",
            "className": "com.carrotsearch.hppc.ShortOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
            "displayName": "testRetainAllWithPredicate(com.carrotsearch.hppc.ShortOpenHashSetTest)",
            "methodName": "testRetainAllWithPredicate",
            "className": "com.carrotsearch.hppc.ShortOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd2(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
            "displayName": "testAdd2(com.carrotsearch.hppc.ShortOpenHashSetTest)",
            "methodName": "testAdd2",
            "className": "com.carrotsearch.hppc.ShortOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddVarArgs(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
            "displayName": "testAddVarArgs(com.carrotsearch.hppc.ShortOpenHashSetTest)",
            "methodName": "testAddVarArgs",
            "className": "com.carrotsearch.hppc.ShortOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
            "displayName": "testInitialCapacityAndGrowth(com.carrotsearch.hppc.ShortOpenHashSetTest)",
            "methodName": "testInitialCapacityAndGrowth",
            "className": "com.carrotsearch.hppc.ShortOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321187971,
          "startTimestampDate": "2012-01-23T13:19:47.971",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187971,
          "startTimestampDate": "2012-01-23T13:19:47.971",
          "executionTime": 2,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187973,
          "startTimestampDate": "2012-01-23T13:19:47.973",
          "executionTime": 0,
          "description": "id#testClear(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187973,
          "startTimestampDate": "2012-01-23T13:19:47.973",
          "executionTime": 1,
          "description": "id#testIterable(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187975,
          "startTimestampDate": "2012-01-23T13:19:47.975",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187975,
          "startTimestampDate": "2012-01-23T13:19:47.975",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187975,
          "startTimestampDate": "2012-01-23T13:19:47.975",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187976,
          "startTimestampDate": "2012-01-23T13:19:47.976",
          "executionTime": 6,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortOpenHashSetTest.testAddRemoveSameHashCollision(ShortOpenHashSetTest.java:55)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187982,
          "startTimestampDate": "2012-01-23T13:19:47.982",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187982,
          "startTimestampDate": "2012-01-23T13:19:47.982",
          "executionTime": 0,
          "description": "id#testAdd(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187983,
          "startTimestampDate": "2012-01-23T13:19:47.983",
          "executionTime": 0,
          "description": "id#testAddAll(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187983,
          "startTimestampDate": "2012-01-23T13:19:47.983",
          "executionTime": 0,
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187983,
          "startTimestampDate": "2012-01-23T13:19:47.983",
          "executionTime": 3,
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187987,
          "startTimestampDate": "2012-01-23T13:19:47.987",
          "executionTime": 0,
          "description": "id#testAdd2(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187987,
          "startTimestampDate": "2012-01-23T13:19:47.987",
          "executionTime": 0,
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321187991,
          "startTimestampDate": "2012-01-23T13:19:47.991",
          "executionTime": 19,
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortOpenHashSetTest.testAddRemoveSameHashCollision(ShortOpenHashSetTest.java:55)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAll(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAll(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd2(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd2(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.ShortOpenHashSetTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321188040,
      "startTimestampDate": "2012-01-23T13:19:48.040",
      "executionTime": 129,
      "description": {
        "id": "id#com.carrotsearch.hppc.FloatObjectOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
        "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullValue(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
            "displayName": "testNullValue(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)",
            "methodName": "testNullValue",
            "className": "com.carrotsearch.hppc.FloatObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321188049,
          "startTimestampDate": "2012-01-23T13:19:48.049",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188052,
          "startTimestampDate": "2012-01-23T13:19:48.052",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188052,
          "startTimestampDate": "2012-01-23T13:19:48.052",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188052,
          "startTimestampDate": "2012-01-23T13:19:48.052",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188053,
          "startTimestampDate": "2012-01-23T13:19:48.053",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188053,
          "startTimestampDate": "2012-01-23T13:19:48.053",
          "executionTime": 39,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188093,
          "startTimestampDate": "2012-01-23T13:19:48.093",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188093,
          "startTimestampDate": "2012-01-23T13:19:48.093",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188094,
          "startTimestampDate": "2012-01-23T13:19:48.094",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188094,
          "startTimestampDate": "2012-01-23T13:19:48.094",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188095,
          "startTimestampDate": "2012-01-23T13:19:48.095",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188097,
          "startTimestampDate": "2012-01-23T13:19:48.097",
          "executionTime": 2,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188100,
          "startTimestampDate": "2012-01-23T13:19:48.100",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188100,
          "startTimestampDate": "2012-01-23T13:19:48.100",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188102,
          "startTimestampDate": "2012-01-23T13:19:48.102",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188103,
          "startTimestampDate": "2012-01-23T13:19:48.103",
          "executionTime": 20,
          "description": "id#testClear(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188124,
          "startTimestampDate": "2012-01-23T13:19:48.124",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188125,
          "startTimestampDate": "2012-01-23T13:19:48.125",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188126,
          "startTimestampDate": "2012-01-23T13:19:48.126",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188126,
          "startTimestampDate": "2012-01-23T13:19:48.126",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188140,
          "startTimestampDate": "2012-01-23T13:19:48.140",
          "executionTime": 1,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188141,
          "startTimestampDate": "2012-01-23T13:19:48.141",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188142,
          "startTimestampDate": "2012-01-23T13:19:48.142",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188143,
          "startTimestampDate": "2012-01-23T13:19:48.143",
          "executionTime": 5,
          "description": "id#testToString(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatObjectOpenHashMapTest.testToString(FloatObjectOpenHashMapTest.java:502)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188150,
          "startTimestampDate": "2012-01-23T13:19:48.150",
          "executionTime": 1,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatObjectOpenHashMapTest.testAddRemoveSameHashCollision(FloatObjectOpenHashMapTest.java:528)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188159,
          "startTimestampDate": "2012-01-23T13:19:48.159",
          "executionTime": 2,
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188162,
          "startTimestampDate": "2012-01-23T13:19:48.162",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188162,
          "startTimestampDate": "2012-01-23T13:19:48.162",
          "executionTime": 6,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188169,
          "startTimestampDate": "2012-01-23T13:19:48.169",
          "executionTime": 0,
          "description": "id#testNullValue(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatObjectOpenHashMapTest.testToString(FloatObjectOpenHashMapTest.java:502)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.FloatObjectOpenHashMapTest.testAddRemoveSameHashCollision(FloatObjectOpenHashMapTest.java:528)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullValue(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullValue(com.carrotsearch.hppc.FloatObjectOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321188231,
      "startTimestampDate": "2012-01-23T13:19:48.231",
      "executionTime": 65,
      "description": {
        "id": "id#com.carrotsearch.hppc.ByteObjectOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullValue(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
            "displayName": "testNullValue(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)",
            "methodName": "testNullValue",
            "className": "com.carrotsearch.hppc.ByteObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321188238,
          "startTimestampDate": "2012-01-23T13:19:48.238",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188241,
          "startTimestampDate": "2012-01-23T13:19:48.241",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188241,
          "startTimestampDate": "2012-01-23T13:19:48.241",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188242,
          "startTimestampDate": "2012-01-23T13:19:48.242",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188242,
          "startTimestampDate": "2012-01-23T13:19:48.242",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188242,
          "startTimestampDate": "2012-01-23T13:19:48.242",
          "executionTime": 18,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188261,
          "startTimestampDate": "2012-01-23T13:19:48.261",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188261,
          "startTimestampDate": "2012-01-23T13:19:48.261",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188262,
          "startTimestampDate": "2012-01-23T13:19:48.262",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188263,
          "startTimestampDate": "2012-01-23T13:19:48.263",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188263,
          "startTimestampDate": "2012-01-23T13:19:48.263",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188265,
          "startTimestampDate": "2012-01-23T13:19:48.265",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188267,
          "startTimestampDate": "2012-01-23T13:19:48.267",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188267,
          "startTimestampDate": "2012-01-23T13:19:48.267",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188269,
          "startTimestampDate": "2012-01-23T13:19:48.269",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188270,
          "startTimestampDate": "2012-01-23T13:19:48.270",
          "executionTime": 12,
          "description": "id#testClear(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188283,
          "startTimestampDate": "2012-01-23T13:19:48.283",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188283,
          "startTimestampDate": "2012-01-23T13:19:48.283",
          "executionTime": 1,
          "description": "id#testIterable(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188284,
          "startTimestampDate": "2012-01-23T13:19:48.284",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188285,
          "startTimestampDate": "2012-01-23T13:19:48.285",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188285,
          "startTimestampDate": "2012-01-23T13:19:48.285",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188286,
          "startTimestampDate": "2012-01-23T13:19:48.286",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188286,
          "startTimestampDate": "2012-01-23T13:19:48.286",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188287,
          "startTimestampDate": "2012-01-23T13:19:48.287",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188287,
          "startTimestampDate": "2012-01-23T13:19:48.287",
          "executionTime": 2,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteObjectOpenHashMapTest.testAddRemoveSameHashCollision(ByteObjectOpenHashMapTest.java:528)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188290,
          "startTimestampDate": "2012-01-23T13:19:48.290",
          "executionTime": 2,
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188293,
          "startTimestampDate": "2012-01-23T13:19:48.293",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188293,
          "startTimestampDate": "2012-01-23T13:19:48.293",
          "executionTime": 2,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188296,
          "startTimestampDate": "2012-01-23T13:19:48.296",
          "executionTime": 0,
          "description": "id#testNullValue(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteObjectOpenHashMapTest.testAddRemoveSameHashCollision(ByteObjectOpenHashMapTest.java:528)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullValue(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullValue(com.carrotsearch.hppc.ByteObjectOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321188327,
      "startTimestampDate": "2012-01-23T13:19:48.327",
      "executionTime": 127,
      "description": {
        "id": "id#com.carrotsearch.hppc.ByteDoubleOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ByteDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321188341,
          "startTimestampDate": "2012-01-23T13:19:48.341",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188348,
          "startTimestampDate": "2012-01-23T13:19:48.348",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188348,
          "startTimestampDate": "2012-01-23T13:19:48.348",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188349,
          "startTimestampDate": "2012-01-23T13:19:48.349",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188349,
          "startTimestampDate": "2012-01-23T13:19:48.349",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188349,
          "startTimestampDate": "2012-01-23T13:19:48.349",
          "executionTime": 23,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188373,
          "startTimestampDate": "2012-01-23T13:19:48.373",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188373,
          "startTimestampDate": "2012-01-23T13:19:48.373",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188374,
          "startTimestampDate": "2012-01-23T13:19:48.374",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188374,
          "startTimestampDate": "2012-01-23T13:19:48.374",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188374,
          "startTimestampDate": "2012-01-23T13:19:48.374",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188375,
          "startTimestampDate": "2012-01-23T13:19:48.375",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188377,
          "startTimestampDate": "2012-01-23T13:19:48.377",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188379,
          "startTimestampDate": "2012-01-23T13:19:48.379",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188379,
          "startTimestampDate": "2012-01-23T13:19:48.379",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188381,
          "startTimestampDate": "2012-01-23T13:19:48.381",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188382,
          "startTimestampDate": "2012-01-23T13:19:48.382",
          "executionTime": 27,
          "description": "id#testClear(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188411,
          "startTimestampDate": "2012-01-23T13:19:48.411",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188413,
          "startTimestampDate": "2012-01-23T13:19:48.413",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188414,
          "startTimestampDate": "2012-01-23T13:19:48.414",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188416,
          "startTimestampDate": "2012-01-23T13:19:48.416",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188417,
          "startTimestampDate": "2012-01-23T13:19:48.417",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188418,
          "startTimestampDate": "2012-01-23T13:19:48.418",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188436,
          "startTimestampDate": "2012-01-23T13:19:48.436",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188436,
          "startTimestampDate": "2012-01-23T13:19:48.436",
          "executionTime": 2,
          "description": "id#testToString(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteDoubleOpenHashMapTest.testToString(ByteDoubleOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188439,
          "startTimestampDate": "2012-01-23T13:19:48.439",
          "executionTime": 2,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteDoubleOpenHashMapTest.testAddRemoveSameHashCollision(ByteDoubleOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188443,
          "startTimestampDate": "2012-01-23T13:19:48.443",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188445,
          "startTimestampDate": "2012-01-23T13:19:48.445",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188446,
          "startTimestampDate": "2012-01-23T13:19:48.446",
          "executionTime": 2,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteDoubleOpenHashMapTest.testToString(ByteDoubleOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteDoubleOpenHashMapTest.testAddRemoveSameHashCollision(ByteDoubleOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ByteDoubleOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321188490,
      "startTimestampDate": "2012-01-23T13:19:48.490",
      "executionTime": 10,
      "description": {
        "id": "id#com.carrotsearch.hppc.KTypeStackTest[0]",
        "displayName": "com.carrotsearch.hppc.KTypeStackTest",
        "className": "com.carrotsearch.hppc.KTypeStackTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.KTypeStackTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.KTypeStackTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.KTypeStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.KTypeStackTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.KTypeStackTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.KTypeStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.KTypeStackTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.KTypeStackTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.KTypeStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.KTypeStackTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.KTypeStackTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.KTypeStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToArrayWithClass(com.carrotsearch.hppc.KTypeStackTest)[1]",
            "displayName": "testToArrayWithClass(com.carrotsearch.hppc.KTypeStackTest)",
            "methodName": "testToArrayWithClass",
            "className": "com.carrotsearch.hppc.KTypeStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToArray(com.carrotsearch.hppc.KTypeStackTest)[1]",
            "displayName": "testToArray(com.carrotsearch.hppc.KTypeStackTest)",
            "methodName": "testToArray",
            "className": "com.carrotsearch.hppc.KTypeStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPush1(com.carrotsearch.hppc.KTypeStackTest)[1]",
            "displayName": "testPush1(com.carrotsearch.hppc.KTypeStackTest)",
            "methodName": "testPush1",
            "className": "com.carrotsearch.hppc.KTypeStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPush2(com.carrotsearch.hppc.KTypeStackTest)[1]",
            "displayName": "testPush2(com.carrotsearch.hppc.KTypeStackTest)",
            "methodName": "testPush2",
            "className": "com.carrotsearch.hppc.KTypeStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPushArray(com.carrotsearch.hppc.KTypeStackTest)[1]",
            "displayName": "testPushArray(com.carrotsearch.hppc.KTypeStackTest)",
            "methodName": "testPushArray",
            "className": "com.carrotsearch.hppc.KTypeStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllPushAll(com.carrotsearch.hppc.KTypeStackTest)[1]",
            "displayName": "testAddAllPushAll(com.carrotsearch.hppc.KTypeStackTest)",
            "methodName": "testAddAllPushAll",
            "className": "com.carrotsearch.hppc.KTypeStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDiscard(com.carrotsearch.hppc.KTypeStackTest)[1]",
            "displayName": "testDiscard(com.carrotsearch.hppc.KTypeStackTest)",
            "methodName": "testDiscard",
            "className": "com.carrotsearch.hppc.KTypeStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetAssertions(com.carrotsearch.hppc.KTypeStackTest)[1]",
            "displayName": "testGetAssertions(com.carrotsearch.hppc.KTypeStackTest)",
            "methodName": "testGetAssertions",
            "className": "com.carrotsearch.hppc.KTypeStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDiscardAssertions(com.carrotsearch.hppc.KTypeStackTest)[1]",
            "displayName": "testDiscardAssertions(com.carrotsearch.hppc.KTypeStackTest)",
            "methodName": "testDiscardAssertions",
            "className": "com.carrotsearch.hppc.KTypeStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.KTypeStackTest)[1]",
            "displayName": "testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.KTypeStackTest)",
            "methodName": "testHashCodeEqualsWithOtherContainer",
            "className": "com.carrotsearch.hppc.KTypeStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullify(com.carrotsearch.hppc.KTypeStackTest)[1]",
            "displayName": "testNullify(com.carrotsearch.hppc.KTypeStackTest)",
            "methodName": "testNullify",
            "className": "com.carrotsearch.hppc.KTypeStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321188493,
          "startTimestampDate": "2012-01-23T13:19:48.493",
          "executionTime": 1,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.KTypeStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188494,
          "startTimestampDate": "2012-01-23T13:19:48.494",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.KTypeStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188494,
          "startTimestampDate": "2012-01-23T13:19:48.494",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.KTypeStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188494,
          "startTimestampDate": "2012-01-23T13:19:48.494",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.KTypeStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188495,
          "startTimestampDate": "2012-01-23T13:19:48.495",
          "executionTime": 0,
          "description": "id#testToArrayWithClass(com.carrotsearch.hppc.KTypeStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188498,
          "startTimestampDate": "2012-01-23T13:19:48.498",
          "executionTime": 0,
          "description": "id#testToArray(com.carrotsearch.hppc.KTypeStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188498,
          "startTimestampDate": "2012-01-23T13:19:48.498",
          "executionTime": 0,
          "description": "id#testPush1(com.carrotsearch.hppc.KTypeStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188498,
          "startTimestampDate": "2012-01-23T13:19:48.498",
          "executionTime": 0,
          "description": "id#testPush2(com.carrotsearch.hppc.KTypeStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188499,
          "startTimestampDate": "2012-01-23T13:19:48.499",
          "executionTime": 0,
          "description": "id#testPushArray(com.carrotsearch.hppc.KTypeStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188499,
          "startTimestampDate": "2012-01-23T13:19:48.499",
          "executionTime": 0,
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.KTypeStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188499,
          "startTimestampDate": "2012-01-23T13:19:48.499",
          "executionTime": 0,
          "description": "id#testDiscard(com.carrotsearch.hppc.KTypeStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188499,
          "startTimestampDate": "2012-01-23T13:19:48.499",
          "executionTime": 0,
          "description": "id#testGetAssertions(com.carrotsearch.hppc.KTypeStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188499,
          "startTimestampDate": "2012-01-23T13:19:48.499",
          "executionTime": 0,
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.KTypeStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188500,
          "startTimestampDate": "2012-01-23T13:19:48.500",
          "executionTime": 0,
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.KTypeStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188500,
          "startTimestampDate": "2012-01-23T13:19:48.500",
          "executionTime": 0,
          "description": "id#testNullify(com.carrotsearch.hppc.KTypeStackTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToArrayWithClass(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToArrayWithClass(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToArray(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToArray(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPush1(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPush1(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPush2(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPush2(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPushArray(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPushArray(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDiscard(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDiscard(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetAssertions(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetAssertions(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullify(com.carrotsearch.hppc.KTypeStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullify(com.carrotsearch.hppc.KTypeStackTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321188522,
      "startTimestampDate": "2012-01-23T13:19:48.522",
      "executionTime": 92,
      "description": {
        "id": "id#com.carrotsearch.hppc.ShortObjectOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullValue(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
            "displayName": "testNullValue(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)",
            "methodName": "testNullValue",
            "className": "com.carrotsearch.hppc.ShortObjectOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321188529,
          "startTimestampDate": "2012-01-23T13:19:48.529",
          "executionTime": 3,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188533,
          "startTimestampDate": "2012-01-23T13:19:48.533",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188533,
          "startTimestampDate": "2012-01-23T13:19:48.533",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188533,
          "startTimestampDate": "2012-01-23T13:19:48.533",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188533,
          "startTimestampDate": "2012-01-23T13:19:48.533",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188533,
          "startTimestampDate": "2012-01-23T13:19:48.533",
          "executionTime": 28,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188562,
          "startTimestampDate": "2012-01-23T13:19:48.562",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188563,
          "startTimestampDate": "2012-01-23T13:19:48.563",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188563,
          "startTimestampDate": "2012-01-23T13:19:48.563",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188563,
          "startTimestampDate": "2012-01-23T13:19:48.563",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188564,
          "startTimestampDate": "2012-01-23T13:19:48.564",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188565,
          "startTimestampDate": "2012-01-23T13:19:48.565",
          "executionTime": 2,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188568,
          "startTimestampDate": "2012-01-23T13:19:48.568",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188568,
          "startTimestampDate": "2012-01-23T13:19:48.568",
          "executionTime": 5,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188574,
          "startTimestampDate": "2012-01-23T13:19:48.574",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188576,
          "startTimestampDate": "2012-01-23T13:19:48.576",
          "executionTime": 23,
          "description": "id#testClear(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188601,
          "startTimestampDate": "2012-01-23T13:19:48.601",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188602,
          "startTimestampDate": "2012-01-23T13:19:48.602",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188602,
          "startTimestampDate": "2012-01-23T13:19:48.602",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188603,
          "startTimestampDate": "2012-01-23T13:19:48.603",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188603,
          "startTimestampDate": "2012-01-23T13:19:48.603",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188604,
          "startTimestampDate": "2012-01-23T13:19:48.604",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188604,
          "startTimestampDate": "2012-01-23T13:19:48.604",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188605,
          "startTimestampDate": "2012-01-23T13:19:48.605",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188605,
          "startTimestampDate": "2012-01-23T13:19:48.605",
          "executionTime": 2,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortObjectOpenHashMapTest.testAddRemoveSameHashCollision(ShortObjectOpenHashMapTest.java:528)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188608,
          "startTimestampDate": "2012-01-23T13:19:48.608",
          "executionTime": 2,
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188611,
          "startTimestampDate": "2012-01-23T13:19:48.611",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188611,
          "startTimestampDate": "2012-01-23T13:19:48.611",
          "executionTime": 2,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188614,
          "startTimestampDate": "2012-01-23T13:19:48.614",
          "executionTime": 0,
          "description": "id#testNullValue(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortObjectOpenHashMapTest.testAddRemoveSameHashCollision(ShortObjectOpenHashMapTest.java:528)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullValue(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullValue(com.carrotsearch.hppc.ShortObjectOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321188670,
      "startTimestampDate": "2012-01-23T13:19:48.670",
      "executionTime": 7,
      "description": {
        "id": "id#com.carrotsearch.hppc.ObjectStackTest[0]",
        "displayName": "com.carrotsearch.hppc.ObjectStackTest",
        "className": "com.carrotsearch.hppc.ObjectStackTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectStackTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ObjectStackTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ObjectStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ObjectStackTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ObjectStackTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ObjectStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ObjectStackTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ObjectStackTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ObjectStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.ObjectStackTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.ObjectStackTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.ObjectStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToArrayWithClass(com.carrotsearch.hppc.ObjectStackTest)[1]",
            "displayName": "testToArrayWithClass(com.carrotsearch.hppc.ObjectStackTest)",
            "methodName": "testToArrayWithClass",
            "className": "com.carrotsearch.hppc.ObjectStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToArray(com.carrotsearch.hppc.ObjectStackTest)[1]",
            "displayName": "testToArray(com.carrotsearch.hppc.ObjectStackTest)",
            "methodName": "testToArray",
            "className": "com.carrotsearch.hppc.ObjectStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPush1(com.carrotsearch.hppc.ObjectStackTest)[1]",
            "displayName": "testPush1(com.carrotsearch.hppc.ObjectStackTest)",
            "methodName": "testPush1",
            "className": "com.carrotsearch.hppc.ObjectStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPush2(com.carrotsearch.hppc.ObjectStackTest)[1]",
            "displayName": "testPush2(com.carrotsearch.hppc.ObjectStackTest)",
            "methodName": "testPush2",
            "className": "com.carrotsearch.hppc.ObjectStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPushArray(com.carrotsearch.hppc.ObjectStackTest)[1]",
            "displayName": "testPushArray(com.carrotsearch.hppc.ObjectStackTest)",
            "methodName": "testPushArray",
            "className": "com.carrotsearch.hppc.ObjectStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllPushAll(com.carrotsearch.hppc.ObjectStackTest)[1]",
            "displayName": "testAddAllPushAll(com.carrotsearch.hppc.ObjectStackTest)",
            "methodName": "testAddAllPushAll",
            "className": "com.carrotsearch.hppc.ObjectStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDiscard(com.carrotsearch.hppc.ObjectStackTest)[1]",
            "displayName": "testDiscard(com.carrotsearch.hppc.ObjectStackTest)",
            "methodName": "testDiscard",
            "className": "com.carrotsearch.hppc.ObjectStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetAssertions(com.carrotsearch.hppc.ObjectStackTest)[1]",
            "displayName": "testGetAssertions(com.carrotsearch.hppc.ObjectStackTest)",
            "methodName": "testGetAssertions",
            "className": "com.carrotsearch.hppc.ObjectStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDiscardAssertions(com.carrotsearch.hppc.ObjectStackTest)[1]",
            "displayName": "testDiscardAssertions(com.carrotsearch.hppc.ObjectStackTest)",
            "methodName": "testDiscardAssertions",
            "className": "com.carrotsearch.hppc.ObjectStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ObjectStackTest)[1]",
            "displayName": "testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ObjectStackTest)",
            "methodName": "testHashCodeEqualsWithOtherContainer",
            "className": "com.carrotsearch.hppc.ObjectStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullify(com.carrotsearch.hppc.ObjectStackTest)[1]",
            "displayName": "testNullify(com.carrotsearch.hppc.ObjectStackTest)",
            "methodName": "testNullify",
            "className": "com.carrotsearch.hppc.ObjectStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321188673,
          "startTimestampDate": "2012-01-23T13:19:48.673",
          "executionTime": 1,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188674,
          "startTimestampDate": "2012-01-23T13:19:48.674",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ObjectStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188674,
          "startTimestampDate": "2012-01-23T13:19:48.674",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ObjectStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188674,
          "startTimestampDate": "2012-01-23T13:19:48.674",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ObjectStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188674,
          "startTimestampDate": "2012-01-23T13:19:48.674",
          "executionTime": 0,
          "description": "id#testToArrayWithClass(com.carrotsearch.hppc.ObjectStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188675,
          "startTimestampDate": "2012-01-23T13:19:48.675",
          "executionTime": 0,
          "description": "id#testToArray(com.carrotsearch.hppc.ObjectStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188675,
          "startTimestampDate": "2012-01-23T13:19:48.675",
          "executionTime": 0,
          "description": "id#testPush1(com.carrotsearch.hppc.ObjectStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188675,
          "startTimestampDate": "2012-01-23T13:19:48.675",
          "executionTime": 0,
          "description": "id#testPush2(com.carrotsearch.hppc.ObjectStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188675,
          "startTimestampDate": "2012-01-23T13:19:48.675",
          "executionTime": 0,
          "description": "id#testPushArray(com.carrotsearch.hppc.ObjectStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188675,
          "startTimestampDate": "2012-01-23T13:19:48.675",
          "executionTime": 0,
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.ObjectStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188675,
          "startTimestampDate": "2012-01-23T13:19:48.675",
          "executionTime": 0,
          "description": "id#testDiscard(com.carrotsearch.hppc.ObjectStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188676,
          "startTimestampDate": "2012-01-23T13:19:48.676",
          "executionTime": 0,
          "description": "id#testGetAssertions(com.carrotsearch.hppc.ObjectStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188676,
          "startTimestampDate": "2012-01-23T13:19:48.676",
          "executionTime": 0,
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.ObjectStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188676,
          "startTimestampDate": "2012-01-23T13:19:48.676",
          "executionTime": 0,
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ObjectStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188676,
          "startTimestampDate": "2012-01-23T13:19:48.676",
          "executionTime": 0,
          "description": "id#testNullify(com.carrotsearch.hppc.ObjectStackTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToArrayWithClass(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToArrayWithClass(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToArray(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToArray(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPush1(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPush1(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPush2(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPush2(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPushArray(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPushArray(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDiscard(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDiscard(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetAssertions(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetAssertions(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullify(com.carrotsearch.hppc.ObjectStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullify(com.carrotsearch.hppc.ObjectStackTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321188702,
      "startTimestampDate": "2012-01-23T13:19:48.702",
      "executionTime": 170,
      "description": {
        "id": "id#com.carrotsearch.hppc.LongDoubleOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
        "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.LongDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321188711,
          "startTimestampDate": "2012-01-23T13:19:48.711",
          "executionTime": 3,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188714,
          "startTimestampDate": "2012-01-23T13:19:48.714",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188714,
          "startTimestampDate": "2012-01-23T13:19:48.714",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188714,
          "startTimestampDate": "2012-01-23T13:19:48.714",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188715,
          "startTimestampDate": "2012-01-23T13:19:48.715",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188715,
          "startTimestampDate": "2012-01-23T13:19:48.715",
          "executionTime": 27,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188743,
          "startTimestampDate": "2012-01-23T13:19:48.743",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188743,
          "startTimestampDate": "2012-01-23T13:19:48.743",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188744,
          "startTimestampDate": "2012-01-23T13:19:48.744",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188744,
          "startTimestampDate": "2012-01-23T13:19:48.744",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188745,
          "startTimestampDate": "2012-01-23T13:19:48.745",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188745,
          "startTimestampDate": "2012-01-23T13:19:48.745",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188747,
          "startTimestampDate": "2012-01-23T13:19:48.747",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188749,
          "startTimestampDate": "2012-01-23T13:19:48.749",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188749,
          "startTimestampDate": "2012-01-23T13:19:48.749",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188751,
          "startTimestampDate": "2012-01-23T13:19:48.751",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188752,
          "startTimestampDate": "2012-01-23T13:19:48.752",
          "executionTime": 12,
          "description": "id#testClear(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188765,
          "startTimestampDate": "2012-01-23T13:19:48.765",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188766,
          "startTimestampDate": "2012-01-23T13:19:48.766",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188766,
          "startTimestampDate": "2012-01-23T13:19:48.766",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188766,
          "startTimestampDate": "2012-01-23T13:19:48.766",
          "executionTime": 1,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188767,
          "startTimestampDate": "2012-01-23T13:19:48.767",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188767,
          "startTimestampDate": "2012-01-23T13:19:48.767",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188768,
          "startTimestampDate": "2012-01-23T13:19:48.768",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188768,
          "startTimestampDate": "2012-01-23T13:19:48.768",
          "executionTime": 2,
          "description": "id#testToString(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.LongDoubleOpenHashMapTest.testToString(LongDoubleOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188771,
          "startTimestampDate": "2012-01-23T13:19:48.771",
          "executionTime": 97,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188868,
          "startTimestampDate": "2012-01-23T13:19:48.868",
          "executionTime": 2,
          "description": "id#testMapValues(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188870,
          "startTimestampDate": "2012-01-23T13:19:48.870",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188870,
          "startTimestampDate": "2012-01-23T13:19:48.870",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.LongDoubleOpenHashMapTest.testToString(LongDoubleOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongDoubleOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321188903,
      "startTimestampDate": "2012-01-23T13:19:48.903",
      "executionTime": 270,
      "description": {
        "id": "id#com.carrotsearch.hppc.IntDoubleOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
        "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.IntDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321188919,
          "startTimestampDate": "2012-01-23T13:19:48.919",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188927,
          "startTimestampDate": "2012-01-23T13:19:48.927",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188928,
          "startTimestampDate": "2012-01-23T13:19:48.928",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188928,
          "startTimestampDate": "2012-01-23T13:19:48.928",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188929,
          "startTimestampDate": "2012-01-23T13:19:48.929",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188929,
          "startTimestampDate": "2012-01-23T13:19:48.929",
          "executionTime": 26,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188957,
          "startTimestampDate": "2012-01-23T13:19:48.957",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188957,
          "startTimestampDate": "2012-01-23T13:19:48.957",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188958,
          "startTimestampDate": "2012-01-23T13:19:48.958",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188958,
          "startTimestampDate": "2012-01-23T13:19:48.958",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188959,
          "startTimestampDate": "2012-01-23T13:19:48.959",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188959,
          "startTimestampDate": "2012-01-23T13:19:48.959",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188961,
          "startTimestampDate": "2012-01-23T13:19:48.961",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188963,
          "startTimestampDate": "2012-01-23T13:19:48.963",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188963,
          "startTimestampDate": "2012-01-23T13:19:48.963",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188965,
          "startTimestampDate": "2012-01-23T13:19:48.965",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188965,
          "startTimestampDate": "2012-01-23T13:19:48.965",
          "executionTime": 14,
          "description": "id#testClear(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188979,
          "startTimestampDate": "2012-01-23T13:19:48.979",
          "executionTime": 1,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188980,
          "startTimestampDate": "2012-01-23T13:19:48.980",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188981,
          "startTimestampDate": "2012-01-23T13:19:48.981",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188982,
          "startTimestampDate": "2012-01-23T13:19:48.982",
          "executionTime": 1,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188983,
          "startTimestampDate": "2012-01-23T13:19:48.983",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188983,
          "startTimestampDate": "2012-01-23T13:19:48.983",
          "executionTime": 1,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188984,
          "startTimestampDate": "2012-01-23T13:19:48.984",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188985,
          "startTimestampDate": "2012-01-23T13:19:48.985",
          "executionTime": 1,
          "description": "id#testToString(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.IntDoubleOpenHashMapTest.testToString(IntDoubleOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321188987,
          "startTimestampDate": "2012-01-23T13:19:48.987",
          "executionTime": 181,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189169,
          "startTimestampDate": "2012-01-23T13:19:49.169",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189171,
          "startTimestampDate": "2012-01-23T13:19:49.171",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189171,
          "startTimestampDate": "2012-01-23T13:19:49.171",
          "executionTime": 2,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.IntDoubleOpenHashMapTest.testToString(IntDoubleOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntDoubleOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321189273,
      "startTimestampDate": "2012-01-23T13:19:49.273",
      "executionTime": 397,
      "description": {
        "id": "id#com.carrotsearch.hppc.ObjectCharOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullKey(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testNullKey(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testNullKey",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLkey(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
            "displayName": "testLkey(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)",
            "methodName": "testLkey",
            "className": "com.carrotsearch.hppc.ObjectCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321189296,
          "startTimestampDate": "2012-01-23T13:19:49.296",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189309,
          "startTimestampDate": "2012-01-23T13:19:49.309",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189316,
          "startTimestampDate": "2012-01-23T13:19:49.316",
          "executionTime": 1,
          "description": "id#testPut(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189317,
          "startTimestampDate": "2012-01-23T13:19:49.317",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189318,
          "startTimestampDate": "2012-01-23T13:19:49.318",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189319,
          "startTimestampDate": "2012-01-23T13:19:49.319",
          "executionTime": 32,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189352,
          "startTimestampDate": "2012-01-23T13:19:49.352",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189353,
          "startTimestampDate": "2012-01-23T13:19:49.353",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189353,
          "startTimestampDate": "2012-01-23T13:19:49.353",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189353,
          "startTimestampDate": "2012-01-23T13:19:49.353",
          "executionTime": 1,
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189354,
          "startTimestampDate": "2012-01-23T13:19:49.354",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189354,
          "startTimestampDate": "2012-01-23T13:19:49.354",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189356,
          "startTimestampDate": "2012-01-23T13:19:49.356",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189358,
          "startTimestampDate": "2012-01-23T13:19:49.358",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189359,
          "startTimestampDate": "2012-01-23T13:19:49.359",
          "executionTime": 4,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189364,
          "startTimestampDate": "2012-01-23T13:19:49.364",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189364,
          "startTimestampDate": "2012-01-23T13:19:49.364",
          "executionTime": 28,
          "description": "id#testClear(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189393,
          "startTimestampDate": "2012-01-23T13:19:49.393",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189393,
          "startTimestampDate": "2012-01-23T13:19:49.393",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189394,
          "startTimestampDate": "2012-01-23T13:19:49.394",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189394,
          "startTimestampDate": "2012-01-23T13:19:49.394",
          "executionTime": 1,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189395,
          "startTimestampDate": "2012-01-23T13:19:49.395",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189396,
          "startTimestampDate": "2012-01-23T13:19:49.396",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189396,
          "startTimestampDate": "2012-01-23T13:19:49.396",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189396,
          "startTimestampDate": "2012-01-23T13:19:49.396",
          "executionTime": 2,
          "description": "id#testToString(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ObjectCharOpenHashMapTest.testToString(ObjectCharOpenHashMapTest.java:514)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189399,
          "startTimestampDate": "2012-01-23T13:19:49.399",
          "executionTime": 265,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189665,
          "startTimestampDate": "2012-01-23T13:19:49.665",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189667,
          "startTimestampDate": "2012-01-23T13:19:49.667",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189667,
          "startTimestampDate": "2012-01-23T13:19:49.667",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189669,
          "startTimestampDate": "2012-01-23T13:19:49.669",
          "executionTime": 0,
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189669,
          "startTimestampDate": "2012-01-23T13:19:49.669",
          "executionTime": 0,
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ObjectCharOpenHashMapTest.testToString(ObjectCharOpenHashMapTest.java:514)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectCharOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321189709,
      "startTimestampDate": "2012-01-23T13:19:49.709",
      "executionTime": 48,
      "description": {
        "id": "id#com.carrotsearch.hppc.KTypeArrayListTest[0]",
        "displayName": "com.carrotsearch.hppc.KTypeArrayListTest",
        "className": "com.carrotsearch.hppc.KTypeArrayListTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemove(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testRemoveAllWithPredicateInterrupted",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRelease(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testRelease(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testRelease",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterator(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testIterator(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testIterator",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachWithProcedure(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testForEachWithProcedure(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testForEachWithProcedure",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeWithNulls(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testHashCodeWithNulls(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testHashCodeWithNulls",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToArrayWithClass(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testToArrayWithClass(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testToArrayWithClass",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToArray(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testToArray(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testToArray",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testHashCodeEqualsWithOtherContainer",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testAdd(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testAdd",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddTwoArgs(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testAddTwoArgs(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testAddTwoArgs",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddArray(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testAddArray(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testAddArray",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddVarArg(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testAddVarArg(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testAddVarArg",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAll(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testAddAll(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testAddAll",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInsert(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testInsert(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testInsert",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testSet(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testSet(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testSet",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveRange(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testRemoveRange(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testRemoveRange",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstLast(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testRemoveFirstLast(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testRemoveFirstLast",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAll(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testRemoveAll(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testRemoveAll",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testRemoveAllFromLookupContainer(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testRemoveAllFromLookupContainer",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testRetainAllWithPredicate(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testRetainAllWithPredicate",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIndexOf(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testIndexOf(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testIndexOf",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLastIndexOf(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testLastIndexOf(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testLastIndexOf",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testEnsureCapacity(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testEnsureCapacity(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testEnsureCapacity",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testResizeAndCleanBuffer(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testResizeAndCleanBuffer",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testTrimToSize(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testTrimToSize(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testTrimToSize",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGrowth(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testGrowth(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testGrowth",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testForEachReturnValueFromAnonymousClass",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFrom(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testFrom(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testFrom",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAll_subclass(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
            "displayName": "testAddAll_subclass(com.carrotsearch.hppc.KTypeArrayListTest)",
            "methodName": "testAddAll_subclass",
            "className": "com.carrotsearch.hppc.KTypeArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321189717,
          "startTimestampDate": "2012-01-23T13:19:49.717",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189717,
          "startTimestampDate": "2012-01-23T13:19:49.717",
          "executionTime": 11,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189730,
          "startTimestampDate": "2012-01-23T13:19:49.730",
          "executionTime": 0,
          "description": "id#testClear(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189733,
          "startTimestampDate": "2012-01-23T13:19:49.733",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189739,
          "startTimestampDate": "2012-01-23T13:19:49.739",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189739,
          "startTimestampDate": "2012-01-23T13:19:49.739",
          "executionTime": 1,
          "description": "id#testClone(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189740,
          "startTimestampDate": "2012-01-23T13:19:49.740",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189741,
          "startTimestampDate": "2012-01-23T13:19:49.741",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189741,
          "startTimestampDate": "2012-01-23T13:19:49.741",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189743,
          "startTimestampDate": "2012-01-23T13:19:49.743",
          "executionTime": 0,
          "description": "id#testRelease(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189743,
          "startTimestampDate": "2012-01-23T13:19:49.743",
          "executionTime": 0,
          "description": "id#testIterator(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189744,
          "startTimestampDate": "2012-01-23T13:19:49.744",
          "executionTime": 0,
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189745,
          "startTimestampDate": "2012-01-23T13:19:49.745",
          "executionTime": 0,
          "description": "id#testHashCodeWithNulls(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189745,
          "startTimestampDate": "2012-01-23T13:19:49.745",
          "executionTime": 0,
          "description": "id#testToArrayWithClass(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189746,
          "startTimestampDate": "2012-01-23T13:19:49.746",
          "executionTime": 0,
          "description": "id#testToArray(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189747,
          "startTimestampDate": "2012-01-23T13:19:49.747",
          "executionTime": 0,
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189748,
          "startTimestampDate": "2012-01-23T13:19:49.748",
          "executionTime": 0,
          "description": "id#testAdd(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189748,
          "startTimestampDate": "2012-01-23T13:19:49.748",
          "executionTime": 0,
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189748,
          "startTimestampDate": "2012-01-23T13:19:49.748",
          "executionTime": 1,
          "description": "id#testAddArray(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189749,
          "startTimestampDate": "2012-01-23T13:19:49.749",
          "executionTime": 0,
          "description": "id#testAddVarArg(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189749,
          "startTimestampDate": "2012-01-23T13:19:49.749",
          "executionTime": 0,
          "description": "id#testAddAll(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189750,
          "startTimestampDate": "2012-01-23T13:19:49.750",
          "executionTime": 0,
          "description": "id#testInsert(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189750,
          "startTimestampDate": "2012-01-23T13:19:49.750",
          "executionTime": 0,
          "description": "id#testSet(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189751,
          "startTimestampDate": "2012-01-23T13:19:49.751",
          "executionTime": 0,
          "description": "id#testRemoveRange(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189751,
          "startTimestampDate": "2012-01-23T13:19:49.751",
          "executionTime": 0,
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189752,
          "startTimestampDate": "2012-01-23T13:19:49.752",
          "executionTime": 0,
          "description": "id#testRemoveAll(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189752,
          "startTimestampDate": "2012-01-23T13:19:49.752",
          "executionTime": 0,
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189752,
          "startTimestampDate": "2012-01-23T13:19:49.752",
          "executionTime": 1,
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189753,
          "startTimestampDate": "2012-01-23T13:19:49.753",
          "executionTime": 0,
          "description": "id#testIndexOf(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189754,
          "startTimestampDate": "2012-01-23T13:19:49.754",
          "executionTime": 0,
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189754,
          "startTimestampDate": "2012-01-23T13:19:49.754",
          "executionTime": 0,
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189754,
          "startTimestampDate": "2012-01-23T13:19:49.754",
          "executionTime": 0,
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189754,
          "startTimestampDate": "2012-01-23T13:19:49.754",
          "executionTime": 0,
          "description": "id#testTrimToSize(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189755,
          "startTimestampDate": "2012-01-23T13:19:49.755",
          "executionTime": 0,
          "description": "id#testGrowth(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189755,
          "startTimestampDate": "2012-01-23T13:19:49.755",
          "executionTime": 1,
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189756,
          "startTimestampDate": "2012-01-23T13:19:49.756",
          "executionTime": 0,
          "description": "id#testFrom(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189756,
          "startTimestampDate": "2012-01-23T13:19:49.756",
          "executionTime": 1,
          "description": "id#testAddAll_subclass(com.carrotsearch.hppc.KTypeArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRelease(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRelease(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterator(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterator(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeWithNulls(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeWithNulls(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToArrayWithClass(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToArrayWithClass(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToArray(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToArray(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddArray(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddArray(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddVarArg(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddVarArg(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAll(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAll(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInsert(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInsert(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testSet(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testSet(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveRange(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveRange(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAll(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAll(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIndexOf(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIndexOf(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testTrimToSize(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testTrimToSize(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGrowth(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGrowth(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFrom(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFrom(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAll_subclass(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAll_subclass(com.carrotsearch.hppc.KTypeArrayListTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321189792,
      "startTimestampDate": "2012-01-23T13:19:49.792",
      "executionTime": 170,
      "description": {
        "id": "id#com.carrotsearch.hppc.LongLongOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
        "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.LongLongOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.LongLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321189802,
          "startTimestampDate": "2012-01-23T13:19:49.802",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189804,
          "startTimestampDate": "2012-01-23T13:19:49.804",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189804,
          "startTimestampDate": "2012-01-23T13:19:49.804",
          "executionTime": 1,
          "description": "id#testPut(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189805,
          "startTimestampDate": "2012-01-23T13:19:49.805",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189805,
          "startTimestampDate": "2012-01-23T13:19:49.805",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189805,
          "startTimestampDate": "2012-01-23T13:19:49.805",
          "executionTime": 24,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189829,
          "startTimestampDate": "2012-01-23T13:19:49.829",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189830,
          "startTimestampDate": "2012-01-23T13:19:49.830",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189830,
          "startTimestampDate": "2012-01-23T13:19:49.830",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189831,
          "startTimestampDate": "2012-01-23T13:19:49.831",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189831,
          "startTimestampDate": "2012-01-23T13:19:49.831",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189831,
          "startTimestampDate": "2012-01-23T13:19:49.831",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189833,
          "startTimestampDate": "2012-01-23T13:19:49.833",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189835,
          "startTimestampDate": "2012-01-23T13:19:49.835",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189835,
          "startTimestampDate": "2012-01-23T13:19:49.835",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189838,
          "startTimestampDate": "2012-01-23T13:19:49.838",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189838,
          "startTimestampDate": "2012-01-23T13:19:49.838",
          "executionTime": 23,
          "description": "id#testClear(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189862,
          "startTimestampDate": "2012-01-23T13:19:49.862",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189862,
          "startTimestampDate": "2012-01-23T13:19:49.862",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189863,
          "startTimestampDate": "2012-01-23T13:19:49.863",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189863,
          "startTimestampDate": "2012-01-23T13:19:49.863",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189864,
          "startTimestampDate": "2012-01-23T13:19:49.864",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189864,
          "startTimestampDate": "2012-01-23T13:19:49.864",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189864,
          "startTimestampDate": "2012-01-23T13:19:49.864",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189865,
          "startTimestampDate": "2012-01-23T13:19:49.865",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189865,
          "startTimestampDate": "2012-01-23T13:19:49.865",
          "executionTime": 93,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189959,
          "startTimestampDate": "2012-01-23T13:19:49.959",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189961,
          "startTimestampDate": "2012-01-23T13:19:49.961",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189961,
          "startTimestampDate": "2012-01-23T13:19:49.961",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.LongLongOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321189986,
      "startTimestampDate": "2012-01-23T13:19:49.986",
      "executionTime": 86,
      "description": {
        "id": "id#com.carrotsearch.hppc.ShortCharOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ShortCharOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ShortCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321189992,
          "startTimestampDate": "2012-01-23T13:19:49.992",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189995,
          "startTimestampDate": "2012-01-23T13:19:49.995",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189995,
          "startTimestampDate": "2012-01-23T13:19:49.995",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189995,
          "startTimestampDate": "2012-01-23T13:19:49.995",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189995,
          "startTimestampDate": "2012-01-23T13:19:49.995",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321189996,
          "startTimestampDate": "2012-01-23T13:19:49.996",
          "executionTime": 26,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190023,
          "startTimestampDate": "2012-01-23T13:19:50.023",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190024,
          "startTimestampDate": "2012-01-23T13:19:50.024",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190024,
          "startTimestampDate": "2012-01-23T13:19:50.024",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190024,
          "startTimestampDate": "2012-01-23T13:19:50.024",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190025,
          "startTimestampDate": "2012-01-23T13:19:50.025",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190025,
          "startTimestampDate": "2012-01-23T13:19:50.025",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190027,
          "startTimestampDate": "2012-01-23T13:19:50.027",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190029,
          "startTimestampDate": "2012-01-23T13:19:50.029",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190030,
          "startTimestampDate": "2012-01-23T13:19:50.030",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190031,
          "startTimestampDate": "2012-01-23T13:19:50.031",
          "executionTime": 1,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190036,
          "startTimestampDate": "2012-01-23T13:19:50.036",
          "executionTime": 22,
          "description": "id#testClear(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190059,
          "startTimestampDate": "2012-01-23T13:19:50.059",
          "executionTime": 1,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190060,
          "startTimestampDate": "2012-01-23T13:19:50.060",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190060,
          "startTimestampDate": "2012-01-23T13:19:50.060",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190061,
          "startTimestampDate": "2012-01-23T13:19:50.061",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190061,
          "startTimestampDate": "2012-01-23T13:19:50.061",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190062,
          "startTimestampDate": "2012-01-23T13:19:50.062",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190062,
          "startTimestampDate": "2012-01-23T13:19:50.062",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190063,
          "startTimestampDate": "2012-01-23T13:19:50.063",
          "executionTime": 1,
          "description": "id#testToString(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortCharOpenHashMapTest.testToString(ShortCharOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190065,
          "startTimestampDate": "2012-01-23T13:19:50.065",
          "executionTime": 1,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortCharOpenHashMapTest.testAddRemoveSameHashCollision(ShortCharOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190067,
          "startTimestampDate": "2012-01-23T13:19:50.067",
          "executionTime": 2,
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190070,
          "startTimestampDate": "2012-01-23T13:19:50.070",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190070,
          "startTimestampDate": "2012-01-23T13:19:50.070",
          "executionTime": 2,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortCharOpenHashMapTest.testToString(ShortCharOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortCharOpenHashMapTest.testAddRemoveSameHashCollision(ShortCharOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortCharOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321190095,
      "startTimestampDate": "2012-01-23T13:19:50.095",
      "executionTime": 39,
      "description": {
        "id": "id#com.carrotsearch.hppc.ByteOpenHashSetTest[0]",
        "displayName": "com.carrotsearch.hppc.ByteOpenHashSetTest",
        "className": "com.carrotsearch.hppc.ByteOpenHashSetTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ByteOpenHashSetTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ByteOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteOpenHashSetTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ByteOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ByteOpenHashSetTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ByteOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ByteOpenHashSetTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ByteOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ByteOpenHashSetTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ByteOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ByteOpenHashSetTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ByteOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ByteOpenHashSetTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ByteOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteOpenHashSetTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ByteOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.ByteOpenHashSetTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.ByteOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
            "displayName": "testAdd(com.carrotsearch.hppc.ByteOpenHashSetTest)",
            "methodName": "testAdd",
            "className": "com.carrotsearch.hppc.ByteOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAll(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
            "displayName": "testAddAll(com.carrotsearch.hppc.ByteOpenHashSetTest)",
            "methodName": "testAddAll",
            "className": "com.carrotsearch.hppc.ByteOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
            "displayName": "testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ByteOpenHashSetTest)",
            "methodName": "testRemoveAllFromLookupContainer",
            "className": "com.carrotsearch.hppc.ByteOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
            "displayName": "testRetainAllWithPredicate(com.carrotsearch.hppc.ByteOpenHashSetTest)",
            "methodName": "testRetainAllWithPredicate",
            "className": "com.carrotsearch.hppc.ByteOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd2(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
            "displayName": "testAdd2(com.carrotsearch.hppc.ByteOpenHashSetTest)",
            "methodName": "testAdd2",
            "className": "com.carrotsearch.hppc.ByteOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddVarArgs(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
            "displayName": "testAddVarArgs(com.carrotsearch.hppc.ByteOpenHashSetTest)",
            "methodName": "testAddVarArgs",
            "className": "com.carrotsearch.hppc.ByteOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
            "displayName": "testInitialCapacityAndGrowth(com.carrotsearch.hppc.ByteOpenHashSetTest)",
            "methodName": "testInitialCapacityAndGrowth",
            "className": "com.carrotsearch.hppc.ByteOpenHashSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321190098,
          "startTimestampDate": "2012-01-23T13:19:50.098",
          "executionTime": 1,
          "description": "id#testRemove(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190099,
          "startTimestampDate": "2012-01-23T13:19:50.099",
          "executionTime": 2,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190102,
          "startTimestampDate": "2012-01-23T13:19:50.102",
          "executionTime": 0,
          "description": "id#testClear(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190102,
          "startTimestampDate": "2012-01-23T13:19:50.102",
          "executionTime": 1,
          "description": "id#testIterable(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190104,
          "startTimestampDate": "2012-01-23T13:19:50.104",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190104,
          "startTimestampDate": "2012-01-23T13:19:50.104",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190104,
          "startTimestampDate": "2012-01-23T13:19:50.104",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190105,
          "startTimestampDate": "2012-01-23T13:19:50.105",
          "executionTime": 1,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteOpenHashSetTest.testAddRemoveSameHashCollision(ByteOpenHashSetTest.java:55)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190106,
          "startTimestampDate": "2012-01-23T13:19:50.106",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190106,
          "startTimestampDate": "2012-01-23T13:19:50.106",
          "executionTime": 0,
          "description": "id#testAdd(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190106,
          "startTimestampDate": "2012-01-23T13:19:50.106",
          "executionTime": 0,
          "description": "id#testAddAll(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190107,
          "startTimestampDate": "2012-01-23T13:19:50.107",
          "executionTime": 0,
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190107,
          "startTimestampDate": "2012-01-23T13:19:50.107",
          "executionTime": 2,
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190110,
          "startTimestampDate": "2012-01-23T13:19:50.110",
          "executionTime": 0,
          "description": "id#testAdd2(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190110,
          "startTimestampDate": "2012-01-23T13:19:50.110",
          "executionTime": 0,
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190111,
          "startTimestampDate": "2012-01-23T13:19:50.111",
          "executionTime": 22,
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ByteOpenHashSetTest.testAddRemoveSameHashCollision(ByteOpenHashSetTest.java:55)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAll(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAll(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd2(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd2(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddVarArgs(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitialCapacityAndGrowth(com.carrotsearch.hppc.ByteOpenHashSetTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321190150,
      "startTimestampDate": "2012-01-23T13:19:50.150",
      "executionTime": 1360,
      "description": {
        "id": "id#com.carrotsearch.hppc.BitSetTest[0]",
        "displayName": "com.carrotsearch.hppc.BitSetTest",
        "className": "com.carrotsearch.hppc.BitSetTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.BitSetTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.BitSetTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.BitSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.BitSetTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.BitSetTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.BitSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAgainstJREBitSet(com.carrotsearch.hppc.BitSetTest)[1]",
            "displayName": "testAgainstJREBitSet(com.carrotsearch.hppc.BitSetTest)",
            "methodName": "testAgainstJREBitSet",
            "className": "com.carrotsearch.hppc.BitSetTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321190150,
          "startTimestampDate": "2012-01-23T13:19:50.150",
          "executionTime": 1,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.BitSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190151,
          "startTimestampDate": "2012-01-23T13:19:50.151",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.BitSetTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321190151,
          "startTimestampDate": "2012-01-23T13:19:50.151",
          "executionTime": 1359,
          "description": "id#testAgainstJREBitSet(com.carrotsearch.hppc.BitSetTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.BitSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.BitSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.BitSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.BitSetTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAgainstJREBitSet(com.carrotsearch.hppc.BitSetTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAgainstJREBitSet(com.carrotsearch.hppc.BitSetTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321191520,
      "startTimestampDate": "2012-01-23T13:19:51.520",
      "executionTime": 5,
      "description": {
        "id": "id#com.carrotsearch.hppc.ShortStackTest[0]",
        "displayName": "com.carrotsearch.hppc.ShortStackTest",
        "className": "com.carrotsearch.hppc.ShortStackTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortStackTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ShortStackTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ShortStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ShortStackTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ShortStackTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ShortStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ShortStackTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ShortStackTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ShortStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.ShortStackTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.ShortStackTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.ShortStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPush1(com.carrotsearch.hppc.ShortStackTest)[1]",
            "displayName": "testPush1(com.carrotsearch.hppc.ShortStackTest)",
            "methodName": "testPush1",
            "className": "com.carrotsearch.hppc.ShortStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPush2(com.carrotsearch.hppc.ShortStackTest)[1]",
            "displayName": "testPush2(com.carrotsearch.hppc.ShortStackTest)",
            "methodName": "testPush2",
            "className": "com.carrotsearch.hppc.ShortStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPushArray(com.carrotsearch.hppc.ShortStackTest)[1]",
            "displayName": "testPushArray(com.carrotsearch.hppc.ShortStackTest)",
            "methodName": "testPushArray",
            "className": "com.carrotsearch.hppc.ShortStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAllPushAll(com.carrotsearch.hppc.ShortStackTest)[1]",
            "displayName": "testAddAllPushAll(com.carrotsearch.hppc.ShortStackTest)",
            "methodName": "testAddAllPushAll",
            "className": "com.carrotsearch.hppc.ShortStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDiscard(com.carrotsearch.hppc.ShortStackTest)[1]",
            "displayName": "testDiscard(com.carrotsearch.hppc.ShortStackTest)",
            "methodName": "testDiscard",
            "className": "com.carrotsearch.hppc.ShortStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGetAssertions(com.carrotsearch.hppc.ShortStackTest)[1]",
            "displayName": "testGetAssertions(com.carrotsearch.hppc.ShortStackTest)",
            "methodName": "testGetAssertions",
            "className": "com.carrotsearch.hppc.ShortStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testDiscardAssertions(com.carrotsearch.hppc.ShortStackTest)[1]",
            "displayName": "testDiscardAssertions(com.carrotsearch.hppc.ShortStackTest)",
            "methodName": "testDiscardAssertions",
            "className": "com.carrotsearch.hppc.ShortStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "java.lang.AssertionError"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ShortStackTest)[1]",
            "displayName": "testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ShortStackTest)",
            "methodName": "testHashCodeEqualsWithOtherContainer",
            "className": "com.carrotsearch.hppc.ShortStackTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321191522,
          "startTimestampDate": "2012-01-23T13:19:51.522",
          "executionTime": 1,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191523,
          "startTimestampDate": "2012-01-23T13:19:51.523",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ShortStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191523,
          "startTimestampDate": "2012-01-23T13:19:51.523",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ShortStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191523,
          "startTimestampDate": "2012-01-23T13:19:51.523",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ShortStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191524,
          "startTimestampDate": "2012-01-23T13:19:51.524",
          "executionTime": 0,
          "description": "id#testPush1(com.carrotsearch.hppc.ShortStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191524,
          "startTimestampDate": "2012-01-23T13:19:51.524",
          "executionTime": 0,
          "description": "id#testPush2(com.carrotsearch.hppc.ShortStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191524,
          "startTimestampDate": "2012-01-23T13:19:51.524",
          "executionTime": 0,
          "description": "id#testPushArray(com.carrotsearch.hppc.ShortStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191524,
          "startTimestampDate": "2012-01-23T13:19:51.524",
          "executionTime": 0,
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.ShortStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191524,
          "startTimestampDate": "2012-01-23T13:19:51.524",
          "executionTime": 0,
          "description": "id#testDiscard(com.carrotsearch.hppc.ShortStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191524,
          "startTimestampDate": "2012-01-23T13:19:51.524",
          "executionTime": 1,
          "description": "id#testGetAssertions(com.carrotsearch.hppc.ShortStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191525,
          "startTimestampDate": "2012-01-23T13:19:51.525",
          "executionTime": 0,
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.ShortStackTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191525,
          "startTimestampDate": "2012-01-23T13:19:51.525",
          "executionTime": 0,
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ShortStackTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPush1(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPush1(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPush2(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPush2(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPushArray(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPushArray(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAllPushAll(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDiscard(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDiscard(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGetAssertions(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGetAssertions(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testDiscardAssertions(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ShortStackTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ShortStackTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321191538,
      "startTimestampDate": "2012-01-23T13:19:51.538",
      "executionTime": 2,
      "description": {
        "id": "id#com.carrotsearch.hppc.APIExpectationsTest[0]",
        "displayName": "com.carrotsearch.hppc.APIExpectationsTest",
        "className": "com.carrotsearch.hppc.APIExpectationsTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testPrimitiveToArray(com.carrotsearch.hppc.APIExpectationsTest)[1]",
            "displayName": "testPrimitiveToArray(com.carrotsearch.hppc.APIExpectationsTest)",
            "methodName": "testPrimitiveToArray",
            "className": "com.carrotsearch.hppc.APIExpectationsTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNewInstance(com.carrotsearch.hppc.APIExpectationsTest)[1]",
            "displayName": "testNewInstance(com.carrotsearch.hppc.APIExpectationsTest)",
            "methodName": "testNewInstance",
            "className": "com.carrotsearch.hppc.APIExpectationsTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testObjectToArray(com.carrotsearch.hppc.APIExpectationsTest)[1]",
            "displayName": "testObjectToArray(com.carrotsearch.hppc.APIExpectationsTest)",
            "methodName": "testObjectToArray",
            "className": "com.carrotsearch.hppc.APIExpectationsTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testWithClassToArray(com.carrotsearch.hppc.APIExpectationsTest)[1]",
            "displayName": "testWithClassToArray(com.carrotsearch.hppc.APIExpectationsTest)",
            "methodName": "testWithClassToArray",
            "className": "com.carrotsearch.hppc.APIExpectationsTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testWildcards(com.carrotsearch.hppc.APIExpectationsTest)[1]",
            "displayName": "testWildcards(com.carrotsearch.hppc.APIExpectationsTest)",
            "methodName": "testWildcards",
            "className": "com.carrotsearch.hppc.APIExpectationsTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAddOnEqualKeys(com.carrotsearch.hppc.APIExpectationsTest)[1]",
            "displayName": "testPutOrAddOnEqualKeys(com.carrotsearch.hppc.APIExpectationsTest)",
            "methodName": "testPutOrAddOnEqualKeys",
            "className": "com.carrotsearch.hppc.APIExpectationsTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321191539,
          "startTimestampDate": "2012-01-23T13:19:51.539",
          "executionTime": 0,
          "description": "id#testPrimitiveToArray(com.carrotsearch.hppc.APIExpectationsTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191539,
          "startTimestampDate": "2012-01-23T13:19:51.539",
          "executionTime": 0,
          "description": "id#testNewInstance(com.carrotsearch.hppc.APIExpectationsTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191540,
          "startTimestampDate": "2012-01-23T13:19:51.540",
          "executionTime": 0,
          "description": "id#testObjectToArray(com.carrotsearch.hppc.APIExpectationsTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191540,
          "startTimestampDate": "2012-01-23T13:19:51.540",
          "executionTime": 0,
          "description": "id#testWithClassToArray(com.carrotsearch.hppc.APIExpectationsTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191540,
          "startTimestampDate": "2012-01-23T13:19:51.540",
          "executionTime": 0,
          "description": "id#testWildcards(com.carrotsearch.hppc.APIExpectationsTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191540,
          "startTimestampDate": "2012-01-23T13:19:51.540",
          "executionTime": 0,
          "description": "id#testPutOrAddOnEqualKeys(com.carrotsearch.hppc.APIExpectationsTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testPrimitiveToArray(com.carrotsearch.hppc.APIExpectationsTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPrimitiveToArray(com.carrotsearch.hppc.APIExpectationsTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNewInstance(com.carrotsearch.hppc.APIExpectationsTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNewInstance(com.carrotsearch.hppc.APIExpectationsTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testObjectToArray(com.carrotsearch.hppc.APIExpectationsTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testObjectToArray(com.carrotsearch.hppc.APIExpectationsTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testWithClassToArray(com.carrotsearch.hppc.APIExpectationsTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testWithClassToArray(com.carrotsearch.hppc.APIExpectationsTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testWildcards(com.carrotsearch.hppc.APIExpectationsTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testWildcards(com.carrotsearch.hppc.APIExpectationsTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAddOnEqualKeys(com.carrotsearch.hppc.APIExpectationsTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAddOnEqualKeys(com.carrotsearch.hppc.APIExpectationsTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321191558,
      "startTimestampDate": "2012-01-23T13:19:51.558",
      "executionTime": 113,
      "description": {
        "id": "id#com.carrotsearch.hppc.CharCharOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
        "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.CharCharOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.CharCharOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321191564,
          "startTimestampDate": "2012-01-23T13:19:51.564",
          "executionTime": 3,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191570,
          "startTimestampDate": "2012-01-23T13:19:51.570",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191571,
          "startTimestampDate": "2012-01-23T13:19:51.571",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191571,
          "startTimestampDate": "2012-01-23T13:19:51.571",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191571,
          "startTimestampDate": "2012-01-23T13:19:51.571",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191572,
          "startTimestampDate": "2012-01-23T13:19:51.572",
          "executionTime": 45,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191617,
          "startTimestampDate": "2012-01-23T13:19:51.617",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191618,
          "startTimestampDate": "2012-01-23T13:19:51.618",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191618,
          "startTimestampDate": "2012-01-23T13:19:51.618",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191619,
          "startTimestampDate": "2012-01-23T13:19:51.619",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191619,
          "startTimestampDate": "2012-01-23T13:19:51.619",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191620,
          "startTimestampDate": "2012-01-23T13:19:51.620",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191621,
          "startTimestampDate": "2012-01-23T13:19:51.621",
          "executionTime": 6,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191628,
          "startTimestampDate": "2012-01-23T13:19:51.628",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191628,
          "startTimestampDate": "2012-01-23T13:19:51.628",
          "executionTime": 2,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191631,
          "startTimestampDate": "2012-01-23T13:19:51.631",
          "executionTime": 1,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191632,
          "startTimestampDate": "2012-01-23T13:19:51.632",
          "executionTime": 25,
          "description": "id#testClear(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191658,
          "startTimestampDate": "2012-01-23T13:19:51.658",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191658,
          "startTimestampDate": "2012-01-23T13:19:51.658",
          "executionTime": 1,
          "description": "id#testIterable(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191659,
          "startTimestampDate": "2012-01-23T13:19:51.659",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191660,
          "startTimestampDate": "2012-01-23T13:19:51.660",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191660,
          "startTimestampDate": "2012-01-23T13:19:51.660",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191660,
          "startTimestampDate": "2012-01-23T13:19:51.660",
          "executionTime": 1,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191661,
          "startTimestampDate": "2012-01-23T13:19:51.661",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191661,
          "startTimestampDate": "2012-01-23T13:19:51.661",
          "executionTime": 2,
          "description": "id#testToString(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharCharOpenHashMapTest.testToString(CharCharOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191664,
          "startTimestampDate": "2012-01-23T13:19:51.664",
          "executionTime": 1,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharCharOpenHashMapTest.testAddRemoveSameHashCollision(CharCharOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191666,
          "startTimestampDate": "2012-01-23T13:19:51.666",
          "executionTime": 2,
          "description": "id#testMapValues(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191668,
          "startTimestampDate": "2012-01-23T13:19:51.668",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191669,
          "startTimestampDate": "2012-01-23T13:19:51.669",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharCharOpenHashMapTest.testToString(CharCharOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.CharCharOpenHashMapTest.testAddRemoveSameHashCollision(CharCharOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.CharCharOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321191700,
      "startTimestampDate": "2012-01-23T13:19:51.700",
      "executionTime": 349,
      "description": {
        "id": "id#com.carrotsearch.hppc.ObjectByteOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testNullKey(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testNullKey(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testNullKey",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLkey(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
            "displayName": "testLkey(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)",
            "methodName": "testLkey",
            "className": "com.carrotsearch.hppc.ObjectByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321191707,
          "startTimestampDate": "2012-01-23T13:19:51.707",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191710,
          "startTimestampDate": "2012-01-23T13:19:51.710",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191710,
          "startTimestampDate": "2012-01-23T13:19:51.710",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191710,
          "startTimestampDate": "2012-01-23T13:19:51.710",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191710,
          "startTimestampDate": "2012-01-23T13:19:51.710",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191710,
          "startTimestampDate": "2012-01-23T13:19:51.710",
          "executionTime": 28,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191739,
          "startTimestampDate": "2012-01-23T13:19:51.739",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191740,
          "startTimestampDate": "2012-01-23T13:19:51.740",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191740,
          "startTimestampDate": "2012-01-23T13:19:51.740",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191740,
          "startTimestampDate": "2012-01-23T13:19:51.740",
          "executionTime": 1,
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191741,
          "startTimestampDate": "2012-01-23T13:19:51.741",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191741,
          "startTimestampDate": "2012-01-23T13:19:51.741",
          "executionTime": 2,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191743,
          "startTimestampDate": "2012-01-23T13:19:51.743",
          "executionTime": 2,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191746,
          "startTimestampDate": "2012-01-23T13:19:51.746",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191746,
          "startTimestampDate": "2012-01-23T13:19:51.746",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191749,
          "startTimestampDate": "2012-01-23T13:19:51.749",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191750,
          "startTimestampDate": "2012-01-23T13:19:51.750",
          "executionTime": 18,
          "description": "id#testClear(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191769,
          "startTimestampDate": "2012-01-23T13:19:51.769",
          "executionTime": 1,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191770,
          "startTimestampDate": "2012-01-23T13:19:51.770",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191770,
          "startTimestampDate": "2012-01-23T13:19:51.770",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191771,
          "startTimestampDate": "2012-01-23T13:19:51.771",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191771,
          "startTimestampDate": "2012-01-23T13:19:51.771",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191772,
          "startTimestampDate": "2012-01-23T13:19:51.772",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191772,
          "startTimestampDate": "2012-01-23T13:19:51.772",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191773,
          "startTimestampDate": "2012-01-23T13:19:51.773",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321191773,
          "startTimestampDate": "2012-01-23T13:19:51.773",
          "executionTime": 272,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192045,
          "startTimestampDate": "2012-01-23T13:19:52.045",
          "executionTime": 2,
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192047,
          "startTimestampDate": "2012-01-23T13:19:52.047",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192047,
          "startTimestampDate": "2012-01-23T13:19:52.047",
          "executionTime": 2,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192049,
          "startTimestampDate": "2012-01-23T13:19:52.049",
          "executionTime": 0,
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192049,
          "startTimestampDate": "2012-01-23T13:19:52.049",
          "executionTime": 0,
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testNullKey(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLkey(com.carrotsearch.hppc.ObjectByteOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321192071,
      "startTimestampDate": "2012-01-23T13:19:52.071",
      "executionTime": 1,
      "description": {
        "id": "id#com.carrotsearch.hppc.ObjectIntOpenHashMapRegressionTest[0]",
        "displayName": "com.carrotsearch.hppc.ObjectIntOpenHashMapRegressionTest",
        "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapRegressionTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testEqualsOnObjectKeys(com.carrotsearch.hppc.ObjectIntOpenHashMapRegressionTest)[1]",
            "displayName": "testEqualsOnObjectKeys(com.carrotsearch.hppc.ObjectIntOpenHashMapRegressionTest)",
            "methodName": "testEqualsOnObjectKeys",
            "className": "com.carrotsearch.hppc.ObjectIntOpenHashMapRegressionTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321192071,
          "startTimestampDate": "2012-01-23T13:19:52.071",
          "executionTime": 0,
          "description": "id#testEqualsOnObjectKeys(com.carrotsearch.hppc.ObjectIntOpenHashMapRegressionTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testEqualsOnObjectKeys(com.carrotsearch.hppc.ObjectIntOpenHashMapRegressionTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testEqualsOnObjectKeys(com.carrotsearch.hppc.ObjectIntOpenHashMapRegressionTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321192085,
      "startTimestampDate": "2012-01-23T13:19:52.085",
      "executionTime": 297,
      "description": {
        "id": "id#com.carrotsearch.hppc.IntFloatOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
        "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.IntFloatOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.IntFloatOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321192092,
          "startTimestampDate": "2012-01-23T13:19:52.092",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192097,
          "startTimestampDate": "2012-01-23T13:19:52.097",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192097,
          "startTimestampDate": "2012-01-23T13:19:52.097",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192097,
          "startTimestampDate": "2012-01-23T13:19:52.097",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192097,
          "startTimestampDate": "2012-01-23T13:19:52.097",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192097,
          "startTimestampDate": "2012-01-23T13:19:52.097",
          "executionTime": 29,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192127,
          "startTimestampDate": "2012-01-23T13:19:52.127",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192128,
          "startTimestampDate": "2012-01-23T13:19:52.128",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192128,
          "startTimestampDate": "2012-01-23T13:19:52.128",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192129,
          "startTimestampDate": "2012-01-23T13:19:52.129",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192129,
          "startTimestampDate": "2012-01-23T13:19:52.129",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192130,
          "startTimestampDate": "2012-01-23T13:19:52.130",
          "executionTime": 0,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192131,
          "startTimestampDate": "2012-01-23T13:19:52.131",
          "executionTime": 2,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192134,
          "startTimestampDate": "2012-01-23T13:19:52.134",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192135,
          "startTimestampDate": "2012-01-23T13:19:52.135",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192137,
          "startTimestampDate": "2012-01-23T13:19:52.137",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192137,
          "startTimestampDate": "2012-01-23T13:19:52.137",
          "executionTime": 48,
          "description": "id#testClear(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192185,
          "startTimestampDate": "2012-01-23T13:19:52.185",
          "executionTime": 1,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192191,
          "startTimestampDate": "2012-01-23T13:19:52.191",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192192,
          "startTimestampDate": "2012-01-23T13:19:52.192",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192192,
          "startTimestampDate": "2012-01-23T13:19:52.192",
          "executionTime": 1,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192193,
          "startTimestampDate": "2012-01-23T13:19:52.193",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192193,
          "startTimestampDate": "2012-01-23T13:19:52.193",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192194,
          "startTimestampDate": "2012-01-23T13:19:52.194",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192194,
          "startTimestampDate": "2012-01-23T13:19:52.194",
          "executionTime": 2,
          "description": "id#testToString(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.IntFloatOpenHashMapTest.testToString(IntFloatOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192197,
          "startTimestampDate": "2012-01-23T13:19:52.197",
          "executionTime": 181,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192378,
          "startTimestampDate": "2012-01-23T13:19:52.378",
          "executionTime": 1,
          "description": "id#testMapValues(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192380,
          "startTimestampDate": "2012-01-23T13:19:52.380",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192380,
          "startTimestampDate": "2012-01-23T13:19:52.380",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.IntFloatOpenHashMapTest.testToString(IntFloatOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.IntFloatOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321192406,
      "startTimestampDate": "2012-01-23T13:19:52.406",
      "executionTime": 74,
      "description": {
        "id": "id#com.carrotsearch.hppc.DoubleByteOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
        "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.DoubleByteOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321192412,
          "startTimestampDate": "2012-01-23T13:19:52.412",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192417,
          "startTimestampDate": "2012-01-23T13:19:52.417",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192418,
          "startTimestampDate": "2012-01-23T13:19:52.418",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192418,
          "startTimestampDate": "2012-01-23T13:19:52.418",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192418,
          "startTimestampDate": "2012-01-23T13:19:52.418",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192418,
          "startTimestampDate": "2012-01-23T13:19:52.418",
          "executionTime": 25,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192444,
          "startTimestampDate": "2012-01-23T13:19:52.444",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192444,
          "startTimestampDate": "2012-01-23T13:19:52.444",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192445,
          "startTimestampDate": "2012-01-23T13:19:52.445",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192445,
          "startTimestampDate": "2012-01-23T13:19:52.445",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192445,
          "startTimestampDate": "2012-01-23T13:19:52.445",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192446,
          "startTimestampDate": "2012-01-23T13:19:52.446",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192447,
          "startTimestampDate": "2012-01-23T13:19:52.447",
          "executionTime": 2,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192450,
          "startTimestampDate": "2012-01-23T13:19:52.450",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192451,
          "startTimestampDate": "2012-01-23T13:19:52.451",
          "executionTime": 0,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192452,
          "startTimestampDate": "2012-01-23T13:19:52.452",
          "executionTime": 1,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192453,
          "startTimestampDate": "2012-01-23T13:19:52.453",
          "executionTime": 13,
          "description": "id#testClear(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192467,
          "startTimestampDate": "2012-01-23T13:19:52.467",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192468,
          "startTimestampDate": "2012-01-23T13:19:52.468",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192468,
          "startTimestampDate": "2012-01-23T13:19:52.468",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192469,
          "startTimestampDate": "2012-01-23T13:19:52.469",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192469,
          "startTimestampDate": "2012-01-23T13:19:52.469",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192469,
          "startTimestampDate": "2012-01-23T13:19:52.469",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192470,
          "startTimestampDate": "2012-01-23T13:19:52.470",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192471,
          "startTimestampDate": "2012-01-23T13:19:52.471",
          "executionTime": 1,
          "description": "id#testToString(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleByteOpenHashMapTest.testToString(DoubleByteOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192473,
          "startTimestampDate": "2012-01-23T13:19:52.473",
          "executionTime": 1,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleByteOpenHashMapTest.testAddRemoveSameHashCollision(DoubleByteOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192475,
          "startTimestampDate": "2012-01-23T13:19:52.475",
          "executionTime": 2,
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192478,
          "startTimestampDate": "2012-01-23T13:19:52.478",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192478,
          "startTimestampDate": "2012-01-23T13:19:52.478",
          "executionTime": 2,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleByteOpenHashMapTest.testToString(DoubleByteOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.DoubleByteOpenHashMapTest.testAddRemoveSameHashCollision(DoubleByteOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.DoubleByteOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321192515,
      "startTimestampDate": "2012-01-23T13:19:52.515",
      "executionTime": 71,
      "description": {
        "id": "id#com.carrotsearch.hppc.ShortLongOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ShortLongOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ShortLongOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321192521,
          "startTimestampDate": "2012-01-23T13:19:52.521",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192524,
          "startTimestampDate": "2012-01-23T13:19:52.524",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192524,
          "startTimestampDate": "2012-01-23T13:19:52.524",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192524,
          "startTimestampDate": "2012-01-23T13:19:52.524",
          "executionTime": 0,
          "description": "id#testLPut(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192524,
          "startTimestampDate": "2012-01-23T13:19:52.524",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192525,
          "startTimestampDate": "2012-01-23T13:19:52.525",
          "executionTime": 24,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192550,
          "startTimestampDate": "2012-01-23T13:19:52.550",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192551,
          "startTimestampDate": "2012-01-23T13:19:52.551",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192551,
          "startTimestampDate": "2012-01-23T13:19:52.551",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192551,
          "startTimestampDate": "2012-01-23T13:19:52.551",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192552,
          "startTimestampDate": "2012-01-23T13:19:52.552",
          "executionTime": 0,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192553,
          "startTimestampDate": "2012-01-23T13:19:52.553",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192555,
          "startTimestampDate": "2012-01-23T13:19:52.555",
          "executionTime": 1,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192557,
          "startTimestampDate": "2012-01-23T13:19:52.557",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192557,
          "startTimestampDate": "2012-01-23T13:19:52.557",
          "executionTime": 1,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192559,
          "startTimestampDate": "2012-01-23T13:19:52.559",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192559,
          "startTimestampDate": "2012-01-23T13:19:52.559",
          "executionTime": 13,
          "description": "id#testClear(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192573,
          "startTimestampDate": "2012-01-23T13:19:52.573",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192574,
          "startTimestampDate": "2012-01-23T13:19:52.574",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192574,
          "startTimestampDate": "2012-01-23T13:19:52.574",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192575,
          "startTimestampDate": "2012-01-23T13:19:52.575",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192575,
          "startTimestampDate": "2012-01-23T13:19:52.575",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192576,
          "startTimestampDate": "2012-01-23T13:19:52.576",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192576,
          "startTimestampDate": "2012-01-23T13:19:52.576",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192577,
          "startTimestampDate": "2012-01-23T13:19:52.577",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192577,
          "startTimestampDate": "2012-01-23T13:19:52.577",
          "executionTime": 2,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortLongOpenHashMapTest.testAddRemoveSameHashCollision(ShortLongOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192580,
          "startTimestampDate": "2012-01-23T13:19:52.580",
          "executionTime": 2,
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192583,
          "startTimestampDate": "2012-01-23T13:19:52.583",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192584,
          "startTimestampDate": "2012-01-23T13:19:52.584",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortLongOpenHashMapTest.testAddRemoveSameHashCollision(ShortLongOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortLongOpenHashMapTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321192610,
      "startTimestampDate": "2012-01-23T13:19:52.610",
      "executionTime": 64,
      "description": {
        "id": "id#com.carrotsearch.hppc.ShortArrayListTest[0]",
        "displayName": "com.carrotsearch.hppc.ShortArrayListTest",
        "className": "com.carrotsearch.hppc.ShortArrayListTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInitiallyEmpty(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testInitiallyEmpty(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testInitiallyEmpty",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testRemoveAllWithPredicateInterrupted",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRelease(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testRelease(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testRelease",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterator(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testIterator(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testIterator",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachWithProcedure(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testForEachWithProcedure(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testForEachWithProcedure",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testHashCodeEqualsWithOtherContainer",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAdd(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testAdd(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testAdd",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddTwoArgs(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testAddTwoArgs(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testAddTwoArgs",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddArray(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testAddArray(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testAddArray",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddVarArg(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testAddVarArg(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testAddVarArg",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddAll(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testAddAll(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testAddAll",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testInsert(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testInsert(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testInsert",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testSet(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testSet(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testSet",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveRange(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testRemoveRange(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testRemoveRange",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveFirstLast(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testRemoveFirstLast(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testRemoveFirstLast",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAll(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testRemoveAll(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testRemoveAll",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testRemoveAllFromLookupContainer",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testRetainAllWithPredicate(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testRetainAllWithPredicate",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIndexOf(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testIndexOf(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testIndexOf",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLastIndexOf(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testLastIndexOf(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testLastIndexOf",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testEnsureCapacity(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testEnsureCapacity(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testEnsureCapacity",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testResizeAndCleanBuffer(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testResizeAndCleanBuffer",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testTrimToSize(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testTrimToSize(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testTrimToSize",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testGrowth(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testGrowth(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testGrowth",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testForEachReturnValueFromAnonymousClass",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFrom(com.carrotsearch.hppc.ShortArrayListTest)[1]",
            "displayName": "testFrom(com.carrotsearch.hppc.ShortArrayListTest)",
            "methodName": "testFrom",
            "className": "com.carrotsearch.hppc.ShortArrayListTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321192616,
          "startTimestampDate": "2012-01-23T13:19:52.616",
          "executionTime": 1,
          "description": "id#testRemove(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192628,
          "startTimestampDate": "2012-01-23T13:19:52.628",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192630,
          "startTimestampDate": "2012-01-23T13:19:52.630",
          "executionTime": 0,
          "description": "id#testClear(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192630,
          "startTimestampDate": "2012-01-23T13:19:52.630",
          "executionTime": 0,
          "description": "id#testIterable(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192631,
          "startTimestampDate": "2012-01-23T13:19:52.631",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192631,
          "startTimestampDate": "2012-01-23T13:19:52.631",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192638,
          "startTimestampDate": "2012-01-23T13:19:52.638",
          "executionTime": 0,
          "description": "id#testToString(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192639,
          "startTimestampDate": "2012-01-23T13:19:52.639",
          "executionTime": 0,
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192639,
          "startTimestampDate": "2012-01-23T13:19:52.639",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192641,
          "startTimestampDate": "2012-01-23T13:19:52.641",
          "executionTime": 0,
          "description": "id#testRelease(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192643,
          "startTimestampDate": "2012-01-23T13:19:52.643",
          "executionTime": 0,
          "description": "id#testIterator(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192646,
          "startTimestampDate": "2012-01-23T13:19:52.646",
          "executionTime": 7,
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192654,
          "startTimestampDate": "2012-01-23T13:19:52.654",
          "executionTime": 0,
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192654,
          "startTimestampDate": "2012-01-23T13:19:52.654",
          "executionTime": 0,
          "description": "id#testAdd(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192654,
          "startTimestampDate": "2012-01-23T13:19:52.654",
          "executionTime": 0,
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192655,
          "startTimestampDate": "2012-01-23T13:19:52.655",
          "executionTime": 1,
          "description": "id#testAddArray(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192657,
          "startTimestampDate": "2012-01-23T13:19:52.657",
          "executionTime": 0,
          "description": "id#testAddVarArg(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192662,
          "startTimestampDate": "2012-01-23T13:19:52.662",
          "executionTime": 0,
          "description": "id#testAddAll(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192663,
          "startTimestampDate": "2012-01-23T13:19:52.663",
          "executionTime": 0,
          "description": "id#testInsert(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192663,
          "startTimestampDate": "2012-01-23T13:19:52.663",
          "executionTime": 0,
          "description": "id#testSet(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192665,
          "startTimestampDate": "2012-01-23T13:19:52.665",
          "executionTime": 0,
          "description": "id#testRemoveRange(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192666,
          "startTimestampDate": "2012-01-23T13:19:52.666",
          "executionTime": 0,
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192666,
          "startTimestampDate": "2012-01-23T13:19:52.666",
          "executionTime": 0,
          "description": "id#testRemoveAll(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192667,
          "startTimestampDate": "2012-01-23T13:19:52.667",
          "executionTime": 0,
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192667,
          "startTimestampDate": "2012-01-23T13:19:52.667",
          "executionTime": 1,
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192669,
          "startTimestampDate": "2012-01-23T13:19:52.669",
          "executionTime": 0,
          "description": "id#testIndexOf(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192669,
          "startTimestampDate": "2012-01-23T13:19:52.669",
          "executionTime": 0,
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192670,
          "startTimestampDate": "2012-01-23T13:19:52.670",
          "executionTime": 0,
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192670,
          "startTimestampDate": "2012-01-23T13:19:52.670",
          "executionTime": 0,
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192671,
          "startTimestampDate": "2012-01-23T13:19:52.671",
          "executionTime": 0,
          "description": "id#testTrimToSize(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192671,
          "startTimestampDate": "2012-01-23T13:19:52.671",
          "executionTime": 0,
          "description": "id#testGrowth(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192672,
          "startTimestampDate": "2012-01-23T13:19:52.672",
          "executionTime": 1,
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192673,
          "startTimestampDate": "2012-01-23T13:19:52.673",
          "executionTime": 0,
          "description": "id#testFrom(com.carrotsearch.hppc.ShortArrayListTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInitiallyEmpty(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicateInterrupted(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRelease(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRelease(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterator(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterator(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachWithProcedure(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEqualsWithOtherContainer(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAdd(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAdd(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddTwoArgs(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddArray(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddArray(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddVarArg(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddVarArg(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddAll(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddAll(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testInsert(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testInsert(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testSet(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testSet(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveRange(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveRange(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveFirstLast(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAll(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAll(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllFromLookupContainer(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRetainAllWithPredicate(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIndexOf(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIndexOf(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLastIndexOf(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testEnsureCapacity(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testResizeAndCleanBuffer(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testTrimToSize(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testTrimToSize(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testGrowth(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testGrowth(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testForEachReturnValueFromAnonymousClass(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFrom(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFrom(com.carrotsearch.hppc.ShortArrayListTest)[1]"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1327321192703,
      "startTimestampDate": "2012-01-23T13:19:52.703",
      "executionTime": 100,
      "description": {
        "id": "id#com.carrotsearch.hppc.ShortDoubleOpenHashMapTest[0]",
        "displayName": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
        "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
        "annotations": [],
        "children": [
          {
            "id": "id#testCloningConstructor(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testCloningConstructor(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testCloningConstructor",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFromArrays(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testFromArrays(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testFromArrays",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPut(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testPut(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testPut",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testLPut(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testLPut(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testLPut",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testPutOverExistingKey(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testPutOverExistingKey",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testPutWithExpansions(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testPutWithExpansions",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutAll(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testPutAll(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testPutAll",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testPutIfAbsent(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testPutIfAbsent",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testPutOrAdd(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testPutOrAdd(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testPutOrAdd",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemove(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testRemove(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testRemove",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithContainer(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testRemoveAllWithContainer",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testRemoveAllWithPredicate",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testRemoveViaKeySetView(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testRemoveViaKeySetView",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapsIntersection(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testMapsIntersection(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testMapsIntersection",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySet(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testMapKeySet(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testMapKeySet",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testMapKeySetIterator(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testMapKeySetIterator",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClear(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testClear(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testClear",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testRoundCapacity(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testRoundCapacity(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testRoundCapacity",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testIterable(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testIterable(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testIterable",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testFullLoadFactor(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testFullLoadFactor",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testHalfLoadFactor(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testHalfLoadFactor",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testHashCodeEquals(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testHashCodeEquals",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testBug_HPPC37(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testBug_HPPC37",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testClone(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testClone(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testClone",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testToString(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testToString(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testToString",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testAddRemoveSameHashCollision",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValues(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValues(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testMapValues",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValuesIterator(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testMapValuesIterator",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
            "displayName": "testMapValuesContainer(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)",
            "methodName": "testMapValuesContainer",
            "className": "com.carrotsearch.hppc.ShortDoubleOpenHashMapTest",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1327321192710,
          "startTimestampDate": "2012-01-23T13:19:52.710",
          "executionTime": 2,
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192721,
          "startTimestampDate": "2012-01-23T13:19:52.721",
          "executionTime": 0,
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192726,
          "startTimestampDate": "2012-01-23T13:19:52.726",
          "executionTime": 0,
          "description": "id#testPut(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192726,
          "startTimestampDate": "2012-01-23T13:19:52.726",
          "executionTime": 1,
          "description": "id#testLPut(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192727,
          "startTimestampDate": "2012-01-23T13:19:52.727",
          "executionTime": 0,
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192727,
          "startTimestampDate": "2012-01-23T13:19:52.727",
          "executionTime": 35,
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192763,
          "startTimestampDate": "2012-01-23T13:19:52.763",
          "executionTime": 0,
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192763,
          "startTimestampDate": "2012-01-23T13:19:52.763",
          "executionTime": 0,
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192764,
          "startTimestampDate": "2012-01-23T13:19:52.764",
          "executionTime": 0,
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192764,
          "startTimestampDate": "2012-01-23T13:19:52.764",
          "executionTime": 0,
          "description": "id#testRemove(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192764,
          "startTimestampDate": "2012-01-23T13:19:52.764",
          "executionTime": 1,
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192765,
          "startTimestampDate": "2012-01-23T13:19:52.765",
          "executionTime": 1,
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192766,
          "startTimestampDate": "2012-01-23T13:19:52.766",
          "executionTime": 2,
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192769,
          "startTimestampDate": "2012-01-23T13:19:52.769",
          "executionTime": 0,
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192769,
          "startTimestampDate": "2012-01-23T13:19:52.769",
          "executionTime": 3,
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192774,
          "startTimestampDate": "2012-01-23T13:19:52.774",
          "executionTime": 0,
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192774,
          "startTimestampDate": "2012-01-23T13:19:52.774",
          "executionTime": 14,
          "description": "id#testClear(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192789,
          "startTimestampDate": "2012-01-23T13:19:52.789",
          "executionTime": 0,
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192789,
          "startTimestampDate": "2012-01-23T13:19:52.789",
          "executionTime": 1,
          "description": "id#testIterable(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192790,
          "startTimestampDate": "2012-01-23T13:19:52.790",
          "executionTime": 0,
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192790,
          "startTimestampDate": "2012-01-23T13:19:52.790",
          "executionTime": 0,
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192791,
          "startTimestampDate": "2012-01-23T13:19:52.791",
          "executionTime": 0,
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192792,
          "startTimestampDate": "2012-01-23T13:19:52.792",
          "executionTime": 0,
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192792,
          "startTimestampDate": "2012-01-23T13:19:52.792",
          "executionTime": 0,
          "description": "id#testClone(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192793,
          "startTimestampDate": "2012-01-23T13:19:52.793",
          "executionTime": 1,
          "description": "id#testToString(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortDoubleOpenHashMapTest.testToString(ShortDoubleOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192795,
          "startTimestampDate": "2012-01-23T13:19:52.795",
          "executionTime": 1,
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortDoubleOpenHashMapTest.testAddRemoveSameHashCollision(ShortDoubleOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192797,
          "startTimestampDate": "2012-01-23T13:19:52.797",
          "executionTime": 3,
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192800,
          "startTimestampDate": "2012-01-23T13:19:52.800",
          "executionTime": 0,
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1327321192801,
          "startTimestampDate": "2012-01-23T13:19:52.801",
          "executionTime": 1,
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testCloningConstructor(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFromArrays(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPut(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPut(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testLPut(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testLPut(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOverExistingKey(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutWithExpansions(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutAll(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutIfAbsent(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testPutOrAdd(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemove(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemove(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithContainer(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveAllWithPredicate(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRemoveViaKeySetView(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapsIntersection(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySet(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapKeySetIterator(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClear(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testRoundCapacity(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testIterable(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testFullLoadFactor(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHalfLoadFactor(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testHashCodeEquals(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testBug_HPPC37(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testClone(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testToString(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortDoubleOpenHashMapTest.testToString(ShortDoubleOpenHashMapTest.java:486)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testToString(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_IGNORED_ASSUMPTION",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]",
          "failure": {
            "throwableClass": "org.junit.internal.AssumptionViolatedException",
            "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
            "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\n\tat org.junit.Assume.assumeThat(Assume.java:70)\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\n\tat com.carrotsearch.hppc.ShortDoubleOpenHashMapTest.testAddRemoveSameHashCollision(ShortDoubleOpenHashMapTest.java:512)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:124)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:186)\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\n",
            "kind": "assumption"
          }
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testAddRemoveSameHashCollision(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValues(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesIterator(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_STARTED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        },
        {
          "event": "TEST_FINISHED",
          "description": "id#testMapValuesContainer(com.carrotsearch.hppc.ShortDoubleOpenHashMapTest)[1]"
        }
      ]
    }
  ],
  "slaves": {
    "0": {
      "id": 0,
      "jvmName": "OpenJDK 64-Bit Server VM, 20.0-b11",
      "charset": "UTF-8",
      "commandLine": "java -Dtests.seed\u003dF156A86CD805A9AC -Xmx750m -classpath /home/dweiss/carrot2/carrotsearch.labs/hppc/hppc-core/target/test-classes:/home/dweiss/carrot2/carrotsearch.labs/hppc/hppc-core/target/classes:/home/dweiss/.m2/repository/junit/junit/4.10/junit-4.10.jar:/home/dweiss/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar:/home/dweiss/.m2/repository/com/google/guava/guava/r09/guava-r09.jar:/home/dweiss/.m2/repository/com/carrotsearch/randomizedtesting/ant-junit4/0.0.5-SNAPSHOT/ant-junit4-0.0.5-SNAPSHOT.jar -ea:com.carrotsearch... com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe -flush @/home/dweiss/carrot2/carrotsearch.labs/hppc/hppc-core/target/junit4-slave-05753268810608977701.suites",
      "systemProperties": {
        "file.encoding": "UTF-8",
        "file.encoding.pkg": "sun.io",
        "file.separator": "/",
        "java.awt.graphicsenv": "sun.awt.X11GraphicsEnvironment",
        "java.awt.printerjob": "sun.print.PSPrinterJob",
        "java.class.path": "/home/dweiss/carrot2/carrotsearch.labs/hppc/hppc-core/target/test-classes:/home/dweiss/carrot2/carrotsearch.labs/hppc/hppc-core/target/classes:/home/dweiss/.m2/repository/junit/junit/4.10/junit-4.10.jar:/home/dweiss/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar:/home/dweiss/.m2/repository/com/google/guava/guava/r09/guava-r09.jar:/home/dweiss/.m2/repository/com/carrotsearch/randomizedtesting/ant-junit4/0.0.5-SNAPSHOT/ant-junit4-0.0.5-SNAPSHOT.jar",
        "java.class.version": "50.0",
        "java.endorsed.dirs": "/usr/lib/jvm/java-6-openjdk/jre/lib/endorsed",
        "java.ext.dirs": "/usr/lib/jvm/java-6-openjdk/jre/lib/ext:/usr/java/packages/lib/ext",
        "java.home": "/usr/lib/jvm/java-6-openjdk/jre",
        "java.io.tmpdir": "/tmp",
        "java.library.path": "/usr/lib/jvm/java-6-openjdk/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk/jre/../lib/amd64:/home/dweiss/Applications/java/jdk1.6.0_27/jre/lib/amd64/server:/home/dweiss/Applications/java/jdk1.6.0_27/jre/lib/amd64:/home/dweiss/Applications/java/jdk1.6.0_27/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/jni:/lib:/usr/lib",
        "java.runtime.name": "OpenJDK Runtime Environment",
        "java.runtime.version": "1.6.0_23-b23",
        "java.specification.name": "Java Platform API Specification",
        "java.specification.vendor": "Sun Microsystems Inc.",
        "java.specification.version": "1.6",
        "java.vendor": "Sun Microsystems Inc.",
        "java.vendor.url": "http://java.sun.com/",
        "java.vendor.url.bug": "http://java.sun.com/cgi-bin/bugreport.cgi",
        "java.version": "1.6.0_23",
        "java.vm.info": "mixed mode",
        "java.vm.name": "OpenJDK 64-Bit Server VM",
        "java.vm.specification.name": "Java Virtual Machine Specification",
        "java.vm.specification.vendor": "Sun Microsystems Inc.",
        "java.vm.specification.version": "1.0",
        "java.vm.vendor": "Sun Microsystems Inc.",
        "java.vm.version": "20.0-b11",
        "junit4.memory.total": "62259200",
        "junit4.processors": "2",
        "line.separator": "\n",
        "os.arch": "amd64",
        "os.name": "Linux",
        "os.version": "3.0.0-14-generic",
        "path.separator": ":",
        "sun.arch.data.model": "64",
        "sun.boot.class.path": "/usr/lib/jvm/java-6-openjdk/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk/jre/classes",
        "sun.boot.library.path": "/usr/lib/jvm/java-6-openjdk/jre/lib/amd64",
        "sun.cpu.endian": "little",
        "sun.cpu.isalist": "",
        "sun.desktop": "gnome",
        "sun.io.unicode.encoding": "UnicodeLittle",
        "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe -flush @/home/dweiss/carrot2/carrotsearch.labs/hppc/hppc-core/target/junit4-slave-05753268810608977701.suites -stdin",
        "sun.java.launcher": "SUN_STANDARD",
        "sun.jnu.encoding": "UTF-8",
        "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
        "sun.os.patch.level": "unknown",
        "tests.seed": "F156A86CD805A9AC",
        "user.country": "US",
        "user.dir": "/home/dweiss/carrot2/carrotsearch.labs/hppc/hppc-core/target",
        "user.home": "/home/dweiss",
        "user.language": "en",
        "user.name": "dweiss",
        "user.timezone": ""
      }
    }
  }
});