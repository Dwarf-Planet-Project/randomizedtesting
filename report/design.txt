General:

* mobile version?


Items:

* methods
* slaves
* global overrides


For each method:

* class name
* method name
* annotations:
  * seeds
  * repetitions
  * timeout
  * expected exceptions
* slave
* staus: ok, ignored by assumption, ignored by annotation, failed, error
* execution time
* stack trace
* console output


Views:

* packages, classes, methods
* log (events + console)


Nifty things:

* abbreviation of package names?
* sortable tables
* minification of assets
* clean-up of data JSON (smaller size)
* a "bulb" indication of general ok / failure (green/red, like in Bamboo)
* general indication of ok / failure in document title
* table filters: by status, free text (regex?)


Questions:

* Generation of markup in JS makes things easy, but is terrible for indexing in search engines.
  Maybe there should be some pre-rendered version as well?

* RR-specific annotations? Yes, hardcoded handling.

* What benefit is there from a suite? None, ignore.

* Aggregation: package, class, method (suite?)

* Tests are executed in the random order, we'd probably need two orders in the
report: execution order and lexicographic order. How about failing-first
order? Or maybe two lists: failed at the top and then successful and ignored (only in
lexicographical order).


Testing:

* Empty report
* All failures
* All errors
* All ignored
* All passed
* One vs many (string formatting)