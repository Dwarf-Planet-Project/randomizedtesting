testData({
  "junit4": {
    "tests.seed": "1BC9DBB1850ACE15"
  },
  "suites": [
    {
      "slave": 0,
      "startTimestamp": 1326150615124,
      "startTimestampDate": "2012-01-10T00:10:15.124",
      "executionTime": 16,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test012TestGroups[1]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test012TestGroups",
        "className": "com.carrotsearch.examples.randomizedrunner.Test012TestGroups",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#usesDisplay(com.carrotsearch.examples.randomizedrunner.Test012TestGroups)[0]",
            "displayName": "usesDisplay(com.carrotsearch.examples.randomizedrunner.Test012TestGroups)",
            "methodName": "usesDisplay",
            "className": "com.carrotsearch.examples.randomizedrunner.Test012TestGroups",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326150615135,
          "startTimestampDate": "2012-01-10T00:10:15.135",
          "executionTime": 3,
          "description": "id#usesDisplay(com.carrotsearch.examples.randomizedrunner.Test012TestGroups)[0]",
          "status": "IGNORED",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "usesDisplay(com.carrotsearch.examples.randomizedrunner.Test012TestGroups)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "usesDisplay(com.carrotsearch.examples.randomizedrunner.Test012TestGroups)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326150615154,
      "startTimestampDate": "2012-01-10T00:10:15.154",
      "executionTime": 306,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses[0]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses",
        "className": "com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses",
        "annotations": [],
        "children": [
          {
            "id": "id#failure(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)[1]",
            "displayName": "failure(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)",
            "methodName": "failure",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#error(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)[1]",
            "displayName": "error(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)",
            "methodName": "error",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#ignored(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)[2]",
            "displayName": "ignored(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)",
            "methodName": "ignored",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              },
              {
                "org.junit.Ignore": {
                  "value": ""
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#passed(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)[1]",
            "displayName": "passed(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)",
            "methodName": "passed",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          },
          {
            "id": "id#ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)[1]",
            "displayName": "ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)",
            "methodName": "ignored_assumption",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326150615169,
          "startTimestampDate": "2012-01-10T00:10:15.169",
          "executionTime": 51,
          "description": "id#failure(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)[1]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "junit.framework.AssertionFailedError",
              "throwableString": "junit.framework.AssertionFailedError",
              "stackTrace": "junit.framework.AssertionFailedError\r\n\tat junit.framework.Assert.fail(Assert.java:48)\r\n\tat junit.framework.Assert.fail(Assert.java:56)\r\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses.failure(Test001AllStatuses.java:24)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\r\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615425,
          "startTimestampDate": "2012-01-10T00:10:15.425",
          "executionTime": 6,
          "description": "id#error(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)[1]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "java.lang.RuntimeException",
              "throwableString": "java.lang.RuntimeException",
              "stackTrace": "java.lang.RuntimeException\r\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses.error(Test001AllStatuses.java:29)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\r\n",
              "kind": "error"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615432,
          "startTimestampDate": "2012-01-10T00:10:15.432",
          "executionTime": 0,
          "description": "id#ignored(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)[2]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615433,
          "startTimestampDate": "2012-01-10T00:10:15.433",
          "executionTime": 0,
          "description": "id#passed(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)[1]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615434,
          "startTimestampDate": "2012-01-10T00:10:15.434",
          "executionTime": 26,
          "description": "id#ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)[1]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\r\n\tat org.junit.Assume.assumeThat(Assume.java:70)\r\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\r\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses.ignored_assumption(Test001AllStatuses.java:19)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\r\n",
              "kind": "assumption"
            }
          ]
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "failure(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "failure(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)"
        },
        {
          "event": "TEST_STARTED",
          "test": "error(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "error(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)"
        },
        {
          "event": "TEST_STARTED",
          "test": "passed(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "passed(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)"
        },
        {
          "event": "TEST_STARTED",
          "test": "ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "ignored_assumption(com.carrotsearch.examples.randomizedrunner.reports.Test001AllStatuses)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326150615463,
      "startTimestampDate": "2012-01-10T00:10:15.463",
      "executionTime": 8,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.reports.Test002SuiteFailure[0]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.reports.Test002SuiteFailure",
        "className": "com.carrotsearch.examples.randomizedrunner.reports.Test002SuiteFailure",
        "annotations": [],
        "children": [
          {
            "id": "id#testCase(com.carrotsearch.examples.randomizedrunner.reports.Test002SuiteFailure)[1]",
            "displayName": "testCase(com.carrotsearch.examples.randomizedrunner.reports.Test002SuiteFailure)",
            "methodName": "testCase",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test002SuiteFailure",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [],
      "suiteFailures": [
        {
          "throwableClass": "java.lang.RuntimeException",
          "throwableString": "java.lang.RuntimeException: beforeClass",
          "stackTrace": "java.lang.RuntimeException: beforeClass\r\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test002SuiteFailure.beforeClass(Test002SuiteFailure.java:13)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\r\n",
          "kind": "error"
        },
        {
          "throwableClass": "java.lang.RuntimeException",
          "throwableString": "java.lang.RuntimeException: afterClass",
          "stackTrace": "java.lang.RuntimeException: afterClass\r\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test002SuiteFailure.afterClass(Test002SuiteFailure.java:21)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:36)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\r\n",
          "kind": "error"
        }
      ],
      "executionEvents": []
    },
    {
      "slave": 0,
      "startTimestamp": 1326150615533,
      "startTimestampDate": "2012-01-10T00:10:15.533",
      "executionTime": 13,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test011NightlyTests[1]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test011NightlyTests",
        "className": "com.carrotsearch.examples.randomizedrunner.Test011NightlyTests",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#nightlyOnly(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)[0]",
            "displayName": "nightlyOnly(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)",
            "methodName": "nightlyOnly",
            "className": "com.carrotsearch.examples.randomizedrunner.Test011NightlyTests",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#nightlyOnlyWithAssume(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)[0]",
            "displayName": "nightlyOnlyWithAssume(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)",
            "methodName": "nightlyOnlyWithAssume",
            "className": "com.carrotsearch.examples.randomizedrunner.Test011NightlyTests",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#scaling(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)[0]",
            "displayName": "scaling(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)",
            "methodName": "scaling",
            "className": "com.carrotsearch.examples.randomizedrunner.Test011NightlyTests",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326150615536,
          "startTimestampDate": "2012-01-10T00:10:15.536",
          "executionTime": 0,
          "description": "id#nightlyOnly(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)[0]",
          "status": "IGNORED",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615537,
          "startTimestampDate": "2012-01-10T00:10:15.537",
          "executionTime": 5,
          "description": "id#nightlyOnlyWithAssume(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)[0]",
          "status": "IGNORED_ASSUMPTION",
          "testFailures": [
            {
              "throwableClass": "org.junit.internal.AssumptionViolatedException",
              "throwableString": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e",
              "stackTrace": "org.junit.internal.AssumptionViolatedException: got: \u003cfalse\u003e, expected: is \u003ctrue\u003e\r\n\tat __randomizedtesting.SeedInfo.seed([1BC9DBB1850ACE15:BDF4D06D0C3B70F1]:0)\r\n\tat org.junit.Assume.assumeThat(Assume.java:70)\r\n\tat org.junit.Assume.assumeTrue(Assume.java:39)\r\n\tat com.carrotsearch.examples.randomizedrunner.Test011NightlyTests.nightlyOnlyWithAssume(Test011NightlyTests.java:39)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\r\n",
              "kind": "assumption"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615543,
          "startTimestampDate": "2012-01-10T00:10:15.543",
          "executionTime": 3,
          "description": "id#scaling(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "nightlyOnly(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "nightlyOnly(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "nightlyOnlyWithAssume(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "nightlyOnlyWithAssume(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "scaling(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "Mode: daily\r\nMultiplier: 1.0\r\nrandom scaled int \u003d 17\r\nrandom scaled int \u003d 2\r\nrandom scaled int \u003d 17\r\nrandom scaled int \u003d 29\r\nrandom scaled int \u003d 11\r\nrandom scaled int \u003d 37\r\nrandom scaled int \u003d 20\r\nrandom scaled int \u003d 12\r\nrandom scaled int \u003d 36\r\nrandom scaled int \u003d 41\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "scaling(com.carrotsearch.examples.randomizedrunner.Test011NightlyTests)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326150615551,
      "startTimestampDate": "2012-01-10T00:10:15.551",
      "executionTime": 27,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures[0]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures",
        "className": "com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures",
        "annotations": [],
        "children": [
          {
            "id": "id#testCase(com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures)[1]",
            "displayName": "testCase(com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures)",
            "methodName": "testCase",
            "className": "com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures",
            "annotations": [
              {
                "org.junit.Test": {
                  "timeout": 0,
                  "expected": "org.junit.Test$None"
                }
              }
            ],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326150615556,
          "startTimestampDate": "2012-01-10T00:10:15.556",
          "executionTime": 19,
          "description": "id#testCase(com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures)[1]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "java.lang.RuntimeException",
              "throwableString": "java.lang.RuntimeException: testCase",
              "stackTrace": "java.lang.RuntimeException: testCase\r\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures.testCase(Test003MultipleFailures.java:40)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\r\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures$1$1.evaluate(Test003MultipleFailures.java:26)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:18)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\r\n",
              "kind": "error"
            },
            {
              "throwableClass": "java.lang.RuntimeException",
              "throwableString": "java.lang.RuntimeException: after",
              "stackTrace": "java.lang.RuntimeException: after\r\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures.after(Test003MultipleFailures.java:45)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:36)\r\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures$1$1.evaluate(Test003MultipleFailures.java:26)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:18)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\r\n",
              "kind": "error"
            },
            {
              "throwableClass": "java.lang.Exception",
              "throwableString": "java.lang.Exception: a",
              "stackTrace": "java.lang.Exception: a\r\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures$1$1.evaluate(Test003MultipleFailures.java:30)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:18)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\r\n",
              "kind": "error"
            },
            {
              "throwableClass": "java.lang.Exception",
              "throwableString": "java.lang.Exception: b",
              "stackTrace": "java.lang.Exception: b\r\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures$1$1.evaluate(Test003MultipleFailures.java:31)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:18)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\r\n",
              "kind": "error"
            }
          ]
        }
      ],
      "suiteFailures": [
        {
          "throwableClass": "java.lang.RuntimeException",
          "throwableString": "java.lang.RuntimeException: afterClass",
          "stackTrace": "java.lang.RuntimeException: afterClass\r\n\tat com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures.afterClass(Test003MultipleFailures.java:50)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:36)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:138)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:211)\r\n\tat com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)\r\n",
          "kind": "error"
        }
      ],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "testCase(com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "testCase(com.carrotsearch.examples.randomizedrunner.reports.Test003MultipleFailures)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326150615587,
      "startTimestampDate": "2012-01-10T00:10:15.587",
      "executionTime": 63,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests[1]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
        "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#halfAndHalf[0]",
            "displayName": "halfAndHalf",
            "className": "halfAndHalf",
            "annotations": [],
            "children": [
              {
                "id": "id#halfAndHalf {#0 seed\u003d[1BC9DBB1850ACE15:2CACAB66D7547B69]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "halfAndHalf {#0 seed\u003d[1BC9DBB1850ACE15:2CACAB66D7547B69]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "halfAndHalf {#0 seed\u003d[1BC9DBB1850ACE15:2CACAB66D7547B69]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#halfAndHalf {#1 seed\u003d[1BC9DBB1850ACE15:98FA179AE396B045]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "halfAndHalf {#1 seed\u003d[1BC9DBB1850ACE15:98FA179AE396B045]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "halfAndHalf {#1 seed\u003d[1BC9DBB1850ACE15:98FA179AE396B045]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#halfAndHalf {#2 seed\u003d[1BC9DBB1850ACE15:16138146B252F88E]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "halfAndHalf {#2 seed\u003d[1BC9DBB1850ACE15:16138146B252F88E]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "halfAndHalf {#2 seed\u003d[1BC9DBB1850ACE15:16138146B252F88E]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#halfAndHalf {#3 seed\u003d[1BC9DBB1850ACE15:27FD2AA3DEACA3A7]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "halfAndHalf {#3 seed\u003d[1BC9DBB1850ACE15:27FD2AA3DEACA3A7]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "halfAndHalf {#3 seed\u003d[1BC9DBB1850ACE15:27FD2AA3DEACA3A7]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#halfAndHalf {#4 seed\u003d[1BC9DBB1850ACE15:6B3CAF0E7FA4631C]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "halfAndHalf {#4 seed\u003d[1BC9DBB1850ACE15:6B3CAF0E7FA4631C]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "halfAndHalf {#4 seed\u003d[1BC9DBB1850ACE15:6B3CAF0E7FA4631C]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#halfAndHalf {#5 seed\u003d[1BC9DBB1850ACE15:FAC67C5102182E1C]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "halfAndHalf {#5 seed\u003d[1BC9DBB1850ACE15:FAC67C5102182E1C]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "halfAndHalf {#5 seed\u003d[1BC9DBB1850ACE15:FAC67C5102182E1C]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#halfAndHalf {#6 seed\u003d[1BC9DBB1850ACE15:C41818D710283E1A]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "halfAndHalf {#6 seed\u003d[1BC9DBB1850ACE15:C41818D710283E1A]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "halfAndHalf {#6 seed\u003d[1BC9DBB1850ACE15:C41818D710283E1A]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#halfAndHalf {#7 seed\u003d[1BC9DBB1850ACE15:58AB82AD333CAAB4]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "halfAndHalf {#7 seed\u003d[1BC9DBB1850ACE15:58AB82AD333CAAB4]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "halfAndHalf {#7 seed\u003d[1BC9DBB1850ACE15:58AB82AD333CAAB4]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#halfAndHalf {#8 seed\u003d[1BC9DBB1850ACE15:6A0767C344F7BDEE]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "halfAndHalf {#8 seed\u003d[1BC9DBB1850ACE15:6A0767C344F7BDEE]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "halfAndHalf {#8 seed\u003d[1BC9DBB1850ACE15:6A0767C344F7BDEE]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#halfAndHalf {#9 seed\u003d[1BC9DBB1850ACE15:BD8C317920A08ABC]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "halfAndHalf {#9 seed\u003d[1BC9DBB1850ACE15:BD8C317920A08ABC]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "halfAndHalf {#9 seed\u003d[1BC9DBB1850ACE15:BD8C317920A08ABC]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              }
            ]
          },
          {
            "id": "id#repeatFailure[0]",
            "displayName": "repeatFailure",
            "className": "repeatFailure",
            "annotations": [],
            "children": [
              {
                "id": "id#repeatFailure {#0 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "repeatFailure {#0 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "repeatFailure {#0 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#repeatFailure {#1 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "repeatFailure {#1 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "repeatFailure {#1 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#repeatFailure {#2 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "repeatFailure {#2 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "repeatFailure {#2 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#repeatFailure {#3 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "repeatFailure {#3 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "repeatFailure {#3 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#repeatFailure {#4 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
                "displayName": "repeatFailure {#4 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)",
                "methodName": "repeatFailure {#4 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests",
                "annotations": [],
                "children": []
              }
            ]
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326150615601,
          "startTimestampDate": "2012-01-10T00:10:15.601",
          "executionTime": 4,
          "description": "id#halfAndHalf {#0 seed\u003d[1BC9DBB1850ACE15:2CACAB66D7547B69]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\r\n\tat __randomizedtesting.SeedInfo.seed([1BC9DBB1850ACE15:2CACAB66D7547B69]:0)\r\n\tat org.junit.Assert.fail(Assert.java:92)\r\n\tat org.junit.Assert.assertTrue(Assert.java:43)\r\n\tat org.junit.Assert.assertTrue(Assert.java:54)\r\n\tat com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests.halfAndHalf(Test006RepeatingTests.java:48)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\r\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615606,
          "startTimestampDate": "2012-01-10T00:10:15.606",
          "executionTime": 2,
          "description": "id#halfAndHalf {#1 seed\u003d[1BC9DBB1850ACE15:98FA179AE396B045]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615608,
          "startTimestampDate": "2012-01-10T00:10:15.608",
          "executionTime": 4,
          "description": "id#halfAndHalf {#2 seed\u003d[1BC9DBB1850ACE15:16138146B252F88E]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\r\n\tat __randomizedtesting.SeedInfo.seed([1BC9DBB1850ACE15:16138146B252F88E]:0)\r\n\tat org.junit.Assert.fail(Assert.java:92)\r\n\tat org.junit.Assert.assertTrue(Assert.java:43)\r\n\tat org.junit.Assert.assertTrue(Assert.java:54)\r\n\tat com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests.halfAndHalf(Test006RepeatingTests.java:48)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\r\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615612,
          "startTimestampDate": "2012-01-10T00:10:15.612",
          "executionTime": 1,
          "description": "id#halfAndHalf {#3 seed\u003d[1BC9DBB1850ACE15:27FD2AA3DEACA3A7]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615614,
          "startTimestampDate": "2012-01-10T00:10:15.614",
          "executionTime": 3,
          "description": "id#halfAndHalf {#4 seed\u003d[1BC9DBB1850ACE15:6B3CAF0E7FA4631C]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\r\n\tat __randomizedtesting.SeedInfo.seed([1BC9DBB1850ACE15:6B3CAF0E7FA4631C]:0)\r\n\tat org.junit.Assert.fail(Assert.java:92)\r\n\tat org.junit.Assert.assertTrue(Assert.java:43)\r\n\tat org.junit.Assert.assertTrue(Assert.java:54)\r\n\tat com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests.halfAndHalf(Test006RepeatingTests.java:48)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\r\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615618,
          "startTimestampDate": "2012-01-10T00:10:15.618",
          "executionTime": 3,
          "description": "id#halfAndHalf {#5 seed\u003d[1BC9DBB1850ACE15:FAC67C5102182E1C]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\r\n\tat __randomizedtesting.SeedInfo.seed([1BC9DBB1850ACE15:FAC67C5102182E1C]:0)\r\n\tat org.junit.Assert.fail(Assert.java:92)\r\n\tat org.junit.Assert.assertTrue(Assert.java:43)\r\n\tat org.junit.Assert.assertTrue(Assert.java:54)\r\n\tat com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests.halfAndHalf(Test006RepeatingTests.java:48)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\r\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615621,
          "startTimestampDate": "2012-01-10T00:10:15.621",
          "executionTime": 1,
          "description": "id#halfAndHalf {#6 seed\u003d[1BC9DBB1850ACE15:C41818D710283E1A]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615623,
          "startTimestampDate": "2012-01-10T00:10:15.623",
          "executionTime": 1,
          "description": "id#halfAndHalf {#7 seed\u003d[1BC9DBB1850ACE15:58AB82AD333CAAB4]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615624,
          "startTimestampDate": "2012-01-10T00:10:15.624",
          "executionTime": 5,
          "description": "id#halfAndHalf {#8 seed\u003d[1BC9DBB1850ACE15:6A0767C344F7BDEE]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\r\n\tat __randomizedtesting.SeedInfo.seed([1BC9DBB1850ACE15:6A0767C344F7BDEE]:0)\r\n\tat org.junit.Assert.fail(Assert.java:92)\r\n\tat org.junit.Assert.assertTrue(Assert.java:43)\r\n\tat org.junit.Assert.assertTrue(Assert.java:54)\r\n\tat com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests.halfAndHalf(Test006RepeatingTests.java:48)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\r\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615629,
          "startTimestampDate": "2012-01-10T00:10:15.629",
          "executionTime": 3,
          "description": "id#halfAndHalf {#9 seed\u003d[1BC9DBB1850ACE15:BD8C317920A08ABC]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\r\n\tat __randomizedtesting.SeedInfo.seed([1BC9DBB1850ACE15:BD8C317920A08ABC]:0)\r\n\tat org.junit.Assert.fail(Assert.java:92)\r\n\tat org.junit.Assert.assertTrue(Assert.java:43)\r\n\tat org.junit.Assert.assertTrue(Assert.java:54)\r\n\tat com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests.halfAndHalf(Test006RepeatingTests.java:48)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\r\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615633,
          "startTimestampDate": "2012-01-10T00:10:15.633",
          "executionTime": 3,
          "description": "id#repeatFailure {#0 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\r\n\tat __randomizedtesting.SeedInfo.seed([1BC9DBB1850ACE15:F00DDEAD]:0)\r\n\tat org.junit.Assert.fail(Assert.java:92)\r\n\tat org.junit.Assert.assertTrue(Assert.java:43)\r\n\tat org.junit.Assert.assertTrue(Assert.java:54)\r\n\tat com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests.repeatFailure(Test006RepeatingTests.java:42)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\r\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615636,
          "startTimestampDate": "2012-01-10T00:10:15.636",
          "executionTime": 3,
          "description": "id#repeatFailure {#1 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\r\n\tat __randomizedtesting.SeedInfo.seed([1BC9DBB1850ACE15:F00DDEAD]:0)\r\n\tat org.junit.Assert.fail(Assert.java:92)\r\n\tat org.junit.Assert.assertTrue(Assert.java:43)\r\n\tat org.junit.Assert.assertTrue(Assert.java:54)\r\n\tat com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests.repeatFailure(Test006RepeatingTests.java:42)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\r\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615640,
          "startTimestampDate": "2012-01-10T00:10:15.640",
          "executionTime": 3,
          "description": "id#repeatFailure {#2 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\r\n\tat __randomizedtesting.SeedInfo.seed([1BC9DBB1850ACE15:F00DDEAD]:0)\r\n\tat org.junit.Assert.fail(Assert.java:92)\r\n\tat org.junit.Assert.assertTrue(Assert.java:43)\r\n\tat org.junit.Assert.assertTrue(Assert.java:54)\r\n\tat com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests.repeatFailure(Test006RepeatingTests.java:42)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\r\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615643,
          "startTimestampDate": "2012-01-10T00:10:15.643",
          "executionTime": 3,
          "description": "id#repeatFailure {#3 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\r\n\tat __randomizedtesting.SeedInfo.seed([1BC9DBB1850ACE15:F00DDEAD]:0)\r\n\tat org.junit.Assert.fail(Assert.java:92)\r\n\tat org.junit.Assert.assertTrue(Assert.java:43)\r\n\tat org.junit.Assert.assertTrue(Assert.java:54)\r\n\tat com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests.repeatFailure(Test006RepeatingTests.java:42)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\r\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615647,
          "startTimestampDate": "2012-01-10T00:10:15.647",
          "executionTime": 3,
          "description": "id#repeatFailure {#4 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\r\n\tat __randomizedtesting.SeedInfo.seed([1BC9DBB1850ACE15:F00DDEAD]:0)\r\n\tat org.junit.Assert.fail(Assert.java:92)\r\n\tat org.junit.Assert.assertTrue(Assert.java:43)\r\n\tat org.junit.Assert.assertTrue(Assert.java:54)\r\n\tat com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests.repeatFailure(Test006RepeatingTests.java:42)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\r\n",
              "kind": "assertion"
            }
          ]
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "halfAndHalf {#0 seed\u003d[1BC9DBB1850ACE15:2CACAB66D7547B69]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "halfAndHalf {#0 seed\u003d[1BC9DBB1850ACE15:2CACAB66D7547B69]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "halfAndHalf {#1 seed\u003d[1BC9DBB1850ACE15:98FA179AE396B045]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "halfAndHalf {#1 seed\u003d[1BC9DBB1850ACE15:98FA179AE396B045]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "halfAndHalf {#2 seed\u003d[1BC9DBB1850ACE15:16138146B252F88E]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "halfAndHalf {#2 seed\u003d[1BC9DBB1850ACE15:16138146B252F88E]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "halfAndHalf {#3 seed\u003d[1BC9DBB1850ACE15:27FD2AA3DEACA3A7]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "halfAndHalf {#3 seed\u003d[1BC9DBB1850ACE15:27FD2AA3DEACA3A7]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "halfAndHalf {#4 seed\u003d[1BC9DBB1850ACE15:6B3CAF0E7FA4631C]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "halfAndHalf {#4 seed\u003d[1BC9DBB1850ACE15:6B3CAF0E7FA4631C]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "halfAndHalf {#5 seed\u003d[1BC9DBB1850ACE15:FAC67C5102182E1C]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "halfAndHalf {#5 seed\u003d[1BC9DBB1850ACE15:FAC67C5102182E1C]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "halfAndHalf {#6 seed\u003d[1BC9DBB1850ACE15:C41818D710283E1A]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "halfAndHalf {#6 seed\u003d[1BC9DBB1850ACE15:C41818D710283E1A]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "halfAndHalf {#7 seed\u003d[1BC9DBB1850ACE15:58AB82AD333CAAB4]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "halfAndHalf {#7 seed\u003d[1BC9DBB1850ACE15:58AB82AD333CAAB4]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "halfAndHalf {#8 seed\u003d[1BC9DBB1850ACE15:6A0767C344F7BDEE]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "halfAndHalf {#8 seed\u003d[1BC9DBB1850ACE15:6A0767C344F7BDEE]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "halfAndHalf {#9 seed\u003d[1BC9DBB1850ACE15:BD8C317920A08ABC]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "halfAndHalf {#9 seed\u003d[1BC9DBB1850ACE15:BD8C317920A08ABC]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "repeatFailure {#0 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "repeatFailure {#0 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "repeatFailure {#1 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "repeatFailure {#1 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "repeatFailure {#2 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "repeatFailure {#2 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "repeatFailure {#3 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "repeatFailure {#3 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "repeatFailure {#4 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "repeatFailure {#4 seed\u003d[1BC9DBB1850ACE15:F00DDEAD]}(com.carrotsearch.examples.randomizedrunner.Test006RepeatingTests)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326150615660,
      "startTimestampDate": "2012-01-10T00:10:15.660",
      "executionTime": 52,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests[1]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
        "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#paramsWithRepeatAndSeeds[0]",
            "displayName": "paramsWithRepeatAndSeeds",
            "className": "paramsWithRepeatAndSeeds",
            "annotations": [],
            "children": [
              {
                "id": "id#paramsWithRepeatAndSeeds {#0 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
                "displayName": "paramsWithRepeatAndSeeds {#0 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)",
                "methodName": "paramsWithRepeatAndSeeds {#0 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#paramsWithRepeatAndSeeds {#1 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
                "displayName": "paramsWithRepeatAndSeeds {#1 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)",
                "methodName": "paramsWithRepeatAndSeeds {#1 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#paramsWithRepeatAndSeeds {#2 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
                "displayName": "paramsWithRepeatAndSeeds {#2 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)",
                "methodName": "paramsWithRepeatAndSeeds {#2 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#paramsWithRepeatAndSeeds {#3 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
                "displayName": "paramsWithRepeatAndSeeds {#3 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)",
                "methodName": "paramsWithRepeatAndSeeds {#3 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#paramsWithRepeatAndSeeds {#0 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
                "displayName": "paramsWithRepeatAndSeeds {#0 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)",
                "methodName": "paramsWithRepeatAndSeeds {#0 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#paramsWithRepeatAndSeeds {#1 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
                "displayName": "paramsWithRepeatAndSeeds {#1 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)",
                "methodName": "paramsWithRepeatAndSeeds {#1 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#paramsWithRepeatAndSeeds {#2 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
                "displayName": "paramsWithRepeatAndSeeds {#2 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)",
                "methodName": "paramsWithRepeatAndSeeds {#2 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#paramsWithRepeatAndSeeds {#3 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
                "displayName": "paramsWithRepeatAndSeeds {#3 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)",
                "methodName": "paramsWithRepeatAndSeeds {#3 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
                "annotations": [],
                "children": []
              }
            ]
          },
          {
            "id": "id#simpleArgumentsConsumer[0]",
            "displayName": "simpleArgumentsConsumer",
            "className": "simpleArgumentsConsumer",
            "annotations": [],
            "children": [
              {
                "id": "id#simpleArgumentsConsumer {value\u003d1 string\u003dabc}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
                "displayName": "simpleArgumentsConsumer {value\u003d1 string\u003dabc}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)",
                "methodName": "simpleArgumentsConsumer {value\u003d1 string\u003dabc}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#simpleArgumentsConsumer {value\u003d2 string\u003ddef}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
                "displayName": "simpleArgumentsConsumer {value\u003d2 string\u003ddef}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)",
                "methodName": "simpleArgumentsConsumer {value\u003d2 string\u003ddef}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests",
                "annotations": [],
                "children": []
              }
            ]
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326150615668,
          "startTimestampDate": "2012-01-10T00:10:15.668",
          "executionTime": 2,
          "description": "id#paramsWithRepeatAndSeeds {#0 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615696,
          "startTimestampDate": "2012-01-10T00:10:15.696",
          "executionTime": 2,
          "description": "id#paramsWithRepeatAndSeeds {#1 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615698,
          "startTimestampDate": "2012-01-10T00:10:15.698",
          "executionTime": 1,
          "description": "id#paramsWithRepeatAndSeeds {#2 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615700,
          "startTimestampDate": "2012-01-10T00:10:15.700",
          "executionTime": 1,
          "description": "id#paramsWithRepeatAndSeeds {#3 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615701,
          "startTimestampDate": "2012-01-10T00:10:15.701",
          "executionTime": 1,
          "description": "id#simpleArgumentsConsumer {value\u003d1 string\u003dabc}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615703,
          "startTimestampDate": "2012-01-10T00:10:15.703",
          "executionTime": 1,
          "description": "id#paramsWithRepeatAndSeeds {#0 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615704,
          "startTimestampDate": "2012-01-10T00:10:15.704",
          "executionTime": 3,
          "description": "id#paramsWithRepeatAndSeeds {#1 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615708,
          "startTimestampDate": "2012-01-10T00:10:15.708",
          "executionTime": 1,
          "description": "id#paramsWithRepeatAndSeeds {#2 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615709,
          "startTimestampDate": "2012-01-10T00:10:15.709",
          "executionTime": 1,
          "description": "id#paramsWithRepeatAndSeeds {#3 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150615711,
          "startTimestampDate": "2012-01-10T00:10:15.711",
          "executionTime": 1,
          "description": "id#simpleArgumentsConsumer {value\u003d2 string\u003ddef}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "paramsWithRepeatAndSeeds {#0 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "1 abc [Randomness, seed\u003d[DEADBEEF]]\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "paramsWithRepeatAndSeeds {#0 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "paramsWithRepeatAndSeeds {#1 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "1 abc [Randomness, seed\u003d[DEADBEEF]]\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "paramsWithRepeatAndSeeds {#1 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "paramsWithRepeatAndSeeds {#2 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "1 abc [Randomness, seed\u003d[CAFEBABE]]\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "paramsWithRepeatAndSeeds {#2 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "paramsWithRepeatAndSeeds {#3 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "1 abc [Randomness, seed\u003d[CAFEBABE]]\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "paramsWithRepeatAndSeeds {#3 value\u003d1 string\u003dabc seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "simpleArgumentsConsumer {value\u003d1 string\u003dabc}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "1 abc [Randomness, seed\u003d[50E309E47DCF2ED7]]\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "simpleArgumentsConsumer {value\u003d1 string\u003dabc}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "paramsWithRepeatAndSeeds {#0 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "2 def [Randomness, seed\u003d[DEADBEEF]]\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "paramsWithRepeatAndSeeds {#0 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "paramsWithRepeatAndSeeds {#1 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "2 def [Randomness, seed\u003d[DEADBEEF]]\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "paramsWithRepeatAndSeeds {#1 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "paramsWithRepeatAndSeeds {#2 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "2 def [Randomness, seed\u003d[CAFEBABE]]\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "paramsWithRepeatAndSeeds {#2 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "paramsWithRepeatAndSeeds {#3 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "2 def [Randomness, seed\u003d[CAFEBABE]]\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "paramsWithRepeatAndSeeds {#3 value\u003d2 string\u003ddef seed\u003d[1BC9DBB1850ACE15:CAFEBABE]}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "TEST_STARTED",
          "test": "simpleArgumentsConsumer {value\u003d2 string\u003ddef}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "2 def [Randomness, seed\u003d[50E309E47DCF2ED7]]\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "simpleArgumentsConsumer {value\u003d2 string\u003ddef}(com.carrotsearch.examples.randomizedrunner.Test007ParameterizedTests)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326150615716,
      "startTimestampDate": "2012-01-10T00:10:15.716",
      "executionTime": 1566,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks[1]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks",
        "className": "com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#leftOverThread(com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks)[0]",
            "displayName": "leftOverThread(com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks)",
            "methodName": "leftOverThread",
            "className": "com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#noLeakHere(com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks)[0]",
            "displayName": "noLeakHere(com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks)",
            "methodName": "noLeakHere",
            "className": "com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326150615717,
          "startTimestampDate": "2012-01-10T00:10:15.717",
          "executionTime": 562,
          "description": "id#leftOverThread(com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks)[0]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "com.carrotsearch.randomizedtesting.ThreadingError",
              "throwableString": "com.carrotsearch.randomizedtesting.ThreadingError: Left-over thread detected  (and terminated): Thread[Thread-1,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).",
              "stackTrace": "com.carrotsearch.randomizedtesting.ThreadingError: Left-over thread detected  (and terminated): Thread[Thread-1,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).\r\n\tat __randomizedtesting.SeedInfo.seed([1BC9DBB1850ACE15:F7DE849289403AE1]:0)\r\n\tat java.lang.Thread.sleep(Native Method)\r\n\tat com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks$1.run(Test009ThreadLeaks.java:38)\r\n",
              "kind": "error"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326150616280,
          "startTimestampDate": "2012-01-10T00:10:16.280",
          "executionTime": 1001,
          "description": "id#noLeakHere(com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "leftOverThread(com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks)"
        },
        {
          "event": "APPEND_STDERR",
          "content": "Jan 10, 2012 12:10:16 AM com.carrotsearch.randomizedtesting.RandomizedRunner reportStackProbes\r\nWARNING: 10 stack trace probe(s) taken and the constant root was:\n    ...\n    java.lang.Thread.sleep(Native Method)\n    com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks$1.run(Test009ThreadLeaks.java:38)\n\nDiverging stack paths from individual probes (if different than the common root):\n(all stacks constant.)\n\r\nJan 10, 2012 12:10:16 AM com.carrotsearch.randomizedtesting.RandomizedRunner tryToTerminate\r\nWARNING: Attempting to terminate thread: Thread-1(#1572840420), currently at:\n    java.lang.Thread.sleep(Native Method)\n    com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks$1.run(Test009ThreadLeaks.java:38)\n\r\nJan 10, 2012 12:10:16 AM com.carrotsearch.randomizedtesting.RandomizedRunner tryToTerminate\r\nWARNING: Interrupted a runaway thread: Thread-1(#1572840420)\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "leftOverThread(com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks)"
        },
        {
          "event": "TEST_STARTED",
          "test": "noLeakHere(com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "noLeakHere(com.carrotsearch.examples.randomizedrunner.Test009ThreadLeaks)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326150617293,
      "startTimestampDate": "2012-01-10T00:10:17.293",
      "executionTime": 24,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test014Listeners[2]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test014Listeners",
        "className": "com.carrotsearch.examples.randomizedrunner.Test014Listeners",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Listeners": {
              "value": [
                "com.carrotsearch.randomizedtesting.listeners.ReproduceInfoPrinter"
              ]
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#failure(com.carrotsearch.examples.randomizedrunner.Test014Listeners)[0]",
            "displayName": "failure(com.carrotsearch.examples.randomizedrunner.Test014Listeners)",
            "methodName": "failure",
            "className": "com.carrotsearch.examples.randomizedrunner.Test014Listeners",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326150617303,
          "startTimestampDate": "2012-01-10T00:10:17.303",
          "executionTime": 9,
          "description": "id#failure(com.carrotsearch.examples.randomizedrunner.Test014Listeners)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "junit.framework.AssertionFailedError",
              "throwableString": "junit.framework.AssertionFailedError",
              "stackTrace": "junit.framework.AssertionFailedError\r\n\tat __randomizedtesting.SeedInfo.seed([1BC9DBB1850ACE15:F07D713A23A70E23]:0)\r\n\tat junit.framework.Assert.fail(Assert.java:48)\r\n\tat junit.framework.Assert.assertTrue(Assert.java:20)\r\n\tat junit.framework.Assert.assertTrue(Assert.java:27)\r\n\tat com.carrotsearch.examples.randomizedrunner.Test014Listeners.failure(Test014Listeners.java:28)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\r\n",
              "kind": "assertion"
            }
          ]
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "failure(com.carrotsearch.examples.randomizedrunner.Test014Listeners)"
        },
        {
          "event": "APPEND_STDERR",
          "content": "FAILURE  : failure(com.carrotsearch.examples.randomizedrunner.Test014Listeners)\nMessage  : null\nReproduce:  -Dtests.seed\u003d1BC9DBB1850ACE15 -Dtests.class\u003dcom.carrotsearch.examples.randomizedrunner.Test014Listeners -Dtests.method\u003dfailure -Dfile.encoding\u003dCp1252 -Duser.timezone\u003dEurope/Belgrade\nThrowable:\njunit.framework.AssertionFailedError\n    __randomizedtesting.SeedInfo.seed([1BC9DBB1850ACE15:F07D713A23A70E23]:0)\n    [...junit.framework.*]\n    com.carrotsearch.examples.randomizedrunner.Test014Listeners.failure(Test014Listeners.java:28)\n    [...sun.*, com.carrotsearch.randomizedtesting.*, java.lang.reflect.*]\n\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "failure(com.carrotsearch.examples.randomizedrunner.Test014Listeners)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326150617322,
      "startTimestampDate": "2012-01-10T00:10:17.322",
      "executionTime": 2,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test001SimpleUseCase[1]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test001SimpleUseCase",
        "className": "com.carrotsearch.examples.randomizedrunner.Test001SimpleUseCase",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#success(com.carrotsearch.examples.randomizedrunner.Test001SimpleUseCase)[0]",
            "displayName": "success(com.carrotsearch.examples.randomizedrunner.Test001SimpleUseCase)",
            "methodName": "success",
            "className": "com.carrotsearch.examples.randomizedrunner.Test001SimpleUseCase",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326150617324,
          "startTimestampDate": "2012-01-10T00:10:17.324",
          "executionTime": 0,
          "description": "id#success(com.carrotsearch.examples.randomizedrunner.Test001SimpleUseCase)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "success(com.carrotsearch.examples.randomizedrunner.Test001SimpleUseCase)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "success(com.carrotsearch.examples.randomizedrunner.Test001SimpleUseCase)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326150617328,
      "startTimestampDate": "2012-01-10T00:10:17.328",
      "executionTime": 36,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed[2]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed",
        "className": "com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          },
          {
            "com.carrotsearch.randomizedtesting.annotations.Seed": {
              "value": "AF567B2B9F8A8F1C"
            }
          }
        ],
        "children": [
          {
            "id": "id#failure(com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed)[0]",
            "displayName": "failure(com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed)",
            "methodName": "failure",
            "className": "com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#printContext(com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed)[0]",
            "displayName": "printContext(com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed)",
            "methodName": "printContext",
            "className": "com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326150617360,
          "startTimestampDate": "2012-01-10T00:10:17.360",
          "executionTime": 2,
          "description": "id#failure(com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError",
              "stackTrace": "java.lang.AssertionError\r\n\tat __randomizedtesting.SeedInfo.seed([1BC9DBB1850ACE15:F07D713A23A70E23]:0)\r\n\tat org.junit.Assert.fail(Assert.java:92)\r\n\tat org.junit.Assert.assertTrue(Assert.java:43)\r\n\tat org.junit.Assert.assertTrue(Assert.java:54)\r\n\tat com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed.failure(Test005RecoveringRandomSeed.java:81)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\r\n",
              "kind": "assertion"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326150617363,
          "startTimestampDate": "2012-01-10T00:10:17.363",
          "executionTime": 1,
          "description": "id#printContext(com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "APPEND_STDOUT",
          "content": "# Static context (@BeforeClass)\r\n1BC9DBB1850ACE15\r\n[Randomness, seed\u003d[1BC9DBB1850ACE15]]\r\n"
        },
        {
          "event": "TEST_STARTED",
          "test": "failure(com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "failure(com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed)"
        },
        {
          "event": "TEST_STARTED",
          "test": "printContext(com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "# Test context (@Test)\r\n1BC9DBB1850ACE15\r\n[Randomness, seed\u003d[5AC7BDC4DC9D2AC6]]\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "printContext(com.carrotsearch.examples.randomizedrunner.Test005RecoveringRandomSeed)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326150617370,
      "startTimestampDate": "2012-01-10T00:10:17.370",
      "executionTime": 6,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test013Validators[2]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test013Validators",
        "className": "com.carrotsearch.examples.randomizedrunner.Test013Validators",
        "annotations": [
          {
            "com.carrotsearch.randomizedtesting.annotations.Validators": {
              "value": [
                "com.carrotsearch.randomizedtesting.validators.NoJUnit3TestMethods"
              ]
            }
          },
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#testIAm(com.carrotsearch.examples.randomizedrunner.Test013Validators)[0]",
            "displayName": "testIAm(com.carrotsearch.examples.randomizedrunner.Test013Validators)",
            "methodName": "testIAm",
            "className": "com.carrotsearch.examples.randomizedrunner.Test013Validators",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [],
      "suiteFailures": [
        {
          "throwableClass": "java.lang.RuntimeException",
          "throwableString": "java.lang.RuntimeException: Class com.carrotsearch.examples.randomizedrunner.Test013Validators has a public instance method starting with \u0027test\u0027 that is not annotated with @Test, possibly a dead JUnit3 test case: public void com.carrotsearch.examples.randomizedrunner.Test013Validators.testOopsImNot()",
          "stackTrace": "java.lang.RuntimeException: Class com.carrotsearch.examples.randomizedrunner.Test013Validators has a public instance method starting with \u0027test\u0027 that is not annotated with @Test, possibly a dead JUnit3 test case: public void com.carrotsearch.examples.randomizedrunner.Test013Validators.testOopsImNot()\r\n\tat com.carrotsearch.randomizedtesting.validators.NoJUnit3TestMethods.validate(NoJUnit3TestMethods.java:32)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runCustomValidators(RandomizedRunner.java:1064)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:507)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\r\n",
          "kind": "error"
        }
      ],
      "executionEvents": []
    },
    {
      "slave": 0,
      "startTimestamp": 1326150617387,
      "startTimestampDate": "2012-01-10T00:10:17.387",
      "executionTime": 1369,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test010Lingering[1]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
        "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#executorLeak[0]",
            "displayName": "executorLeak",
            "className": "executorLeak",
            "annotations": [],
            "children": [
              {
                "id": "id#executorLeak {#0 seed\u003d[1BC9DBB1850ACE15:46DB35435B9E11FC]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
                "displayName": "executorLeak {#0 seed\u003d[1BC9DBB1850ACE15:46DB35435B9E11FC]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
                "methodName": "executorLeak {#0 seed\u003d[1BC9DBB1850ACE15:46DB35435B9E11FC]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#executorLeak {#1 seed\u003d[1BC9DBB1850ACE15:F28D89BF6F5CDAD0]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
                "displayName": "executorLeak {#1 seed\u003d[1BC9DBB1850ACE15:F28D89BF6F5CDAD0]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
                "methodName": "executorLeak {#1 seed\u003d[1BC9DBB1850ACE15:F28D89BF6F5CDAD0]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#executorLeak {#2 seed\u003d[1BC9DBB1850ACE15:7C641F633E98921B]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
                "displayName": "executorLeak {#2 seed\u003d[1BC9DBB1850ACE15:7C641F633E98921B]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
                "methodName": "executorLeak {#2 seed\u003d[1BC9DBB1850ACE15:7C641F633E98921B]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#executorLeak {#3 seed\u003d[1BC9DBB1850ACE15:4D8AB4865266C932]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
                "displayName": "executorLeak {#3 seed\u003d[1BC9DBB1850ACE15:4D8AB4865266C932]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
                "methodName": "executorLeak {#3 seed\u003d[1BC9DBB1850ACE15:4D8AB4865266C932]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#executorLeak {#4 seed\u003d[1BC9DBB1850ACE15:14B312BF36E0989]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
                "displayName": "executorLeak {#4 seed\u003d[1BC9DBB1850ACE15:14B312BF36E0989]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
                "methodName": "executorLeak {#4 seed\u003d[1BC9DBB1850ACE15:14B312BF36E0989]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#executorLeak {#5 seed\u003d[1BC9DBB1850ACE15:90B1E2748ED24489]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
                "displayName": "executorLeak {#5 seed\u003d[1BC9DBB1850ACE15:90B1E2748ED24489]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
                "methodName": "executorLeak {#5 seed\u003d[1BC9DBB1850ACE15:90B1E2748ED24489]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#executorLeak {#6 seed\u003d[1BC9DBB1850ACE15:AE6F86F29CE2548F]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
                "displayName": "executorLeak {#6 seed\u003d[1BC9DBB1850ACE15:AE6F86F29CE2548F]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
                "methodName": "executorLeak {#6 seed\u003d[1BC9DBB1850ACE15:AE6F86F29CE2548F]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#executorLeak {#7 seed\u003d[1BC9DBB1850ACE15:32DC1C88BFF6C021]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
                "displayName": "executorLeak {#7 seed\u003d[1BC9DBB1850ACE15:32DC1C88BFF6C021]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
                "methodName": "executorLeak {#7 seed\u003d[1BC9DBB1850ACE15:32DC1C88BFF6C021]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#executorLeak {#8 seed\u003d[1BC9DBB1850ACE15:70F9E6C83DD77B]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
                "displayName": "executorLeak {#8 seed\u003d[1BC9DBB1850ACE15:70F9E6C83DD77B]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
                "methodName": "executorLeak {#8 seed\u003d[1BC9DBB1850ACE15:70F9E6C83DD77B]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#executorLeak {#9 seed\u003d[1BC9DBB1850ACE15:D7FBAF5CAC6AE029]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
                "displayName": "executorLeak {#9 seed\u003d[1BC9DBB1850ACE15:D7FBAF5CAC6AE029]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
                "methodName": "executorLeak {#9 seed\u003d[1BC9DBB1850ACE15:D7FBAF5CAC6AE029]}",
                "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
                "annotations": [],
                "children": []
              }
            ]
          },
          {
            "id": "id#lingerForLeftOverThread(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
            "displayName": "lingerForLeftOverThread(com.carrotsearch.examples.randomizedrunner.Test010Lingering)",
            "methodName": "lingerForLeftOverThread",
            "className": "com.carrotsearch.examples.randomizedrunner.Test010Lingering",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326150617396,
          "startTimestampDate": "2012-01-10T00:10:17.396",
          "executionTime": 29,
          "description": "id#executorLeak {#0 seed\u003d[1BC9DBB1850ACE15:46DB35435B9E11FC]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150617425,
          "startTimestampDate": "2012-01-10T00:10:17.425",
          "executionTime": 24,
          "description": "id#executorLeak {#1 seed\u003d[1BC9DBB1850ACE15:F28D89BF6F5CDAD0]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150617449,
          "startTimestampDate": "2012-01-10T00:10:17.449",
          "executionTime": 24,
          "description": "id#executorLeak {#2 seed\u003d[1BC9DBB1850ACE15:7C641F633E98921B]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150617473,
          "startTimestampDate": "2012-01-10T00:10:17.473",
          "executionTime": 25,
          "description": "id#executorLeak {#3 seed\u003d[1BC9DBB1850ACE15:4D8AB4865266C932]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150617498,
          "startTimestampDate": "2012-01-10T00:10:17.498",
          "executionTime": 25,
          "description": "id#executorLeak {#4 seed\u003d[1BC9DBB1850ACE15:14B312BF36E0989]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150617523,
          "startTimestampDate": "2012-01-10T00:10:17.523",
          "executionTime": 25,
          "description": "id#executorLeak {#5 seed\u003d[1BC9DBB1850ACE15:90B1E2748ED24489]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150617549,
          "startTimestampDate": "2012-01-10T00:10:17.549",
          "executionTime": 26,
          "description": "id#executorLeak {#6 seed\u003d[1BC9DBB1850ACE15:AE6F86F29CE2548F]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150617575,
          "startTimestampDate": "2012-01-10T00:10:17.575",
          "executionTime": 26,
          "description": "id#executorLeak {#7 seed\u003d[1BC9DBB1850ACE15:32DC1C88BFF6C021]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150617602,
          "startTimestampDate": "2012-01-10T00:10:17.602",
          "executionTime": 25,
          "description": "id#executorLeak {#8 seed\u003d[1BC9DBB1850ACE15:70F9E6C83DD77B]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150617628,
          "startTimestampDate": "2012-01-10T00:10:17.628",
          "executionTime": 26,
          "description": "id#executorLeak {#9 seed\u003d[1BC9DBB1850ACE15:D7FBAF5CAC6AE029]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150617654,
          "startTimestampDate": "2012-01-10T00:10:17.654",
          "executionTime": 1102,
          "description": "id#lingerForLeftOverThread(com.carrotsearch.examples.randomizedrunner.Test010Lingering)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "executorLeak {#0 seed\u003d[1BC9DBB1850ACE15:46DB35435B9E11FC]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "executorLeak {#0 seed\u003d[1BC9DBB1850ACE15:46DB35435B9E11FC]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_STARTED",
          "test": "executorLeak {#1 seed\u003d[1BC9DBB1850ACE15:F28D89BF6F5CDAD0]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "executorLeak {#1 seed\u003d[1BC9DBB1850ACE15:F28D89BF6F5CDAD0]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_STARTED",
          "test": "executorLeak {#2 seed\u003d[1BC9DBB1850ACE15:7C641F633E98921B]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "executorLeak {#2 seed\u003d[1BC9DBB1850ACE15:7C641F633E98921B]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_STARTED",
          "test": "executorLeak {#3 seed\u003d[1BC9DBB1850ACE15:4D8AB4865266C932]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "executorLeak {#3 seed\u003d[1BC9DBB1850ACE15:4D8AB4865266C932]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_STARTED",
          "test": "executorLeak {#4 seed\u003d[1BC9DBB1850ACE15:14B312BF36E0989]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "executorLeak {#4 seed\u003d[1BC9DBB1850ACE15:14B312BF36E0989]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_STARTED",
          "test": "executorLeak {#5 seed\u003d[1BC9DBB1850ACE15:90B1E2748ED24489]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "executorLeak {#5 seed\u003d[1BC9DBB1850ACE15:90B1E2748ED24489]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_STARTED",
          "test": "executorLeak {#6 seed\u003d[1BC9DBB1850ACE15:AE6F86F29CE2548F]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "executorLeak {#6 seed\u003d[1BC9DBB1850ACE15:AE6F86F29CE2548F]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_STARTED",
          "test": "executorLeak {#7 seed\u003d[1BC9DBB1850ACE15:32DC1C88BFF6C021]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "executorLeak {#7 seed\u003d[1BC9DBB1850ACE15:32DC1C88BFF6C021]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_STARTED",
          "test": "executorLeak {#8 seed\u003d[1BC9DBB1850ACE15:70F9E6C83DD77B]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "executorLeak {#8 seed\u003d[1BC9DBB1850ACE15:70F9E6C83DD77B]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_STARTED",
          "test": "executorLeak {#9 seed\u003d[1BC9DBB1850ACE15:D7FBAF5CAC6AE029]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "executorLeak {#9 seed\u003d[1BC9DBB1850ACE15:D7FBAF5CAC6AE029]}(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_STARTED",
          "test": "lingerForLeftOverThread(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "lingerForLeftOverThread(com.carrotsearch.examples.randomizedrunner.Test010Lingering)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326150618762,
      "startTimestampDate": "2012-01-10T00:10:18.762",
      "executionTime": 8,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest[1]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest",
        "className": "com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#getContextByHand(com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest)[0]",
            "displayName": "getContextByHand(com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest)",
            "methodName": "getContextByHand",
            "className": "com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#getContextFromSuper(com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest)[0]",
            "displayName": "getContextFromSuper(com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest)",
            "methodName": "getContextFromSuper",
            "className": "com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326150618765,
          "startTimestampDate": "2012-01-10T00:10:18.765",
          "executionTime": 2,
          "description": "id#getContextByHand(com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150618768,
          "startTimestampDate": "2012-01-10T00:10:18.768",
          "executionTime": 1,
          "description": "id#getContextFromSuper(com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "getContextByHand(com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "Random, next int: -907819436\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "getContextByHand(com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest)"
        },
        {
          "event": "TEST_STARTED",
          "test": "getContextFromSuper(com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "Random, next int: -490215168\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "getContextFromSuper(com.carrotsearch.examples.randomizedrunner.Test002ExtendingRandomizedTest)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326150618793,
      "startTimestampDate": "2012-01-10T00:10:18.793",
      "executionTime": 43,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness[2]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness",
        "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "org.junit.runners.Suite"
            }
          },
          {
            "org.junit.runners.Suite$SuiteClasses": {
              "value": [
                "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized",
                "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed",
                "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression"
              ]
            }
          }
        ],
        "children": [
          {
            "id": "id#com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized[1]",
            "displayName": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized",
            "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized",
            "annotations": [
              {
                "org.junit.runner.RunWith": {
                  "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
                }
              }
            ],
            "children": [
              {
                "id": "id#method2(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)[0]",
                "displayName": "method2(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)",
                "methodName": "method2",
                "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#method1(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)[0]",
                "displayName": "method1(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)",
                "methodName": "method1",
                "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#method3(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)[0]",
                "displayName": "method3(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)",
                "methodName": "method3",
                "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized",
                "annotations": [],
                "children": []
              }
            ]
          },
          {
            "id": "id#com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed[2]",
            "displayName": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed",
            "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed",
            "annotations": [
              {
                "org.junit.runner.RunWith": {
                  "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
                }
              },
              {
                "com.carrotsearch.randomizedtesting.annotations.Seed": {
                  "value": "deadbeef"
                }
              }
            ],
            "children": [
              {
                "id": "id#method2(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)[0]",
                "displayName": "method2(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)",
                "methodName": "method2",
                "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#method1(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)[0]",
                "displayName": "method1(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)",
                "methodName": "method1",
                "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed",
                "annotations": [],
                "children": []
              },
              {
                "id": "id#method3(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)[0]",
                "displayName": "method3(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)",
                "methodName": "method3",
                "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed",
                "annotations": [],
                "children": []
              }
            ]
          },
          {
            "id": "id#com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression[1]",
            "displayName": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression",
            "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression",
            "annotations": [
              {
                "org.junit.runner.RunWith": {
                  "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
                }
              }
            ],
            "children": [
              {
                "id": "id#regression[0]",
                "displayName": "regression",
                "className": "regression",
                "annotations": [],
                "children": [
                  {
                    "id": "id#regression {#0 seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression)[0]",
                    "displayName": "regression {#0 seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression)",
                    "methodName": "regression {#0 seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}",
                    "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression",
                    "annotations": [],
                    "children": []
                  },
                  {
                    "id": "id#regression {#1 seed\u003d[1BC9DBB1850ACE15:384384B77D42DDE5]}(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression)[0]",
                    "displayName": "regression {#1 seed\u003d[1BC9DBB1850ACE15:384384B77D42DDE5]}(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression)",
                    "methodName": "regression {#1 seed\u003d[1BC9DBB1850ACE15:384384B77D42DDE5]}",
                    "className": "com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression",
                    "annotations": [],
                    "children": []
                  }
                ]
              }
            ]
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326150618799,
          "startTimestampDate": "2012-01-10T00:10:18.799",
          "executionTime": 0,
          "description": "id#method2(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150618805,
          "startTimestampDate": "2012-01-10T00:10:18.805",
          "executionTime": 0,
          "description": "id#method1(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150618806,
          "startTimestampDate": "2012-01-10T00:10:18.806",
          "executionTime": 1,
          "description": "id#method3(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150618808,
          "startTimestampDate": "2012-01-10T00:10:18.808",
          "executionTime": 0,
          "description": "id#method2(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150618830,
          "startTimestampDate": "2012-01-10T00:10:18.830",
          "executionTime": 1,
          "description": "id#method1(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150618832,
          "startTimestampDate": "2012-01-10T00:10:18.832",
          "executionTime": 1,
          "description": "id#method3(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150618833,
          "startTimestampDate": "2012-01-10T00:10:18.833",
          "executionTime": 1,
          "description": "id#regression {#0 seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150618835,
          "startTimestampDate": "2012-01-10T00:10:18.835",
          "executionTime": 0,
          "description": "id#regression {#1 seed\u003d[1BC9DBB1850ACE15:384384B77D42DDE5]}(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression)[0]",
          "status": "OK",
          "testFailures": []
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "method2(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "method2, -81287265\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "method2(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)"
        },
        {
          "event": "TEST_STARTED",
          "test": "method1(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "method1, 1673917517\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "method1(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)"
        },
        {
          "event": "TEST_STARTED",
          "test": "method3(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "method3, -315687544\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "method3(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomized)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "--\r\n"
        },
        {
          "event": "TEST_STARTED",
          "test": "method2(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "method2, -81287265\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "method2(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)"
        },
        {
          "event": "TEST_STARTED",
          "test": "method1(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "method1, 1673917517\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "method1(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)"
        },
        {
          "event": "TEST_STARTED",
          "test": "method3(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "method3, -315687544\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "method3(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRandomizedButFixed)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "--\r\n"
        },
        {
          "event": "TEST_STARTED",
          "test": "regression {#0 seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "regression, 568599855\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "regression {#0 seed\u003d[1BC9DBB1850ACE15:DEADBEEF]}(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression)"
        },
        {
          "event": "TEST_STARTED",
          "test": "regression {#1 seed\u003d[1BC9DBB1850ACE15:384384B77D42DDE5]}(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "regression, 621087755\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "regression {#1 seed\u003d[1BC9DBB1850ACE15:384384B77D42DDE5]}(com.carrotsearch.examples.randomizedrunner.Test004MoreRandomness$OrderRegression)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326150618837,
      "startTimestampDate": "2012-01-10T00:10:18.837",
      "executionTime": 50,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness[1]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness",
        "className": "com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#fixedTesting(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)[0]",
            "displayName": "fixedTesting(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)",
            "methodName": "fixedTesting",
            "className": "com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#expectNoException(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)[0]",
            "displayName": "expectNoException(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)",
            "methodName": "expectNoException",
            "className": "com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#randomizedTesting(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)[0]",
            "displayName": "randomizedTesting(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)",
            "methodName": "randomizedTesting",
            "className": "com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326150618839,
          "startTimestampDate": "2012-01-10T00:10:18.839",
          "executionTime": 2,
          "description": "id#fixedTesting(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)[0]",
          "status": "OK",
          "testFailures": []
        },
        {
          "slave": 0,
          "startTimestamp": 1326150618850,
          "startTimestampDate": "2012-01-10T00:10:18.850",
          "executionTime": 34,
          "description": "id#expectNoException(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)[0]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "java.lang.ArrayIndexOutOfBoundsException",
              "throwableString": "java.lang.ArrayIndexOutOfBoundsException: -3",
              "stackTrace": "java.lang.ArrayIndexOutOfBoundsException: -3\r\n\tat __randomizedtesting.SeedInfo.seed([1BC9DBB1850ACE15:6D460F9E3EE3B291]:0)\r\n\tat com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness.expectNoException(Test003UsingRandomness.java:81)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\r\n",
              "kind": "error"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326150618884,
          "startTimestampDate": "2012-01-10T00:10:18.884",
          "executionTime": 3,
          "description": "id#randomizedTesting(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)[0]",
          "status": "FAILURE",
          "testFailures": [
            {
              "throwableClass": "java.lang.AssertionError",
              "throwableString": "java.lang.AssertionError: -374790784 \u003c (2108996131 or 1811180381)?",
              "stackTrace": "java.lang.AssertionError: -374790784 \u003c (2108996131 or 1811180381)?\r\n\tat __randomizedtesting.SeedInfo.seed([1BC9DBB1850ACE15:6FF415E895719754]:0)\r\n\tat org.junit.Assert.fail(Assert.java:93)\r\n\tat org.junit.Assert.assertTrue(Assert.java:43)\r\n\tat com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness.randomizedTesting(Test003UsingRandomness.java:69)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:542)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$300(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:464)\r\n",
              "kind": "assertion"
            }
          ]
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "fixedTesting(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "fixedTesting(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)"
        },
        {
          "event": "TEST_STARTED",
          "test": "expectNoException(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)"
        },
        {
          "event": "APPEND_STDOUT",
          "content": "this\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "expectNoException(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)"
        },
        {
          "event": "TEST_STARTED",
          "test": "randomizedTesting(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)"
        },
        {
          "event": "TEST_FINISHED",
          "test": "randomizedTesting(com.carrotsearch.examples.randomizedrunner.Test003UsingRandomness)"
        }
      ]
    },
    {
      "slave": 0,
      "startTimestamp": 1326150618890,
      "startTimestampDate": "2012-01-10T00:10:18.890",
      "executionTime": 2048,
      "description": {
        "id": "id#com.carrotsearch.examples.randomizedrunner.Test008Timeouts[1]",
        "displayName": "com.carrotsearch.examples.randomizedrunner.Test008Timeouts",
        "className": "com.carrotsearch.examples.randomizedrunner.Test008Timeouts",
        "annotations": [
          {
            "org.junit.runner.RunWith": {
              "value": "com.carrotsearch.randomizedtesting.RandomizedRunner"
            }
          }
        ],
        "children": [
          {
            "id": "id#standardAnnotation(com.carrotsearch.examples.randomizedrunner.Test008Timeouts)[0]",
            "displayName": "standardAnnotation(com.carrotsearch.examples.randomizedrunner.Test008Timeouts)",
            "methodName": "standardAnnotation",
            "className": "com.carrotsearch.examples.randomizedrunner.Test008Timeouts",
            "annotations": [],
            "children": []
          },
          {
            "id": "id#timeoutAnnotation(com.carrotsearch.examples.randomizedrunner.Test008Timeouts)[0]",
            "displayName": "timeoutAnnotation(com.carrotsearch.examples.randomizedrunner.Test008Timeouts)",
            "methodName": "timeoutAnnotation",
            "className": "com.carrotsearch.examples.randomizedrunner.Test008Timeouts",
            "annotations": [],
            "children": []
          }
        ]
      },
      "tests": [
        {
          "slave": 0,
          "startTimestamp": 1326150618892,
          "startTimestampDate": "2012-01-10T00:10:18.892",
          "executionTime": 1023,
          "description": "id#standardAnnotation(com.carrotsearch.examples.randomizedrunner.Test008Timeouts)[0]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "com.carrotsearch.randomizedtesting.ThreadingError",
              "throwableString": "com.carrotsearch.randomizedtesting.ThreadingError: Test case thread timed out  (and terminated): Thread[Thread-4,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).",
              "stackTrace": "com.carrotsearch.randomizedtesting.ThreadingError: Test case thread timed out  (and terminated): Thread[Thread-4,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).\r\n\tat __randomizedtesting.SeedInfo.seed([1BC9DBB1850ACE15]:0)\r\n\tat java.lang.Thread.sleep(Native Method)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.sleep(RandomizedTest.java:560)\r\n\tat com.carrotsearch.examples.randomizedrunner.Test008Timeouts.standardAnnotation(Test008Timeouts.java:50)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\r\n\tat java.lang.Thread.run(Thread.java:722)\r\n",
              "kind": "error"
            }
          ]
        },
        {
          "slave": 0,
          "startTimestamp": 1326150619916,
          "startTimestampDate": "2012-01-10T00:10:19.916",
          "executionTime": 1021,
          "description": "id#timeoutAnnotation(com.carrotsearch.examples.randomizedrunner.Test008Timeouts)[0]",
          "status": "ERROR",
          "testFailures": [
            {
              "throwableClass": "com.carrotsearch.randomizedtesting.ThreadingError",
              "throwableString": "com.carrotsearch.randomizedtesting.ThreadingError: Test case thread timed out  (and terminated): Thread[Thread-5,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).",
              "stackTrace": "com.carrotsearch.randomizedtesting.ThreadingError: Test case thread timed out  (and terminated): Thread[Thread-5,5,] (stack trace is a snapshot location of the thread at the moment of killing, see the system logger for probes and more information).\r\n\tat __randomizedtesting.SeedInfo.seed([1BC9DBB1850ACE15]:0)\r\n\tat java.lang.Thread.sleep(Native Method)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.sleep(RandomizedTest.java:560)\r\n\tat com.carrotsearch.examples.randomizedrunner.Test008Timeouts.timeoutAnnotation(Test008Timeouts.java:56)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1571)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:698)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runWithRules(RandomizedRunner.java:703)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:641)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$500(RandomizedRunner.java:75)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.run(RandomizedRunner.java:523)\r\n\tat java.lang.Thread.run(Thread.java:722)\r\n",
              "kind": "error"
            }
          ]
        }
      ],
      "suiteFailures": [],
      "executionEvents": [
        {
          "event": "TEST_STARTED",
          "test": "standardAnnotation(com.carrotsearch.examples.randomizedrunner.Test008Timeouts)"
        },
        {
          "event": "APPEND_STDERR",
          "content": "Jan 10, 2012 12:10:19 AM com.carrotsearch.randomizedtesting.RandomizedRunner reportStackProbes\r\nWARNING: 10 stack trace probe(s) taken and the constant root was:\n    ...\n    java.lang.Thread.sleep(Native Method)\n    [...com.carrotsearch.randomizedtesting.*]\n    com.carrotsearch.examples.randomizedrunner.Test008Timeouts.standardAnnotation(Test008Timeouts.java:50)\n    [...sun.*, com.carrotsearch.randomizedtesting.*, java.lang.reflect.*]\n    java.lang.Thread.run(Thread.java:722)\n\nDiverging stack paths from individual probes (if different than the common root):\n(all stacks constant.)\n\r\nJan 10, 2012 12:10:19 AM com.carrotsearch.randomizedtesting.RandomizedRunner tryToTerminate\r\nWARNING: Attempting to terminate thread: Thread-4(#1906285614), currently at:\n    java.lang.Thread.sleep(Native Method)\n    [...com.carrotsearch.randomizedtesting.*]\n    com.carrotsearch.examples.randomizedrunner.Test008Timeouts.standardAnnotation(Test008Timeouts.java:50)\n    [...sun.*, com.carrotsearch.randomizedtesting.*, java.lang.reflect.*]\n    java.lang.Thread.run(Thread.java:722)\n\r\nJan 10, 2012 12:10:19 AM com.carrotsearch.randomizedtesting.RandomizedRunner tryToTerminate\r\nWARNING: Interrupted a runaway thread: Thread-4(#1906285614)\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "standardAnnotation(com.carrotsearch.examples.randomizedrunner.Test008Timeouts)"
        },
        {
          "event": "TEST_STARTED",
          "test": "timeoutAnnotation(com.carrotsearch.examples.randomizedrunner.Test008Timeouts)"
        },
        {
          "event": "APPEND_STDERR",
          "content": "Jan 10, 2012 12:10:20 AM com.carrotsearch.randomizedtesting.RandomizedRunner reportStackProbes\r\nWARNING: 10 stack trace probe(s) taken and the constant root was:\n    ...\n    java.lang.Thread.sleep(Native Method)\n    [...com.carrotsearch.randomizedtesting.*]\n    com.carrotsearch.examples.randomizedrunner.Test008Timeouts.timeoutAnnotation(Test008Timeouts.java:56)\n    [...sun.*, com.carrotsearch.randomizedtesting.*, java.lang.reflect.*]\n    java.lang.Thread.run(Thread.java:722)\n\nDiverging stack paths from individual probes (if different than the common root):\n(all stacks constant.)\n\r\nJan 10, 2012 12:10:20 AM com.carrotsearch.randomizedtesting.RandomizedRunner tryToTerminate\r\nWARNING: Attempting to terminate thread: Thread-5(#278073554), currently at:\n    java.lang.Thread.sleep(Native Method)\n    [...com.carrotsearch.randomizedtesting.*]\n    com.carrotsearch.examples.randomizedrunner.Test008Timeouts.timeoutAnnotation(Test008Timeouts.java:56)\n    [...sun.*, com.carrotsearch.randomizedtesting.*, java.lang.reflect.*]\n    java.lang.Thread.run(Thread.java:722)\n\r\nJan 10, 2012 12:10:20 AM com.carrotsearch.randomizedtesting.RandomizedRunner tryToTerminate\r\nWARNING: Interrupted a runaway thread: Thread-5(#278073554)\r\n"
        },
        {
          "event": "TEST_FINISHED",
          "test": "timeoutAnnotation(com.carrotsearch.examples.randomizedrunner.Test008Timeouts)"
        }
      ]
    }
  ],
  "slaves": {
    "0": {
      "id": 0,
      "jvmName": "Java HotSpot(TM) 64-Bit Server VM, 21.1-b02",
      "charset": "windows-1252",
      "systemProperties": {
        "awt.toolkit": "sun.awt.windows.WToolkit",
        "file.encoding": "Cp1252",
        "file.encoding.pkg": "sun.io",
        "file.separator": "\\",
        "foo": "bar",
        "java.awt.graphicsenv": "sun.awt.Win32GraphicsEnvironment",
        "java.awt.printerjob": "sun.awt.windows.WPrinterJob",
        "java.class.path": "c:\\carrot2\\carrotsearch.labs\\randomizedtesting\\examples\\target\\test-classes;c:\\carrot2\\carrotsearch.labs\\randomizedtesting\\examples\\target\\classes;C:\\Users\\dweiss\\.m2\\repository\\com\\carrotsearch\\randomizedtesting\\randomizedtesting-runner\\0.0.5-SNAPSHOT\\randomizedtesting-runner-0.0.5-SNAPSHOT.jar;C:\\Users\\dweiss\\.m2\\repository\\com\\carrotsearch\\randomizedtesting\\ant-junit4\\0.0.5-SNAPSHOT\\ant-junit4-0.0.5-SNAPSHOT.jar;C:\\Users\\dweiss\\.m2\\repository\\junit\\junit\\4.10\\junit-4.10.jar;C:\\Users\\dweiss\\.m2\\repository\\org\\hamcrest\\hamcrest-core\\1.1\\hamcrest-core-1.1.jar;c:\\carrot2\\carrotsearch.labs\\randomizedtesting\\examples\\target\\ant\\lib\\ant-junit4-0.0.5-SNAPSHOT.jar",
        "java.class.version": "51.0",
        "java.endorsed.dirs": "c:\\Tools\\java\\jdk1.7.0_01-x86_64\\jre\\lib\\endorsed",
        "java.ext.dirs": "c:\\Tools\\java\\jdk1.7.0_01-x86_64\\jre\\lib\\ext;C:\\Windows\\Sun\\Java\\lib\\ext",
        "java.home": "c:\\Tools\\java\\jdk1.7.0_01-x86_64\\jre",
        "java.io.tmpdir": "C:\\Users\\dweiss\\AppData\\Local\\Temp\\",
        "java.library.path": "c:\\Tools\\java\\jdk1.7.0_01-x86_64\\jre\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;C:\\Program Files\\Common Files\\Microsoft Shared\\Windows Live;C:\\Program Files (x86)\\Common Files\\Microsoft Shared\\Windows Live;C:\\Program Files (x86)\\MiKTeX 2.9\\miktex\\bin;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Git\\cmd;c:\\Tools\\;C:\\Tools\\perl\\c\\bin;C:\\Tools\\perl\\perl\\site\\bin;C:\\Tools\\perl\\perl\\bin;C:\\Program Files (x86)\\Common Files\\Adobe\\AGL;C:\\Program Files (x86)\\QuickTime\\QTSystem\\;C:\\Program Files (x86)\\Windows Live\\Shared;C:\\Program Files\\Common Files\\Microsoft Shared\\Windows Live;C:\\Program Files (x86)\\Common Files\\Microsoft Shared\\Windows Live;C:\\Program Files (x86)\\MiKTeX 2.9\\miktex\\bin;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Git\\cmd;c:\\Tools\\;C:\\Tools\\perl\\c\\bin;C:\\Tools\\perl\\perl\\site\\bin;C:\\Tools\\perl\\perl\\bin;C:\\Program Files (x86)\\Common Files\\Adobe\\AGL;C:\\Program Files (x86)\\QuickTime\\QTSystem\\;C:\\Program Files (x86)\\Windows Live\\Shared;c:\\Tools\\ant\\bin;c:\\Tools\\mvn\\bin;C:\\Program Files (x86)\\IDM Computer Solutions\\UltraEdit\\;c:\\Tools\\java\\jdk1.7.0_01-x86_64\\bin;.",
        "java.runtime.name": "Java(TM) SE Runtime Environment",
        "java.runtime.version": "1.7.0_01-b08",
        "java.specification.name": "Java Platform API Specification",
        "java.specification.vendor": "Oracle Corporation",
        "java.specification.version": "1.7",
        "java.vendor": "Oracle Corporation",
        "java.vendor.url": "http://java.oracle.com/",
        "java.vendor.url.bug": "http://bugreport.sun.com/bugreport/",
        "java.version": "1.7.0_01",
        "java.vm.info": "mixed mode",
        "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
        "java.vm.specification.name": "Java Virtual Machine Specification",
        "java.vm.specification.vendor": "Oracle Corporation",
        "java.vm.specification.version": "1.7",
        "java.vm.vendor": "Oracle Corporation",
        "java.vm.version": "21.1-b02",
        "junit4.memory.total": "50266112",
        "junit4.processors": "8",
        "line.separator": "\r\n",
        "os.arch": "amd64",
        "os.name": "Windows 7",
        "os.version": "6.1",
        "path.separator": ";",
        "sun.arch.data.model": "64",
        "sun.boot.class.path": "c:\\Tools\\java\\jdk1.7.0_01-x86_64\\jre\\lib\\resources.jar;c:\\Tools\\java\\jdk1.7.0_01-x86_64\\jre\\lib\\rt.jar;c:\\Tools\\java\\jdk1.7.0_01-x86_64\\jre\\lib\\sunrsasign.jar;c:\\Tools\\java\\jdk1.7.0_01-x86_64\\jre\\lib\\jsse.jar;c:\\Tools\\java\\jdk1.7.0_01-x86_64\\jre\\lib\\jce.jar;c:\\Tools\\java\\jdk1.7.0_01-x86_64\\jre\\lib\\charsets.jar;c:\\Tools\\java\\jdk1.7.0_01-x86_64\\jre\\classes",
        "sun.boot.library.path": "c:\\Tools\\java\\jdk1.7.0_01-x86_64\\jre\\bin",
        "sun.cpu.endian": "little",
        "sun.cpu.isalist": "amd64",
        "sun.desktop": "windows",
        "sun.io.unicode.encoding": "UnicodeLittle",
        "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe @c:\\carrot2\\carrotsearch.labs\\randomizedtesting\\examples\\junit4-2150021679223961225.testmethods -flush",
        "sun.java.launcher": "SUN_STANDARD",
        "sun.jnu.encoding": "Cp1252",
        "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
        "sun.os.patch.level": "Service Pack 1",
        "tests.seed": "1BC9DBB1850ACE15",
        "user.country": "US",
        "user.dir": "c:\\carrot2\\carrotsearch.labs\\randomizedtesting\\examples\\target\\ant",
        "user.home": "C:\\Users\\dweiss",
        "user.language": "en",
        "user.name": "dweiss",
        "user.script": "",
        "user.timezone": "",
        "user.variant": ""
      }
    }
  }
});