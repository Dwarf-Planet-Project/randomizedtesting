
Approximately in the order of importance...
===========================================

- Add @Nightly support, make test cases out of examples in TestExtendingRandomizedTest.
  Nightly skipping should be implemented as a compound filter on the runner + a flag on the RandomizedContext.

- Base test class providing shortcuts to randomized methods and adding @RunWith

- Utility class for selecting values based on randomness (nightly, iteration scaling, picking parameters with vetos, etc.)

- RandomizedRunner: method shuffling (hooks, tests)

- Report test failures to console (with reproduction instructions) or add a hookable listener?
- Threads [hangs, deadlocks, interrupting]
- Rewrite LuceneTestCase on top of RandomizedRunner => proove it's functional.
- More runner tests (compliance with standard JUnit in particular)
- RandomizedRunner: more validations
- Can we integrate with TestNG too?
- What about TestRule support (introduced in 4.9?). If we rely on it explicitly, will this cause problems with older shells (ant, eclipse)?

Other things
============

RandomizedRunner currently logs all exceptions when executing tests (test exceptions, after exception, etc.). This results
in:

- Eclipse shows all exceptions next to a test case node [NICE],
- ant: shows both exceptions in xml and plain text dumps (and in reports) [NICE],
- maven shows and logs the test case multiplied for all exceptions (weird, but can be understood and all information is there),
